[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "js/application.js",
    "content": "import { AnimationFrame } from \"./core/animation_frame\";\r\nimport { BackgroundResourcesLoader } from \"./core/background_resources_loader\";\r\nimport { IS_MOBILE } from \"./core/config\";\r\nimport { GLOBAL_APP, setGlobalApp } from \"./core/globals\";\r\nimport { InputDistributor } from \"./core/input_distributor\";\r\nimport { Loader } from \"./core/loader\";\r\nimport { createLogger, logSection } from \"./core/logging\";\r\nimport { StateManager } from \"./core/state_manager\";\r\nimport { TrackedState } from \"./core/tracked_state\";\r\nimport { getPlatformName, waitNextFrame } from \"./core/utils\";\r\nimport { Vector } from \"./core/vector\";\r\nimport { AdProviderInterface } from \"./platform/ad_provider\";\r\nimport { NoAdProvider } from \"./platform/ad_providers/no_ad_provider\";\r\nimport { AnalyticsInterface } from \"./platform/analytics\";\r\nimport { GoogleAnalyticsImpl } from \"./platform/browser/google_analytics\";\r\nimport { SoundImplBrowser } from \"./platform/browser/sound\";\r\nimport { PlatformWrapperImplBrowser } from \"./platform/browser/wrapper\";\r\nimport { PlatformWrapperImplElectron } from \"./platform/electron/wrapper\";\r\nimport { PlatformWrapperInterface } from \"./platform/wrapper\";\r\nimport { ApplicationSettings } from \"./profile/application_settings\";\r\nimport { SavegameManager } from \"./savegame/savegame_manager\";\r\nimport { AboutState } from \"./states/about\";\r\nimport { ChangelogState } from \"./states/changelog\";\r\nimport { InGameState } from \"./states/ingame\";\r\nimport { KeybindingsState } from \"./states/keybindings\";\r\nimport { MainMenuState } from \"./states/main_menu\";\r\nimport { MobileWarningState } from \"./states/mobile_warning\";\r\nimport { PreloadState } from \"./states/preload\";\r\nimport { SettingsState } from \"./states/settings\";\r\nimport { ShapezGameAnalytics } from \"./platform/browser/game_analytics\";\r\nimport { RestrictionManager } from \"./core/restriction_manager\";\r\n\r\nconst logger = createLogger(\"application\");\r\n\r\n// Set the name of the hidden property and the change event for visibility\r\nlet pageHiddenPropName, pageVisibilityEventName;\r\nif (typeof document.hidden !== \"undefined\") {\r\n    // Opera 12.10 and Firefox 18 and later support\r\n    pageHiddenPropName = \"hidden\";\r\n    pageVisibilityEventName = \"visibilitychange\";\r\n    // @ts-ignore\r\n} else if (typeof document.msHidden !== \"undefined\") {\r\n    pageHiddenPropName = \"msHidden\";\r\n    pageVisibilityEventName = \"msvisibilitychange\";\r\n    // @ts-ignore\r\n} else if (typeof document.webkitHidden !== \"undefined\") {\r\n    pageHiddenPropName = \"webkitHidden\";\r\n    pageVisibilityEventName = \"webkitvisibilitychange\";\r\n}\r\n\r\nexport class Application {\r\n    constructor() {\r\n        assert(!GLOBAL_APP, \"Tried to construct application twice\");\r\n        logger.log(\"Creating application, platform =\", getPlatformName());\r\n        setGlobalApp(this);\r\n\r\n        this.unloaded = false;\r\n\r\n        // Global stuff\r\n        this.settings = new ApplicationSettings(this);\r\n        this.ticker = new AnimationFrame();\r\n        this.stateMgr = new StateManager(this);\r\n        this.savegameMgr = new SavegameManager(this);\r\n        this.inputMgr = new InputDistributor(this);\r\n        this.backgroundResourceLoader = new BackgroundResourcesLoader(this);\r\n\r\n        // Restrictions (Like demo etc)\r\n        this.restrictionMgr = new RestrictionManager(this);\r\n\r\n        // Platform dependent stuff\r\n\r\n        /** @type {import(\"./platform/storage\").StorageInterface} */\r\n        this.storage = null;\r\n\r\n        /** @type {import(\"./platform/sound\").SoundInterface} */\r\n        this.sound = null;\r\n\r\n        /** @type {PlatformWrapperInterface} */\r\n        this.platformWrapper = null;\r\n\r\n        /** @type {AdProviderInterface} */\r\n        this.adProvider = null;\r\n\r\n        /** @type {AnalyticsInterface} */\r\n        this.analytics = null;\r\n\r\n        /** @type {import(\"./platform/game_analytics\").GameAnalyticsInterface} */\r\n        this.gameAnalytics = null;\r\n\r\n        this.initPlatformDependentInstances();\r\n\r\n        // Track if the window is focused (only relevant for browser)\r\n        this.focused = true;\r\n\r\n        // Track if the window is visible\r\n        this.pageVisible = true;\r\n\r\n        // Track if the app is paused (cordova)\r\n        this.applicationPaused = false;\r\n\r\n        /** @type {TypedTrackedState<boolean>} */\r\n        this.trackedIsRenderable = new TrackedState(this.onAppRenderableStateChanged, this);\r\n\r\n        // Dimensions\r\n        this.screenWidth = 0;\r\n        this.screenHeight = 0;\r\n\r\n        // Store the timestamp where we last checked for a screen resize, since orientationchange is unreliable with cordova\r\n        this.lastResizeCheck = null;\r\n\r\n        // Store the mouse position, or null if not available\r\n        /** @type {Vector|null} */\r\n        this.mousePosition = null;\r\n        this.onAboutClicked = undefined;\r\n    }\r\n\r\n    /**\r\n     * Initializes all platform instances\r\n     */\r\n    initPlatformDependentInstances() {\r\n        logger.log(\"Creating platform dependent instances (standalone=\", G_IS_STANDALONE, \")\");\r\n\r\n        if (G_IS_STANDALONE) {\r\n            this.platformWrapper = new PlatformWrapperImplElectron(this);\r\n        } else {\r\n            this.platformWrapper = new PlatformWrapperImplBrowser(this);\r\n        }\r\n\r\n        // Start with empty ad provider\r\n        this.adProvider = new NoAdProvider(this);\r\n        this.sound = new SoundImplBrowser(this);\r\n        this.analytics = new GoogleAnalyticsImpl(this);\r\n        this.gameAnalytics = new ShapezGameAnalytics(this);\r\n    }\r\n\r\n    /**\r\n     * Registers all game states\r\n     */\r\n    registerStates() {\r\n        for (const stateKey in Application.states) {\r\n            if (!Object.hasOwnProperty.call(Application.states, stateKey)) continue;\r\n            this.stateMgr.register(Application.states[stateKey]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Registers all event listeners\r\n     */\r\n    registerEventListeners() {\r\n        window.addEventListener(\"focus\", this.onFocus.bind(this));\r\n        window.addEventListener(\"blur\", this.onBlur.bind(this));\r\n\r\n        window.addEventListener(\"resize\", () => this.checkResize(), true);\r\n        window.addEventListener(\"orientationchange\", () => this.checkResize(), true);\r\n\r\n        if (!G_IS_MOBILE_APP && !IS_MOBILE) {\r\n            window.addEventListener(\"mousemove\", this.handleMousemove.bind(this));\r\n            window.addEventListener(\"mouseout\", this.handleMousemove.bind(this));\r\n            window.addEventListener(\"mouseover\", this.handleMousemove.bind(this));\r\n            window.addEventListener(\"mouseleave\", this.handleMousemove.bind(this));\r\n        }\r\n\r\n        // Unload events\r\n        window.addEventListener(\"beforeunload\", this.onBeforeUnload.bind(this), true);\r\n        window.addEventListener(\"unload\", this.onUnload.bind(this), true);\r\n\r\n        document.addEventListener(pageVisibilityEventName, this.handleVisibilityChange.bind(this), false);\r\n\r\n        // Track touches so we can update the focus appropriately\r\n        document.addEventListener(\"touchstart\", this.updateFocusAfterUserInteraction.bind(this), true);\r\n        document.addEventListener(\"touchend\", this.updateFocusAfterUserInteraction.bind(this), true);\r\n    }\r\n\r\n    /**\r\n     * Checks the focus after a touch\r\n     * @param {TouchEvent} event\r\n     */\r\n    updateFocusAfterUserInteraction(event) {\r\n        const target = /** @type {HTMLElement} */ (event.target);\r\n        if (!target || !target.tagName) {\r\n            // Safety check\r\n            logger.warn(\"Invalid touchstart/touchend event:\", event);\r\n            return;\r\n        }\r\n\r\n        // When clicking an element which is not the currently focused one, defocus it\r\n        if (target !== document.activeElement) {\r\n            // @ts-ignore\r\n            if (document.activeElement.blur) {\r\n                // @ts-ignore\r\n                document.activeElement.blur();\r\n            }\r\n        }\r\n\r\n        // If we click an input field, focus it now\r\n        if (target.tagName.toLowerCase() === \"input\") {\r\n            // We *really* need the focus\r\n            waitNextFrame().then(() => target.focus());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles a page visibility change event\r\n     * @param {Event} event\r\n     */\r\n    handleVisibilityChange(event) {\r\n        window.focus();\r\n        const pageVisible = !document[pageHiddenPropName];\r\n        if (pageVisible !== this.pageVisible) {\r\n            this.pageVisible = pageVisible;\r\n            logger.log(\"Visibility changed:\", this.pageVisible);\r\n            this.trackedIsRenderable.set(this.isRenderable());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles a mouse move event\r\n     * @param {MouseEvent} event\r\n     */\r\n    handleMousemove(event) {\r\n        this.mousePosition = new Vector(event.clientX, event.clientY);\r\n    }\r\n\r\n    /**\r\n     * Internal on focus handler\r\n     */\r\n    onFocus() {\r\n        this.focused = true;\r\n    }\r\n\r\n    /**\r\n     * Internal blur handler\r\n     */\r\n    onBlur() {\r\n        this.focused = false;\r\n    }\r\n\r\n    /**\r\n     * Returns if the app is currently visible\r\n     */\r\n    isRenderable() {\r\n        return !this.applicationPaused && this.pageVisible;\r\n    }\r\n\r\n    onAppRenderableStateChanged(renderable) {\r\n        logger.log(\"Application renderable:\", renderable);\r\n        window.focus();\r\n        const currentState = this.stateMgr.getCurrentState();\r\n        if (!renderable) {\r\n            if (currentState) {\r\n                currentState.onAppPause();\r\n            }\r\n        } else {\r\n            if (currentState) {\r\n                currentState.onAppResume();\r\n            }\r\n            this.checkResize();\r\n        }\r\n\r\n        this.sound.onPageRenderableStateChanged(renderable);\r\n    }\r\n\r\n    /**\r\n     * Internal unload handler\r\n     */\r\n    onUnload(event) {\r\n        if (!this.unloaded) {\r\n            logSection(\"UNLOAD HANDLER\", \"#f77\");\r\n            this.unloaded = true;\r\n            const currentState = this.stateMgr.getCurrentState();\r\n            if (currentState) {\r\n                currentState.onBeforeExit();\r\n            }\r\n            this.deinitialize();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal before-unload handler\r\n     */\r\n    onBeforeUnload(event) {\r\n        logSection(\"BEFORE UNLOAD HANDLER\", \"#f77\");\r\n        const currentState = this.stateMgr.getCurrentState();\r\n\r\n        if (!G_IS_DEV && currentState && currentState.getHasUnloadConfirmation()) {\r\n            if (!G_IS_STANDALONE) {\r\n                // Need to show a \"Are you sure you want to exit\"\r\n                event.preventDefault();\r\n                event.returnValue = \"Are you sure you want to exit?\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Boots the application\r\n     */\r\n    async boot() {\r\n        console.log(\"Booting ...\");\r\n\r\n        this.registerStates();\r\n        this.registerEventListeners();\r\n\r\n        Loader.linkAppAfterBoot(this);\r\n\r\n        // Check for mobile\r\n        if (IS_MOBILE) {\r\n            this.stateMgr.moveToState(\"MobileWarningState\");\r\n        } else {\r\n            this.stateMgr.moveToState(\"PreloadState\");\r\n        }\r\n\r\n        // Starting rendering\r\n        this.ticker.frameEmitted.add(this.onFrameEmitted, this);\r\n        this.ticker.bgFrameEmitted.add(this.onBackgroundFrame, this);\r\n        this.ticker.start();\r\n\r\n        window.focus();\r\n    }\r\n\r\n    /**\r\n     * Deinitializes the application\r\n     */\r\n    deinitialize() {\r\n        return this.sound.deinitialize();\r\n    }\r\n\r\n    /**\r\n     * Background frame update callback\r\n     * @param {number} dt\r\n     */\r\n    onBackgroundFrame(dt) {\r\n        if (this.isRenderable()) {\r\n            return;\r\n        }\r\n\r\n        const currentState = this.stateMgr.getCurrentState();\r\n        if (currentState) {\r\n            currentState.onBackgroundTick(dt);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Frame update callback\r\n     * @param {number} dt\r\n     */\r\n    onFrameEmitted(dt) {\r\n        if (!this.isRenderable()) {\r\n            return;\r\n        }\r\n\r\n        const time = performance.now();\r\n\r\n        // Periodically check for resizes, this is expensive (takes 2-3ms so only do it once in a while!)\r\n        if (!this.lastResizeCheck || time - this.lastResizeCheck > 1000) {\r\n            this.checkResize();\r\n            this.lastResizeCheck = time;\r\n        }\r\n\r\n        const currentState = this.stateMgr.getCurrentState();\r\n        if (currentState) {\r\n            currentState.onRender(dt);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the app resized. Only does this once in a while\r\n     * @param {boolean} forceUpdate Forced update of the dimensions\r\n     */\r\n    checkResize(forceUpdate = false) {\r\n        const w = window.innerWidth;\r\n        const h = window.innerHeight;\r\n        if (this.screenWidth !== w || this.screenHeight !== h || forceUpdate) {\r\n            this.screenWidth = w;\r\n            this.screenHeight = h;\r\n            const currentState = this.stateMgr.getCurrentState();\r\n            if (currentState) {\r\n                currentState.onResized(this.screenWidth, this.screenHeight);\r\n            }\r\n\r\n            const scale = this.getEffectiveUiScale();\r\n            waitNextFrame().then(() => document.documentElement.style.setProperty(\"--ui-scale\", `${scale}`));\r\n            window.focus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the effective ui sclae\r\n     */\r\n    getEffectiveUiScale() {\r\n        return this.platformWrapper.getUiScale() * this.settings.getInterfaceScaleValue();\r\n    }\r\n\r\n    /**\r\n     * Callback after ui scale has changed\r\n     */\r\n    updateAfterUiScaleChanged() {\r\n        this.checkResize(true);\r\n    }\r\n}\r\n\r\nApplication.trackClicks = undefined;\r\n\r\nApplication.getMainContentHTML = undefined;\r\n\r\nApplication.states = {\r\n    PreloadState,\r\n    MobileWarningState,\r\n    MainMenuState,\r\n    InGameState,\r\n    SettingsState,\r\n    KeybindingsState,\r\n    AboutState,\r\n    ChangelogState,\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/application.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/application.js",
    "static": true,
    "longname": "js/application.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "Application",
    "memberof": "js/application.js",
    "static": true,
    "longname": "js/application.js~Application",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/application.js",
    "importStyle": "{Application}",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "unloaded",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#unloaded",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "settings",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#settings",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "ticker",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#ticker",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "stateMgr",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#stateMgr",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "savegameMgr",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#savegameMgr",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "inputMgr",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#inputMgr",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "backgroundResourceLoader",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#backgroundResourceLoader",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "restrictionMgr",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#restrictionMgr",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "storage",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#storage",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "import(\"./platform/storage\").StorageInterface"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "sound",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#sound",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "type": {
      "nullable": null,
      "types": [
        "import(\"./platform/sound\").SoundInterface"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "platformWrapper",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#platformWrapper",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "PlatformWrapperInterface"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "adProvider",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#adProvider",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "AdProviderInterface"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "analytics",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#analytics",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "AnalyticsInterface"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "gameAnalytics",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#gameAnalytics",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "import(\"./platform/game_analytics\").GameAnalyticsInterface"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "focused",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#focused",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "pageVisible",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#pageVisible",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "applicationPaused",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#applicationPaused",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "trackedIsRenderable",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#trackedIsRenderable",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "TypedTrackedState<boolean>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "screenWidth",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#screenWidth",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "screenHeight",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#screenHeight",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "lastResizeCheck",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#lastResizeCheck",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "mousePosition",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#mousePosition",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "type": {
      "nullable": null,
      "types": [
        "Vector",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "onAboutClicked",
    "memberof": "js/application.js~Application",
    "static": false,
    "longname": "js/application.js~Application#onAboutClicked",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "initPlatformDependentInstances",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#initPlatformDependentInstances",
    "access": "public",
    "description": "Initializes all platform instances",
    "lineNumber": 120,
    "params": [],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "registerStates",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#registerStates",
    "access": "public",
    "description": "Registers all game states",
    "lineNumber": 139,
    "params": [],
    "return": null
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "registerEventListeners",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#registerEventListeners",
    "access": "public",
    "description": "Registers all event listeners",
    "lineNumber": 149,
    "params": [],
    "return": null
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "updateFocusAfterUserInteraction",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#updateFocusAfterUserInteraction",
    "access": "public",
    "description": "Checks the focus after a touch",
    "lineNumber": 178,
    "params": [
      {
        "nullable": null,
        "types": [
          "TouchEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "handleVisibilityChange",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#handleVisibilityChange",
    "access": "public",
    "description": "Handles a page visibility change event",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "handleMousemove",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#handleMousemove",
    "access": "public",
    "description": "Handles a mouse move event",
    "lineNumber": 220,
    "params": [
      {
        "nullable": null,
        "types": [
          "MouseEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "onFocus",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#onFocus",
    "access": "public",
    "description": "Internal on focus handler",
    "lineNumber": 227,
    "params": [],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "onBlur",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#onBlur",
    "access": "public",
    "description": "Internal blur handler",
    "lineNumber": 234,
    "params": [],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "isRenderable",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#isRenderable",
    "access": "public",
    "description": "Returns if the app is currently visible",
    "lineNumber": 241,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "onAppRenderableStateChanged",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#onAppRenderableStateChanged",
    "access": "public",
    "description": null,
    "lineNumber": 245,
    "undocument": true,
    "params": [
      {
        "name": "renderable",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "onUnload",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#onUnload",
    "access": "public",
    "description": "Internal unload handler",
    "lineNumber": 266,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "onBeforeUnload",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#onBeforeUnload",
    "access": "public",
    "description": "Internal before-unload handler",
    "lineNumber": 281,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "boot",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "js/application.js~Application#boot",
    "access": "public",
    "description": "Boots the application",
    "lineNumber": 297,
    "params": [],
    "return": null
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "deinitialize",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#deinitialize",
    "access": "public",
    "description": "Deinitializes the application",
    "lineNumber": 323,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "onBackgroundFrame",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#onBackgroundFrame",
    "access": "public",
    "description": "Background frame update callback",
    "lineNumber": 331,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "onFrameEmitted",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#onFrameEmitted",
    "access": "public",
    "description": "Frame update callback",
    "lineNumber": 346,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "checkResize",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#checkResize",
    "access": "public",
    "description": "Checks if the app resized. Only does this once in a while",
    "lineNumber": 369,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "forceUpdate",
        "description": "Forced update of the dimensions"
      }
    ],
    "return": null
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "getEffectiveUiScale",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#getEffectiveUiScale",
    "access": "public",
    "description": "Returns the effective ui sclae",
    "lineNumber": 389,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "updateAfterUiScaleChanged",
    "memberof": "js/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/application.js~Application#updateAfterUiScaleChanged",
    "access": "public",
    "description": "Callback after ui scale has changed",
    "lineNumber": 396,
    "params": [],
    "return": null
  },
  {
    "__docId__": 108,
    "kind": "file",
    "name": "js/changelog.js",
    "content": "/**\r\n * @type {Array<{version: string, date: string, entries: Array<String>}>} changelog\r\n */\r\nexport const CHANGELOG = [{\r\n        version: \"1.2.3\",\r\n        date: \"unreleased\",\r\n        entries: [\r\n            \"Fixed constant signals being editable from the regular layer\",\r\n            \"Fixed items still overlapping sometimes between buildings and belts\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.2.2\",\r\n        date: \"07.12.2020\",\r\n        entries: [\r\n            \"Fix item readers and some other buildings slowing up belts, especially if they stalled (inspired by Keterr's fix)\",\r\n            \"Added the ability to edit constant signals by left clicking them\",\r\n            \"Prevent items from being rendered on each other when a belt stalls (inspired by Keterr)\",\r\n            \"You can now add markers in the wire layer (partially by daanbreur)\",\r\n            \"Allow to cycle backwards in the toolbar with SHIFT + Tab (idea by EmeraldBlock)\",\r\n            \"Allow to cycle variants backwards with SHIFT + T\",\r\n            \"Upgrade numbers now use roman numerals until tier 50 (by LeopoldTal)\",\r\n            \"Add button to unpin shapes from the left side (by artemisSystem)\",\r\n            \"Fix middle mouse button also placing blueprints (by Eiim)\",\r\n            \"Hide wires grid when using the 'Disable Grid' setting (by EmeraldBlock)\",\r\n            \"Fix UI using multiple different save icons\",\r\n            \"Updated translations (Thanks to all contributors!)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.2.1\",\r\n        date: \"31.10.2020\",\r\n        entries: [\r\n            \"Fixed stacking bug for level 26 which required restarting the game\",\r\n            \"Fix reward notification being too long sometimes (by LeopoldTal)\",\r\n            \"Use locale decimal separator on belt reader display (by LeopoldTal)\",\r\n            \"Vastly improved performance when saving games (by LeopoldTal)\",\r\n            \"Prevent some antivirus programs blocking the opening of external links (by LeopoldTal)\",\r\n            \"Match tutorials to the correct painter variants (by LeopoldTal)\",\r\n            \"Prevent throughput goals containing fractional numbers (by CEbbinghaus)\",\r\n            \"Updated translations and added Hungarian\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.2.0\",\r\n        date: \"09.10.2020\",\r\n        entries: [\r\n            \"⚠️⚠️This update is HUGE, view the full changelog <a href='https://shapez.io/wires/' target='_blank'>here</a>! ⚠️⚠️\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.18\",\r\n        date: \"27.06.2020\",\r\n        entries: [\r\n            \"Huge performance improvements - up to double fps and tick-rate! This will wipe out all current items on belts.\",\r\n            \"Reduce story shapes required until unlocking blueprints\",\r\n            \"Allow clicking on variants to select them\",\r\n            \"Add 'copy key' button to shape viewer\",\r\n            \"Add more FPS to the belt animation and fix belt animation seeming to go 'backwards' on high belt speeds\",\r\n            \"Fix deconstruct sound being played when right clicking hub\",\r\n            \"Allow clicking 'Q' over a shape or color patch to automatically select the miner building (by Gerdon262)\",\r\n            \"Update belt placement performance on huge factories (by Phlosioneer)\",\r\n            \"Fix duplicate waypoints with a shape not rendering (by hexy)\",\r\n            \"Fix smart tunnel placement deleting wrong tunnels (by mordof)\",\r\n            \"Add setting (on by default) to store the last used rotation per building instead of globally storing it (by Magos)\",\r\n            \"Added chinese (traditional) translation\",\r\n            \"Updated translations\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.17\",\r\n        date: \"22.06.2020\",\r\n        entries: [\r\n            \"Color blind mode! You can now activate it in the settings and it will show you which color is below your cursor (Either resource or on the belt)\",\r\n            \"Add info buttons to all shapes so you can figure out how they are built! (And also, which colors they have)\",\r\n            \"Allow configuring autosave interval and disabling it in the settings\",\r\n            \"The smart-tunnel placement has been reworked to properly replace belts. Thus the setting has been turned on again by default\",\r\n            \"The soundtrack now has a higher quality on the standalone version than the web version\",\r\n            \"Add setting to disable cut/delete warnings (by hexy)\",\r\n            \"Fix bug where belts in blueprints don't orient correctly (by hexy)\",\r\n            \"Fix camera moving weird after dragging and holding (by hexy)\",\r\n            \"Fix keybinding for pipette showing while pasting blueprints\",\r\n            \"Improve visibility of shape background in dark mode\",\r\n            \"Added sound when destroying a building\",\r\n            \"Added swedish translation\",\r\n            \"Update tutorial image for tier 2 tunnels to explain mix/match (by jimmyshadow1)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.16\",\r\n        date: \"21.06.2020\",\r\n        entries: [\r\n            \"You can now pickup buildings below your cursor with 'Q'!\",\r\n            \"The game soundtrack has been extended! There are now 4 songs with over 13 minutes of playtime from <a href='https://soundcloud.com/pettersumelius' target='blank'>Peppsen</a>!\",\r\n            \"Refactor keybindings overlay to show more appropriate keybindings\",\r\n            \"Show keybindings for area-select in the upper left instead\",\r\n            \"Automatically deselect area when selecting a new building\",\r\n            \"Raise markers limit from 14 characters to 71 (by Joker-vD)\",\r\n            \"Optimize performance by caching extractor items (by Phlosioneer)\",\r\n            \"Added setting to enable compact building infos, which only show ratios and hide the image / description\",\r\n            \"Apply dark theme to menu as well (by dengr1065)\",\r\n            \"Fix belt planner not placing the last belt\",\r\n            \"Fix buildings getting deleted when right clicking while placing a blueprint\",\r\n            \"Fix for exporting screenshots for huge bases (It was showing an empty file) (by xSparfuchs)\",\r\n            \"Fix buttons not responding when using right click directly after left click (by davidburhans)\",\r\n            \"Fix hub marker being hidden by building info panel\",\r\n            \"Disable dialog background blur since it can cause performance issues\",\r\n            \"Added simplified chinese translations\",\r\n            \"Update translations (Thanks to all translators!)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.15\",\r\n        date: \"17.06.2020\",\r\n        entries: [\r\n            \"You can now place straight belts (and tunnels) by holding SHIFT! (For you, @giantwaffle ❤️)\",\r\n            \"Added continue button to main menu and add separate 'New game' button (by jaysc)\",\r\n            \"Added setting to disable smart tunnel placement introduced with the last update\",\r\n            \"Added setting to disable vignette\",\r\n            \"Update translations\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.14\",\r\n        date: \"16.06.2020\",\r\n        entries: [\r\n            \"There is now an indicator (compass) to the HUB for the HUB Marker!\",\r\n            \"You can now include shape short keys in markers to render shape icons instead of text!\",\r\n            \"Added mirrored variant of the painter\",\r\n            \"When placing tunnels, unnecessary belts inbetween are now removed!\",\r\n            \"You can now drag tunnels and they will automatically expand! (Just try it out, its intuitive)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.13\",\r\n        date: \"15.06.2020\",\r\n        entries: [\r\n            \"Added shift modifier for faster pan (by jaysc)\",\r\n            \"Added Japanese translations\",\r\n            \"Added Portuguese (Portugal) translations\",\r\n            \"Updated icon for Spanish (Latin America) - It was showing a Spanish flag before\",\r\n            \"Updated existing translations\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.12\",\r\n        date: \"14.06.2020\",\r\n        entries: [\r\n            \"Huge performance improvements! The game should now run up to 60% faster!\",\r\n            \"Added norwegian translation\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.11\",\r\n        date: \"13.06.2020\",\r\n        entries: [\r\n            \"Pinned shapes are now smart, they dynamically update their goal and also unpin when no longer required. Completed objectives are now rendered transparent.\",\r\n            \"You can now cut areas, and also paste the last blueprint again! (by hexy)\",\r\n            \"You can now export your whole base as an image by pressing F3!\",\r\n            \"Improve upgrade number rounding, so there are no goals like '37.4k', instead it will now be '35k'\",\r\n            \"You can now configure the camera movement speed when using WASD (by mini-bomba)\",\r\n            \"Selecting an area now is relative to the world and thus does not move when moving the screen (by Dimava)\",\r\n            \"Allow higher tick-rates up to 500hz (This will burn your PC!)\",\r\n            \"Fix bug regarding number rounding\",\r\n            \"Fix dialog text being hardly readable in dark theme\",\r\n            \"Fix app not starting when the savegames were corrupted - there is now a better error message as well.\",\r\n            \"Further translation updates - Big thanks to all contributors!\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.10\",\r\n        date: \"12.06.2020\",\r\n        entries: [\r\n            \"There are now linux builds on steam! Please report any issues in the Discord!\",\r\n            \"Steam cloud saves are now available!\",\r\n            \"Added and update more translations (Big thank you to all translators!)\",\r\n            \"Prevent invalid connection if existing underground tunnel entrance exists (by jaysc)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.9\",\r\n        date: \"11.06.2020\",\r\n        entries: [\r\n            \"Support for translations! Interested in helping out? Check out the <a target='_blank'  href='https://github.com/tobspr/shapez.io/tree/master/translations'>translation guide</a>!\",\r\n            \"Update stacker artwork to clarify how it works\",\r\n            \"Update keybinding hints on the top left to be more accurate\",\r\n            \"Make it more clear when blueprints are unlocked when trying to use them\",\r\n            \"Fix pinned shape icons not being visible in dark mode\",\r\n            \"Fix being able to select buildings via hotkeys in map overview mode\",\r\n            \"Make shapes unpinnable in the upgrades tab (By hexy)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.8\",\r\n        date: \"07.06.2020\",\r\n        entries: [\r\n            \"You can now purchase the standalone on steam! <a href='https://steam.shapez.io' target='blank'>View steam page</a>\",\r\n            \"Added ability to create markers in the demo, but only two.\",\r\n            \"Contest #01 has ended! I'll now work through the entries, select the 5 I like most and present them to the community to vote for!\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.7\",\r\n        date: \"04.06.2020\",\r\n        entries: [\"HOTFIX: Fix savegames not showing up on the standalone version\"],\r\n    },\r\n    {\r\n        version: \"1.1.6\",\r\n        date: \"04.06.2020\",\r\n        entries: [\r\n            \"The steam release will happen on the <strong>7th of June</strong> - Be sure to add it to your wishlist! <a href='https://steam.shapez.io' target='blank'>View on steam</a>\",\r\n            \"Fixed level complete dialog being blurred when the shop was opened before\",\r\n            \"Standalone: Increased icon visibility for windows builds\",\r\n            \"Web version: Fixed firefox not loading the game when browsing in private mode\",\r\n        ],\r\n    },\r\n\r\n    {\r\n        version: \"1.1.5\",\r\n        date: \"03.06.2020\",\r\n        entries: [\"Added weekly contests!\"],\r\n    },\r\n    {\r\n        version: \"1.1.4\",\r\n        date: \"01.06.2020\",\r\n        entries: [\"Add 'interactive' tutorial for the first level to improve onboarding experience\"],\r\n    },\r\n    {\r\n        version: \"1.1.3\",\r\n        date: \"01.06.2020\",\r\n        entries: [\r\n            \"Added setting to configure zoom / mouse wheel / touchpad sensitivity\",\r\n            \"Fix belts being too slow when copied via blueprint (by Dimava)\",\r\n            \"Allow binding mouse buttons to actions (by Dimava)\",\r\n            \"Increase readability of certain HUD elements\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.2\",\r\n        date: \"30.05.2020\",\r\n        entries: [\r\n            \"The official trailer is now ready! Check it out <a href='https://www.youtube.com/watch?v=KyorY1uIqiQ' target='_blank'>here</a>!\",\r\n            \"The <a href='https://steam.shapez.io' target='_blank'>steam page</a> is now live!\",\r\n            \"Experimental linux builds are now available! Please give me feedback on them in the Discord\",\r\n            \"Allow hovering pinned shapes to enlarge them\",\r\n            \"Allow deselecting blueprints with right click and 'Q'\",\r\n            \"Move default key for deleting from 'X' to 'DEL'\",\r\n            \"Show confirmation when deleting more than 100 buildings\",\r\n            \"Reintroduce 'SPACE' keybinding to center on map\",\r\n            \"Improved keybinding hints\",\r\n            \"Fixed some keybindings showing as 'undefined'\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.1\",\r\n        date: \"28.05.2020\",\r\n        entries: [\"Fix crash when 'Show Hints' setting was turned off\"],\r\n    },\r\n    {\r\n        version: \"1.1.0\",\r\n        date: \"28.05.2020\",\r\n        entries: [\r\n            \"BLUEPRINTS! They are unlocked at level 12 and cost a special shape to build.\",\r\n            \"MAP MARKERS! Press 'M' to create a waypoint and be able to jump to it\",\r\n            \"Savegame levels are now shown in the main menu. For existing games, save them again to make the level show up.\",\r\n            \"Allow holding SHIFT to rotate counter clockwise\",\r\n            \"Added confirmation when deleting more than 500 buildings at a time\",\r\n            \"Added background to toolbar to increase contrast\",\r\n            \"Further decerase requirements of first levels\",\r\n            \"Pinned shapes now are saved\",\r\n            \"Allow placing extractors anywhere again, but they don't work at all if not placed on a resource\",\r\n            \"Show dialog explaining some keybindings after completing level 4\",\r\n            \"Fix keys being stuck when opening a dialog\",\r\n            \"Swapped shape order for painting upgrades\",\r\n            \"Allow changing all keybindings, including CTRL, ALT and SHIFT (by Dimava)\",\r\n            \"Fix cycling through keybindings selecting locked buildings as well (by Dimava)\",\r\n            \"There is now a github action, checking all pull requests with eslint. (by mrHedgehog)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.0.4\",\r\n        date: \"26.05.2020\",\r\n        entries: [\r\n            \"Reduce cost of first painting upgrade, and change 'Shape Processing' to 'Cutting, Rotating & Stacking'\",\r\n            \"Add dialog after completing level 2 to check out the upgrades tab.\",\r\n            \"Allow changing the keybindings in the demo version\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.0.3\",\r\n        date: \"24.05.2020\",\r\n        entries: [\r\n            \"Reduced the amount of shapes required for the first 5 levels to make it easier to get into the game.\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.0.2\",\r\n        date: \"23.05.2020\",\r\n        entries: [\r\n            \"Introduced changelog\",\r\n            \"Removed 'early access' label because the game isn't actually early access - its in a pretty good state already! (No worries, a lot more updates will follow!)\",\r\n            \"Added a 'Show hint' button which shows a small video for almost all levels to help out\",\r\n            \"Now showing proper descriptions when completing levels, with instructions on what the gained reward does.\",\r\n            \"Show a landing page on mobile devices about the game not being ready to be played on mobile yet\",\r\n            \"Fix painters and mixers being affected by the shape processors upgrade and not the painter one\",\r\n            \"Added 'multiplace' setting which is equivalent to holding SHIFT all the time\",\r\n            \"Added keybindings to zoom in / zoom out\",\r\n            \"Tunnels now also show connection lines to tunnel exits, instead of just tunnel entries\",\r\n            \"Lots of minor fixes and improvements\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.0.1\",\r\n        date: \"21.05.2020\",\r\n        entries: [\"Initial release!\"],\r\n    },\r\n];",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/changelog.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "CHANGELOG",
    "memberof": "js/changelog.js",
    "static": true,
    "longname": "js/changelog.js~CHANGELOG",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/changelog.js",
    "importStyle": "{CHANGELOG}",
    "description": "",
    "lineNumber": 4,
    "type": {
      "nullable": null,
      "types": [
        "Array<{version: string, date: string, entries: Array<String>}>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "js/core/animation_frame.js",
    "content": "import { Signal } from \"./signal\";\r\n\r\n// @ts-ignore\r\nimport BackgroundAnimationFrameEmitterWorker from \"../webworkers/background_animation_frame_emittter.worker\";\r\n\r\nimport { createLogger } from \"./logging\";\r\n/**\r\n * Logger for animation_frame\r\n */\r\nconst logger = createLogger(\"animation_frame\");\r\n\r\n/**\r\n * Maximum delta milliseconds\r\n */\r\nconst maxDtMs = 1000;\r\n/**\r\n * Reset delta milliseconds\r\n */\r\nconst resetDtMs = 16;\r\n\r\n/**\r\n * Controls the frames and emit signals to draw\r\n */\r\nexport class AnimationFrame {\r\n    constructor() {\r\n        this.frameEmitted = new Signal();\r\n        this.bgFrameEmitted = new Signal();\r\n\r\n        this.lastTime = performance.now();\r\n        this.bgLastTime = performance.now();\r\n\r\n        this.boundMethod = this.handleAnimationFrame.bind(this);\r\n\r\n        this.backgroundWorker = new BackgroundAnimationFrameEmitterWorker();\r\n        this.backgroundWorker.addEventListener(\"error\", err => {\r\n            logger.error(\"Error in background fps worker:\", err);\r\n        });\r\n        this.backgroundWorker.addEventListener(\"message\", this.handleBackgroundTick.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Handels the background tick\r\n     */\r\n    handleBackgroundTick() {\r\n        const time = performance.now();\r\n\r\n        let dt = time - this.bgLastTime;\r\n\r\n        if (dt > maxDtMs) {\r\n            dt = resetDtMs;\r\n        }\r\n\r\n        this.bgFrameEmitted.dispatch(dt);\r\n        this.bgLastTime = time;\r\n    }\r\n\r\n    /**\r\n     * Starts the frame loop\r\n     */\r\n    start() {\r\n        assertAlways(window.requestAnimationFrame, \"requestAnimationFrame is not supported!\");\r\n        this.handleAnimationFrame();\r\n    }\r\n\r\n    /**\r\n     * Handels the animation frame\r\n     */\r\n    handleAnimationFrame(time) {\r\n        let dt = time - this.lastTime;\r\n\r\n        if (dt > maxDtMs) {\r\n            dt = resetDtMs;\r\n        }\r\n\r\n        this.frameEmitted.dispatch(dt);\r\n        this.lastTime = time;\r\n\r\n        window.requestAnimationFrame(this.boundMethod);\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/animation_frame.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/animation_frame.js",
    "static": true,
    "longname": "js/core/animation_frame.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/animation_frame.js",
    "importStyle": null,
    "description": "Logger for animation_frame",
    "lineNumber": 10,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "name": "maxDtMs",
    "memberof": "js/core/animation_frame.js",
    "static": true,
    "longname": "js/core/animation_frame.js~maxDtMs",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/animation_frame.js",
    "importStyle": null,
    "description": "Maximum delta milliseconds",
    "lineNumber": 15,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "resetDtMs",
    "memberof": "js/core/animation_frame.js",
    "static": true,
    "longname": "js/core/animation_frame.js~resetDtMs",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/animation_frame.js",
    "importStyle": null,
    "description": "Reset delta milliseconds",
    "lineNumber": 19,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "class",
    "name": "AnimationFrame",
    "memberof": "js/core/animation_frame.js",
    "static": true,
    "longname": "js/core/animation_frame.js~AnimationFrame",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/animation_frame.js",
    "importStyle": "{AnimationFrame}",
    "description": "Controls the frames and emit signals to draw",
    "lineNumber": 24,
    "interface": false
  },
  {
    "__docId__": 115,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/animation_frame.js~AnimationFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/animation_frame.js~AnimationFrame#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "frameEmitted",
    "memberof": "js/core/animation_frame.js~AnimationFrame",
    "static": false,
    "longname": "js/core/animation_frame.js~AnimationFrame#frameEmitted",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "bgFrameEmitted",
    "memberof": "js/core/animation_frame.js~AnimationFrame",
    "static": false,
    "longname": "js/core/animation_frame.js~AnimationFrame#bgFrameEmitted",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "lastTime",
    "memberof": "js/core/animation_frame.js~AnimationFrame",
    "static": false,
    "longname": "js/core/animation_frame.js~AnimationFrame#lastTime",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "bgLastTime",
    "memberof": "js/core/animation_frame.js~AnimationFrame",
    "static": false,
    "longname": "js/core/animation_frame.js~AnimationFrame#bgLastTime",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "member",
    "name": "boundMethod",
    "memberof": "js/core/animation_frame.js~AnimationFrame",
    "static": false,
    "longname": "js/core/animation_frame.js~AnimationFrame#boundMethod",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "backgroundWorker",
    "memberof": "js/core/animation_frame.js~AnimationFrame",
    "static": false,
    "longname": "js/core/animation_frame.js~AnimationFrame#backgroundWorker",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "handleBackgroundTick",
    "memberof": "js/core/animation_frame.js~AnimationFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/animation_frame.js~AnimationFrame#handleBackgroundTick",
    "access": "public",
    "description": "Handels the background tick",
    "lineNumber": 44,
    "params": [],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "start",
    "memberof": "js/core/animation_frame.js~AnimationFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/animation_frame.js~AnimationFrame#start",
    "access": "public",
    "description": "Starts the frame loop",
    "lineNumber": 60,
    "params": [],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "handleAnimationFrame",
    "memberof": "js/core/animation_frame.js~AnimationFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/animation_frame.js~AnimationFrame#handleAnimationFrame",
    "access": "public",
    "description": "Handels the animation frame",
    "lineNumber": 68,
    "params": [
      {
        "name": "time",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 127,
    "kind": "file",
    "name": "js/core/assert.js",
    "content": "// @ts-nocheck\r\nimport { createLogger } from \"./logging\";\r\n\r\n/**\r\n * Logger for assert function\r\n */\r\nconst logger = createLogger(\"assert\");\r\n\r\n/**\r\n * Is assertion error shown\r\n */\r\nlet assertionErrorShown = false;\r\n\r\n/**\r\n * Adds the assert function to the window\r\n */\r\nfunction initAssert() {\r\n    /**\r\n     * Expects a given condition to be true\r\n     * @param {Boolean} condition\r\n     * @param  {...String} failureMessage\r\n     */\r\n    window.assert = function(condition, ...failureMessage) {\r\n        if (!condition) {\r\n            logger.error(\"assertion failed:\", ...failureMessage);\r\n            if (!assertionErrorShown) {\r\n                // alert(\"Assertion failed (the game will try to continue to run): \\n\\n\" + failureMessage);\r\n                assertionErrorShown = true;\r\n            }\r\n            throw new Error(\"AssertionError: \" + failureMessage.join(\" \"));\r\n        }\r\n    };\r\n}\r\n\r\ninitAssert();",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/assert.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 128,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/assert.js",
    "static": true,
    "longname": "js/core/assert.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/assert.js",
    "importStyle": null,
    "description": "Logger for assert function",
    "lineNumber": 7,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 129,
    "kind": "variable",
    "name": "assertionErrorShown",
    "memberof": "js/core/assert.js",
    "static": true,
    "longname": "js/core/assert.js~assertionErrorShown",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/assert.js",
    "importStyle": null,
    "description": "Is assertion error shown",
    "lineNumber": 12,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "initAssert",
    "memberof": "js/core/assert.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/assert.js~initAssert",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/assert.js",
    "importStyle": null,
    "description": "Adds the assert function to the window",
    "lineNumber": 17,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "js/core/async_compression.js",
    "content": "// @ts-nocheck\r\n// @ts-ignore\r\nimport CompressionWorker from \"../webworkers/compression.worker\";\r\n\r\nimport { createLogger } from \"./logging\";\r\nimport { round2Digits } from \"./utils\";\r\n\r\nconst logger = createLogger(\"async_compression\");\r\n\r\nexport let compressionPrefix = String.fromCodePoint(1);\r\n\r\nfunction checkCryptPrefix(prefix) {\r\n    try {\r\n        window.localStorage.setItem(\"prefix_test\", prefix);\r\n        window.localStorage.removeItem(\"prefix_test\");\r\n        return true;\r\n    } catch (ex) {\r\n        logger.warn(\"Prefix '\" + prefix + \"' not available\");\r\n        return false;\r\n    }\r\n}\r\n\r\nif (!checkCryptPrefix(compressionPrefix)) {\r\n    logger.warn(\"Switching to basic prefix\");\r\n    compressionPrefix = \" \";\r\n    if (!checkCryptPrefix(compressionPrefix)) {\r\n        logger.warn(\"Prefix not available, ls seems to be unavailable\");\r\n    }\r\n}\r\n\r\n/**\r\n * @typedef {{\r\n *   errorHandler: function(message: any) : void,\r\n *   resolver: function(message: any) : void,\r\n *   startTime: number\r\n * }} JobEntry\r\n */\r\n\r\nclass AsynCompression {\r\n    constructor() {\r\n        this.worker = new CompressionWorker();\r\n\r\n        this.currentJobId = 1000;\r\n\r\n        /** @type {Object.<number, JobEntry>} */\r\n        this.currentJobs = {};\r\n\r\n        this.worker.addEventListener(\"message\", event => {\r\n            const { jobId, result } = event.data;\r\n            const jobData = this.currentJobs[jobId];\r\n            if (!jobData) {\r\n                logger.error(\"Failed to resolve job result, job id\", jobId, \"is not known\");\r\n                return;\r\n            }\r\n\r\n            const duration = performance.now() - jobData.startTime;\r\n            logger.log(\r\n                \"Got job\",\r\n                jobId,\r\n                \"response within\",\r\n                round2Digits(duration),\r\n                \"ms: \",\r\n                result.length,\r\n                \"bytes\"\r\n            );\r\n            const resolver = jobData.resolver;\r\n            delete this.currentJobs[jobId];\r\n            resolver(result);\r\n        });\r\n\r\n        this.worker.addEventListener(\"error\", err => {\r\n            logger.error(\"Got error from webworker:\", err, \"aborting all jobs\");\r\n            const failureCalls = [];\r\n            for (const jobId in this.currentJobs) {\r\n                failureCalls.push(this.currentJobs[jobId].errorHandler);\r\n            }\r\n            this.currentJobs = {};\r\n            for (let i = 0; i < failureCalls.length; ++i) {\r\n                failureCalls[i](err);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Compresses any object\r\n     * @param {any} obj\r\n     */\r\n    compressObjectAsync(obj) {\r\n        logger.log(\"Compressing object async (optimized)\");\r\n        return this.internalQueueJob(\"compressObject\", {\r\n            obj,\r\n            compressionPrefix,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Queues a new job\r\n     * @param {string} job\r\n     * @param {any} data\r\n     * @returns {Promise<any>}\r\n     */\r\n    internalQueueJob(job, data) {\r\n        const jobId = ++this.currentJobId;\r\n        return new Promise((resolve, reject) => {\r\n            const errorHandler = err => {\r\n                logger.error(\"Failed to compress job\", jobId, \":\", err);\r\n                reject(err);\r\n            };\r\n            this.currentJobs[jobId] = {\r\n                errorHandler,\r\n                resolver: resolve,\r\n                startTime: performance.now(),\r\n            };\r\n\r\n            logger.log(\"Posting job\", job, \"/\", jobId);\r\n            this.worker.postMessage({ jobId, job, data });\r\n        });\r\n    }\r\n}\r\n\r\nexport const asyncCompressor = new AsynCompression();",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/async_compression.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/async_compression.js",
    "static": true,
    "longname": "js/core/async_compression.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/async_compression.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "compressionPrefix",
    "memberof": "js/core/async_compression.js",
    "static": true,
    "longname": "js/core/async_compression.js~compressionPrefix",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/async_compression.js",
    "importStyle": "{compressionPrefix}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "function",
    "name": "checkCryptPrefix",
    "memberof": "js/core/async_compression.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/async_compression.js~checkCryptPrefix",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/async_compression.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "prefix",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "asyncCompressor",
    "memberof": "js/core/async_compression.js",
    "static": true,
    "longname": "js/core/async_compression.js~asyncCompressor",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/async_compression.js",
    "importStyle": "{asyncCompressor}",
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "typedef",
    "name": "JobEntry",
    "memberof": "js/core/async_compression.js",
    "static": true,
    "longname": "js/core/async_compression.js~JobEntry",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "pseudoExport": true,
    "type": {
      "types": [
        "{\n  errorHandler: function(message: any) : void,\n  resolver: function(message: any) : void,\n  startTime: number\n}"
      ],
      "optional": false,
      "name": "JobEntry"
    }
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "js/core/atlas_definitions.js",
    "content": "/**\r\n * @typedef {{ w: number, h: number }} Size\r\n * @typedef {{ x: number, y: number }} Position\r\n * @typedef {{\r\n *   frame: Position & Size,\r\n *   rotated: boolean,\r\n *   spriteSourceSize: Position & Size,\r\n *   sourceSize: Size,\r\n *   trimmed: boolean\r\n * }} SpriteDefinition\r\n *\r\n * @typedef {{\r\n *   app: string,\r\n *   version: string,\r\n *   image: string,\r\n *   format: string,\r\n *   size: Size,\r\n *   scale: string,\r\n *   smartupdate: string\r\n * }} AtlasMeta\r\n *\r\n * @typedef {{\r\n *   frames: Object.<string, SpriteDefinition>,\r\n *   meta: AtlasMeta\r\n * }} SourceData\r\n */\r\n\r\nexport class AtlasDefinition {\r\n    /**\r\n     * @param {SourceData} sourceData\r\n     */\r\n    constructor({ frames, meta }) {\r\n        this.meta = meta;\r\n        this.sourceData = frames;\r\n        this.sourceFileName = meta.image;\r\n    }\r\n\r\n    getFullSourcePath() {\r\n        return this.sourceFileName;\r\n    }\r\n}\r\n\r\n/** @type {AtlasDefinition[]} **/\r\nexport const atlasFiles = require\r\n    // @ts-ignore\r\n    .context(\"../../../res_built/atlas/\", false, /.*\\.json/i)\r\n    .keys()\r\n    .map(f => f.replace(/^\\.\\//gi, \"\"))\r\n    .map(f => require(\"../../../res_built/atlas/\" + f))\r\n    .map(data => new AtlasDefinition(data));",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/atlas_definitions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "typedef",
    "name": "SourceData",
    "memberof": "js/core/atlas_definitions.js",
    "static": true,
    "longname": "js/core/atlas_definitions.js~SourceData",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "type": {
      "types": [
        "{\n  frames: Object.<string, SpriteDefinition>,\n  meta: AtlasMeta\n}"
      ],
      "optional": false,
      "name": "SourceData"
    }
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "atlasFiles",
    "memberof": "js/core/atlas_definitions.js",
    "static": true,
    "longname": "js/core/atlas_definitions.js~atlasFiles",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/atlas_definitions.js",
    "importStyle": "{atlasFiles}",
    "description": null,
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "AtlasDefinition[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 140,
    "kind": "file",
    "name": "js/core/background_resources_loader.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\n\r\nimport { Loader } from \"./loader\";\r\nimport { createLogger } from \"./logging\";\r\nimport { Signal } from \"./signal\";\r\nimport { SOUNDS, MUSIC } from \"../platform/sound\";\r\nimport { AtlasDefinition, atlasFiles } from \"./atlas_definitions\";\r\nimport { initBuildingCodesAfterResourcesLoaded } from \"../game/meta_building_registry\";\r\nimport { cachebust } from \"./cachebust\";\r\n\r\nconst logger = createLogger(\"background_loader\");\r\n\r\nconst essentialMainMenuSprites = [\r\n    \"logo.png\",\r\n    ...G_ALL_UI_IMAGES.filter(src => src.startsWith(\"ui/\") && src.indexOf(\".gif\") < 0),\r\n];\r\nconst essentialMainMenuSounds = [\r\n    SOUNDS.uiClick,\r\n    SOUNDS.uiError,\r\n    SOUNDS.dialogError,\r\n    SOUNDS.dialogOk,\r\n    SOUNDS.swishShow,\r\n    SOUNDS.swishHide,\r\n];\r\n\r\nconst essentialBareGameAtlases = atlasFiles;\r\nconst essentialBareGameSprites = G_ALL_UI_IMAGES.filter(src => src.indexOf(\".gif\") < 0);\r\nconst essentialBareGameSounds = [MUSIC.theme];\r\n\r\nconst additionalGameSprites = [];\r\n// @ts-ignore\r\nconst additionalGameSounds = [...Object.values(SOUNDS), ...Object.values(MUSIC)];\r\n\r\nexport class BackgroundResourcesLoader {\r\n    /**\r\n     *\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        this.app = app;\r\n\r\n        this.registerReady = false;\r\n        this.mainMenuReady = false;\r\n        this.bareGameReady = false;\r\n        this.additionalReady = false;\r\n\r\n        this.signalMainMenuLoaded = new Signal();\r\n        this.signalBareGameLoaded = new Signal();\r\n        this.signalAdditionalLoaded = new Signal();\r\n\r\n        this.numAssetsLoaded = 0;\r\n        this.numAssetsToLoadTotal = 0;\r\n\r\n        // Avoid loading stuff twice\r\n        this.spritesLoaded = [];\r\n        this.soundsLoaded = [];\r\n    }\r\n\r\n    getNumAssetsLoaded() {\r\n        return this.numAssetsLoaded;\r\n    }\r\n\r\n    getNumAssetsTotal() {\r\n        return this.numAssetsToLoadTotal;\r\n    }\r\n\r\n    getPromiseForMainMenu() {\r\n        if (this.mainMenuReady) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return new Promise(resolve => {\r\n            this.signalMainMenuLoaded.add(resolve);\r\n        });\r\n    }\r\n\r\n    getPromiseForBareGame() {\r\n        if (this.bareGameReady) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return new Promise(resolve => {\r\n            this.signalBareGameLoaded.add(resolve);\r\n        });\r\n    }\r\n\r\n    startLoading() {\r\n        this.internalStartLoadingEssentialsForMainMenu();\r\n    }\r\n\r\n    internalStartLoadingEssentialsForMainMenu() {\r\n        logger.log(\"⏰ Start load: main menu\");\r\n        this.internalLoadSpritesAndSounds(essentialMainMenuSprites, essentialMainMenuSounds)\r\n            .catch(err => {\r\n                logger.warn(\"⏰ Failed to load essentials for main menu:\", err);\r\n            })\r\n            .then(() => {\r\n                logger.log(\"⏰ Finish load: main menu\");\r\n                this.mainMenuReady = true;\r\n                this.signalMainMenuLoaded.dispatch();\r\n                this.internalStartLoadingEssentialsForBareGame();\r\n            });\r\n    }\r\n\r\n    internalStartLoadingEssentialsForBareGame() {\r\n        logger.log(\"⏰ Start load: bare game\");\r\n        this.internalLoadSpritesAndSounds(\r\n                essentialBareGameSprites,\r\n                essentialBareGameSounds,\r\n                essentialBareGameAtlases\r\n            )\r\n            .then(() => this.internalPreloadCss(\"async-resources.scss\"))\r\n            .catch(err => {\r\n                logger.warn(\"⏰ Failed to load essentials for bare game:\", err);\r\n            })\r\n            .then(() => {\r\n                logger.log(\"⏰ Finish load: bare game\");\r\n                this.bareGameReady = true;\r\n                initBuildingCodesAfterResourcesLoaded();\r\n                this.signalBareGameLoaded.dispatch();\r\n                this.internalStartLoadingAdditionalGameAssets();\r\n            });\r\n    }\r\n\r\n    internalStartLoadingAdditionalGameAssets() {\r\n        const additionalAtlases = [];\r\n        logger.log(\"⏰ Start load: additional assets (\", additionalAtlases.length, \"images)\");\r\n        this.internalLoadSpritesAndSounds(additionalGameSprites, additionalGameSounds, additionalAtlases)\r\n            .catch(err => {\r\n                logger.warn(\"⏰ Failed to load additional assets:\", err);\r\n            })\r\n            .then(() => {\r\n                logger.log(\"⏰ Finish load: additional assets\");\r\n                this.additionalReady = true;\r\n                this.signalAdditionalLoaded.dispatch();\r\n            });\r\n    }\r\n\r\n    internalPreloadCss(name) {\r\n        return new Promise((resolve, reject) => {\r\n            const link = document.createElement(\"link\");\r\n\r\n            link.onload = resolve;\r\n            link.onerror = reject;\r\n\r\n            link.setAttribute(\"rel\", \"stylesheet\");\r\n            link.setAttribute(\"media\", \"all\");\r\n            link.setAttribute(\"type\", \"text/css\");\r\n            link.setAttribute(\"href\", cachebust(\"async-resources.css\"));\r\n            document.head.appendChild(link);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {Array<string>} sprites\r\n     * @param {Array<string>} sounds\r\n     * @param {Array<AtlasDefinition>} atlases\r\n     * @returns {Promise<void>}\r\n     */\r\n    internalLoadSpritesAndSounds(sprites, sounds, atlases = []) {\r\n        this.numAssetsToLoadTotal = sprites.length + sounds.length + atlases.length;\r\n        this.numAssetsLoaded = 0;\r\n\r\n        let promises = [];\r\n\r\n        for (let i = 0; i < sounds.length; ++i) {\r\n            if (this.soundsLoaded.indexOf(sounds[i]) >= 0) {\r\n                // Already loaded\r\n                continue;\r\n            }\r\n\r\n            this.soundsLoaded.push(sounds[i]);\r\n            promises.push(\r\n                this.app.sound\r\n                .loadSound(sounds[i])\r\n                .catch(err => {\r\n                    logger.warn(\"Failed to load sound:\", sounds[i]);\r\n                })\r\n                .then(() => {\r\n                    this.numAssetsLoaded++;\r\n                })\r\n            );\r\n        }\r\n\r\n        for (let i = 0; i < sprites.length; ++i) {\r\n            if (this.spritesLoaded.indexOf(sprites[i]) >= 0) {\r\n                // Already loaded\r\n                continue;\r\n            }\r\n            this.spritesLoaded.push(sprites[i]);\r\n            promises.push(\r\n                Loader.preloadCSSSprite(sprites[i])\r\n                .catch(err => {\r\n                    logger.warn(\"Failed to load css sprite:\", sprites[i]);\r\n                })\r\n                .then(() => {\r\n                    this.numAssetsLoaded++;\r\n                })\r\n            );\r\n        }\r\n\r\n        for (let i = 0; i < atlases.length; ++i) {\r\n            const atlas = atlases[i];\r\n            promises.push(\r\n                Loader.preloadAtlas(atlas)\r\n                .catch(err => {\r\n                    logger.warn(\"Failed to load atlas:\", atlas.sourceFileName);\r\n                })\r\n                .then(() => {\r\n                    this.numAssetsLoaded++;\r\n                })\r\n            );\r\n        }\r\n\r\n        return (\r\n            Promise.all(promises)\r\n\r\n            // // Remove some pressure by waiting a bit\r\n            // .then(() => {\r\n            //     return new Promise(resolve => {\r\n            //         setTimeout(resolve, 200);\r\n            //     });\r\n            // })\r\n            .then(() => {\r\n                this.numAssetsToLoadTotal = 0;\r\n                this.numAssetsLoaded = 0;\r\n            })\r\n        );\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/background_resources_loader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 141,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/background_resources_loader.js",
    "static": true,
    "longname": "js/core/background_resources_loader.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/background_resources_loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 142,
    "kind": "variable",
    "name": "essentialMainMenuSprites",
    "memberof": "js/core/background_resources_loader.js",
    "static": true,
    "longname": "js/core/background_resources_loader.js~essentialMainMenuSprites",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/background_resources_loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 143,
    "kind": "variable",
    "name": "essentialMainMenuSounds",
    "memberof": "js/core/background_resources_loader.js",
    "static": true,
    "longname": "js/core/background_resources_loader.js~essentialMainMenuSounds",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/background_resources_loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "essentialBareGameAtlases",
    "memberof": "js/core/background_resources_loader.js",
    "static": true,
    "longname": "js/core/background_resources_loader.js~essentialBareGameAtlases",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/background_resources_loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "essentialBareGameSprites",
    "memberof": "js/core/background_resources_loader.js",
    "static": true,
    "longname": "js/core/background_resources_loader.js~essentialBareGameSprites",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/background_resources_loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "variable",
    "name": "essentialBareGameSounds",
    "memberof": "js/core/background_resources_loader.js",
    "static": true,
    "longname": "js/core/background_resources_loader.js~essentialBareGameSounds",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/background_resources_loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 147,
    "kind": "variable",
    "name": "additionalGameSprites",
    "memberof": "js/core/background_resources_loader.js",
    "static": true,
    "longname": "js/core/background_resources_loader.js~additionalGameSprites",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/background_resources_loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "name": "additionalGameSounds",
    "memberof": "js/core/background_resources_loader.js",
    "static": true,
    "longname": "js/core/background_resources_loader.js~additionalGameSounds",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/background_resources_loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 149,
    "kind": "class",
    "name": "BackgroundResourcesLoader",
    "memberof": "js/core/background_resources_loader.js",
    "static": true,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/background_resources_loader.js",
    "importStyle": "{BackgroundResourcesLoader}",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 150,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "app",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#app",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "registerReady",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#registerReady",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "mainMenuReady",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#mainMenuReady",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "member",
    "name": "bareGameReady",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#bareGameReady",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "additionalReady",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#additionalReady",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "member",
    "name": "signalMainMenuLoaded",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#signalMainMenuLoaded",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "signalBareGameLoaded",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#signalBareGameLoaded",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "signalAdditionalLoaded",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#signalAdditionalLoaded",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "numAssetsLoaded",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#numAssetsLoaded",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "numAssetsToLoadTotal",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#numAssetsToLoadTotal",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "spritesLoaded",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#spritesLoaded",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "soundsLoaded",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#soundsLoaded",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "getNumAssetsLoaded",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#getNumAssetsLoaded",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "getNumAssetsTotal",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#getNumAssetsTotal",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "getPromiseForMainMenu",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#getPromiseForMainMenu",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "getPromiseForBareGame",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#getPromiseForBareGame",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "startLoading",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#startLoading",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "internalStartLoadingEssentialsForMainMenu",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#internalStartLoadingEssentialsForMainMenu",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "internalStartLoadingEssentialsForBareGame",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#internalStartLoadingEssentialsForBareGame",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "internalStartLoadingAdditionalGameAssets",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#internalStartLoadingAdditionalGameAssets",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "internalPreloadCss",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#internalPreloadCss",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "internalLoadSpritesAndSounds",
    "memberof": "js/core/background_resources_loader.js~BackgroundResourcesLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/background_resources_loader.js~BackgroundResourcesLoader#internalLoadSpritesAndSounds",
    "access": "public",
    "description": "",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "sprites",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "sounds",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<AtlasDefinition>"
        ],
        "spread": false,
        "optional": false,
        "name": "atlases",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 180,
    "kind": "file",
    "name": "js/core/buffer_maintainer.js",
    "content": "// @ts-nocheck\r\nimport { GameRoot } from \"../game/root\";\r\nimport { clearBufferBacklog, freeCanvas, getBufferStats, makeOffscreenBuffer } from \"./buffer_utils\";\r\nimport { createLogger } from \"./logging\";\r\nimport { round1Digit } from \"./utils\";\r\n\r\n/**\r\n * @typedef {{\r\n *  canvas: HTMLCanvasElement,\r\n *  context: CanvasRenderingContext2D,\r\n *  lastUse: number,\r\n * }} CacheEntry\r\n */\r\n\r\nconst logger = createLogger(\"buffers\");\r\n\r\nconst bufferGcDurationSeconds = 0.5;\r\n\r\nexport class BufferMaintainer {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n\r\n        /** @type {Map<string, Map<string, CacheEntry>>} */\r\n        this.cache = new Map();\r\n\r\n        this.iterationIndex = 1;\r\n        this.lastIteration = 0;\r\n\r\n        this.root.signals.gameFrameStarted.add(this.update, this);\r\n    }\r\n\r\n    /**\r\n     * Returns the buffer stats\r\n     */\r\n    getStats() {\r\n        let stats = {\r\n            rootKeys: 0,\r\n            subKeys: 0,\r\n            vramBytes: 0,\r\n        };\r\n        this.cache.forEach((subCache, key) => {\r\n            ++stats.rootKeys;\r\n\r\n            subCache.forEach((cacheEntry, subKey) => {\r\n                ++stats.subKeys;\r\n\r\n                const canvas = cacheEntry.canvas;\r\n                stats.vramBytes += canvas.width * canvas.height * 4;\r\n            });\r\n        });\r\n\r\n        return stats;\r\n    }\r\n\r\n    /**\r\n     * Goes to the next buffer iteration, clearing all buffers which were not used\r\n     * for a few iterations\r\n     */\r\n    garbargeCollect() {\r\n        let totalKeys = 0;\r\n        let deletedKeys = 0;\r\n        const minIteration = this.iterationIndex;\r\n\r\n        this.cache.forEach((subCache, key) => {\r\n            let unusedSubKeys = [];\r\n\r\n            // Filter sub cache\r\n            subCache.forEach((cacheEntry, subKey) => {\r\n                if (cacheEntry.lastUse < minIteration) {\r\n                    unusedSubKeys.push(subKey);\r\n                    freeCanvas(cacheEntry.canvas);\r\n                    ++deletedKeys;\r\n                } else {\r\n                    ++totalKeys;\r\n                }\r\n            });\r\n\r\n            // Delete unused sub keys\r\n            for (let i = 0; i < unusedSubKeys.length; ++i) {\r\n                subCache.delete(unusedSubKeys[i]);\r\n            }\r\n        });\r\n\r\n        // Make sure our backlog never gets too big\r\n        clearBufferBacklog();\r\n\r\n        // if (G_IS_DEV) {\r\n        //     const bufferStats = getBufferStats();\r\n        //     const mbUsed = round1Digit(bufferStats.vramUsage / (1024 * 1024));\r\n        //     logger.log(\r\n        //         \"GC: Remove\",\r\n        //         (deletedKeys + \"\").padStart(4),\r\n        //         \", Remain\",\r\n        //         (totalKeys + \"\").padStart(4),\r\n        //         \"(\",\r\n        //         (bufferStats.bufferCount + \"\").padStart(4),\r\n        //         \"total\",\r\n        //         \")\",\r\n\r\n        //         \"(\",\r\n        //         (bufferStats.backlogSize + \"\").padStart(4),\r\n        //         \"backlog\",\r\n        //         \")\",\r\n\r\n        //         \"VRAM:\",\r\n        //         mbUsed,\r\n        //         \"MB\"\r\n        //     );\r\n        // }\r\n\r\n        ++this.iterationIndex;\r\n    }\r\n\r\n    update() {\r\n        const now = this.root.time.realtimeNow();\r\n        if (now - this.lastIteration > bufferGcDurationSeconds) {\r\n            this.lastIteration = now;\r\n            this.garbargeCollect();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {object} param0\r\n     * @param {string} param0.key\r\n     * @param {string} param0.subKey\r\n     * @param {number} param0.w\r\n     * @param {number} param0.h\r\n     * @param {number} param0.dpi\r\n     * @param {function(canvas: HTMLCanvasElement, context: CanvasRenderingContext2D, width: number, height: number, dpi: number, additionalParams: object?) : void} param0.redrawMethod\r\n     * @param {object=} param0.additionalParams\r\n     * @returns {HTMLCanvasElement}\r\n     *\r\n     */\r\n    getForKey({ key, subKey, w, h, dpi, redrawMethod, additionalParams }) {\r\n        // First, create parent key\r\n        let parent = this.cache.get(key);\r\n        if (!parent) {\r\n            parent = new Map();\r\n            this.cache.set(key, parent);\r\n        }\r\n\r\n        // Now search for sub key\r\n        const cacheHit = parent.get(subKey);\r\n        if (cacheHit) {\r\n            cacheHit.lastUse = this.iterationIndex;\r\n            return cacheHit.canvas;\r\n        }\r\n\r\n        // Need to generate new buffer\r\n        const effectiveWidth = w * dpi;\r\n        const effectiveHeight = h * dpi;\r\n\r\n        const [canvas, context] = makeOffscreenBuffer(effectiveWidth, effectiveHeight, {\r\n            reusable: true,\r\n            label: \"buffer-\" + key + \"/\" + subKey,\r\n            smooth: true,\r\n        });\r\n\r\n        redrawMethod(canvas, context, w, h, dpi, additionalParams);\r\n\r\n        parent.set(subKey, {\r\n            canvas,\r\n            context,\r\n            lastUse: this.iterationIndex,\r\n        });\r\n        return canvas;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/buffer_maintainer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 181,
    "kind": "typedef",
    "name": "CacheEntry",
    "memberof": "js/core/buffer_maintainer.js",
    "static": true,
    "longname": "js/core/buffer_maintainer.js~CacheEntry",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "type": {
      "types": [
        "{\n canvas: HTMLCanvasElement,\n context: CanvasRenderingContext2D,\n lastUse: number,\n}"
      ],
      "optional": false,
      "name": "CacheEntry"
    }
  },
  {
    "__docId__": 182,
    "kind": "variable",
    "name": "bufferGcDurationSeconds",
    "memberof": "js/core/buffer_maintainer.js",
    "static": true,
    "longname": "js/core/buffer_maintainer.js~bufferGcDurationSeconds",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/buffer_maintainer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 183,
    "kind": "class",
    "name": "BufferMaintainer",
    "memberof": "js/core/buffer_maintainer.js",
    "static": true,
    "longname": "js/core/buffer_maintainer.js~BufferMaintainer",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/buffer_maintainer.js",
    "importStyle": "{BufferMaintainer}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 184,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/buffer_maintainer.js~BufferMaintainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/buffer_maintainer.js~BufferMaintainer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 185,
    "kind": "member",
    "name": "root",
    "memberof": "js/core/buffer_maintainer.js~BufferMaintainer",
    "static": false,
    "longname": "js/core/buffer_maintainer.js~BufferMaintainer#root",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "member",
    "name": "cache",
    "memberof": "js/core/buffer_maintainer.js~BufferMaintainer",
    "static": false,
    "longname": "js/core/buffer_maintainer.js~BufferMaintainer#cache",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "Map<string, Map<string, CacheEntry>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 187,
    "kind": "member",
    "name": "iterationIndex",
    "memberof": "js/core/buffer_maintainer.js~BufferMaintainer",
    "static": false,
    "longname": "js/core/buffer_maintainer.js~BufferMaintainer#iterationIndex",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "member",
    "name": "lastIteration",
    "memberof": "js/core/buffer_maintainer.js~BufferMaintainer",
    "static": false,
    "longname": "js/core/buffer_maintainer.js~BufferMaintainer#lastIteration",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "getStats",
    "memberof": "js/core/buffer_maintainer.js~BufferMaintainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/buffer_maintainer.js~BufferMaintainer#getStats",
    "access": "public",
    "description": "Returns the buffer stats",
    "lineNumber": 38,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "garbargeCollect",
    "memberof": "js/core/buffer_maintainer.js~BufferMaintainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/buffer_maintainer.js~BufferMaintainer#garbargeCollect",
    "access": "public",
    "description": "Goes to the next buffer iteration, clearing all buffers which were not used\nfor a few iterations",
    "lineNumber": 62,
    "params": [],
    "return": null
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "update",
    "memberof": "js/core/buffer_maintainer.js~BufferMaintainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/buffer_maintainer.js~BufferMaintainer#update",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "getForKey",
    "memberof": "js/core/buffer_maintainer.js~BufferMaintainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/buffer_maintainer.js~BufferMaintainer#getForKey",
    "access": "public",
    "description": "",
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{HTMLCanvasElement}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.subKey",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.h",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.dpi",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function(canvas: HTMLCanvasElement, context: CanvasRenderingContext2D, width: number, height: number, dpi: number, additionalParams: object?) : void"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.redrawMethod",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.additionalParams",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 194,
    "kind": "file",
    "name": "js/core/cachebust.js",
    "content": "/**\r\n * Generates a cachebuster string. This only modifies the path in the browser version\r\n * @param {string} path\r\n */\r\nexport function cachebust(path) {\r\n    if (G_IS_BROWSER && !G_IS_STANDALONE && !G_IS_DEV) {\r\n        return \"/v/\" + G_BUILD_COMMIT_HASH + \"/\" + path;\r\n    }\r\n    return path;\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/cachebust.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 195,
    "kind": "function",
    "name": "cachebust",
    "memberof": "js/core/cachebust.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/cachebust.js~cachebust",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/cachebust.js",
    "importStyle": "{cachebust}",
    "description": "Generates a cachebuster string. This only modifies the path in the browser version",
    "lineNumber": 5,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "file",
    "name": "js/core/click_detector.js",
    "content": "import { createLogger } from \"../core/logging\";\r\nimport { Signal } from \"../core/signal\";\r\nimport { fastArrayDelete, fastArrayDeleteValueIfContained } from \"./utils\";\r\nimport { Vector } from \"./vector\";\r\nimport { IS_MOBILE, SUPPORT_TOUCH } from \"./config\";\r\nimport { SOUNDS } from \"../platform/sound\";\r\nimport { GLOBAL_APP } from \"./globals\";\r\n\r\nconst logger = createLogger(\"click_detector\");\r\n\r\nexport const MAX_MOVE_DISTANCE_PX = IS_MOBILE ? 20 : 80;\r\n\r\n// For debugging\r\nconst registerClickDetectors = G_IS_DEV && true;\r\nif (registerClickDetectors) {\r\n    /** @type {Array<ClickDetector>} */\r\n    window.activeClickDetectors = [];\r\n}\r\n\r\n// Store active click detectors so we can cancel them\r\n/** @type {Array<ClickDetector>} */\r\nconst ongoingClickDetectors = [];\r\n\r\n// Store when the last touch event was registered, to avoid accepting a touch *and* a click event\r\n\r\nexport let clickDetectorGlobals = {\r\n    lastTouchTime: -1000,\r\n};\r\n\r\n/**\r\n * Click detector creation payload typehints\r\n * @typedef {{\r\n *  consumeEvents?: boolean,\r\n *  preventDefault?: boolean,\r\n *  applyCssClass?: string,\r\n *  captureTouchmove?: boolean,\r\n *  targetOnly?: boolean,\r\n *  maxDistance?: number,\r\n *  clickSound?: string,\r\n *  preventClick?: boolean,\r\n * }} ClickDetectorConstructorArgs\r\n */\r\n\r\n// Detects clicks\r\nexport class ClickDetector {\r\n    /**\r\n     *\r\n     * @param {Element} element\r\n     * @param {object} param1\r\n     * @param {boolean=} param1.consumeEvents Whether to call stopPropagation\r\n     *                                       (Useful for nested elements where the parent has a click handler as wel)\r\n     * @param {boolean=} param1.preventDefault  Whether to call preventDefault (Usually makes the handler faster)\r\n     * @param {string=} param1.applyCssClass The css class to add while the element is pressed\r\n     * @param {boolean=} param1.captureTouchmove Whether to capture touchmove events as well\r\n     * @param {boolean=} param1.targetOnly Whether to also accept clicks on child elements (e.target !== element)\r\n     * @param {number=} param1.maxDistance The maximum distance in pixels to accept clicks\r\n     * @param {string=} param1.clickSound Sound key to play on touchdown\r\n     * @param {boolean=} param1.preventClick Whether to prevent click events\r\n     */\r\n    constructor(\r\n        element,\r\n        {\r\n            consumeEvents = false,\r\n            preventDefault = true,\r\n            applyCssClass = \"pressed\",\r\n            captureTouchmove = false,\r\n            targetOnly = false,\r\n            maxDistance = MAX_MOVE_DISTANCE_PX,\r\n            clickSound = SOUNDS.uiClick,\r\n            preventClick = false,\r\n        }\r\n    ) {\r\n        assert(element, \"No element given!\");\r\n        this.clickDownPosition = null;\r\n\r\n        this.consumeEvents = consumeEvents;\r\n        this.preventDefault = preventDefault;\r\n        this.applyCssClass = applyCssClass;\r\n        this.captureTouchmove = captureTouchmove;\r\n        this.targetOnly = targetOnly;\r\n        this.clickSound = clickSound;\r\n        this.maxDistance = maxDistance;\r\n        this.preventClick = preventClick;\r\n\r\n        // Signals\r\n        this.click = new Signal();\r\n        this.rightClick = new Signal();\r\n        this.touchstart = new Signal();\r\n        this.touchmove = new Signal();\r\n        this.touchend = new Signal();\r\n        this.touchcancel = new Signal();\r\n\r\n        // Simple signals which just receive the touch position\r\n        this.touchstartSimple = new Signal();\r\n        this.touchmoveSimple = new Signal();\r\n        this.touchendSimple = new Signal();\r\n\r\n        // Store time of touch start\r\n        this.clickStartTime = null;\r\n\r\n        // A click can be cancelled if another detector registers a click\r\n        this.cancelled = false;\r\n\r\n        this.internalBindTo(/** @type {HTMLElement} */ (element));\r\n    }\r\n\r\n    /**\r\n     * Cleans up all event listeners of this detector\r\n     */\r\n    cleanup() {\r\n        if (this.element) {\r\n            if (registerClickDetectors) {\r\n                const index = window.activeClickDetectors.indexOf(this);\r\n                if (index < 0) {\r\n                    logger.error(\"Click detector cleanup but is not active\");\r\n                } else {\r\n                    window.activeClickDetectors.splice(index, 1);\r\n                }\r\n            }\r\n            const options = this.internalGetEventListenerOptions();\r\n\r\n            if (SUPPORT_TOUCH) {\r\n                this.element.removeEventListener(\"touchstart\", this.handlerTouchStart, options);\r\n                this.element.removeEventListener(\"touchend\", this.handlerTouchEnd, options);\r\n                this.element.removeEventListener(\"touchcancel\", this.handlerTouchCancel, options);\r\n            }\r\n\r\n            this.element.removeEventListener(\"mouseup\", this.handlerTouchStart, options);\r\n            this.element.removeEventListener(\"mousedown\", this.handlerTouchEnd, options);\r\n            this.element.removeEventListener(\"mouseout\", this.handlerTouchCancel, options);\r\n\r\n            if (this.captureTouchmove) {\r\n                if (SUPPORT_TOUCH) {\r\n                    this.element.removeEventListener(\"touchmove\", this.handlerTouchMove, options);\r\n                }\r\n                this.element.removeEventListener(\"mousemove\", this.handlerTouchMove, options);\r\n            }\r\n\r\n            if (this.preventClick) {\r\n                this.element.removeEventListener(\"click\", this.handlerPreventClick, options);\r\n            }\r\n\r\n            this.click.removeAll();\r\n            this.touchstart.removeAll();\r\n            this.touchmove.removeAll();\r\n            this.touchend.removeAll();\r\n            this.touchcancel.removeAll();\r\n\r\n            this.element = null;\r\n        }\r\n    }\r\n\r\n    // INTERNAL METHODS\r\n\r\n    /**\r\n     *\r\n     * @param {Event} event\r\n     */\r\n    internalPreventClick(event) {\r\n        window.focus();\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Internal method to get the options to pass to an event listener\r\n     */\r\n    internalGetEventListenerOptions() {\r\n        return {\r\n            capture: this.consumeEvents,\r\n            passive: !this.preventDefault,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Binds the click detector to an element\r\n     * @param {HTMLElement} element\r\n     */\r\n    internalBindTo(element) {\r\n        const options = this.internalGetEventListenerOptions();\r\n\r\n        this.handlerTouchStart = this.internalOnPointerDown.bind(this);\r\n        this.handlerTouchEnd = this.internalOnPointerEnd.bind(this);\r\n        this.handlerTouchMove = this.internalOnPointerMove.bind(this);\r\n        this.handlerTouchCancel = this.internalOnTouchCancel.bind(this);\r\n\r\n        if (this.preventClick) {\r\n            this.handlerPreventClick = this.internalPreventClick.bind(this);\r\n            element.addEventListener(\"click\", this.handlerPreventClick, options);\r\n        }\r\n\r\n        if (SUPPORT_TOUCH) {\r\n            element.addEventListener(\"touchstart\", this.handlerTouchStart, options);\r\n            element.addEventListener(\"touchend\", this.handlerTouchEnd, options);\r\n            element.addEventListener(\"touchcancel\", this.handlerTouchCancel, options);\r\n        }\r\n\r\n        element.addEventListener(\"mousedown\", this.handlerTouchStart, options);\r\n        element.addEventListener(\"mouseup\", this.handlerTouchEnd, options);\r\n        element.addEventListener(\"mouseout\", this.handlerTouchCancel, options);\r\n\r\n        if (this.captureTouchmove) {\r\n            if (SUPPORT_TOUCH) {\r\n                element.addEventListener(\"touchmove\", this.handlerTouchMove, options);\r\n            }\r\n            element.addEventListener(\"mousemove\", this.handlerTouchMove, options);\r\n        }\r\n\r\n        if (registerClickDetectors) {\r\n            window.activeClickDetectors.push(this);\r\n        }\r\n        this.element = element;\r\n    }\r\n\r\n    /**\r\n     * Returns if the bound element is currently in the DOM.\r\n     */\r\n    internalIsDomElementAttached() {\r\n        return this.element && document.documentElement.contains(this.element);\r\n    }\r\n\r\n    /**\r\n     * Checks if the given event is relevant for this detector\r\n     * @param {TouchEvent|MouseEvent} event\r\n     */\r\n    internalEventPreHandler(event, expectedRemainingTouches = 1) {\r\n        if (!this.element) {\r\n            // Already cleaned up\r\n            return false;\r\n        }\r\n\r\n        if (this.targetOnly && event.target !== this.element) {\r\n            // Clicked a child element\r\n            return false;\r\n        }\r\n\r\n        // Stop any propagation and defaults if configured\r\n        if (this.consumeEvents && event.cancelable) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (this.preventDefault && event.cancelable) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (window.TouchEvent && event instanceof TouchEvent) {\r\n            clickDetectorGlobals.lastTouchTime = performance.now();\r\n\r\n            // console.log(\"Got touches\", event.targetTouches.length, \"vs\", expectedRemainingTouches);\r\n            if (event.targetTouches.length !== expectedRemainingTouches) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (event instanceof MouseEvent) {\r\n            if (performance.now() - clickDetectorGlobals.lastTouchTime < 1000.0) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Extracts the mous position from an event\r\n     * @param {TouchEvent|MouseEvent} event\r\n     * @returns {Vector} The client space position\r\n     */\r\n    static extractPointerPosition(event) {\r\n        if (window.TouchEvent && event instanceof TouchEvent) {\r\n            if (event.changedTouches.length !== 1) {\r\n                logger.warn(\r\n                    \"Got unexpected target touches:\",\r\n                    event.targetTouches.length,\r\n                    \"->\",\r\n                    event.targetTouches\r\n                );\r\n                return new Vector(0, 0);\r\n            }\r\n\r\n            const touch = event.changedTouches[0];\r\n            return new Vector(touch.clientX, touch.clientY);\r\n        }\r\n\r\n        if (event instanceof MouseEvent) {\r\n            return new Vector(event.clientX, event.clientY);\r\n        }\r\n\r\n        assertAlways(false, \"Got unknown event: \" + event);\r\n\r\n        return new Vector(0, 0);\r\n    }\r\n\r\n    /**\r\n     * Cacnels all ongoing events on this detector\r\n     */\r\n    cancelOngoingEvents() {\r\n        if (this.applyCssClass && this.element) {\r\n            this.element.classList.remove(this.applyCssClass);\r\n        }\r\n        this.clickDownPosition = null;\r\n        this.clickStartTime = null;\r\n        this.cancelled = true;\r\n        fastArrayDeleteValueIfContained(ongoingClickDetectors, this);\r\n    }\r\n\r\n    /**\r\n     * Internal pointer down handler\r\n     * @param {TouchEvent|MouseEvent} event\r\n     */\r\n    internalOnPointerDown(event) {\r\n        window.focus();\r\n\r\n        if (!this.internalEventPreHandler(event, 1)) {\r\n            return false;\r\n        }\r\n\r\n        const position = /** @type {typeof ClickDetector} */ (this.constructor).extractPointerPosition(event);\r\n\r\n        if (event instanceof MouseEvent) {\r\n            const isRightClick = event.button === 2;\r\n            if (isRightClick) {\r\n                // Ignore right clicks\r\n                this.rightClick.dispatch(position, event);\r\n                this.cancelled = true;\r\n                this.clickDownPosition = null;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.clickDownPosition) {\r\n            logger.warn(\"Ignoring double click\");\r\n            return false;\r\n        }\r\n\r\n        this.cancelled = false;\r\n        this.touchstart.dispatch(event);\r\n\r\n        // Store where the touch started\r\n        this.clickDownPosition = position;\r\n        this.clickStartTime = performance.now();\r\n        this.touchstartSimple.dispatch(this.clickDownPosition.x, this.clickDownPosition.y);\r\n\r\n        // If we are not currently within a click, register it\r\n        if (ongoingClickDetectors.indexOf(this) < 0) {\r\n            ongoingClickDetectors.push(this);\r\n        } else {\r\n            logger.warn(\"Click detector got pointer down of active pointer twice\");\r\n        }\r\n\r\n        // If we should apply any classes, do this now\r\n        if (this.applyCssClass) {\r\n            this.element.classList.add(this.applyCssClass);\r\n        }\r\n\r\n        // If we should play any sound, do this\r\n        if (this.clickSound) {\r\n            GLOBAL_APP.sound.playUiSound(this.clickSound);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Internal pointer move handler\r\n     * @param {TouchEvent|MouseEvent} event\r\n     */\r\n    internalOnPointerMove(event) {\r\n        if (!this.internalEventPreHandler(event, 1)) {\r\n            return false;\r\n        }\r\n        this.touchmove.dispatch(event);\r\n        const pos = /** @type {typeof ClickDetector} */ (this.constructor).extractPointerPosition(event);\r\n        this.touchmoveSimple.dispatch(pos.x, pos.y);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Internal pointer end handler\r\n     * @param {TouchEvent|MouseEvent} event\r\n     */\r\n    internalOnPointerEnd(event) {\r\n        window.focus();\r\n\r\n        if (!this.internalEventPreHandler(event, 0)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.cancelled) {\r\n            // warn(this, \"Not dispatching touchend on cancelled listener\");\r\n            return false;\r\n        }\r\n\r\n        if (event instanceof MouseEvent) {\r\n            const isRightClick = event.button === 2;\r\n            if (isRightClick) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        const index = ongoingClickDetectors.indexOf(this);\r\n        if (index < 0) {\r\n            logger.warn(\"Got pointer end but click detector is not in pressed state\");\r\n        } else {\r\n            fastArrayDelete(ongoingClickDetectors, index);\r\n        }\r\n\r\n        let dispatchClick = false;\r\n        let dispatchClickPos = null;\r\n\r\n        // Check for correct down position, otherwise must have pinched or so\r\n        if (this.clickDownPosition) {\r\n            const pos = /** @type {typeof ClickDetector} */ (this.constructor).extractPointerPosition(event);\r\n            const distance = pos.distance(this.clickDownPosition);\r\n            if (!IS_MOBILE || distance <= this.maxDistance) {\r\n                dispatchClick = true;\r\n                dispatchClickPos = pos;\r\n            } else {\r\n                console.warn(\"[ClickDetector] Touch does not count as click:\", \"(was\", distance, \")\");\r\n            }\r\n        }\r\n\r\n        this.clickDownPosition = null;\r\n        this.clickStartTime = null;\r\n\r\n        if (this.applyCssClass) {\r\n            this.element.classList.remove(this.applyCssClass);\r\n        }\r\n\r\n        // Dispatch in the end to avoid the element getting invalidated\r\n        // Also make sure that the element is still in the dom\r\n        if (this.internalIsDomElementAttached()) {\r\n            this.touchend.dispatch(event);\r\n            this.touchendSimple.dispatch();\r\n\r\n            if (dispatchClick) {\r\n                const detectors = ongoingClickDetectors.slice();\r\n                for (let i = 0; i < detectors.length; ++i) {\r\n                    detectors[i].cancelOngoingEvents();\r\n                }\r\n                this.click.dispatch(dispatchClickPos, event);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Internal touch cancel handler\r\n     * @param {TouchEvent|MouseEvent} event\r\n     */\r\n    internalOnTouchCancel(event) {\r\n        if (!this.internalEventPreHandler(event, 0)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.cancelled) {\r\n            // warn(this, \"Not dispatching touchcancel on cancelled listener\");\r\n            return false;\r\n        }\r\n\r\n        this.cancelOngoingEvents();\r\n        this.touchcancel.dispatch(event);\r\n        this.touchendSimple.dispatch(event);\r\n        return false;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/click_detector.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 197,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/click_detector.js",
    "static": true,
    "longname": "js/core/click_detector.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/click_detector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 198,
    "kind": "variable",
    "name": "MAX_MOVE_DISTANCE_PX",
    "memberof": "js/core/click_detector.js",
    "static": true,
    "longname": "js/core/click_detector.js~MAX_MOVE_DISTANCE_PX",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/click_detector.js",
    "importStyle": "{MAX_MOVE_DISTANCE_PX}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "variable",
    "name": "registerClickDetectors",
    "memberof": "js/core/click_detector.js",
    "static": true,
    "longname": "js/core/click_detector.js~registerClickDetectors",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/click_detector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 200,
    "kind": "variable",
    "name": "ongoingClickDetectors",
    "memberof": "js/core/click_detector.js",
    "static": true,
    "longname": "js/core/click_detector.js~ongoingClickDetectors",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/click_detector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "Array<ClickDetector>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 201,
    "kind": "variable",
    "name": "clickDetectorGlobals",
    "memberof": "js/core/click_detector.js",
    "static": true,
    "longname": "js/core/click_detector.js~clickDetectorGlobals",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/click_detector.js",
    "importStyle": "{clickDetectorGlobals}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "{\"lastTouchTime\": *}"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "typedef",
    "name": "ClickDetectorConstructorArgs",
    "memberof": "js/core/click_detector.js",
    "static": true,
    "longname": "js/core/click_detector.js~ClickDetectorConstructorArgs",
    "access": "public",
    "description": "Click detector creation payload typehints",
    "lineNumber": 45,
    "type": {
      "types": [
        "{\n consumeEvents?: boolean,\n preventDefault?: boolean,\n applyCssClass?: string,\n captureTouchmove?: boolean,\n targetOnly?: boolean,\n maxDistance?: number,\n clickSound?: string,\n preventClick?: boolean,\n}"
      ],
      "optional": false,
      "name": "ClickDetectorConstructorArgs"
    }
  },
  {
    "__docId__": 203,
    "kind": "file",
    "name": "js/core/config.js",
    "content": "export const IS_DEBUG =\r\n    G_IS_DEV &&\r\n    typeof window !== \"undefined\" &&\r\n    window.location.port === \"3005\" &&\r\n    (window.location.host.indexOf(\"localhost:\") >= 0 || window.location.host.indexOf(\"192.168.0.\") >= 0) &&\r\n    window.location.search.indexOf(\"nodebug\") < 0;\r\n\r\nexport const SUPPORT_TOUCH = false;\r\n\r\nexport const IS_MAC = navigator.platform.toLowerCase().indexOf(\"mac\") >= 0;\r\n\r\nconst smoothCanvas = true;\r\n\r\nexport const THIRDPARTY_URLS = {\r\n    discord: \"https://discord.gg/HN7EVzV\",\r\n    github: \"https://github.com/tobspr/shapez.io\",\r\n    reddit: \"https://www.reddit.com/r/shapezio\",\r\n    shapeViewer: \"https://viewer.shapez.io\",\r\n\r\n    standaloneStorePage: \"https://store.steampowered.com/app/1318690/shapezio/\",\r\n\r\n    levelTutorialVideos: {\r\n        21: \"https://www.youtube.com/watch?v=0nUfRLMCcgo&\",\r\n        25: \"https://www.youtube.com/watch?v=7OCV1g40Iew&\",\r\n        26: \"https://www.youtube.com/watch?v=gfm6dS1dCoY\",\r\n    },\r\n};\r\n\r\n// export const A_B_TESTING_LINK_TYPE = Math.random() > 0.95 ? \"steam_1_pr\" : \"steam_2_npr\";\r\nexport const A_B_TESTING_LINK_TYPE = \"steam_2_npr\";\r\n\r\nexport const globalConfig = {\r\n    // Size of a single tile in Pixels.\r\n    // NOTICE: Update webpack.production.config too!\r\n    tileSize: 32,\r\n    halfTileSize: 16,\r\n\r\n    // Which dpi the assets have\r\n    assetsDpi: 192 / 32,\r\n    assetsSharpness: 1.5,\r\n    shapesSharpness: 1.4,\r\n\r\n    // Production analytics\r\n    statisticsGraphDpi: 2.5,\r\n    statisticsGraphSlices: 100,\r\n    analyticsSliceDurationSeconds: G_IS_DEV ? 1 : 10,\r\n\r\n    minimumTickRate: 25,\r\n    maximumTickRate: 500,\r\n\r\n    // Map\r\n    mapChunkSize: 16,\r\n    mapChunkOverviewMinZoom: 0.9,\r\n    mapChunkWorldSize: null, // COMPUTED\r\n\r\n    // Belt speeds\r\n    // NOTICE: Update webpack.production.config too!\r\n    beltSpeedItemsPerSecond: 2,\r\n    minerSpeedItemsPerSecond: 0, // COMPUTED\r\n\r\n    defaultItemDiameter: 20,\r\n\r\n    itemSpacingOnBelts: 0.63,\r\n\r\n    wiresSpeedItemsPerSecond: 6,\r\n\r\n    undergroundBeltMaxTilesByTier: [5, 9],\r\n\r\n    readerAnalyzeIntervalSeconds: 10,\r\n\r\n    buildingSpeeds: {\r\n        cutter: 1 / 4,\r\n        cutterQuad: 1 / 4,\r\n        rotater: 1 / 1,\r\n        rotaterCCW: 1 / 1,\r\n        rotater180: 1 / 1,\r\n        painter: 1 / 6,\r\n        painterDouble: 1 / 8,\r\n        painterQuad: 1 / 2,\r\n        mixer: 1 / 5,\r\n        stacker: 1 / 8,\r\n    },\r\n\r\n    // Zooming\r\n    initialZoom: 1.9,\r\n    minZoomLevel: 0.1,\r\n    maxZoomLevel: 3,\r\n\r\n    // Global game speed\r\n    gameSpeed: 1,\r\n\r\n    warmupTimeSecondsFast: 0.5,\r\n    warmupTimeSecondsRegular: 3,\r\n\r\n    smoothing: {\r\n        smoothMainCanvas: smoothCanvas && true,\r\n        quality: \"low\", // Low is CRUCIAL for mobile performance!\r\n    },\r\n\r\n    rendering: {},\r\n    debug: require(\"./config.local\").default,\r\n\r\n    // Secret vars\r\n    info: {\r\n        // Binary file salt\r\n        file: \"Ec'])@^+*9zMevK3uMV4432x9%iK'=\",\r\n\r\n        // Savegame salt\r\n        sgSalt: \"}95Q3%8/.837Lqym_BJx%q7)pAHJbF\",\r\n\r\n        // Analytics key\r\n        analyticsApiKey: \"baf6a50f0cc7dfdec5a0e21c88a1c69a4b34bc4a\",\r\n    },\r\n};\r\n\r\nexport const IS_MOBILE = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\r\n// Automatic calculations\r\nglobalConfig.minerSpeedItemsPerSecond = globalConfig.beltSpeedItemsPerSecond / 5;\r\n\r\nglobalConfig.mapChunkWorldSize = globalConfig.mapChunkSize * globalConfig.tileSize;\r\n\r\n// Dynamic calculations\r\nif (globalConfig.debug.disableMapOverview) {\r\n    globalConfig.mapChunkOverviewMinZoom = 0;\r\n}\r\n\r\n// Stuff for making the trailer\r\nif (G_IS_DEV && globalConfig.debug.renderForTrailer) {\r\n    globalConfig.debug.framePausesBetweenTicks = 32;\r\n    // globalConfig.mapChunkOverviewMinZoom = 0.0;\r\n    // globalConfig.debug.instantBelts = true;\r\n    // globalConfig.debug.instantProcessors = true;\r\n    // globalConfig.debug.instantMiners = true;\r\n    globalConfig.debug.disableSavegameWrite = true;\r\n    // globalConfig.beltSpeedItemsPerSecond *= 2;\r\n}\r\n\r\nif (globalConfig.debug.fastGameEnter) {\r\n    globalConfig.debug.noArtificialDelays = true;\r\n}\r\n\r\nif (G_IS_DEV && globalConfig.debug.noArtificialDelays) {\r\n    globalConfig.warmupTimeSecondsFast = 0;\r\n    globalConfig.warmupTimeSecondsRegular = 0;\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 204,
    "kind": "variable",
    "name": "IS_DEBUG",
    "memberof": "js/core/config.js",
    "static": true,
    "longname": "js/core/config.js~IS_DEBUG",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/config.js",
    "importStyle": "{IS_DEBUG}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "variable",
    "name": "SUPPORT_TOUCH",
    "memberof": "js/core/config.js",
    "static": true,
    "longname": "js/core/config.js~SUPPORT_TOUCH",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/config.js",
    "importStyle": "{SUPPORT_TOUCH}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "variable",
    "name": "IS_MAC",
    "memberof": "js/core/config.js",
    "static": true,
    "longname": "js/core/config.js~IS_MAC",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/config.js",
    "importStyle": "{IS_MAC}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "variable",
    "name": "smoothCanvas",
    "memberof": "js/core/config.js",
    "static": true,
    "longname": "js/core/config.js~smoothCanvas",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 208,
    "kind": "variable",
    "name": "THIRDPARTY_URLS",
    "memberof": "js/core/config.js",
    "static": true,
    "longname": "js/core/config.js~THIRDPARTY_URLS",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/config.js",
    "importStyle": "{THIRDPARTY_URLS}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"discord\": string, \"github\": string, \"reddit\": string, \"shapeViewer\": string, \"standaloneStorePage\": string, \"levelTutorialVideos\": *}"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "variable",
    "name": "A_B_TESTING_LINK_TYPE",
    "memberof": "js/core/config.js",
    "static": true,
    "longname": "js/core/config.js~A_B_TESTING_LINK_TYPE",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/config.js",
    "importStyle": "{A_B_TESTING_LINK_TYPE}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "variable",
    "name": "globalConfig",
    "memberof": "js/core/config.js",
    "static": true,
    "longname": "js/core/config.js~globalConfig",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/config.js",
    "importStyle": "{globalConfig}",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "{\"tileSize\": number, \"halfTileSize\": number, \"assetsDpi\": *, \"assetsSharpness\": number, \"shapesSharpness\": number, \"statisticsGraphDpi\": number, \"statisticsGraphSlices\": number, \"analyticsSliceDurationSeconds\": *, \"minimumTickRate\": number, \"maximumTickRate\": number, \"mapChunkSize\": number, \"mapChunkOverviewMinZoom\": number, \"mapChunkWorldSize\": *, \"beltSpeedItemsPerSecond\": number, \"minerSpeedItemsPerSecond\": *, \"defaultItemDiameter\": number, \"itemSpacingOnBelts\": number, \"wiresSpeedItemsPerSecond\": number, \"undergroundBeltMaxTilesByTier\": *, \"readerAnalyzeIntervalSeconds\": number, \"buildingSpeeds\": *, \"initialZoom\": number, \"minZoomLevel\": number, \"maxZoomLevel\": number, \"gameSpeed\": number, \"warmupTimeSecondsFast\": number, \"warmupTimeSecondsRegular\": number, \"smoothing\": *, \"rendering\": *, \"debug\": *, \"info\": *}"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "variable",
    "name": "IS_MOBILE",
    "memberof": "js/core/config.js",
    "static": true,
    "longname": "js/core/config.js~IS_MOBILE",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/config.js",
    "importStyle": "{IS_MOBILE}",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "file",
    "name": "js/core/dpi_manager.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nimport { round1Digit, round2Digits } from \"./utils\";\r\n\r\n/**\r\n * Returns the current dpi\r\n * @returns {number}\r\n */\r\nexport function getDeviceDPI() {\r\n    return window.devicePixelRatio || 1;\r\n}\r\n\r\n/**\r\n *\r\n * @param {number} dpi\r\n * @returns {number} Smoothed dpi\r\n */\r\nexport function smoothenDpi(dpi) {\r\n    if (dpi < 0.05) {\r\n        return 0.05;\r\n    } else if (dpi < 0.2) {\r\n        return round2Digits(Math.round(dpi / 0.04) * 0.04);\r\n    } else if (dpi < 1) {\r\n        return round1Digit(Math.round(dpi / 0.1) * 0.1);\r\n    } else if (dpi < 4) {\r\n        return round1Digit(Math.round(dpi / 0.5) * 0.5);\r\n    } else {\r\n        return 4;\r\n    }\r\n}\r\n\r\n// Initial dpi\r\n// setDPIMultiplicator(1);\r\n\r\n/**\r\n * Prepares a context for hihg dpi rendering\r\n * @param {CanvasRenderingContext2D} context\r\n */\r\nexport function prepareHighDPIContext(context, smooth = true) {\r\n    const dpi = getDeviceDPI();\r\n    context.scale(dpi, dpi);\r\n\r\n    if (smooth) {\r\n        context.imageSmoothingEnabled = true;\r\n        context.webkitImageSmoothingEnabled = true;\r\n\r\n        // @ts-ignore\r\n        context.imageSmoothingQuality = globalConfig.smoothing.quality;\r\n    } else {\r\n        context.imageSmoothingEnabled = false;\r\n        context.webkitImageSmoothingEnabled = false;\r\n    }\r\n}\r\n\r\n/**\r\n * Resizes a high dpi canvas\r\n * @param {HTMLCanvasElement} canvas\r\n * @param {number} w\r\n * @param {number} h\r\n */\r\nexport function resizeHighDPICanvas(canvas, w, h, smooth = true) {\r\n    const dpi = getDeviceDPI();\r\n\r\n    const wNumber = Math.floor(w);\r\n    const hNumber = Math.floor(h);\r\n\r\n    const targetW = Math.floor(wNumber * dpi);\r\n    const targetH = Math.floor(hNumber * dpi);\r\n\r\n    if (targetW !== canvas.width || targetH !== canvas.height) {\r\n        // console.log(\"Resize Canvas from\", canvas.width, canvas.height, \"to\", targetW, targetH)\r\n        canvas.width = targetW;\r\n        canvas.height = targetH;\r\n        canvas.style.width = wNumber + \"px\";\r\n        canvas.style.height = hNumber + \"px\";\r\n        prepareHighDPIContext(canvas.getContext(\"2d\"), smooth);\r\n    }\r\n}\r\n\r\n/**\r\n * Resizes a canvas\r\n * @param {HTMLCanvasElement} canvas\r\n * @param {number} w\r\n * @param {number} h\r\n */\r\nexport function resizeCanvas(canvas, w, h, setStyle = true) {\r\n    const actualW = Math.ceil(w);\r\n    const actualH = Math.ceil(h);\r\n    if (actualW !== canvas.width || actualH !== canvas.height) {\r\n        canvas.width = actualW;\r\n        canvas.height = actualH;\r\n        if (setStyle) {\r\n            canvas.style.width = actualW + \"px\";\r\n            canvas.style.height = actualH + \"px\";\r\n        }\r\n        // console.log(\"Resizing canvas to\", actualW, \"x\", actualH);\r\n    }\r\n}\r\n\r\n/**\r\n * Resizes a canvas and makes sure its cleared\r\n * @param {HTMLCanvasElement} canvas\r\n * @param {CanvasRenderingContext2D} context\r\n * @param {number} w\r\n * @param {number} h\r\n */\r\nexport function resizeCanvasAndClear(canvas, context, w, h) {\r\n    const actualW = Math.ceil(w);\r\n    const actualH = Math.ceil(h);\r\n    if (actualW !== canvas.width || actualH !== canvas.height) {\r\n        canvas.width = actualW;\r\n        canvas.height = actualH;\r\n        canvas.style.width = actualW + \"px\";\r\n        canvas.style.height = actualH + \"px\";\r\n        // console.log(\"Resizing canvas to\", actualW, \"x\", actualH);\r\n    } else {\r\n        context.clearRect(0, 0, actualW, actualH);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/dpi_manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 213,
    "kind": "function",
    "name": "getDeviceDPI",
    "memberof": "js/core/dpi_manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/dpi_manager.js~getDeviceDPI",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/dpi_manager.js",
    "importStyle": "{getDeviceDPI}",
    "description": "Returns the current dpi",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 214,
    "kind": "function",
    "name": "smoothenDpi",
    "memberof": "js/core/dpi_manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/dpi_manager.js~smoothenDpi",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/dpi_manager.js",
    "importStyle": "{smoothenDpi}",
    "description": "",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Smoothed dpi"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dpi",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Smoothed dpi"
    }
  },
  {
    "__docId__": 215,
    "kind": "function",
    "name": "prepareHighDPIContext",
    "memberof": "js/core/dpi_manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/dpi_manager.js~prepareHighDPIContext",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/dpi_manager.js",
    "importStyle": "{prepareHighDPIContext}",
    "description": "Prepares a context for hihg dpi rendering",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 216,
    "kind": "function",
    "name": "resizeHighDPICanvas",
    "memberof": "js/core/dpi_manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/dpi_manager.js~resizeHighDPICanvas",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/dpi_manager.js",
    "importStyle": "{resizeHighDPICanvas}",
    "description": "Resizes a high dpi canvas",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "canvas",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 217,
    "kind": "function",
    "name": "resizeCanvas",
    "memberof": "js/core/dpi_manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/dpi_manager.js~resizeCanvas",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/dpi_manager.js",
    "importStyle": "{resizeCanvas}",
    "description": "Resizes a canvas",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "canvas",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 218,
    "kind": "function",
    "name": "resizeCanvasAndClear",
    "memberof": "js/core/dpi_manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/dpi_manager.js~resizeCanvasAndClear",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/dpi_manager.js",
    "importStyle": "{resizeCanvasAndClear}",
    "description": "Resizes a canvas and makes sure its cleared",
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "canvas",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 219,
    "kind": "file",
    "name": "js/core/draw_parameters.js",
    "content": "import { globalConfig } from \"./config\";\r\n\r\nexport class DrawParameters {\r\n    constructor({ context, visibleRect, desiredAtlasScale, zoomLevel, root }) {\r\n        /** @type {CanvasRenderingContext2D} */\r\n        this.context = context;\r\n\r\n        /** @type {import(\"./rectangle\").Rectangle} */\r\n        this.visibleRect = visibleRect;\r\n\r\n        /** @type {string} */\r\n        this.desiredAtlasScale = desiredAtlasScale;\r\n\r\n        /** @type {number} */\r\n        this.zoomLevel = zoomLevel;\r\n\r\n        /** @type {import(\"../game/root\").GameRoot} */\r\n        this.root = root;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/draw_parameters.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 220,
    "kind": "class",
    "name": "DrawParameters",
    "memberof": "js/core/draw_parameters.js",
    "static": true,
    "longname": "js/core/draw_parameters.js~DrawParameters",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/draw_parameters.js",
    "importStyle": "{DrawParameters}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 221,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/draw_parameters.js~DrawParameters",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/draw_parameters.js~DrawParameters#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 222,
    "kind": "member",
    "name": "context",
    "memberof": "js/core/draw_parameters.js~DrawParameters",
    "static": false,
    "longname": "js/core/draw_parameters.js~DrawParameters#context",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "type": {
      "nullable": null,
      "types": [
        "CanvasRenderingContext2D"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 223,
    "kind": "member",
    "name": "visibleRect",
    "memberof": "js/core/draw_parameters.js~DrawParameters",
    "static": false,
    "longname": "js/core/draw_parameters.js~DrawParameters#visibleRect",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "import(\"./rectangle\").Rectangle"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "desiredAtlasScale",
    "memberof": "js/core/draw_parameters.js~DrawParameters",
    "static": false,
    "longname": "js/core/draw_parameters.js~DrawParameters#desiredAtlasScale",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "zoomLevel",
    "memberof": "js/core/draw_parameters.js~DrawParameters",
    "static": false,
    "longname": "js/core/draw_parameters.js~DrawParameters#zoomLevel",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 226,
    "kind": "member",
    "name": "root",
    "memberof": "js/core/draw_parameters.js~DrawParameters",
    "static": false,
    "longname": "js/core/draw_parameters.js~DrawParameters#root",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "import(\"../game/root\").GameRoot"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 227,
    "kind": "file",
    "name": "js/core/draw_utils.js",
    "content": "import { globalConfig } from \"./config\";\r\nimport { createLogger } from \"./logging\";\r\nimport { Rectangle } from \"./rectangle\";\r\n\r\nconst logger = createLogger(\"draw_utils\");\r\n\r\nexport function initDrawUtils() {\r\n    CanvasRenderingContext2D.prototype.beginRoundedRect = function(x, y, w, h, r) {\r\n        this.beginPath();\r\n\r\n        if (r < 0.05) {\r\n            this.rect(x, y, w, h);\r\n            return;\r\n        }\r\n\r\n        if (w < 2 * r) {\r\n            r = w / 2;\r\n        }\r\n\r\n        if (h < 2 * r) {\r\n            r = h / 2;\r\n        }\r\n\r\n        this.moveTo(x + r, y);\r\n        this.arcTo(x + w, y, x + w, y + h, r);\r\n        this.arcTo(x + w, y + h, x, y + h, r);\r\n        this.arcTo(x, y + h, x, y, r);\r\n        this.arcTo(x, y, x + w, y, r);\r\n    };\r\n\r\n    CanvasRenderingContext2D.prototype.beginCircle = function(x, y, r) {\r\n        this.beginPath();\r\n\r\n        if (r < 0.05) {\r\n            this.rect(x, y, 1, 1);\r\n            return;\r\n        }\r\n\r\n        this.arc(x, y, r, 0, 2.0 * Math.PI);\r\n    };\r\n}\r\n\r\n/**\r\n *\r\n * @param {object} param0\r\n * @param {import(\"./draw_parameters\").DrawParameters} param0.parameters\r\n * @param {import(\"./sprites\").AtlasSprite} param0.sprite\r\n * @param {number} param0.x\r\n * @param {number} param0.y\r\n * @param {number} param0.angle\r\n * @param {number} param0.size\r\n * @param {number=} param0.offsetX\r\n * @param {number=} param0.offsetY\r\n */\r\nexport function drawRotatedSprite({ parameters, sprite, x, y, angle, size, offsetX = 0, offsetY = 0 }) {\r\n    if (angle === 0) {\r\n        sprite.drawCachedCentered(parameters, x + offsetX, y + offsetY, size);\r\n        return;\r\n    }\r\n\r\n    parameters.context.translate(x, y);\r\n    parameters.context.rotate(angle);\r\n    sprite.drawCachedCentered(parameters, offsetX, offsetY, size, false);\r\n    parameters.context.rotate(-angle);\r\n    parameters.context.translate(-x, -y);\r\n}\r\n\r\nlet warningsShown = 0;\r\n\r\n/**\r\n * Draws a sprite with clipping\r\n * @param {object} param0\r\n * @param {import(\"./draw_parameters\").DrawParameters} param0.parameters\r\n * @param {HTMLCanvasElement} param0.sprite\r\n * @param {number} param0.x\r\n * @param {number} param0.y\r\n * @param {number} param0.w\r\n * @param {number} param0.h\r\n * @param {number} param0.originalW\r\n * @param {number} param0.originalH\r\n */\r\nexport function drawSpriteClipped({ parameters, sprite, x, y, w, h, originalW, originalH }) {\r\n    const rect = new Rectangle(x, y, w, h);\r\n    const intersection = rect.getIntersection(parameters.visibleRect);\r\n    if (!intersection) {\r\n        // Clipped\r\n        if (++warningsShown % 200 === 1) {\r\n            logger.warn(\r\n                \"Sprite drawn clipped but it's not on screen - perform culling before (\",\r\n                warningsShown,\r\n                \"warnings)\"\r\n            );\r\n        }\r\n        if (G_IS_DEV && globalConfig.debug.testClipping) {\r\n            parameters.context.fillStyle = \"yellow\";\r\n            parameters.context.fillRect(x, y, w, h);\r\n        }\r\n        return;\r\n    }\r\n\r\n    parameters.context.drawImage(\r\n        sprite,\r\n\r\n        // src pos and size\r\n        ((intersection.x - x) / w) * originalW,\r\n        ((intersection.y - y) / h) * originalH,\r\n        (originalW * intersection.w) / w,\r\n        (originalH * intersection.h) / h,\r\n\r\n        // dest pos and size\r\n        intersection.x,\r\n        intersection.y,\r\n        intersection.w,\r\n        intersection.h\r\n    );\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/draw_utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 228,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/draw_utils.js",
    "static": true,
    "longname": "js/core/draw_utils.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/draw_utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "initDrawUtils",
    "memberof": "js/core/draw_utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/draw_utils.js~initDrawUtils",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/draw_utils.js",
    "importStyle": "{initDrawUtils}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 230,
    "kind": "function",
    "name": "drawRotatedSprite",
    "memberof": "js/core/draw_utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/draw_utils.js~drawRotatedSprite",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/draw_utils.js",
    "importStyle": "{drawRotatedSprite}",
    "description": "",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "import(\"./draw_parameters\").DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "import(\"./sprites\").AtlasSprite"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.sprite",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.angle",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.size",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.offsetX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.offsetY",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 231,
    "kind": "variable",
    "name": "warningsShown",
    "memberof": "js/core/draw_utils.js",
    "static": true,
    "longname": "js/core/draw_utils.js~warningsShown",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/draw_utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 232,
    "kind": "function",
    "name": "drawSpriteClipped",
    "memberof": "js/core/draw_utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/draw_utils.js~drawSpriteClipped",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/draw_utils.js",
    "importStyle": "{drawSpriteClipped}",
    "description": "Draws a sprite with clipping",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "import(\"./draw_parameters\").DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.sprite",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.h",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.originalW",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.originalH",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 233,
    "kind": "file",
    "name": "js/core/error_handler.js",
    "content": "import { logSection } from \"./logging\";\r\nimport { stringifyObjectContainingErrors } from \"./logging\";\r\nimport { removeAllChildren } from \"./utils\";\r\n\r\nexport let APPLICATION_ERROR_OCCURED = false;\r\n\r\n/**\r\n *\r\n * @param {Event|string} message\r\n * @param {string} source\r\n * @param {number} lineno\r\n * @param {number} colno\r\n * @param {Error} source\r\n */\r\nfunction catchErrors(message, source, lineno, colno, error) {\r\n    let fullPayload = JSON.parse(\r\n        stringifyObjectContainingErrors({\r\n            message,\r\n            source,\r\n            lineno,\r\n            colno,\r\n            error,\r\n        })\r\n    );\r\n\r\n    if ((\"\" + message).indexOf(\"Script error.\") >= 0) {\r\n        console.warn(\"Thirdparty script error:\", message);\r\n        return;\r\n    }\r\n\r\n    if ((\"\" + message).indexOf(\"NS_ERROR_FAILURE\") >= 0) {\r\n        console.warn(\"Firefox NS_ERROR_FAILURE error:\", message);\r\n        return;\r\n    }\r\n\r\n    if ((\"\" + message).indexOf(\"Cannot read property 'postMessage' of null\") >= 0) {\r\n        console.warn(\"Safari can not read post message error:\", message);\r\n        return;\r\n    }\r\n\r\n    if (!G_IS_DEV && G_IS_BROWSER && (\"\" + source).indexOf(\"shapez.io\") < 0) {\r\n        console.warn(\"Thirdparty error:\", message);\r\n        return;\r\n    }\r\n\r\n    console.log(\"\\n\\n\\n⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️\\n\\n\\n\");\r\n    console.log(\"          APPLICATION CRASHED             \");\r\n    console.log(\"\\n\\n⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️\\n\\n\\n\");\r\n\r\n    logSection(\"APPLICATION CRASH\", \"#e53935\");\r\n    console.error(\"Error:\", message, \"->\", error);\r\n    console.log(\"Payload:\", fullPayload);\r\n\r\n    if (window.Sentry && !window.anyModLoaded) {\r\n        window.Sentry.withScope(scope => {\r\n            window.Sentry.setTag(\"message\", message);\r\n            window.Sentry.setTag(\"source\", source);\r\n\r\n            window.Sentry.setExtra(\"message\", message);\r\n            window.Sentry.setExtra(\"source\", source);\r\n            window.Sentry.setExtra(\"lineno\", lineno);\r\n            window.Sentry.setExtra(\"colno\", colno);\r\n            window.Sentry.setExtra(\"error\", error);\r\n            window.Sentry.setExtra(\"fullPayload\", fullPayload);\r\n\r\n            try {\r\n                const userName = window.localStorage.getItem(\"tracking_context\") || null;\r\n                window.Sentry.setTag(\"username\", userName);\r\n            } catch (ex) {\r\n                // ignore\r\n            }\r\n\r\n            window.Sentry.captureException(error || source);\r\n        });\r\n    }\r\n\r\n    if (APPLICATION_ERROR_OCCURED) {\r\n        console.warn(\"ERROR: Only showing and submitting first error\");\r\n        return;\r\n    }\r\n\r\n    APPLICATION_ERROR_OCCURED = true;\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"applicationError\";\r\n\r\n    const title = document.createElement(\"h1\");\r\n    title.innerText = \"Whoops!\";\r\n    element.appendChild(title);\r\n\r\n    const desc = document.createElement(\"div\");\r\n    desc.classList.add(\"desc\");\r\n    desc.innerHTML = `\r\n        It seems the application crashed - I am sorry for that!<br /><br />\r\n        An anonymized crash report has been sent, and I will have a look as soon as possible.<br /><br />\r\n        If you have additional information how I can reproduce this error, please E-Mail me:&nbsp;\r\n        <a href=\"mailto:bugs@shapez.io?title=Application+Crash\">bugs@shapez.io</a>`;\r\n    element.appendChild(desc);\r\n\r\n    const details = document.createElement(\"pre\");\r\n    details.classList.add(\"details\");\r\n    details.innerText = (error && error.stack) || message;\r\n    element.appendChild(details);\r\n\r\n    const inject = function () {\r\n        if (!G_IS_DEV) {\r\n            removeAllChildren(document.body);\r\n        }\r\n        if (document.body.parentElement) {\r\n            document.body.parentElement.appendChild(element);\r\n        } else {\r\n            document.body.appendChild(element);\r\n        }\r\n    };\r\n\r\n    if (document.body) {\r\n        inject();\r\n    } else {\r\n        setTimeout(() => {\r\n            inject();\r\n        }, 200);\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nwindow.onerror = catchErrors;\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/error_handler.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 234,
    "kind": "variable",
    "name": "APPLICATION_ERROR_OCCURED",
    "memberof": "js/core/error_handler.js",
    "static": true,
    "longname": "js/core/error_handler.js~APPLICATION_ERROR_OCCURED",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/error_handler.js",
    "importStyle": "{APPLICATION_ERROR_OCCURED}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "catchErrors",
    "memberof": "js/core/error_handler.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/error_handler.js~catchErrors",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/error_handler.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lineno",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "colno",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 236,
    "kind": "file",
    "name": "js/core/explained_result.js",
    "content": "export class ExplainedResult {\r\n    constructor(result = true, reason = null, additionalProps = {}) {\r\n        /** @type {boolean} */\r\n        this.result = result;\r\n\r\n        /** @type {string} */\r\n        this.reason = reason;\r\n\r\n        // Copy additional props\r\n        for (const key in additionalProps) {\r\n            this[key] = additionalProps[key];\r\n        }\r\n    }\r\n\r\n    isGood() {\r\n        return !!this.result;\r\n    }\r\n\r\n    isBad() {\r\n        return !this.result;\r\n    }\r\n\r\n    static good() {\r\n        return new ExplainedResult(true);\r\n    }\r\n\r\n    static bad(reason, additionalProps) {\r\n        return new ExplainedResult(false, reason, additionalProps);\r\n    }\r\n\r\n    static requireAll(...args) {\r\n        for (let i = 0; i < args.length; ++i) {\r\n            const subResult = args[i].call();\r\n            if (!subResult.isGood()) {\r\n                return subResult;\r\n            }\r\n        }\r\n        return this.good();\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/explained_result.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 237,
    "kind": "class",
    "name": "ExplainedResult",
    "memberof": "js/core/explained_result.js",
    "static": true,
    "longname": "js/core/explained_result.js~ExplainedResult",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/explained_result.js",
    "importStyle": "{ExplainedResult}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 238,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/explained_result.js~ExplainedResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/explained_result.js~ExplainedResult#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 239,
    "kind": "member",
    "name": "result",
    "memberof": "js/core/explained_result.js~ExplainedResult",
    "static": false,
    "longname": "js/core/explained_result.js~ExplainedResult#result",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 240,
    "kind": "member",
    "name": "reason",
    "memberof": "js/core/explained_result.js~ExplainedResult",
    "static": false,
    "longname": "js/core/explained_result.js~ExplainedResult#reason",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 241,
    "kind": "member",
    "name": "[key]",
    "memberof": "js/core/explained_result.js~ExplainedResult",
    "static": false,
    "longname": "js/core/explained_result.js~ExplainedResult#[key]",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "method",
    "name": "isGood",
    "memberof": "js/core/explained_result.js~ExplainedResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/explained_result.js~ExplainedResult#isGood",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "isBad",
    "memberof": "js/core/explained_result.js~ExplainedResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/explained_result.js~ExplainedResult#isBad",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "good",
    "memberof": "js/core/explained_result.js~ExplainedResult",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/explained_result.js~ExplainedResult.good",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "bad",
    "memberof": "js/core/explained_result.js~ExplainedResult",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/explained_result.js~ExplainedResult.bad",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "reason",
        "types": [
          "*"
        ]
      },
      {
        "name": "additionalProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "requireAll",
    "memberof": "js/core/explained_result.js~ExplainedResult",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/explained_result.js~ExplainedResult.requireAll",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "file",
    "name": "js/core/factory.js",
    "content": "import { createLogger } from \"./logging\";\r\n\r\nconst logger = createLogger(\"factory\");\r\n\r\n// simple factory pattern\r\nexport class Factory {\r\n    constructor(id) {\r\n        this.id = id;\r\n\r\n        // Store array as well as dictionary, to speed up lookups\r\n        this.entries = [];\r\n        this.entryIds = [];\r\n        this.idToEntry = {};\r\n    }\r\n\r\n    getId() {\r\n        return this.id;\r\n    }\r\n\r\n    register(entry) {\r\n        // Extract id\r\n        const id = entry.getId();\r\n        assert(id, \"Factory: Invalid id for class: \" + entry);\r\n\r\n        // Check duplicates\r\n        assert(!this.idToEntry[id], \"Duplicate factory entry for \" + id);\r\n\r\n        // Insert\r\n        this.entries.push(entry);\r\n        this.entryIds.push(id);\r\n        this.idToEntry[id] = entry;\r\n    }\r\n\r\n    /**\r\n     * Checks if a given id is registered\r\n     * @param {string} id\r\n     * @returns {boolean}\r\n     */\r\n    hasId(id) {\r\n        return !!this.idToEntry[id];\r\n    }\r\n\r\n    /**\r\n     * Finds an instance by a given id\r\n     * @param {string} id\r\n     * @returns {object}\r\n     */\r\n    findById(id) {\r\n        const entry = this.idToEntry[id];\r\n        if (!entry) {\r\n            logger.error(\"Object with id\", id, \"is not registered on factory\", this.id, \"!\");\r\n            assert(false, \"Factory: Object with id '\" + id + \"' is not registered!\");\r\n            return null;\r\n        }\r\n        return entry;\r\n    }\r\n\r\n    /**\r\n     * Returns all entries\r\n     * @returns {Array<object>}\r\n     */\r\n    getEntries() {\r\n        return this.entries;\r\n    }\r\n\r\n    /**\r\n     * Returns all registered ids\r\n     * @returns {Array<string>}\r\n     */\r\n    getAllIds() {\r\n        return this.entryIds;\r\n    }\r\n\r\n    /**\r\n     * Returns amount of stored entries\r\n     * @returns {number}\r\n     */\r\n    getNumEntries() {\r\n        return this.entries.length;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/factory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/factory.js",
    "static": true,
    "longname": "js/core/factory.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/factory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 249,
    "kind": "class",
    "name": "Factory",
    "memberof": "js/core/factory.js",
    "static": true,
    "longname": "js/core/factory.js~Factory",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/factory.js",
    "importStyle": "{Factory}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 250,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/factory.js~Factory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/factory.js~Factory#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 251,
    "kind": "member",
    "name": "id",
    "memberof": "js/core/factory.js~Factory",
    "static": false,
    "longname": "js/core/factory.js~Factory#id",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "member",
    "name": "entries",
    "memberof": "js/core/factory.js~Factory",
    "static": false,
    "longname": "js/core/factory.js~Factory#entries",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "member",
    "name": "entryIds",
    "memberof": "js/core/factory.js~Factory",
    "static": false,
    "longname": "js/core/factory.js~Factory#entryIds",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "member",
    "name": "idToEntry",
    "memberof": "js/core/factory.js~Factory",
    "static": false,
    "longname": "js/core/factory.js~Factory#idToEntry",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "getId",
    "memberof": "js/core/factory.js~Factory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/factory.js~Factory#getId",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "method",
    "name": "register",
    "memberof": "js/core/factory.js~Factory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/factory.js~Factory#register",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "entry",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "hasId",
    "memberof": "js/core/factory.js~Factory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/factory.js~Factory#hasId",
    "access": "public",
    "description": "Checks if a given id is registered",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "findById",
    "memberof": "js/core/factory.js~Factory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/factory.js~Factory#findById",
    "access": "public",
    "description": "Finds an instance by a given id",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "getEntries",
    "memberof": "js/core/factory.js~Factory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/factory.js~Factory#getEntries",
    "access": "public",
    "description": "Returns all entries",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<object>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<object>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 260,
    "kind": "method",
    "name": "getAllIds",
    "memberof": "js/core/factory.js~Factory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/factory.js~Factory#getAllIds",
    "access": "public",
    "description": "Returns all registered ids",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<string>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 261,
    "kind": "method",
    "name": "getNumEntries",
    "memberof": "js/core/factory.js~Factory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/factory.js~Factory#getNumEntries",
    "access": "public",
    "description": "Returns amount of stored entries",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 262,
    "kind": "file",
    "name": "js/core/game_state.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\nimport { StateManager } from \"./state_manager\";\r\n/* typehints:end */\r\n\r\nimport { globalConfig } from \"./config\";\r\nimport { ClickDetector } from \"./click_detector\";\r\nimport { logSection, createLogger } from \"./logging\";\r\nimport { InputReceiver } from \"./input_receiver\";\r\nimport { waitNextFrame } from \"./utils\";\r\nimport { RequestChannel } from \"./request_channel\";\r\nimport { MUSIC } from \"../platform/sound\";\r\n\r\nconst logger = createLogger(\"game_state\");\r\n\r\n/**\r\n * Basic state of the game state machine. This is the base of the whole game\r\n */\r\nexport class GameState {\r\n    /**\r\n     * Constructs a new state with the given id\r\n     * @param {string} key The id of the state. We use ids to refer to states because otherwise we get\r\n     *                     circular references\r\n     */\r\n    constructor(key) {\r\n        this.key = key;\r\n\r\n        /** @type {StateManager} */\r\n        this.stateManager = null;\r\n\r\n        /** @type {Application} */\r\n        this.app = null;\r\n\r\n        // Store if we are currently fading out\r\n        this.fadingOut = false;\r\n\r\n        /** @type {Array<ClickDetector>} */\r\n        this.clickDetectors = [];\r\n\r\n        // Every state captures keyboard events by default\r\n        this.inputReciever = new InputReceiver(\"state-\" + key);\r\n        this.inputReciever.backButton.add(this.onBackButton, this);\r\n\r\n        // A channel we can use to perform async ops\r\n        this.asyncChannel = new RequestChannel();\r\n    }\r\n\r\n    //// GETTERS / HELPER METHODS ////\r\n\r\n    /**\r\n     * Returns the states key\r\n     * @returns {string}\r\n     */\r\n    getKey() {\r\n        return this.key;\r\n    }\r\n\r\n    /**\r\n     * Returns the html element of the state\r\n     * @returns {HTMLElement}\r\n     */\r\n    getDivElement() {\r\n        return document.getElementById(\"state_\" + this.key);\r\n    }\r\n\r\n    /**\r\n     * Transfers to a new state\r\n     * @param {string} stateKey The id of the new state\r\n     */\r\n    moveToState(stateKey, payload = {}, skipFadeOut = false) {\r\n        if (this.fadingOut) {\r\n            logger.warn(\"Skipping move to '\" + stateKey + \"' since already fading out\");\r\n            return;\r\n        }\r\n\r\n        // Clean up event listeners\r\n        this.internalCleanUpClickDetectors();\r\n\r\n        // Fading\r\n        const fadeTime = this.internalGetFadeInOutTime();\r\n        const doFade = !skipFadeOut && this.getHasFadeOut() && fadeTime !== 0;\r\n        logger.log(\"Moving to\", stateKey, \"(fading=\", doFade, \")\");\r\n        if (doFade) {\r\n            this.htmlElement.classList.remove(\"arrived\");\r\n            this.fadingOut = true;\r\n            setTimeout(() => {\r\n                this.stateManager.moveToState(stateKey, payload);\r\n            }, fadeTime);\r\n        } else {\r\n            this.stateManager.moveToState(stateKey, payload);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} nextStateId\r\n     * @param {object=} nextStatePayload\r\n     */\r\n    watchAdAndMoveToState(nextStateId, nextStatePayload = {}) {\r\n        if (this.app.adProvider.getCanShowVideoAd() && this.app.isRenderable()) {\r\n            this.moveToState(\r\n                \"WatchAdState\",\r\n                {\r\n                    nextStateId,\r\n                    nextStatePayload,\r\n                },\r\n                true\r\n            );\r\n        } else {\r\n            this.moveToState(nextStateId, nextStatePayload);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tracks clicks on a given element and calls the given callback *on this state*.\r\n     * If you want to call another function wrap it inside a lambda.\r\n     * @param {Element} element The element to track clicks on\r\n     * @param {function():void} handler The handler to call\r\n     * @param {import(\"./click_detector\").ClickDetectorConstructorArgs=} args Click detector arguments\r\n     */\r\n    trackClicks(element, handler, args = {}) {\r\n        const detector = new ClickDetector(element, args);\r\n        detector.click.add(handler, this);\r\n        if (G_IS_DEV) {\r\n            // Append a source so we can check where the click detector is from\r\n            // @ts-ignore\r\n            detector._src = \"state-\" + this.key;\r\n        }\r\n        this.clickDetectors.push(detector);\r\n    }\r\n\r\n    /**\r\n     * Cancels all promises on the api as well as our async channel\r\n     */\r\n    cancelAllAsyncOperations() {\r\n        this.asyncChannel.cancelAll();\r\n    }\r\n\r\n    //// CALLBACKS ////\r\n\r\n    /**\r\n     * Callback when entering the state, to be overriddemn\r\n     * @param {any} payload Arbitrary data passed from the state which we are transferring from\r\n     */\r\n    onEnter(payload) {}\r\n\r\n    /**\r\n     * Callback when leaving the state\r\n     */\r\n    onLeave() {}\r\n\r\n    /**\r\n     * Callback before leaving the game state or when the page is unloaded\r\n     */\r\n    onBeforeExit() {}\r\n\r\n    /**\r\n     * Callback when the app got paused (on android, this means in background)\r\n     */\r\n    onAppPause() {}\r\n\r\n    /**\r\n     * Callback when the app got resumed (on android, this means in foreground again)\r\n     */\r\n    onAppResume() {}\r\n\r\n    /**\r\n     * Render callback\r\n     * @param {number} dt Delta time in ms since last render\r\n     */\r\n    onRender(dt) {}\r\n\r\n    /**\r\n     * Background tick callback, called while the game is inactiev\r\n     * @param {number} dt Delta time in ms since last tick\r\n     */\r\n    onBackgroundTick(dt) {}\r\n\r\n    /**\r\n     * Called when the screen resized\r\n     * @param {number} w window/screen width\r\n     * @param {number} h window/screen height\r\n     */\r\n    onResized(w, h) {}\r\n\r\n    /**\r\n     * Internal backbutton handler, called when the hardware back button is pressed or\r\n     * the escape key is pressed\r\n     */\r\n    onBackButton() {}\r\n\r\n    //// INTERFACE ////\r\n\r\n    /**\r\n     * Should return how many mulliseconds to fade in / out the state. Not recommended to override!\r\n     * @returns {number} Time in milliseconds to fade out\r\n     */\r\n    getInOutFadeTime() {\r\n        if (globalConfig.debug.noArtificialDelays) {\r\n            return 0;\r\n        }\r\n        return 200;\r\n    }\r\n\r\n    /**\r\n     * Should return whether to fade in the game state. This will then apply the right css classes\r\n     * for the fadein.\r\n     * @returns {boolean}\r\n     */\r\n    getHasFadeIn() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Should return whether to fade out the game state. This will then apply the right css classes\r\n     * for the fadeout and wait the delay before moving states\r\n     * @returns {boolean}\r\n     */\r\n    getHasFadeOut() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns if this state should get paused if it does not have focus\r\n     * @returns {boolean} true to pause the updating of the game\r\n     */\r\n    getPauseOnFocusLost() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Should return the html code of the state.\r\n     * @returns {string}\r\n     */\r\n    getInnerHTML() {\r\n        abstract;\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Returns if the state has an unload confirmation, this is the\r\n     * \"Are you sure you want to leave the page\" message.\r\n     */\r\n    getHasUnloadConfirmation() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Should return the theme music for this state\r\n     * @returns {string|null}\r\n     */\r\n    getThemeMusic() {\r\n        return MUSIC.menu;\r\n    }\r\n\r\n    ////////////////////\r\n\r\n    //// INTERNAL ////\r\n\r\n    /**\r\n     * Internal callback from the manager. Do not override!\r\n     * @param {StateManager} stateManager\r\n     */\r\n    internalRegisterCallback(stateManager, app) {\r\n        assert(stateManager, \"No state manager\");\r\n        assert(app, \"No app\");\r\n        this.stateManager = stateManager;\r\n        this.app = app;\r\n    }\r\n\r\n    /**\r\n     * Internal callback when entering the state. Do not override!\r\n     * @param {any} payload Arbitrary data passed from the state which we are transferring from\r\n     * @param {boolean} callCallback Whether to call the onEnter callback\r\n     */\r\n    internalEnterCallback(payload, callCallback = true) {\r\n        logSection(this.key, \"#26a69a\");\r\n        this.app.inputMgr.pushReciever(this.inputReciever);\r\n\r\n        this.htmlElement = this.getDivElement();\r\n        this.htmlElement.classList.add(\"active\");\r\n\r\n        // Apply classes in the next frame so the css transition keeps up\r\n        waitNextFrame().then(() => {\r\n            if (this.htmlElement) {\r\n                this.htmlElement.classList.remove(\"fadingOut\");\r\n                this.htmlElement.classList.remove(\"fadingIn\");\r\n            }\r\n        });\r\n\r\n        // Call handler\r\n        if (callCallback) {\r\n            this.onEnter(payload);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal callback when the state is left. Do not override!\r\n     */\r\n    internalLeaveCallback() {\r\n        this.onLeave();\r\n\r\n        this.htmlElement.classList.remove(\"active\");\r\n        this.app.inputMgr.popReciever(this.inputReciever);\r\n        this.internalCleanUpClickDetectors();\r\n        this.asyncChannel.cancelAll();\r\n    }\r\n\r\n    /**\r\n     * Internal callback *before* the state is left. Also is called on page unload\r\n     */\r\n    internalOnBeforeExitCallback() {\r\n        this.onBeforeExit();\r\n    }\r\n\r\n    /**\r\n     * Internal app pause callback\r\n     */\r\n    internalOnAppPauseCallback() {\r\n        this.onAppPause();\r\n    }\r\n\r\n    /**\r\n     * Internal app resume callback\r\n     */\r\n    internalOnAppResumeCallback() {\r\n        this.onAppResume();\r\n    }\r\n\r\n    /**\r\n     * Cleans up all click detectors\r\n     */\r\n    internalCleanUpClickDetectors() {\r\n        if (this.clickDetectors) {\r\n            for (let i = 0; i < this.clickDetectors.length; ++i) {\r\n                this.clickDetectors[i].cleanup();\r\n            }\r\n            this.clickDetectors = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal method to get the HTML of the game state.\r\n     * @returns {string}\r\n     */\r\n    internalGetFullHtml() {\r\n        return this.getInnerHTML();\r\n    }\r\n\r\n    /**\r\n     * Internal method to compute the time to fade in / out\r\n     * @returns {number} time to fade in / out in ms\r\n     */\r\n    internalGetFadeInOutTime() {\r\n        if (G_IS_DEV && globalConfig.debug.fastGameEnter) {\r\n            return 1;\r\n        }\r\n        if (G_IS_DEV && globalConfig.debug.noArtificialDelays) {\r\n            return 1;\r\n        }\r\n        return this.getInOutFadeTime();\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/game_state.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 263,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/game_state.js",
    "static": true,
    "longname": "js/core/game_state.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/game_state.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 264,
    "kind": "class",
    "name": "GameState",
    "memberof": "js/core/game_state.js",
    "static": true,
    "longname": "js/core/game_state.js~GameState",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/game_state.js",
    "importStyle": "{GameState}",
    "description": "Basic state of the game state machine. This is the base of the whole game",
    "lineNumber": 19,
    "interface": false
  },
  {
    "__docId__": 265,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#constructor",
    "access": "public",
    "description": "Constructs a new state with the given id",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The id of the state. We use ids to refer to states because otherwise we get\n                    circular references"
      }
    ]
  },
  {
    "__docId__": 266,
    "kind": "member",
    "name": "key",
    "memberof": "js/core/game_state.js~GameState",
    "static": false,
    "longname": "js/core/game_state.js~GameState#key",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "member",
    "name": "stateManager",
    "memberof": "js/core/game_state.js~GameState",
    "static": false,
    "longname": "js/core/game_state.js~GameState#stateManager",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "StateManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 268,
    "kind": "member",
    "name": "app",
    "memberof": "js/core/game_state.js~GameState",
    "static": false,
    "longname": "js/core/game_state.js~GameState#app",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "Application"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 269,
    "kind": "member",
    "name": "fadingOut",
    "memberof": "js/core/game_state.js~GameState",
    "static": false,
    "longname": "js/core/game_state.js~GameState#fadingOut",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "member",
    "name": "clickDetectors",
    "memberof": "js/core/game_state.js~GameState",
    "static": false,
    "longname": "js/core/game_state.js~GameState#clickDetectors",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "Array<ClickDetector>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 271,
    "kind": "member",
    "name": "inputReciever",
    "memberof": "js/core/game_state.js~GameState",
    "static": false,
    "longname": "js/core/game_state.js~GameState#inputReciever",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "member",
    "name": "asyncChannel",
    "memberof": "js/core/game_state.js~GameState",
    "static": false,
    "longname": "js/core/game_state.js~GameState#asyncChannel",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "getKey",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#getKey",
    "access": "public",
    "description": "Returns the states key",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "getDivElement",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#getDivElement",
    "access": "public",
    "description": "Returns the html element of the state",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{HTMLElement}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "moveToState",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#moveToState",
    "access": "public",
    "description": "Transfers to a new state",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "stateKey",
        "description": "The id of the new state"
      }
    ],
    "return": null
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "watchAdAndMoveToState",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#watchAdAndMoveToState",
    "access": "public",
    "description": "",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "nextStateId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object="
        ],
        "spread": false,
        "optional": false,
        "name": "nextStatePayload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "trackClicks",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#trackClicks",
    "access": "public",
    "description": "Tracks clicks on a given element and calls the given callback *on this state*.\nIf you want to call another function wrap it inside a lambda.",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The element to track clicks on"
      },
      {
        "nullable": null,
        "types": [
          "function():void"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "The handler to call"
      },
      {
        "nullable": null,
        "types": [
          "import(\"./click_detector\").ClickDetectorConstructorArgs="
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Click detector arguments"
      }
    ],
    "return": null
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "cancelAllAsyncOperations",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#cancelAllAsyncOperations",
    "access": "public",
    "description": "Cancels all promises on the api as well as our async channel",
    "lineNumber": 135,
    "params": [],
    "return": null
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "onEnter",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#onEnter",
    "access": "public",
    "description": "Callback when entering the state, to be overriddemn",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": "Arbitrary data passed from the state which we are transferring from"
      }
    ],
    "return": null
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "onLeave",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#onLeave",
    "access": "public",
    "description": "Callback when leaving the state",
    "lineNumber": 150,
    "params": [],
    "return": null
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "onBeforeExit",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#onBeforeExit",
    "access": "public",
    "description": "Callback before leaving the game state or when the page is unloaded",
    "lineNumber": 155,
    "params": [],
    "return": null
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "onAppPause",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#onAppPause",
    "access": "public",
    "description": "Callback when the app got paused (on android, this means in background)",
    "lineNumber": 160,
    "params": [],
    "return": null
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "onAppResume",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#onAppResume",
    "access": "public",
    "description": "Callback when the app got resumed (on android, this means in foreground again)",
    "lineNumber": 165,
    "params": [],
    "return": null
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "onRender",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#onRender",
    "access": "public",
    "description": "Render callback",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": "Delta time in ms since last render"
      }
    ],
    "return": null
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "onBackgroundTick",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#onBackgroundTick",
    "access": "public",
    "description": "Background tick callback, called while the game is inactiev",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": "Delta time in ms since last tick"
      }
    ],
    "return": null
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "onResized",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#onResized",
    "access": "public",
    "description": "Called when the screen resized",
    "lineNumber": 184,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": "window/screen width"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": "window/screen height"
      }
    ],
    "return": null
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "onBackButton",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#onBackButton",
    "access": "public",
    "description": "Internal backbutton handler, called when the hardware back button is pressed or\nthe escape key is pressed",
    "lineNumber": 190,
    "params": [],
    "return": null
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "getInOutFadeTime",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#getInOutFadeTime",
    "access": "public",
    "description": "Should return how many mulliseconds to fade in / out the state. Not recommended to override!",
    "lineNumber": 198,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Time in milliseconds to fade out"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Time in milliseconds to fade out"
    },
    "params": []
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "getHasFadeIn",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#getHasFadeIn",
    "access": "public",
    "description": "Should return whether to fade in the game state. This will then apply the right css classes\nfor the fadein.",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "getHasFadeOut",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#getHasFadeOut",
    "access": "public",
    "description": "Should return whether to fade out the game state. This will then apply the right css classes\nfor the fadeout and wait the delay before moving states",
    "lineNumber": 219,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "getPauseOnFocusLost",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#getPauseOnFocusLost",
    "access": "public",
    "description": "Returns if this state should get paused if it does not have focus",
    "lineNumber": 227,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true to pause the updating of the game"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true to pause the updating of the game"
    },
    "params": []
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "getInnerHTML",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#getInnerHTML",
    "access": "public",
    "description": "Should return the html code of the state.",
    "lineNumber": 235,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "getHasUnloadConfirmation",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#getHasUnloadConfirmation",
    "access": "public",
    "description": "Returns if the state has an unload confirmation, this is the\n\"Are you sure you want to leave the page\" message.",
    "lineNumber": 244,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "method",
    "name": "getThemeMusic",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#getThemeMusic",
    "access": "public",
    "description": "Should return the theme music for this state",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|null}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "internalRegisterCallback",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#internalRegisterCallback",
    "access": "public",
    "description": "Internal callback from the manager. Do not override!",
    "lineNumber": 264,
    "params": [
      {
        "nullable": null,
        "types": [
          "StateManager"
        ],
        "spread": false,
        "optional": false,
        "name": "stateManager",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 299,
    "kind": "method",
    "name": "internalEnterCallback",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#internalEnterCallback",
    "access": "public",
    "description": "Internal callback when entering the state. Do not override!",
    "lineNumber": 276,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": "Arbitrary data passed from the state which we are transferring from"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "callCallback",
        "description": "Whether to call the onEnter callback"
      }
    ],
    "return": null
  },
  {
    "__docId__": 300,
    "kind": "member",
    "name": "htmlElement",
    "memberof": "js/core/game_state.js~GameState",
    "static": false,
    "longname": "js/core/game_state.js~GameState#htmlElement",
    "access": "public",
    "description": null,
    "lineNumber": 280,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 301,
    "kind": "method",
    "name": "internalLeaveCallback",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#internalLeaveCallback",
    "access": "public",
    "description": "Internal callback when the state is left. Do not override!",
    "lineNumber": 300,
    "params": [],
    "return": null
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "internalOnBeforeExitCallback",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#internalOnBeforeExitCallback",
    "access": "public",
    "description": "Internal callback *before* the state is left. Also is called on page unload",
    "lineNumber": 312,
    "params": [],
    "return": null
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "internalOnAppPauseCallback",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#internalOnAppPauseCallback",
    "access": "public",
    "description": "Internal app pause callback",
    "lineNumber": 319,
    "params": [],
    "return": null
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "internalOnAppResumeCallback",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#internalOnAppResumeCallback",
    "access": "public",
    "description": "Internal app resume callback",
    "lineNumber": 326,
    "params": [],
    "return": null
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "internalCleanUpClickDetectors",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#internalCleanUpClickDetectors",
    "access": "public",
    "description": "Cleans up all click detectors",
    "lineNumber": 333,
    "params": [],
    "return": null
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "internalGetFullHtml",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#internalGetFullHtml",
    "access": "public",
    "description": "Internal method to get the HTML of the game state.",
    "lineNumber": 346,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "internalGetFadeInOutTime",
    "memberof": "js/core/game_state.js~GameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/game_state.js~GameState#internalGetFadeInOutTime",
    "access": "public",
    "description": "Internal method to compute the time to fade in / out",
    "lineNumber": 354,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} time to fade in / out in ms"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "time to fade in / out in ms"
    },
    "params": []
  },
  {
    "__docId__": 309,
    "kind": "file",
    "name": "js/core/globals.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\n\r\n/**\r\n * Used for the bug reporter, and the click detector which both have no handles to this.\r\n * It would be nicer to have no globals, but this is the only one. I promise!\r\n * @type {Application} */\r\nexport let GLOBAL_APP = null;\r\n\r\n/**\r\n * @param {Application} app\r\n */\r\nexport function setGlobalApp(app) {\r\n    assert(!GLOBAL_APP, \"Create application twice!\");\r\n    GLOBAL_APP = app;\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/globals.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 310,
    "kind": "variable",
    "name": "GLOBAL_APP",
    "memberof": "js/core/globals.js",
    "static": true,
    "longname": "js/core/globals.js~GLOBAL_APP",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/globals.js",
    "importStyle": "{GLOBAL_APP}",
    "description": "Used for the bug reporter, and the click detector which both have no handles to this.\nIt would be nicer to have no globals, but this is the only one. I promise!",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "Application"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 311,
    "kind": "function",
    "name": "setGlobalApp",
    "memberof": "js/core/globals.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/globals.js~setGlobalApp",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/globals.js",
    "importStyle": "{setGlobalApp}",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 312,
    "kind": "file",
    "name": "js/core/global_registries.js",
    "content": "import { SingletonFactory } from \"./singleton_factory\";\r\nimport { Factory } from \"./factory\";\r\nimport { GameMode } from \"../game/game_mode\";\r\n\r\n// These factories are here to remove circular dependencies\r\n\r\n/** @type {SingletonFactoryTemplate<import(\"../game/meta_building\").MetaBuilding>} */\r\nexport let gMetaBuildingRegistry = new SingletonFactory();\r\n\r\n/** @type {Object.<string, Array<Class<import(\"../game/meta_building\").MetaBuilding>>>} */\r\nexport let gBuildingsByCategory = null;\r\n\r\n/** @type {FactoryTemplate<import(\"../game/component\").Component>} */\r\nexport let gComponentRegistry = new Factory(\"component\");\r\n\r\n/** @type {FactoryTemplate<GameMode>} */\r\nexport let gGameModeRegistry = new Factory(\"gamemode\");\r\n\r\n/** @type {FactoryTemplate<import(\"../game/time/base_game_speed\").BaseGameSpeed>} */\r\nexport let gGameSpeedRegistry = new Factory(\"gamespeed\");\r\n\r\n/** @type {FactoryTemplate<import(\"../game/base_item\").BaseItem>} */\r\nexport let gItemRegistry = new Factory(\"item\");\r\n\r\n// Helpers\r\n\r\n/**\r\n * @param {Object.<string, Array<Class<import(\"../game/meta_building\").MetaBuilding>>>} buildings\r\n */\r\nexport function initBuildingsByCategory(buildings) {\r\n    gBuildingsByCategory = buildings;\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/global_registries.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 313,
    "kind": "variable",
    "name": "gMetaBuildingRegistry",
    "memberof": "js/core/global_registries.js",
    "static": true,
    "longname": "js/core/global_registries.js~gMetaBuildingRegistry",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/global_registries.js",
    "importStyle": "{gMetaBuildingRegistry}",
    "description": null,
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "SingletonFactoryTemplate<import(\"../game/meta_building\").MetaBuilding>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 314,
    "kind": "variable",
    "name": "gBuildingsByCategory",
    "memberof": "js/core/global_registries.js",
    "static": true,
    "longname": "js/core/global_registries.js~gBuildingsByCategory",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/global_registries.js",
    "importStyle": "{gBuildingsByCategory}",
    "description": null,
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Object.<string, Array<Class<import(\"../game/meta_building\").MetaBuilding>>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 315,
    "kind": "variable",
    "name": "gComponentRegistry",
    "memberof": "js/core/global_registries.js",
    "static": true,
    "longname": "js/core/global_registries.js~gComponentRegistry",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/global_registries.js",
    "importStyle": "{gComponentRegistry}",
    "description": null,
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "FactoryTemplate<import(\"../game/component\").Component>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 316,
    "kind": "variable",
    "name": "gGameModeRegistry",
    "memberof": "js/core/global_registries.js",
    "static": true,
    "longname": "js/core/global_registries.js~gGameModeRegistry",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/global_registries.js",
    "importStyle": "{gGameModeRegistry}",
    "description": null,
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "FactoryTemplate<GameMode>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 317,
    "kind": "variable",
    "name": "gGameSpeedRegistry",
    "memberof": "js/core/global_registries.js",
    "static": true,
    "longname": "js/core/global_registries.js~gGameSpeedRegistry",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/global_registries.js",
    "importStyle": "{gGameSpeedRegistry}",
    "description": null,
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "FactoryTemplate<import(\"../game/time/base_game_speed\").BaseGameSpeed>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 318,
    "kind": "variable",
    "name": "gItemRegistry",
    "memberof": "js/core/global_registries.js",
    "static": true,
    "longname": "js/core/global_registries.js~gItemRegistry",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/global_registries.js",
    "importStyle": "{gItemRegistry}",
    "description": null,
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "FactoryTemplate<import(\"../game/base_item\").BaseItem>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 319,
    "kind": "function",
    "name": "initBuildingsByCategory",
    "memberof": "js/core/global_registries.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/global_registries.js~initBuildingsByCategory",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/global_registries.js",
    "importStyle": "{initBuildingsByCategory}",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object.<string, Array<Class<import(\"../game/meta_building\").MetaBuilding>>>"
        ],
        "spread": false,
        "optional": false,
        "name": "buildings",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 320,
    "kind": "file",
    "name": "js/core/input_distributor.js",
    "content": "// @ts-nocheck\r\n/* typehints:start */\r\nimport { Application } from \"../application\";\r\nimport { InputReceiver } from \"./input_receiver\";\r\n/* typehints:end */\r\n\r\nimport { Signal, STOP_PROPAGATION } from \"./signal\";\r\nimport { createLogger } from \"./logging\";\r\nimport { arrayDeleteValue, fastArrayDeleteValue } from \"./utils\";\r\n\r\nconst logger = createLogger(\"input_distributor\");\r\n\r\nexport class InputDistributor {\r\n    /**\r\n     *\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        this.app = app;\r\n\r\n        /** @type {Array<InputReceiver>} */\r\n        this.recieverStack = [];\r\n\r\n        /** @type {Array<function(eventId: any) : boolean>} */\r\n        this.filters = [];\r\n\r\n        /**\r\n         * All keys which are currently down\r\n         */\r\n        this.keysDown = new Set();\r\n\r\n        this.bindToEvents();\r\n    }\r\n\r\n    /**\r\n     * Attaches a new filter which can filter and reject events\r\n     * @param {function(eventId: any): boolean} filter\r\n     */\r\n    installFilter(filter) {\r\n        this.filters.push(filter);\r\n    }\r\n\r\n    /**\r\n     * Removes an attached filter\r\n     * @param {function(eventId: any) : boolean} filter\r\n     */\r\n    dismountFilter(filter) {\r\n        fastArrayDeleteValue(this.filters, filter);\r\n    }\r\n\r\n    /**\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    pushReciever(reciever) {\r\n        if (this.isRecieverAttached(reciever)) {\r\n            assert(false, \"Can not add reciever \" + reciever.context + \" twice\");\r\n            logger.error(\"Can not add reciever\", reciever.context, \"twice\");\r\n            return;\r\n        }\r\n        this.recieverStack.push(reciever);\r\n\r\n        if (this.recieverStack.length > 10) {\r\n            logger.error(\r\n                \"Reciever stack is huge, probably some dead receivers arround:\",\r\n                this.recieverStack.map(x => x.context)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    popReciever(reciever) {\r\n        if (this.recieverStack.indexOf(reciever) < 0) {\r\n            assert(false, \"Can not pop reciever \" + reciever.context + \"  since its not contained\");\r\n            logger.error(\"Can not pop reciever\", reciever.context, \"since its not contained\");\r\n            return;\r\n        }\r\n        if (this.recieverStack[this.recieverStack.length - 1] !== reciever) {\r\n            logger.warn(\r\n                \"Popping reciever\",\r\n                reciever.context,\r\n                \"which is not on top of the stack. Stack is: \",\r\n                this.recieverStack.map(x => x.context)\r\n            );\r\n        }\r\n        arrayDeleteValue(this.recieverStack, reciever);\r\n    }\r\n\r\n    /**\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    isRecieverAttached(reciever) {\r\n        return this.recieverStack.indexOf(reciever) >= 0;\r\n    }\r\n\r\n    /**\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    isRecieverOnTop(reciever) {\r\n        return (\r\n            this.isRecieverAttached(reciever) &&\r\n            this.recieverStack[this.recieverStack.length - 1] === reciever\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    makeSureAttachedAndOnTop(reciever) {\r\n        this.makeSureDetached(reciever);\r\n        this.pushReciever(reciever);\r\n    }\r\n\r\n    /**\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    makeSureDetached(reciever) {\r\n        if (this.isRecieverAttached(reciever)) {\r\n            arrayDeleteValue(this.recieverStack, reciever);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    destroyReceiver(reciever) {\r\n        this.makeSureDetached(reciever);\r\n        reciever.cleanup();\r\n    }\r\n\r\n    // Internal\r\n\r\n    getTopReciever() {\r\n        if (this.recieverStack.length > 0) {\r\n            return this.recieverStack[this.recieverStack.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    bindToEvents() {\r\n        window.addEventListener(\"popstate\", this.handleBackButton.bind(this), false);\r\n        document.addEventListener(\"backbutton\", this.handleBackButton.bind(this), false);\r\n\r\n        window.addEventListener(\"keydown\", this.handleKeyMouseDown.bind(this));\r\n        window.addEventListener(\"keyup\", this.handleKeyMouseUp.bind(this));\r\n\r\n        window.addEventListener(\"mousedown\", this.handleKeyMouseDown.bind(this));\r\n        window.addEventListener(\"mouseup\", this.handleKeyMouseUp.bind(this));\r\n\r\n        window.addEventListener(\"blur\", this.handleBlur.bind(this));\r\n    }\r\n\r\n    forwardToReceiver(eventId, payload = null) {\r\n        // Check filters\r\n        for (let i = 0; i < this.filters.length; ++i) {\r\n            if (!this.filters[i](eventId)) {\r\n                return STOP_PROPAGATION;\r\n            }\r\n        }\r\n\r\n        const reciever = this.getTopReciever();\r\n        if (!reciever) {\r\n            logger.warn(\"Dismissing event because not reciever was found:\", eventId);\r\n            return;\r\n        }\r\n        const signal = reciever[eventId];\r\n        assert(signal instanceof Signal, \"Not a valid event id\");\r\n        return signal.dispatch(payload);\r\n    }\r\n\r\n    /**\r\n     * @param {Event} event\r\n     */\r\n    handleBackButton(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.forwardToReceiver(\"backButton\");\r\n    }\r\n\r\n    /**\r\n     * Handles when the page got blurred\r\n     */\r\n    handleBlur() {\r\n        this.forwardToReceiver(\"pageBlur\", {});\r\n        this.keysDown.clear();\r\n    }\r\n\r\n    /**\r\n     * @param {KeyboardEvent | MouseEvent} event\r\n     */\r\n    handleKeyMouseDown(event) {\r\n        const keyCode = event instanceof MouseEvent ? event.button + 1 : event.keyCode;\r\n        if (\r\n            keyCode === 4 || // MB4\r\n            keyCode === 5 || // MB5\r\n            keyCode === 9 || // TAB\r\n            keyCode === 16 || // SHIFT\r\n            keyCode === 17 || // CTRL\r\n            keyCode === 18 || // ALT\r\n            (keyCode >= 112 && keyCode < 122) // F1 - F10\r\n        ) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        const isInitial = !this.keysDown.has(keyCode);\r\n        this.keysDown.add(keyCode);\r\n\r\n        if (\r\n            this.forwardToReceiver(\"keydown\", {\r\n                keyCode: keyCode,\r\n                shift: event.shiftKey,\r\n                alt: event.altKey,\r\n                initial: isInitial,\r\n                event,\r\n            }) === STOP_PROPAGATION\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (keyCode === 27) {\r\n            // Escape key\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            return this.forwardToReceiver(\"backButton\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {KeyboardEvent | MouseEvent} event\r\n     */\r\n    handleKeyMouseUp(event) {\r\n        const keyCode = event instanceof MouseEvent ? event.button + 1 : event.keyCode;\r\n        this.keysDown.delete(keyCode);\r\n\r\n        this.forwardToReceiver(\"keyup\", {\r\n            keyCode: keyCode,\r\n            shift: event.shiftKey,\r\n            alt: event.altKey,\r\n        });\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/input_distributor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 321,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/input_distributor.js",
    "static": true,
    "longname": "js/core/input_distributor.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/input_distributor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 322,
    "kind": "class",
    "name": "InputDistributor",
    "memberof": "js/core/input_distributor.js",
    "static": true,
    "longname": "js/core/input_distributor.js~InputDistributor",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/input_distributor.js",
    "importStyle": "{InputDistributor}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 323,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 324,
    "kind": "member",
    "name": "app",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#app",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "member",
    "name": "recieverStack",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#recieverStack",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "Array<InputReceiver>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 326,
    "kind": "member",
    "name": "filters",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#filters",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "Array<function(eventId: any) : boolean>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 327,
    "kind": "member",
    "name": "keysDown",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#keysDown",
    "access": "public",
    "description": "All keys which are currently down",
    "lineNumber": 30,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "installFilter",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#installFilter",
    "access": "public",
    "description": "Attaches a new filter which can filter and reject events",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(eventId: any): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 329,
    "kind": "method",
    "name": "dismountFilter",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#dismountFilter",
    "access": "public",
    "description": "Removes an attached filter",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(eventId: any) : boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 330,
    "kind": "method",
    "name": "pushReciever",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#pushReciever",
    "access": "public",
    "description": "",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "InputReceiver"
        ],
        "spread": false,
        "optional": false,
        "name": "reciever",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 331,
    "kind": "method",
    "name": "popReciever",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#popReciever",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "InputReceiver"
        ],
        "spread": false,
        "optional": false,
        "name": "reciever",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 332,
    "kind": "method",
    "name": "isRecieverAttached",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#isRecieverAttached",
    "access": "public",
    "description": "",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "InputReceiver"
        ],
        "spread": false,
        "optional": false,
        "name": "reciever",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "isRecieverOnTop",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#isRecieverOnTop",
    "access": "public",
    "description": "",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "InputReceiver"
        ],
        "spread": false,
        "optional": false,
        "name": "reciever",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "method",
    "name": "makeSureAttachedAndOnTop",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#makeSureAttachedAndOnTop",
    "access": "public",
    "description": "",
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "InputReceiver"
        ],
        "spread": false,
        "optional": false,
        "name": "reciever",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 335,
    "kind": "method",
    "name": "makeSureDetached",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#makeSureDetached",
    "access": "public",
    "description": "",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "InputReceiver"
        ],
        "spread": false,
        "optional": false,
        "name": "reciever",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 336,
    "kind": "method",
    "name": "destroyReceiver",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#destroyReceiver",
    "access": "public",
    "description": "",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "InputReceiver"
        ],
        "spread": false,
        "optional": false,
        "name": "reciever",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 337,
    "kind": "method",
    "name": "getTopReciever",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#getTopReciever",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "method",
    "name": "bindToEvents",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#bindToEvents",
    "access": "public",
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "forwardToReceiver",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#forwardToReceiver",
    "access": "public",
    "description": null,
    "lineNumber": 155,
    "undocument": true,
    "params": [
      {
        "name": "eventId",
        "types": [
          "*"
        ]
      },
      {
        "name": "payload",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 340,
    "kind": "method",
    "name": "handleBackButton",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#handleBackButton",
    "access": "public",
    "description": "",
    "lineNumber": 176,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 341,
    "kind": "method",
    "name": "handleBlur",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#handleBlur",
    "access": "public",
    "description": "Handles when the page got blurred",
    "lineNumber": 185,
    "params": [],
    "return": null
  },
  {
    "__docId__": 342,
    "kind": "method",
    "name": "handleKeyMouseDown",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#handleKeyMouseDown",
    "access": "public",
    "description": "",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "KeyboardEvent ",
          " MouseEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "handleKeyMouseUp",
    "memberof": "js/core/input_distributor.js~InputDistributor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_distributor.js~InputDistributor#handleKeyMouseUp",
    "access": "public",
    "description": "",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "KeyboardEvent ",
          " MouseEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 344,
    "kind": "file",
    "name": "js/core/input_receiver.js",
    "content": "import { Signal } from \"./signal\";\r\n\r\nexport class InputReceiver {\r\n    constructor(context = \"unknown\") {\r\n        this.context = context;\r\n\r\n        this.backButton = new Signal();\r\n\r\n        this.keydown = new Signal();\r\n        this.keyup = new Signal();\r\n        this.pageBlur = new Signal();\r\n\r\n        // Dispatched on destroy\r\n        this.destroyed = new Signal();\r\n    }\r\n\r\n    cleanup() {\r\n        this.backButton.removeAll();\r\n        this.keydown.removeAll();\r\n        this.keyup.removeAll();\r\n\r\n        this.destroyed.dispatch();\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/input_receiver.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 345,
    "kind": "class",
    "name": "InputReceiver",
    "memberof": "js/core/input_receiver.js",
    "static": true,
    "longname": "js/core/input_receiver.js~InputReceiver",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/input_receiver.js",
    "importStyle": "{InputReceiver}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 346,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/input_receiver.js~InputReceiver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_receiver.js~InputReceiver#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 347,
    "kind": "member",
    "name": "context",
    "memberof": "js/core/input_receiver.js~InputReceiver",
    "static": false,
    "longname": "js/core/input_receiver.js~InputReceiver#context",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "member",
    "name": "backButton",
    "memberof": "js/core/input_receiver.js~InputReceiver",
    "static": false,
    "longname": "js/core/input_receiver.js~InputReceiver#backButton",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "member",
    "name": "keydown",
    "memberof": "js/core/input_receiver.js~InputReceiver",
    "static": false,
    "longname": "js/core/input_receiver.js~InputReceiver#keydown",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "member",
    "name": "keyup",
    "memberof": "js/core/input_receiver.js~InputReceiver",
    "static": false,
    "longname": "js/core/input_receiver.js~InputReceiver#keyup",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "member",
    "name": "pageBlur",
    "memberof": "js/core/input_receiver.js~InputReceiver",
    "static": false,
    "longname": "js/core/input_receiver.js~InputReceiver#pageBlur",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 352,
    "kind": "member",
    "name": "destroyed",
    "memberof": "js/core/input_receiver.js~InputReceiver",
    "static": false,
    "longname": "js/core/input_receiver.js~InputReceiver#destroyed",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "cleanup",
    "memberof": "js/core/input_receiver.js~InputReceiver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/input_receiver.js~InputReceiver#cleanup",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 354,
    "kind": "file",
    "name": "js/core/loader.js",
    "content": "import { makeOffscreenBuffer } from \"./buffer_utils\";\r\nimport { AtlasSprite, BaseSprite, RegularSprite, SpriteAtlasLink } from \"./sprites\";\r\nimport { cachebust } from \"./cachebust\";\r\nimport { createLogger } from \"./logging\";\r\n\r\nconst logger = createLogger(\"loader\");\r\n\r\nconst missingSpriteIds = {};\r\n\r\nclass LoaderImpl {\r\n    constructor() {\r\n        this.app = null;\r\n\r\n        /** @type {Map<string, BaseSprite>} */\r\n        this.sprites = new Map();\r\n\r\n        this.rawImages = [];\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../application\").Application} app\r\n     */\r\n    linkAppAfterBoot(app) {\r\n        this.app = app;\r\n        this.makeSpriteNotFoundCanvas();\r\n    }\r\n\r\n    /**\r\n     * Fetches a given sprite from the cache\r\n     * @param {string} key\r\n     * @returns {BaseSprite}\r\n     */\r\n    getSpriteInternal(key) {\r\n        const sprite = this.sprites.get(key);\r\n        if (!sprite) {\r\n            if (!missingSpriteIds[key]) {\r\n                // Only show error once\r\n                missingSpriteIds[key] = true;\r\n                /*logger.error(\"Sprite '\" + key + \"' not found!\");*/ // Will be fixed right now it just spams errors\r\n            }\r\n            return this.spriteNotFoundSprite;\r\n        }\r\n        return sprite;\r\n    }\r\n\r\n    /**\r\n     * Returns an atlas sprite from the cache\r\n     * @param {string} key\r\n     * @returns {AtlasSprite}\r\n     */\r\n    getSprite(key) {\r\n        const sprite = this.getSpriteInternal(key);\r\n        assert(sprite instanceof AtlasSprite || sprite === this.spriteNotFoundSprite, \"Not an atlas sprite\");\r\n        return /** @type {AtlasSprite} */ (sprite);\r\n    }\r\n\r\n    /**\r\n     * Returns a regular sprite from the cache\r\n     * @param {string} key\r\n     * @returns {RegularSprite}\r\n     */\r\n    getRegularSprite(key) {\r\n        const sprite = this.getSpriteInternal(key);\r\n        assert(\r\n            sprite instanceof RegularSprite || sprite === this.spriteNotFoundSprite,\r\n            \"Not a regular sprite\"\r\n        );\r\n        return /** @type {RegularSprite} */ (sprite);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} key\r\n     * @returns {Promise<HTMLImageElement|null>}\r\n     */\r\n    internalPreloadImage(key) {\r\n        const url = cachebust(\"res/\" + key);\r\n        const image = new Image();\r\n\r\n        let triesSoFar = 0;\r\n\r\n        return Promise.race([\r\n            new Promise((resolve, reject) => {\r\n                setTimeout(reject, G_IS_DEV ? 500 : 10000);\r\n            }),\r\n\r\n            new Promise(resolve => {\r\n                image.onload = () => {\r\n                    image.onerror = null;\r\n                    image.onload = null;\r\n\r\n                    if (typeof image.decode === \"function\") {\r\n                        // SAFARI: Image.decode() fails on safari with svgs -> we dont want to fail\r\n                        // on that\r\n                        // FIREFOX: Decode never returns if the image is in cache, so call it in background\r\n                        image.decode().then(\r\n                            () => null,\r\n                            () => null\r\n                        );\r\n                    }\r\n                    resolve(image);\r\n                };\r\n\r\n                image.onerror = reason => {\r\n                    logger.warn(\"Failed to load '\" + url + \"':\", reason);\r\n                    if (++triesSoFar < 4) {\r\n                        logger.log(\"Retrying to load image from\", url);\r\n                        image.src = url + \"?try=\" + triesSoFar;\r\n                    } else {\r\n                        logger.warn(\"Failed to load\", url, \"after\", triesSoFar, \"tries with reason\", reason);\r\n                        image.onerror = null;\r\n                        image.onload = null;\r\n                        resolve(null);\r\n                    }\r\n                };\r\n\r\n                image.src = url;\r\n            }),\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Preloads a sprite\r\n     * @param {string} key\r\n     * @returns {Promise<void>}\r\n     */\r\n    preloadCSSSprite(key) {\r\n        return this.internalPreloadImage(key).then(image => {\r\n            if (key.indexOf(\"game_misc\") >= 0) {\r\n                // Allow access to regular sprites\r\n                this.sprites.set(key, new RegularSprite(image, image.width, image.height));\r\n            }\r\n            this.rawImages.push(image);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Preloads an atlas\r\n     * @param {import(\"./atlas_definitions\").AtlasDefinition} atlas\r\n     * @returns {Promise<void>}\r\n     */\r\n    preloadAtlas(atlas) {\r\n        return this.internalPreloadImage(atlas.getFullSourcePath()).then(image => {\r\n            // @ts-ignore\r\n            image.label = atlas.sourceFileName;\r\n            return this.internalParseAtlas(atlas, image);\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {import(\"./atlas_definitions\").AtlasDefinition} atlas\r\n     * @param {HTMLImageElement} loadedImage\r\n     */\r\n    internalParseAtlas({ meta: { scale }, sourceData }, loadedImage) {\r\n        this.rawImages.push(loadedImage);\r\n\r\n        for (const spriteName in sourceData) {\r\n            const { frame, sourceSize, spriteSourceSize } = sourceData[spriteName];\r\n\r\n            let sprite = /** @type {AtlasSprite} */ (this.sprites.get(spriteName));\r\n\r\n            if (!sprite) {\r\n                sprite = new AtlasSprite(spriteName);\r\n                this.sprites.set(spriteName, sprite);\r\n            }\r\n\r\n            const link = new SpriteAtlasLink({\r\n                packedX: frame.x,\r\n                packedY: frame.y,\r\n                packedW: frame.w,\r\n                packedH: frame.h,\r\n                packOffsetX: spriteSourceSize.x,\r\n                packOffsetY: spriteSourceSize.y,\r\n                atlas: loadedImage,\r\n                w: sourceSize.w,\r\n                h: sourceSize.h,\r\n            });\r\n            sprite.linksByResolution[scale] = link;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Makes the canvas which shows the question mark, shown when a sprite was not found\r\n     */\r\n    makeSpriteNotFoundCanvas() {\r\n        const dims = 128;\r\n\r\n        const [canvas, context] = makeOffscreenBuffer(dims, dims, {\r\n            smooth: false,\r\n            label: \"not-found-sprite\",\r\n        });\r\n        context.fillStyle = \"#f77\";\r\n        context.fillRect(0, 0, dims, dims);\r\n\r\n        context.textAlign = \"center\";\r\n        context.textBaseline = \"middle\";\r\n        context.fillStyle = \"#eee\";\r\n        context.font = \"25px Arial\";\r\n        context.fillText(\"???\", dims / 2, dims / 2);\r\n\r\n        // TODO: Not sure why this is set here\r\n        // @ts-ignore\r\n        canvas.src = \"not-found\";\r\n\r\n        const sprite = new AtlasSprite(\"not-found\");\r\n        [\"0.1\", \"0.25\", \"0.5\", \"0.75\", \"1\"].forEach(resolution => {\r\n            sprite.linksByResolution[resolution] = new SpriteAtlasLink({\r\n                packedX: 0,\r\n                packedY: 0,\r\n                w: dims,\r\n                h: dims,\r\n                packOffsetX: 0,\r\n                packOffsetY: 0,\r\n                packedW: dims,\r\n                packedH: dims,\r\n                atlas: canvas,\r\n            });\r\n        });\r\n\r\n        this.spriteNotFoundSprite = sprite;\r\n    }\r\n}\r\n\r\nexport const Loader = new LoaderImpl();",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/loader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 355,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/loader.js",
    "static": true,
    "longname": "js/core/loader.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 356,
    "kind": "variable",
    "name": "missingSpriteIds",
    "memberof": "js/core/loader.js",
    "static": true,
    "longname": "js/core/loader.js~missingSpriteIds",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 357,
    "kind": "variable",
    "name": "Loader",
    "memberof": "js/core/loader.js",
    "static": true,
    "longname": "js/core/loader.js~Loader",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/loader.js",
    "importStyle": "{Loader}",
    "description": null,
    "lineNumber": 225,
    "undocument": true,
    "type": {
      "types": [
        "js/core/loader.js~LoaderImpl"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "class",
    "name": "LoaderImpl",
    "memberof": "js/core/loader.js",
    "static": true,
    "longname": "js/core/loader.js~LoaderImpl",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "pseudoExport": true,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 359,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/loader.js~LoaderImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 360,
    "kind": "member",
    "name": "app",
    "memberof": "js/core/loader.js~LoaderImpl",
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#app",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 361,
    "kind": "member",
    "name": "sprites",
    "memberof": "js/core/loader.js~LoaderImpl",
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#sprites",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "Map<string, BaseSprite>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 362,
    "kind": "member",
    "name": "rawImages",
    "memberof": "js/core/loader.js~LoaderImpl",
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#rawImages",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 363,
    "kind": "method",
    "name": "linkAppAfterBoot",
    "memberof": "js/core/loader.js~LoaderImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#linkAppAfterBoot",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../application\").Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 365,
    "kind": "method",
    "name": "getSpriteInternal",
    "memberof": "js/core/loader.js~LoaderImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#getSpriteInternal",
    "access": "public",
    "description": "Fetches a given sprite from the cache",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseSprite}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseSprite"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 366,
    "kind": "method",
    "name": "getSprite",
    "memberof": "js/core/loader.js~LoaderImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#getSprite",
    "access": "public",
    "description": "Returns an atlas sprite from the cache",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AtlasSprite}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AtlasSprite"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "getRegularSprite",
    "memberof": "js/core/loader.js~LoaderImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#getRegularSprite",
    "access": "public",
    "description": "Returns a regular sprite from the cache",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RegularSprite}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RegularSprite"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 368,
    "kind": "method",
    "name": "internalPreloadImage",
    "memberof": "js/core/loader.js~LoaderImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#internalPreloadImage",
    "access": "public",
    "description": "",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<HTMLImageElement|null>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<HTMLImageElement|null>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "preloadCSSSprite",
    "memberof": "js/core/loader.js~LoaderImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#preloadCSSSprite",
    "access": "public",
    "description": "Preloads a sprite",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 370,
    "kind": "method",
    "name": "preloadAtlas",
    "memberof": "js/core/loader.js~LoaderImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#preloadAtlas",
    "access": "public",
    "description": "Preloads an atlas",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"./atlas_definitions\").AtlasDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "atlas",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 371,
    "kind": "method",
    "name": "internalParseAtlas",
    "memberof": "js/core/loader.js~LoaderImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#internalParseAtlas",
    "access": "public",
    "description": "",
    "lineNumber": 155,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"./atlas_definitions\").AtlasDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "atlas",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLImageElement"
        ],
        "spread": false,
        "optional": false,
        "name": "loadedImage",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 372,
    "kind": "method",
    "name": "makeSpriteNotFoundCanvas",
    "memberof": "js/core/loader.js~LoaderImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#makeSpriteNotFoundCanvas",
    "access": "public",
    "description": "Makes the canvas which shows the question mark, shown when a sprite was not found",
    "lineNumber": 186,
    "params": [],
    "return": null
  },
  {
    "__docId__": 373,
    "kind": "member",
    "name": "spriteNotFoundSprite",
    "memberof": "js/core/loader.js~LoaderImpl",
    "static": false,
    "longname": "js/core/loader.js~LoaderImpl#spriteNotFoundSprite",
    "access": "public",
    "description": null,
    "lineNumber": 221,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 374,
    "kind": "file",
    "name": "js/core/logging.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nconst circularJson = require(\"circular-json\");\r\n\r\n/*\r\nLogging functions\r\n- To be extended\r\n*/\r\n\r\n/**\r\n * Base logger class\r\n */\r\nclass Logger {\r\n    constructor(context) {\r\n        this.context = context;\r\n    }\r\n\r\n    debug(...args) {\r\n        globalDebug(this.context, ...args);\r\n    }\r\n\r\n    log(...args) {\r\n        globalLog(this.context, ...args);\r\n    }\r\n\r\n    warn(...args) {\r\n        globalWarn(this.context, ...args);\r\n    }\r\n\r\n    error(...args) {\r\n        globalError(this.context, ...args);\r\n    }\r\n}\r\n\r\nexport function createLogger(context) {\r\n    return new Logger(context);\r\n}\r\n\r\nfunction prepareObjectForLogging(obj, maxDepth = 1) {\r\n    if (!window.Sentry) {\r\n        // Not required without sentry\r\n        return obj;\r\n    }\r\n\r\n    if (typeof obj !== \"object\" && !Array.isArray(obj)) {\r\n        return obj;\r\n    }\r\n    const result = {};\r\n    for (const key in obj) {\r\n        const val = obj[key];\r\n\r\n        if (typeof val === \"object\") {\r\n            if (maxDepth > 0) {\r\n                result[key] = prepareObjectForLogging(val, maxDepth - 1);\r\n            } else {\r\n                result[key] = \"[object]\";\r\n            }\r\n        } else {\r\n            result[key] = val;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Serializes an error\r\n * @param {Error|ErrorEvent} err\r\n */\r\nexport function serializeError(err) {\r\n    if (!err) {\r\n        return null;\r\n    }\r\n    const result = {\r\n        type: err.constructor.name,\r\n    };\r\n\r\n    if (err instanceof Error) {\r\n        result.message = err.message;\r\n        result.name = err.name;\r\n        result.stack = err.stack;\r\n        result.type = \"{type.Error}\";\r\n    } else if (err instanceof ErrorEvent) {\r\n        result.filename = err.filename;\r\n        result.message = err.message;\r\n        result.lineno = err.lineno;\r\n        result.colno = err.colno;\r\n        result.type = \"{type.ErrorEvent}\";\r\n\r\n        if (err.error) {\r\n            result.error = serializeError(err.error);\r\n        } else {\r\n            result.error = \"{not-provided}\";\r\n        }\r\n    } else {\r\n        result.type = \"{unkown-type:\" + typeof err + \"}\";\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Serializes an event\r\n * @param {Event} event\r\n */\r\nfunction serializeEvent(event) {\r\n    let result = {\r\n        type: \"{type.Event:\" + typeof event + \"}\",\r\n    };\r\n    result.eventType = event.type;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Prepares a json payload\r\n * @param {string} key\r\n * @param {any} value\r\n */\r\nfunction preparePayload(key, value) {\r\n    if (value instanceof Error || value instanceof ErrorEvent) {\r\n        return serializeError(value);\r\n    }\r\n    if (value instanceof Event) {\r\n        return serializeEvent(value);\r\n    }\r\n    if (typeof value === \"undefined\") {\r\n        return null;\r\n    }\r\n    return value;\r\n}\r\n\r\n/**\r\n * Stringifies an object containing circular references and errors\r\n * @param {any} payload\r\n */\r\nexport function stringifyObjectContainingErrors(payload) {\r\n    return circularJson.stringify(payload, preparePayload);\r\n}\r\n\r\nexport function globalDebug(context, ...args) {\r\n    if (G_IS_DEV) {\r\n        logInternal(context, console.log, prepareArgsForLogging(args));\r\n    }\r\n}\r\n\r\nexport function globalLog(context, ...args) {\r\n    // eslint-disable-next-line no-console\r\n    logInternal(context, console.log, prepareArgsForLogging(args));\r\n}\r\n\r\nexport function globalWarn(context, ...args) {\r\n    // eslint-disable-next-line no-console\r\n    logInternal(context, console.warn, prepareArgsForLogging(args));\r\n}\r\n\r\nexport function globalError(context, ...args) {\r\n    args = prepareArgsForLogging(args);\r\n    // eslint-disable-next-line no-console\r\n    logInternal(context, console.error, args);\r\n\r\n    if (window.Sentry) {\r\n        window.Sentry.withScope(scope => {\r\n            scope.setExtra(\"args\", args);\r\n            window.Sentry.captureMessage(internalBuildStringFromArgs(args), \"error\");\r\n        });\r\n    }\r\n}\r\n\r\nfunction prepareArgsForLogging(args) {\r\n    let result = [];\r\n    for (let i = 0; i < args.length; ++i) {\r\n        result.push(prepareObjectForLogging(args[i]));\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param {Array<any>} args\r\n */\r\nfunction internalBuildStringFromArgs(args) {\r\n    let result = [];\r\n\r\n    for (let i = 0; i < args.length; ++i) {\r\n        let arg = args[i];\r\n        if (\r\n            typeof arg === \"string\" ||\r\n            typeof arg === \"number\" ||\r\n            typeof arg === \"boolean\" ||\r\n            arg === null ||\r\n            arg === undefined\r\n        ) {\r\n            result.push(\"\" + arg);\r\n        } else if (arg instanceof Error) {\r\n            result.push(arg.message);\r\n        } else {\r\n            result.push(\"[object]\");\r\n        }\r\n    }\r\n    return result.join(\" \");\r\n}\r\n\r\nexport function logSection(name, color) {\r\n    while (name.length <= 14) {\r\n        name = \" \" + name + \" \";\r\n    }\r\n    name = name.padEnd(19, \" \");\r\n\r\n    const lineCss =\r\n        \"letter-spacing: -3px; color: \" + color + \"; font-size: 6px; background: #eee; color: #eee;\";\r\n    const line = \"%c----------------------------\";\r\n    console.log(\"\\n\" + line + \" %c\" + name + \" \" + line + \"\\n\", lineCss, \"color: \" + color, lineCss);\r\n}\r\n\r\nfunction extractHandleContext(handle) {\r\n    let context = handle || \"unknown\";\r\n    if (handle && handle.constructor && handle.constructor.name) {\r\n        context = handle.constructor.name;\r\n        if (context === \"String\") {\r\n            context = handle;\r\n        }\r\n    }\r\n\r\n    if (handle && handle.name) {\r\n        context = handle.name;\r\n    }\r\n    return context + \"\";\r\n}\r\n\r\nfunction logInternal(handle, consoleMethod, args) {\r\n    const context = extractHandleContext(handle).padEnd(20, \" \");\r\n    const labelColor = handle && handle.LOG_LABEL_COLOR ? handle.LOG_LABEL_COLOR : \"#aaa\";\r\n\r\n    if (G_IS_DEV && globalConfig.debug.logTimestamps) {\r\n        const timestamp = \"⏱ %c\" + (Math.floor(performance.now()) + \"\").padEnd(6, \" \") + \"\";\r\n        consoleMethod.call(\r\n            console,\r\n            timestamp + \" %c\" + context,\r\n            \"color: #7f7;\",\r\n            \"color: \" + labelColor + \";\",\r\n            ...args\r\n        );\r\n    } else {\r\n        // if (G_IS_DEV && !globalConfig.debug.disableLoggingLogSources) {\r\n        consoleMethod.call(console, \"%c\" + context, \"color: \" + labelColor, ...args);\r\n        // } else {\r\n        // consoleMethod.call(console, ...args);\r\n        // }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/logging.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 375,
    "kind": "variable",
    "name": "circularJson",
    "memberof": "js/core/logging.js",
    "static": true,
    "longname": "js/core/logging.js~circularJson",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 376,
    "kind": "class",
    "name": "Logger",
    "memberof": "js/core/logging.js",
    "static": true,
    "longname": "js/core/logging.js~Logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": null,
    "description": "Base logger class",
    "lineNumber": 12,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 377,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/logging.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/logging.js~Logger#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 378,
    "kind": "member",
    "name": "context",
    "memberof": "js/core/logging.js~Logger",
    "static": false,
    "longname": "js/core/logging.js~Logger#context",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 379,
    "kind": "method",
    "name": "debug",
    "memberof": "js/core/logging.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/logging.js~Logger#debug",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 380,
    "kind": "method",
    "name": "log",
    "memberof": "js/core/logging.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/logging.js~Logger#log",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 381,
    "kind": "method",
    "name": "warn",
    "memberof": "js/core/logging.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/logging.js~Logger#warn",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 382,
    "kind": "method",
    "name": "error",
    "memberof": "js/core/logging.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/logging.js~Logger#error",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 383,
    "kind": "function",
    "name": "createLogger",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~createLogger",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": "{createLogger}",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 384,
    "kind": "function",
    "name": "prepareObjectForLogging",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~prepareObjectForLogging",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "maxDepth",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 385,
    "kind": "function",
    "name": "serializeError",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~serializeError",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": "{serializeError}",
    "description": "Serializes an error",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "Error",
          "ErrorEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "err",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 386,
    "kind": "function",
    "name": "serializeEvent",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~serializeEvent",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": null,
    "description": "Serializes an event",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 387,
    "kind": "function",
    "name": "preparePayload",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~preparePayload",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": null,
    "description": "Prepares a json payload",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 388,
    "kind": "function",
    "name": "stringifyObjectContainingErrors",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~stringifyObjectContainingErrors",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": "{stringifyObjectContainingErrors}",
    "description": "Stringifies an object containing circular references and errors",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 389,
    "kind": "function",
    "name": "globalDebug",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~globalDebug",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": "{globalDebug}",
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 390,
    "kind": "function",
    "name": "globalLog",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~globalLog",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": "{globalLog}",
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 391,
    "kind": "function",
    "name": "globalWarn",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~globalWarn",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": "{globalWarn}",
    "description": null,
    "lineNumber": 149,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 392,
    "kind": "function",
    "name": "globalError",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~globalError",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": "{globalError}",
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 393,
    "kind": "function",
    "name": "prepareArgsForLogging",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~prepareArgsForLogging",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 394,
    "kind": "function",
    "name": "internalBuildStringFromArgs",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~internalBuildStringFromArgs",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 178,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 395,
    "kind": "function",
    "name": "logSection",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~logSection",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": "{logSection}",
    "description": null,
    "lineNumber": 200,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "color",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 396,
    "kind": "function",
    "name": "extractHandleContext",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~extractHandleContext",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "params": [
      {
        "name": "handle",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 397,
    "kind": "function",
    "name": "logInternal",
    "memberof": "js/core/logging.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/logging.js~logInternal",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/logging.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "params": [
      {
        "name": "handle",
        "types": [
          "*"
        ]
      },
      {
        "name": "consoleMethod",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 398,
    "kind": "file",
    "name": "js/core/lzstring.js",
    "content": "// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\r\n// This work is free. You can redistribute it and/or modify it\r\n// under the terms of the WTFPL, Version 2\r\n// For more information see LICENSE.txt or http://www.wtfpl.net/\r\n//\r\n// For more information, the home page:\r\n// http://pieroxy.net/blog/pages/lz-string/testing.html\r\n//\r\n// LZ-based compression algorithm, version 1.4.4\r\n\r\nconst fromCharCode = String.fromCharCode;\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nconst keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\r\nconst baseReverseDic = {};\r\n\r\nfunction getBaseValue(alphabet, character) {\r\n    if (!baseReverseDic[alphabet]) {\r\n        baseReverseDic[alphabet] = {};\r\n        for (let i = 0; i < alphabet.length; i++) {\r\n            baseReverseDic[alphabet][alphabet.charAt(i)] = i;\r\n        }\r\n    }\r\n    return baseReverseDic[alphabet][character];\r\n}\r\n\r\n//compress into uint8array (UCS-2 big endian format)\r\nexport function compressU8(uncompressed) {\r\n    let compressed = compress(uncompressed);\r\n    let buf = new Uint8Array(compressed.length * 2); // 2 bytes per character\r\n\r\n    for (let i = 0, TotalLen = compressed.length; i < TotalLen; i++) {\r\n        let current_value = compressed.charCodeAt(i);\r\n        buf[i * 2] = current_value >>> 8;\r\n        buf[i * 2 + 1] = current_value % 256;\r\n    }\r\n    return buf;\r\n}\r\n\r\n// Compreses with header\r\n/**\r\n * @param {string} uncompressed\r\n * @param {number} header\r\n */\r\nexport function compressU8WHeader(uncompressed, header) {\r\n    let compressed = compress(uncompressed);\r\n    let buf = new Uint8Array(2 + compressed.length * 2); // 2 bytes per character\r\n\r\n    buf[0] = header >>> 8;\r\n    buf[1] = header % 256;\r\n    for (let i = 0, TotalLen = compressed.length; i < TotalLen; i++) {\r\n        let current_value = compressed.charCodeAt(i);\r\n        buf[2 + i * 2] = current_value >>> 8;\r\n        buf[2 + i * 2 + 1] = current_value % 256;\r\n    }\r\n    return buf;\r\n}\r\n\r\n//decompress from uint8array (UCS-2 big endian format)\r\n/**\r\n *\r\n * @param {Uint8Array} compressed\r\n */\r\nexport function decompressU8WHeader(compressed) {\r\n    // let buf = new Array(compressed.length / 2); // 2 bytes per character\r\n    // for (let i = 0, TotalLen = buf.length; i < TotalLen; i++) {\r\n    //     buf[i] = compressed[i * 2] * 256 + compressed[i * 2 + 1];\r\n    // }\r\n\r\n    // let result = [];\r\n    // buf.forEach(function (c) {\r\n    //     result.push(fromCharCode(c));\r\n    // });\r\n    let result = [];\r\n    for (let i = 2, n = compressed.length; i < n; i += 2) {\r\n        const code = compressed[i] * 256 + compressed[i + 1];\r\n        result.push(fromCharCode(code));\r\n    }\r\n    return decompress(result.join(\"\"));\r\n}\r\n\r\n//compress into a string that is already URI encoded\r\nexport function compressX64(input) {\r\n    if (input == null) return \"\";\r\n    return _compress(input, 6, function (a) {\r\n        return keyStrUriSafe.charAt(a);\r\n    });\r\n}\r\n\r\n//decompress from an output of compressToEncodedURIComponent\r\nexport function decompressX64(input) {\r\n    if (input == null) return \"\";\r\n    if (input == \"\") return null;\r\n    input = input.replace(/ /g, \"+\");\r\n    return _decompress(input.length, 32, function (index) {\r\n        return getBaseValue(keyStrUriSafe, input.charAt(index));\r\n    });\r\n}\r\n\r\nfunction compress(uncompressed) {\r\n    return _compress(uncompressed, 16, function (a) {\r\n        return fromCharCode(a);\r\n    });\r\n}\r\n\r\nfunction _compress(uncompressed, bitsPerChar, getCharFromInt) {\r\n    if (uncompressed == null) return \"\";\r\n    let i,\r\n        value,\r\n        context_dictionary = {},\r\n        context_dictionaryToCreate = {},\r\n        context_c = \"\",\r\n        context_wc = \"\",\r\n        context_w = \"\",\r\n        context_enlargeIn = 2, // Compensate for the first entry which should not count\r\n        context_dictSize = 3,\r\n        context_numBits = 2,\r\n        context_data = [],\r\n        context_data_val = 0,\r\n        context_data_position = 0,\r\n        ii;\r\n\r\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\r\n        context_c = uncompressed.charAt(ii);\r\n        if (!hasOwnProperty.call(context_dictionary, context_c)) {\r\n            context_dictionary[context_c] = context_dictSize++;\r\n            context_dictionaryToCreate[context_c] = true;\r\n        }\r\n\r\n        context_wc = context_w + context_c;\r\n        if (hasOwnProperty.call(context_dictionary, context_wc)) {\r\n            context_w = context_wc;\r\n        } else {\r\n            if (hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\r\n                if (context_w.charCodeAt(0) < 256) {\r\n                    for (i = 0; i < context_numBits; i++) {\r\n                        context_data_val = context_data_val << 1;\r\n                        if (context_data_position == bitsPerChar - 1) {\r\n                            context_data_position = 0;\r\n                            context_data.push(getCharFromInt(context_data_val));\r\n                            context_data_val = 0;\r\n                        } else {\r\n                            context_data_position++;\r\n                        }\r\n                    }\r\n                    value = context_w.charCodeAt(0);\r\n                    for (i = 0; i < 8; i++) {\r\n                        context_data_val = (context_data_val << 1) | (value & 1);\r\n                        if (context_data_position == bitsPerChar - 1) {\r\n                            context_data_position = 0;\r\n                            context_data.push(getCharFromInt(context_data_val));\r\n                            context_data_val = 0;\r\n                        } else {\r\n                            context_data_position++;\r\n                        }\r\n                        value = value >> 1;\r\n                    }\r\n                } else {\r\n                    value = 1;\r\n                    for (i = 0; i < context_numBits; i++) {\r\n                        context_data_val = (context_data_val << 1) | value;\r\n                        if (context_data_position == bitsPerChar - 1) {\r\n                            context_data_position = 0;\r\n                            context_data.push(getCharFromInt(context_data_val));\r\n                            context_data_val = 0;\r\n                        } else {\r\n                            context_data_position++;\r\n                        }\r\n                        value = 0;\r\n                    }\r\n                    value = context_w.charCodeAt(0);\r\n                    for (i = 0; i < 16; i++) {\r\n                        context_data_val = (context_data_val << 1) | (value & 1);\r\n                        if (context_data_position == bitsPerChar - 1) {\r\n                            context_data_position = 0;\r\n                            context_data.push(getCharFromInt(context_data_val));\r\n                            context_data_val = 0;\r\n                        } else {\r\n                            context_data_position++;\r\n                        }\r\n                        value = value >> 1;\r\n                    }\r\n                }\r\n                context_enlargeIn--;\r\n                if (context_enlargeIn == 0) {\r\n                    context_enlargeIn = Math.pow(2, context_numBits);\r\n                    context_numBits++;\r\n                }\r\n                delete context_dictionaryToCreate[context_w];\r\n            } else {\r\n                value = context_dictionary[context_w];\r\n                for (i = 0; i < context_numBits; i++) {\r\n                    context_data_val = (context_data_val << 1) | (value & 1);\r\n                    if (context_data_position == bitsPerChar - 1) {\r\n                        context_data_position = 0;\r\n                        context_data.push(getCharFromInt(context_data_val));\r\n                        context_data_val = 0;\r\n                    } else {\r\n                        context_data_position++;\r\n                    }\r\n                    value = value >> 1;\r\n                }\r\n            }\r\n            context_enlargeIn--;\r\n            if (context_enlargeIn == 0) {\r\n                context_enlargeIn = Math.pow(2, context_numBits);\r\n                context_numBits++;\r\n            }\r\n            // Add wc to the dictionary.\r\n            context_dictionary[context_wc] = context_dictSize++;\r\n            context_w = String(context_c);\r\n        }\r\n    }\r\n\r\n    // Output the code for w.\r\n    if (context_w !== \"\") {\r\n        if (hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\r\n            if (context_w.charCodeAt(0) < 256) {\r\n                for (i = 0; i < context_numBits; i++) {\r\n                    context_data_val = context_data_val << 1;\r\n                    if (context_data_position == bitsPerChar - 1) {\r\n                        context_data_position = 0;\r\n                        context_data.push(getCharFromInt(context_data_val));\r\n                        context_data_val = 0;\r\n                    } else {\r\n                        context_data_position++;\r\n                    }\r\n                }\r\n                value = context_w.charCodeAt(0);\r\n                for (i = 0; i < 8; i++) {\r\n                    context_data_val = (context_data_val << 1) | (value & 1);\r\n                    if (context_data_position == bitsPerChar - 1) {\r\n                        context_data_position = 0;\r\n                        context_data.push(getCharFromInt(context_data_val));\r\n                        context_data_val = 0;\r\n                    } else {\r\n                        context_data_position++;\r\n                    }\r\n                    value = value >> 1;\r\n                }\r\n            } else {\r\n                value = 1;\r\n                for (i = 0; i < context_numBits; i++) {\r\n                    context_data_val = (context_data_val << 1) | value;\r\n                    if (context_data_position == bitsPerChar - 1) {\r\n                        context_data_position = 0;\r\n                        context_data.push(getCharFromInt(context_data_val));\r\n                        context_data_val = 0;\r\n                    } else {\r\n                        context_data_position++;\r\n                    }\r\n                    value = 0;\r\n                }\r\n                value = context_w.charCodeAt(0);\r\n                for (i = 0; i < 16; i++) {\r\n                    context_data_val = (context_data_val << 1) | (value & 1);\r\n                    if (context_data_position == bitsPerChar - 1) {\r\n                        context_data_position = 0;\r\n                        context_data.push(getCharFromInt(context_data_val));\r\n                        context_data_val = 0;\r\n                    } else {\r\n                        context_data_position++;\r\n                    }\r\n                    value = value >> 1;\r\n                }\r\n            }\r\n            context_enlargeIn--;\r\n            if (context_enlargeIn == 0) {\r\n                context_enlargeIn = Math.pow(2, context_numBits);\r\n                context_numBits++;\r\n            }\r\n            delete context_dictionaryToCreate[context_w];\r\n        } else {\r\n            value = context_dictionary[context_w];\r\n            for (i = 0; i < context_numBits; i++) {\r\n                context_data_val = (context_data_val << 1) | (value & 1);\r\n                if (context_data_position == bitsPerChar - 1) {\r\n                    context_data_position = 0;\r\n                    context_data.push(getCharFromInt(context_data_val));\r\n                    context_data_val = 0;\r\n                } else {\r\n                    context_data_position++;\r\n                }\r\n                value = value >> 1;\r\n            }\r\n        }\r\n        context_enlargeIn--;\r\n        if (context_enlargeIn == 0) {\r\n            context_enlargeIn = Math.pow(2, context_numBits);\r\n            context_numBits++;\r\n        }\r\n    }\r\n\r\n    // Mark the end of the stream\r\n    value = 2;\r\n    for (i = 0; i < context_numBits; i++) {\r\n        context_data_val = (context_data_val << 1) | (value & 1);\r\n        if (context_data_position == bitsPerChar - 1) {\r\n            context_data_position = 0;\r\n            context_data.push(getCharFromInt(context_data_val));\r\n            context_data_val = 0;\r\n        } else {\r\n            context_data_position++;\r\n        }\r\n        value = value >> 1;\r\n    }\r\n\r\n    // Flush the last char\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n        context_data_val = context_data_val << 1;\r\n        if (context_data_position == bitsPerChar - 1) {\r\n            context_data.push(getCharFromInt(context_data_val));\r\n            break;\r\n        } else context_data_position++;\r\n    }\r\n    return context_data.join(\"\");\r\n}\r\n\r\nfunction decompress(compressed) {\r\n    if (compressed == null) return \"\";\r\n    if (compressed == \"\") return null;\r\n    return _decompress(compressed.length, 32768, function (index) {\r\n        return compressed.charCodeAt(index);\r\n    });\r\n}\r\n\r\nfunction _decompress(length, resetValue, getNextValue) {\r\n    let dictionary = [],\r\n        next,\r\n        enlargeIn = 4,\r\n        dictSize = 4,\r\n        numBits = 3,\r\n        entry = \"\",\r\n        result = [],\r\n        i,\r\n        w,\r\n        bits,\r\n        resb,\r\n        maxpower,\r\n        power,\r\n        c,\r\n        data = { val: getNextValue(0), position: resetValue, index: 1 };\r\n\r\n    for (i = 0; i < 3; i += 1) {\r\n        dictionary[i] = i;\r\n    }\r\n\r\n    bits = 0;\r\n    maxpower = Math.pow(2, 2);\r\n    power = 1;\r\n    while (power != maxpower) {\r\n        resb = data.val & data.position;\r\n        data.position >>= 1;\r\n        if (data.position == 0) {\r\n            data.position = resetValue;\r\n            data.val = getNextValue(data.index++);\r\n        }\r\n        bits |= (resb > 0 ? 1 : 0) * power;\r\n        power <<= 1;\r\n    }\r\n\r\n    switch ((next = bits)) {\r\n        case 0:\r\n            bits = 0;\r\n            maxpower = Math.pow(2, 8);\r\n            power = 1;\r\n            while (power != maxpower) {\r\n                resb = data.val & data.position;\r\n                data.position >>= 1;\r\n                if (data.position == 0) {\r\n                    data.position = resetValue;\r\n                    data.val = getNextValue(data.index++);\r\n                }\r\n                bits |= (resb > 0 ? 1 : 0) * power;\r\n                power <<= 1;\r\n            }\r\n            c = fromCharCode(bits);\r\n            break;\r\n        case 1:\r\n            bits = 0;\r\n            maxpower = Math.pow(2, 16);\r\n            power = 1;\r\n            while (power != maxpower) {\r\n                resb = data.val & data.position;\r\n                data.position >>= 1;\r\n                if (data.position == 0) {\r\n                    data.position = resetValue;\r\n                    data.val = getNextValue(data.index++);\r\n                }\r\n                bits |= (resb > 0 ? 1 : 0) * power;\r\n                power <<= 1;\r\n            }\r\n            c = fromCharCode(bits);\r\n            break;\r\n        case 2:\r\n            return \"\";\r\n    }\r\n    dictionary[3] = c;\r\n    w = c;\r\n    result.push(c);\r\n\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n        if (data.index > length) {\r\n            return \"\";\r\n        }\r\n\r\n        bits = 0;\r\n        maxpower = Math.pow(2, numBits);\r\n        power = 1;\r\n        while (power != maxpower) {\r\n            resb = data.val & data.position;\r\n            data.position >>= 1;\r\n            if (data.position == 0) {\r\n                data.position = resetValue;\r\n                data.val = getNextValue(data.index++);\r\n            }\r\n            bits |= (resb > 0 ? 1 : 0) * power;\r\n            power <<= 1;\r\n        }\r\n\r\n        switch ((c = bits)) {\r\n            case 0:\r\n                bits = 0;\r\n                maxpower = Math.pow(2, 8);\r\n                power = 1;\r\n                while (power != maxpower) {\r\n                    resb = data.val & data.position;\r\n                    data.position >>= 1;\r\n                    if (data.position == 0) {\r\n                        data.position = resetValue;\r\n                        data.val = getNextValue(data.index++);\r\n                    }\r\n                    bits |= (resb > 0 ? 1 : 0) * power;\r\n                    power <<= 1;\r\n                }\r\n\r\n                dictionary[dictSize++] = fromCharCode(bits);\r\n                c = dictSize - 1;\r\n                enlargeIn--;\r\n                break;\r\n            case 1:\r\n                bits = 0;\r\n                maxpower = Math.pow(2, 16);\r\n                power = 1;\r\n                while (power != maxpower) {\r\n                    resb = data.val & data.position;\r\n                    data.position >>= 1;\r\n                    if (data.position == 0) {\r\n                        data.position = resetValue;\r\n                        data.val = getNextValue(data.index++);\r\n                    }\r\n                    bits |= (resb > 0 ? 1 : 0) * power;\r\n                    power <<= 1;\r\n                }\r\n                dictionary[dictSize++] = fromCharCode(bits);\r\n                c = dictSize - 1;\r\n                enlargeIn--;\r\n                break;\r\n            case 2:\r\n                return result.join(\"\");\r\n        }\r\n\r\n        if (enlargeIn == 0) {\r\n            enlargeIn = Math.pow(2, numBits);\r\n            numBits++;\r\n        }\r\n\r\n        if (dictionary[c]) {\r\n            // @ts-ignore\r\n            entry = dictionary[c];\r\n        } else {\r\n            if (c === dictSize) {\r\n                entry = w + w.charAt(0);\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        result.push(entry);\r\n\r\n        // Add w+entry[0] to the dictionary.\r\n        dictionary[dictSize++] = w + entry.charAt(0);\r\n        enlargeIn--;\r\n\r\n        w = entry;\r\n\r\n        if (enlargeIn == 0) {\r\n            enlargeIn = Math.pow(2, numBits);\r\n            numBits++;\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/lzstring.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 399,
    "kind": "variable",
    "name": "fromCharCode",
    "memberof": "js/core/lzstring.js",
    "static": true,
    "longname": "js/core/lzstring.js~fromCharCode",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 400,
    "kind": "variable",
    "name": "hasOwnProperty",
    "memberof": "js/core/lzstring.js",
    "static": true,
    "longname": "js/core/lzstring.js~hasOwnProperty",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 401,
    "kind": "variable",
    "name": "keyStrUriSafe",
    "memberof": "js/core/lzstring.js",
    "static": true,
    "longname": "js/core/lzstring.js~keyStrUriSafe",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 402,
    "kind": "variable",
    "name": "baseReverseDic",
    "memberof": "js/core/lzstring.js",
    "static": true,
    "longname": "js/core/lzstring.js~baseReverseDic",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 403,
    "kind": "function",
    "name": "getBaseValue",
    "memberof": "js/core/lzstring.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/lzstring.js~getBaseValue",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "alphabet",
        "types": [
          "*"
        ]
      },
      {
        "name": "character",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 404,
    "kind": "function",
    "name": "compressU8",
    "memberof": "js/core/lzstring.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/lzstring.js~compressU8",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": "{compressU8}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "uncompressed",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 405,
    "kind": "function",
    "name": "compressU8WHeader",
    "memberof": "js/core/lzstring.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/lzstring.js~compressU8WHeader",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": "{compressU8WHeader}",
    "description": "",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uncompressed",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "header",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 406,
    "kind": "function",
    "name": "decompressU8WHeader",
    "memberof": "js/core/lzstring.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/lzstring.js~decompressU8WHeader",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": "{decompressU8WHeader}",
    "description": "",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "Uint8Array"
        ],
        "spread": false,
        "optional": false,
        "name": "compressed",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 407,
    "kind": "function",
    "name": "compressX64",
    "memberof": "js/core/lzstring.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/lzstring.js~compressX64",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": "{compressX64}",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [
      {
        "name": "input",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 408,
    "kind": "function",
    "name": "decompressX64",
    "memberof": "js/core/lzstring.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/lzstring.js~decompressX64",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": "{decompressX64}",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "params": [
      {
        "name": "input",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 409,
    "kind": "function",
    "name": "compress",
    "memberof": "js/core/lzstring.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/lzstring.js~compress",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [
      {
        "name": "uncompressed",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 410,
    "kind": "function",
    "name": "_compress",
    "memberof": "js/core/lzstring.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/lzstring.js~_compress",
    "access": "private",
    "export": false,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "params": [
      {
        "name": "uncompressed",
        "types": [
          "*"
        ]
      },
      {
        "name": "bitsPerChar",
        "types": [
          "*"
        ]
      },
      {
        "name": "getCharFromInt",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 411,
    "kind": "function",
    "name": "decompress",
    "memberof": "js/core/lzstring.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/lzstring.js~decompress",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 320,
    "undocument": true,
    "params": [
      {
        "name": "compressed",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 412,
    "kind": "function",
    "name": "_decompress",
    "memberof": "js/core/lzstring.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/lzstring.js~_decompress",
    "access": "private",
    "export": false,
    "importPath": "shapez.io/js/core/lzstring.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 328,
    "undocument": true,
    "params": [
      {
        "name": "length",
        "types": [
          "*"
        ]
      },
      {
        "name": "resetValue",
        "types": [
          "*"
        ]
      },
      {
        "name": "getNextValue",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 413,
    "kind": "file",
    "name": "js/core/modal_dialog_elements.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\n\r\nimport { Signal, STOP_PROPAGATION } from \"./signal\";\r\nimport { arrayDeleteValue, waitNextFrame } from \"./utils\";\r\nimport { ClickDetector } from \"./click_detector\";\r\nimport { SOUNDS } from \"../platform/sound\";\r\nimport { InputReceiver } from \"./input_receiver\";\r\nimport { FormElement } from \"./modal_dialog_forms\";\r\nimport { globalConfig } from \"./config\";\r\nimport { getStringForKeyCode } from \"../game/key_action_mapper\";\r\nimport { createLogger } from \"./logging\";\r\nimport { T } from \"../translations\";\r\n\r\n/*\r\n * ***************************************************\r\n *\r\n *  LEGACY CODE WARNING\r\n *\r\n *  This is old code from yorg3.io and needs to be refactored\r\n *  @TODO\r\n *\r\n * ***************************************************\r\n */\r\n\r\nconst kbEnter = 13;\r\nconst kbCancel = 27;\r\n\r\nconst logger = createLogger(\"dialogs\");\r\n\r\n/**\r\n * Basic text based dialog\r\n */\r\nexport class Dialog {\r\n    /**\r\n     *\r\n     * Constructs a new dialog with the given options\r\n     * @param {object} param0\r\n     * @param {Application} param0.app\r\n     * @param {string} param0.title Title of the dialog\r\n     * @param {string} param0.contentHTML Inner dialog html\r\n     * @param {Array<string>} param0.buttons\r\n     *  Button list, each button contains of up to 3 parts separated by ':'.\r\n     *  Part 0: The id, one of the one defined in dialog_buttons.yaml\r\n     *  Part 1: The style, either good, bad or misc\r\n     *  Part 2 (optional): Additional parameters separated by '/', available are:\r\n     *    timeout: This button is only available after some waiting time\r\n     *    kb_enter: This button is triggered by the enter key\r\n     *    kb_escape This button is triggered by the escape key\r\n     * @param {string=} param0.type The dialog type, either \"info\" or \"warn\"\r\n     * @param {boolean=} param0.closeButton Whether this dialog has a close button\r\n     */\r\n    constructor({ app, title, contentHTML, buttons, type = \"info\", closeButton = false }) {\r\n        this.app = app;\r\n        this.title = title;\r\n        this.contentHTML = contentHTML;\r\n        this.type = type;\r\n        this.buttonIds = buttons;\r\n        this.closeButton = closeButton;\r\n\r\n        this.closeRequested = new Signal();\r\n        this.buttonSignals = {};\r\n\r\n        for (let i = 0; i < buttons.length; ++i) {\r\n            if (G_IS_DEV && globalConfig.debug.disableTimedButtons) {\r\n                this.buttonIds[i] = this.buttonIds[i].replace(\":timeout\", \"\");\r\n            }\r\n\r\n            const buttonId = this.buttonIds[i].split(\":\")[0];\r\n            this.buttonSignals[buttonId] = new Signal();\r\n        }\r\n\r\n        this.valueChosen = new Signal();\r\n\r\n        this.timeouts = [];\r\n        this.clickDetectors = [];\r\n\r\n        this.inputReciever = new InputReceiver(\"dialog-\" + this.title);\r\n\r\n        this.inputReciever.keydown.add(this.handleKeydown, this);\r\n\r\n        this.enterHandler = null;\r\n        this.escapeHandler = null;\r\n    }\r\n\r\n    /**\r\n     * Internal keydown handler\r\n     * @param {object} param0\r\n     * @param {number} param0.keyCode\r\n     * @param {boolean} param0.shift\r\n     * @param {boolean} param0.alt\r\n     */\r\n    handleKeydown({ keyCode, shift, alt }) {\r\n        if (keyCode === kbEnter && this.enterHandler) {\r\n            this.internalButtonHandler(this.enterHandler);\r\n            return STOP_PROPAGATION;\r\n        }\r\n\r\n        if (keyCode === kbCancel && this.escapeHandler) {\r\n            this.internalButtonHandler(this.escapeHandler);\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    internalButtonHandler(id, ...payload) {\r\n        this.app.inputMgr.popReciever(this.inputReciever);\r\n\r\n        if (id !== \"close-button\") {\r\n            this.buttonSignals[id].dispatch(...payload);\r\n        }\r\n        this.closeRequested.dispatch();\r\n    }\r\n\r\n    createElement() {\r\n        const elem = document.createElement(\"div\");\r\n        elem.classList.add(\"ingameDialog\");\r\n\r\n        this.dialogElem = document.createElement(\"div\");\r\n        this.dialogElem.classList.add(\"dialogInner\");\r\n\r\n        if (this.type) {\r\n            this.dialogElem.classList.add(this.type);\r\n        }\r\n        elem.appendChild(this.dialogElem);\r\n\r\n        const title = document.createElement(\"h1\");\r\n        title.innerText = this.title;\r\n        title.classList.add(\"title\");\r\n        this.dialogElem.appendChild(title);\r\n\r\n        if (this.closeButton) {\r\n            this.dialogElem.classList.add(\"hasCloseButton\");\r\n\r\n            const closeBtn = document.createElement(\"button\");\r\n            closeBtn.classList.add(\"closeButton\");\r\n\r\n            this.trackClicks(closeBtn, () => this.internalButtonHandler(\"close-button\"), {\r\n                applyCssClass: \"pressedSmallElement\",\r\n            });\r\n\r\n            title.appendChild(closeBtn);\r\n            this.inputReciever.backButton.add(() => this.internalButtonHandler(\"close-button\"));\r\n        }\r\n\r\n        const content = document.createElement(\"div\");\r\n        content.classList.add(\"content\");\r\n        content.innerHTML = this.contentHTML;\r\n        this.dialogElem.appendChild(content);\r\n\r\n        if (this.buttonIds.length > 0) {\r\n            const buttons = document.createElement(\"div\");\r\n            buttons.classList.add(\"buttons\");\r\n\r\n            // Create buttons\r\n            for (let i = 0; i < this.buttonIds.length; ++i) {\r\n                const [buttonId, buttonStyle, rawParams] = this.buttonIds[i].split(\":\");\r\n\r\n                const button = document.createElement(\"button\");\r\n                button.classList.add(\"button\");\r\n                button.classList.add(\"styledButton\");\r\n                button.classList.add(buttonStyle);\r\n                button.innerText = T.dialogs.buttons[buttonId];\r\n\r\n                const params = (rawParams || \"\").split(\"/\");\r\n                const useTimeout = params.indexOf(\"timeout\") >= 0;\r\n\r\n                const isEnter = params.indexOf(\"enter\") >= 0;\r\n                const isEscape = params.indexOf(\"escape\") >= 0;\r\n\r\n                if (isEscape && this.closeButton) {\r\n                    logger.warn(\"Showing dialog with close button, and additional cancel button\");\r\n                }\r\n\r\n                if (useTimeout) {\r\n                    button.classList.add(\"timedButton\");\r\n                    const timeout = setTimeout(() => {\r\n                        button.classList.remove(\"timedButton\");\r\n                        arrayDeleteValue(this.timeouts, timeout);\r\n                    }, 3000);\r\n                    this.timeouts.push(timeout);\r\n                }\r\n                if (isEnter || isEscape) {\r\n                    // if (this.app.settings.getShowKeyboardShortcuts()) {\r\n                    // Show keybinding\r\n                    const spacer = document.createElement(\"code\");\r\n                    spacer.classList.add(\"keybinding\");\r\n                    spacer.innerHTML = getStringForKeyCode(isEnter ? kbEnter : kbCancel);\r\n                    button.appendChild(spacer);\r\n                    // }\r\n\r\n                    if (isEnter) {\r\n                        this.enterHandler = buttonId;\r\n                    }\r\n                    if (isEscape) {\r\n                        this.escapeHandler = buttonId;\r\n                    }\r\n                }\r\n\r\n                this.trackClicks(button, () => this.internalButtonHandler(buttonId));\r\n                buttons.appendChild(button);\r\n            }\r\n\r\n            this.dialogElem.appendChild(buttons);\r\n        } else {\r\n            this.dialogElem.classList.add(\"buttonless\");\r\n        }\r\n\r\n        this.element = elem;\r\n        this.app.inputMgr.pushReciever(this.inputReciever);\r\n\r\n        return this.element;\r\n    }\r\n\r\n    setIndex(index) {\r\n        this.element.style.zIndex = index;\r\n    }\r\n\r\n    destroy() {\r\n        if (!this.element) {\r\n            assert(false, \"Tried to destroy dialog twice\");\r\n            return;\r\n        }\r\n        // We need to do this here, because if the backbutton event gets\r\n        // dispatched to the modal dialogs, it will not call the internalButtonHandler,\r\n        // and thus our receiver stays attached the whole time\r\n        this.app.inputMgr.destroyReceiver(this.inputReciever);\r\n\r\n        for (let i = 0; i < this.clickDetectors.length; ++i) {\r\n            this.clickDetectors[i].cleanup();\r\n        }\r\n        this.clickDetectors = [];\r\n\r\n        this.element.remove();\r\n        this.element = null;\r\n\r\n        for (let i = 0; i < this.timeouts.length; ++i) {\r\n            clearTimeout(this.timeouts[i]);\r\n        }\r\n        this.timeouts = [];\r\n    }\r\n\r\n    hide() {\r\n        this.element.classList.remove(\"visible\");\r\n    }\r\n\r\n    show() {\r\n        this.element.classList.add(\"visible\");\r\n    }\r\n\r\n    /**\r\n     * Helper method to track clicks on an element\r\n     * @param {Element} elem\r\n     * @param {function():void} handler\r\n     * @param {import(\"./click_detector\").ClickDetectorConstructorArgs=} args\r\n     * @returns {ClickDetector}\r\n     */\r\n    trackClicks(elem, handler, args = {}) {\r\n        const detector = new ClickDetector(elem, args);\r\n        detector.click.add(handler, this);\r\n        this.clickDetectors.push(detector);\r\n        return detector;\r\n    }\r\n}\r\n\r\n/**\r\n * Dialog which simply shows a loading spinner\r\n */\r\nexport class DialogLoading extends Dialog {\r\n    constructor(app) {\r\n        super({\r\n            app,\r\n            title: \"\",\r\n            contentHTML: \"\",\r\n            buttons: [],\r\n            type: \"loading\",\r\n        });\r\n\r\n        // Loading dialog can not get closed with back button\r\n        this.inputReciever.backButton.removeAll();\r\n        this.inputReciever.context = \"dialog-loading\";\r\n    }\r\n\r\n    createElement() {\r\n        const elem = document.createElement(\"div\");\r\n        elem.classList.add(\"ingameDialog\");\r\n        elem.classList.add(\"loadingDialog\");\r\n        this.element = elem;\r\n\r\n        const loader = document.createElement(\"div\");\r\n        loader.classList.add(\"prefab_LoadingTextWithAnim\");\r\n        loader.classList.add(\"loadingIndicator\");\r\n        elem.appendChild(loader);\r\n\r\n        this.app.inputMgr.pushReciever(this.inputReciever);\r\n\r\n        return elem;\r\n    }\r\n}\r\n\r\nexport class DialogOptionChooser extends Dialog {\r\n    constructor({ app, title, options }) {\r\n        let html = \"<div class='optionParent'>\";\r\n\r\n        options.options.forEach(({ value, text, desc = null, iconPrefix = null }) => {\r\n            const descHtml = desc ? `<span class=\"desc\">${desc}</span>` : \"\";\r\n            let iconHtml = iconPrefix ? `<span class=\"icon icon-${iconPrefix}-${value}\"></span>` : \"\";\r\n            html += `\r\n                <div class='option ${value === options.active ? \"active\" : \"\"} ${\r\n                iconPrefix ? \"hasIcon\" : \"\"\r\n            }' data-optionvalue='${value}'>\r\n                    ${iconHtml}    \r\n                    <span class='title'>${text}</span>\r\n                    ${descHtml}\r\n                </div>\r\n                `;\r\n        });\r\n\r\n        html += \"</div>\";\r\n        super({\r\n            app,\r\n            title,\r\n            contentHTML: html,\r\n            buttons: [],\r\n            type: \"info\",\r\n            closeButton: true,\r\n        });\r\n\r\n        this.options = options;\r\n        this.initialOption = options.active;\r\n\r\n        this.buttonSignals.optionSelected = new Signal();\r\n    }\r\n\r\n    createElement() {\r\n        const div = super.createElement();\r\n        this.dialogElem.classList.add(\"optionChooserDialog\");\r\n\r\n        div.querySelectorAll(\"[data-optionvalue]\").forEach(handle => {\r\n            const value = handle.getAttribute(\"data-optionvalue\");\r\n            if (!handle) {\r\n                logger.error(\"Failed to bind option value in dialog:\", value);\r\n                return;\r\n            }\r\n            // Need click detector here to forward elements, otherwise scrolling does not work\r\n            const detector = new ClickDetector(handle, {\r\n                consumeEvents: false,\r\n                preventDefault: false,\r\n                clickSound: null,\r\n                applyCssClass: \"pressedOption\",\r\n                targetOnly: true,\r\n            });\r\n            this.clickDetectors.push(detector);\r\n\r\n            if (value !== this.initialOption) {\r\n                detector.click.add(() => {\r\n                    const selected = div.querySelector(\".option.active\");\r\n                    if (selected) {\r\n                        selected.classList.remove(\"active\");\r\n                    } else {\r\n                        logger.warn(\"No selected option\");\r\n                    }\r\n                    handle.classList.add(\"active\");\r\n                    this.app.sound.playUiSound(SOUNDS.uiClick);\r\n                    this.internalButtonHandler(\"optionSelected\", value);\r\n                });\r\n            }\r\n        });\r\n        return div;\r\n    }\r\n}\r\n\r\nexport class DialogWithForm extends Dialog {\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {Application} param0.app\r\n     * @param {string} param0.title\r\n     * @param {string} param0.desc\r\n     * @param {array=} param0.buttons\r\n     * @param {string=} param0.confirmButtonId\r\n     * @param {string=} param0.extraButton\r\n     * @param {boolean=} param0.closeButton\r\n     * @param {Array<FormElement>} param0.formElements\r\n     */\r\n    constructor({\r\n        app,\r\n        title,\r\n        desc,\r\n        formElements,\r\n        buttons = [\"cancel\", \"ok:good\"],\r\n        confirmButtonId = \"ok\",\r\n        closeButton = true,\r\n    }) {\r\n        let html = \"\";\r\n        html += desc + \"<br>\";\r\n        for (let i = 0; i < formElements.length; ++i) {\r\n            html += formElements[i].getHtml();\r\n        }\r\n\r\n        super({\r\n            app,\r\n            title: title,\r\n            contentHTML: html,\r\n            buttons: buttons,\r\n            type: \"info\",\r\n            closeButton,\r\n        });\r\n        this.confirmButtonId = confirmButtonId;\r\n        this.formElements = formElements;\r\n\r\n        this.enterHandler = confirmButtonId;\r\n    }\r\n\r\n    internalButtonHandler(id, ...payload) {\r\n        if (id === this.confirmButtonId) {\r\n            if (this.hasAnyInvalid()) {\r\n                this.dialogElem.classList.remove(\"errorShake\");\r\n                waitNextFrame().then(() => {\r\n                    if (this.dialogElem) {\r\n                        this.dialogElem.classList.add(\"errorShake\");\r\n                    }\r\n                });\r\n                this.app.sound.playUiSound(SOUNDS.uiError);\r\n                return;\r\n            }\r\n        }\r\n\r\n        super.internalButtonHandler(id, payload);\r\n    }\r\n\r\n    hasAnyInvalid() {\r\n        for (let i = 0; i < this.formElements.length; ++i) {\r\n            if (!this.formElements[i].isValid()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    createElement() {\r\n        const div = super.createElement();\r\n\r\n        for (let i = 0; i < this.formElements.length; ++i) {\r\n            const elem = this.formElements[i];\r\n            elem.bindEvents(div, this.clickDetectors);\r\n            elem.valueChosen.add(this.closeRequested.dispatch, this.closeRequested);\r\n            elem.valueChosen.add(this.valueChosen.dispatch, this.valueChosen);\r\n        }\r\n\r\n        waitNextFrame().then(() => {\r\n            this.formElements[this.formElements.length - 1].focus();\r\n        });\r\n\r\n        return div;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/modal_dialog_elements.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 414,
    "kind": "variable",
    "name": "kbEnter",
    "memberof": "js/core/modal_dialog_elements.js",
    "static": true,
    "longname": "js/core/modal_dialog_elements.js~kbEnter",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/modal_dialog_elements.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 415,
    "kind": "variable",
    "name": "kbCancel",
    "memberof": "js/core/modal_dialog_elements.js",
    "static": true,
    "longname": "js/core/modal_dialog_elements.js~kbCancel",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/modal_dialog_elements.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 416,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/modal_dialog_elements.js",
    "static": true,
    "longname": "js/core/modal_dialog_elements.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/modal_dialog_elements.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 417,
    "kind": "class",
    "name": "Dialog",
    "memberof": "js/core/modal_dialog_elements.js",
    "static": true,
    "longname": "js/core/modal_dialog_elements.js~Dialog",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/modal_dialog_elements.js",
    "importStyle": "{Dialog}",
    "description": "Basic text based dialog",
    "lineNumber": 35,
    "interface": false
  },
  {
    "__docId__": 418,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#constructor",
    "access": "public",
    "description": "\nConstructs a new dialog with the given options",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.app",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.title",
        "description": "Title of the dialog"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.contentHTML",
        "description": "Inner dialog html"
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.buttons",
        "description": "Button list, each button contains of up to 3 parts separated by ':'.\n Part 0: The id, one of the one defined in dialog_buttons.yaml\n Part 1: The style, either good, bad or misc\n Part 2 (optional): Additional parameters separated by '/', available are:\n   timeout: This button is only available after some waiting time\n   kb_enter: This button is triggered by the enter key\n   kb_escape This button is triggered by the escape key"
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.type",
        "description": "The dialog type, either \"info\" or \"warn\""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.closeButton",
        "description": "Whether this dialog has a close button"
      }
    ]
  },
  {
    "__docId__": 419,
    "kind": "member",
    "name": "app",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#app",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 420,
    "kind": "member",
    "name": "title",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#title",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 421,
    "kind": "member",
    "name": "contentHTML",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#contentHTML",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "member",
    "name": "type",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#type",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 423,
    "kind": "member",
    "name": "buttonIds",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#buttonIds",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 424,
    "kind": "member",
    "name": "closeButton",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#closeButton",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 425,
    "kind": "member",
    "name": "closeRequested",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#closeRequested",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 426,
    "kind": "member",
    "name": "buttonSignals",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#buttonSignals",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 427,
    "kind": "member",
    "name": "valueChosen",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#valueChosen",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 428,
    "kind": "member",
    "name": "timeouts",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#timeouts",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 429,
    "kind": "member",
    "name": "clickDetectors",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#clickDetectors",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 430,
    "kind": "member",
    "name": "inputReciever",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#inputReciever",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 431,
    "kind": "member",
    "name": "enterHandler",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#enterHandler",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 432,
    "kind": "member",
    "name": "escapeHandler",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#escapeHandler",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 433,
    "kind": "method",
    "name": "handleKeydown",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#handleKeydown",
    "access": "public",
    "description": "Internal keydown handler",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.keyCode",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.shift",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.alt",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 434,
    "kind": "method",
    "name": "internalButtonHandler",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#internalButtonHandler",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "payload",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 435,
    "kind": "method",
    "name": "createElement",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#createElement",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 436,
    "kind": "member",
    "name": "dialogElem",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#dialogElem",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 439,
    "kind": "member",
    "name": "element",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#element",
    "access": "public",
    "description": null,
    "lineNumber": 209,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 440,
    "kind": "method",
    "name": "setIndex",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#setIndex",
    "access": "public",
    "description": null,
    "lineNumber": 215,
    "undocument": true,
    "params": [
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 441,
    "kind": "method",
    "name": "destroy",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#destroy",
    "access": "public",
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 445,
    "kind": "method",
    "name": "hide",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#hide",
    "access": "public",
    "description": null,
    "lineNumber": 243,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 446,
    "kind": "method",
    "name": "show",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#show",
    "access": "public",
    "description": null,
    "lineNumber": 247,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 447,
    "kind": "method",
    "name": "trackClicks",
    "memberof": "js/core/modal_dialog_elements.js~Dialog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~Dialog#trackClicks",
    "access": "public",
    "description": "Helper method to track clicks on an element",
    "lineNumber": 258,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ClickDetector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function():void"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "import(\"./click_detector\").ClickDetectorConstructorArgs="
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ClickDetector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 448,
    "kind": "class",
    "name": "DialogLoading",
    "memberof": "js/core/modal_dialog_elements.js",
    "static": true,
    "longname": "js/core/modal_dialog_elements.js~DialogLoading",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/modal_dialog_elements.js",
    "importStyle": "{DialogLoading}",
    "description": "Dialog which simply shows a loading spinner",
    "lineNumber": 269,
    "interface": false,
    "extends": [
      "Dialog"
    ]
  },
  {
    "__docId__": 449,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/modal_dialog_elements.js~DialogLoading",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogLoading#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 270,
    "undocument": true
  },
  {
    "__docId__": 450,
    "kind": "method",
    "name": "createElement",
    "memberof": "js/core/modal_dialog_elements.js~DialogLoading",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogLoading#createElement",
    "access": "public",
    "description": null,
    "lineNumber": 284,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 451,
    "kind": "member",
    "name": "element",
    "memberof": "js/core/modal_dialog_elements.js~DialogLoading",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogLoading#element",
    "access": "public",
    "description": null,
    "lineNumber": 288,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 452,
    "kind": "class",
    "name": "DialogOptionChooser",
    "memberof": "js/core/modal_dialog_elements.js",
    "static": true,
    "longname": "js/core/modal_dialog_elements.js~DialogOptionChooser",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/modal_dialog_elements.js",
    "importStyle": "{DialogOptionChooser}",
    "description": null,
    "lineNumber": 301,
    "undocument": true,
    "interface": false,
    "extends": [
      "Dialog"
    ]
  },
  {
    "__docId__": 453,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/modal_dialog_elements.js~DialogOptionChooser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogOptionChooser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 302,
    "undocument": true
  },
  {
    "__docId__": 454,
    "kind": "member",
    "name": "options",
    "memberof": "js/core/modal_dialog_elements.js~DialogOptionChooser",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogOptionChooser#options",
    "access": "public",
    "description": null,
    "lineNumber": 329,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 455,
    "kind": "member",
    "name": "initialOption",
    "memberof": "js/core/modal_dialog_elements.js~DialogOptionChooser",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogOptionChooser#initialOption",
    "access": "public",
    "description": null,
    "lineNumber": 330,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 456,
    "kind": "method",
    "name": "createElement",
    "memberof": "js/core/modal_dialog_elements.js~DialogOptionChooser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogOptionChooser#createElement",
    "access": "public",
    "description": null,
    "lineNumber": 335,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 457,
    "kind": "class",
    "name": "DialogWithForm",
    "memberof": "js/core/modal_dialog_elements.js",
    "static": true,
    "longname": "js/core/modal_dialog_elements.js~DialogWithForm",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/modal_dialog_elements.js",
    "importStyle": "{DialogWithForm}",
    "description": null,
    "lineNumber": 373,
    "undocument": true,
    "interface": false,
    "extends": [
      "Dialog"
    ]
  },
  {
    "__docId__": 458,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/modal_dialog_elements.js~DialogWithForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogWithForm#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 386,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.app",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.title",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.desc",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "array="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.buttons",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.confirmButtonId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.extraButton",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.closeButton",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<FormElement>"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.formElements",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 459,
    "kind": "member",
    "name": "confirmButtonId",
    "memberof": "js/core/modal_dialog_elements.js~DialogWithForm",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogWithForm#confirmButtonId",
    "access": "public",
    "description": null,
    "lineNumber": 409,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 460,
    "kind": "member",
    "name": "formElements",
    "memberof": "js/core/modal_dialog_elements.js~DialogWithForm",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogWithForm#formElements",
    "access": "public",
    "description": null,
    "lineNumber": 410,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 461,
    "kind": "member",
    "name": "enterHandler",
    "memberof": "js/core/modal_dialog_elements.js~DialogWithForm",
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogWithForm#enterHandler",
    "access": "public",
    "description": null,
    "lineNumber": 412,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 462,
    "kind": "method",
    "name": "internalButtonHandler",
    "memberof": "js/core/modal_dialog_elements.js~DialogWithForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogWithForm#internalButtonHandler",
    "access": "public",
    "description": null,
    "lineNumber": 415,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "payload",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 463,
    "kind": "method",
    "name": "hasAnyInvalid",
    "memberof": "js/core/modal_dialog_elements.js~DialogWithForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogWithForm#hasAnyInvalid",
    "access": "public",
    "description": null,
    "lineNumber": 432,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 464,
    "kind": "method",
    "name": "createElement",
    "memberof": "js/core/modal_dialog_elements.js~DialogWithForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_elements.js~DialogWithForm#createElement",
    "access": "public",
    "description": null,
    "lineNumber": 441,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 465,
    "kind": "file",
    "name": "js/core/modal_dialog_forms.js",
    "content": "import { BaseItem } from \"../game/base_item\";\r\nimport { ClickDetector } from \"./click_detector\";\r\nimport { Signal } from \"./signal\";\r\n\r\n/*\r\n * ***************************************************\r\n *\r\n *  LEGACY CODE WARNING\r\n *\r\n *  This is old code from yorg3.io and needs to be refactored\r\n *  @TODO\r\n *\r\n * ***************************************************\r\n */\r\n\r\nexport class FormElement {\r\n    constructor(id, label) {\r\n        this.id = id;\r\n        this.label = label;\r\n\r\n        this.valueChosen = new Signal();\r\n    }\r\n\r\n    getHtml() {\r\n        abstract;\r\n        return \"\";\r\n    }\r\n\r\n    getFormElement(parent) {\r\n        return parent.querySelector(\"[data-formId='\" + this.id + \"']\");\r\n    }\r\n\r\n    bindEvents(parent, clickTrackers) {\r\n        abstract;\r\n    }\r\n\r\n    focus() {}\r\n\r\n    isValid() {\r\n        return true;\r\n    }\r\n\r\n    /** @returns {any} */\r\n    getValue() {\r\n        abstract;\r\n    }\r\n}\r\n\r\nexport class FormElementInput extends FormElement {\r\n    constructor({ id, label = null, placeholder, defaultValue = \"\", inputType = \"text\", validator = null }) {\r\n        super(id, label);\r\n        this.placeholder = placeholder;\r\n        this.defaultValue = defaultValue;\r\n        this.inputType = inputType;\r\n        this.validator = validator;\r\n\r\n        this.element = null;\r\n    }\r\n\r\n    getHtml() {\r\n        let classes = [];\r\n        let inputType = \"text\";\r\n        let maxlength = 256;\r\n        switch (this.inputType) {\r\n            case \"text\": {\r\n                classes.push(\"input-text\");\r\n                break;\r\n            }\r\n\r\n            case \"email\": {\r\n                classes.push(\"input-email\");\r\n                inputType = \"email\";\r\n                break;\r\n            }\r\n\r\n            case \"token\": {\r\n                classes.push(\"input-token\");\r\n                inputType = \"text\";\r\n                maxlength = 4;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return `\r\n            <div class=\"formElement input\">\r\n                ${this.label ? `<label>${this.label}</label>` : \"\"}\r\n                <input\r\n                    type=\"${inputType}\"\r\n                    value=\"${this.defaultValue.replace(/[\"\\\\]+/gi, \"\")}\"\r\n                    maxlength=\"${maxlength}\"\r\n                    autocomplete=\"off\"\r\n                    autocorrect=\"off\"\r\n                    autocapitalize=\"off\"\r\n                    spellcheck=\"false\"\r\n                    class=\"${classes.join(\" \")}\"\r\n                    placeholder=\"${this.placeholder.replace(/[\"\\\\]+/gi, \"\")}\"\r\n                    data-formId=\"${this.id}\">\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    bindEvents(parent, clickTrackers) {\r\n        this.element = this.getFormElement(parent);\r\n        this.element.addEventListener(\"input\", event => this.updateErrorState());\r\n        this.updateErrorState();\r\n    }\r\n\r\n    updateErrorState() {\r\n        this.element.classList.toggle(\"errored\", !this.isValid());\r\n    }\r\n\r\n    isValid() {\r\n        return !this.validator || this.validator(this.element.value);\r\n    }\r\n\r\n    getValue() {\r\n        return this.element.value;\r\n    }\r\n\r\n    focus() {\r\n        this.element.focus();\r\n    }\r\n}\r\n\r\nexport class FormElementCheckbox extends FormElement {\r\n    constructor({ id, label, defaultValue = true }) {\r\n        super(id, label);\r\n        this.defaultValue = defaultValue;\r\n        this.value = this.defaultValue;\r\n\r\n        this.element = null;\r\n    }\r\n\r\n    getHtml() {\r\n        return `\r\n            <div class=\"formElement checkBoxFormElem\">\r\n            ${this.label ? `<label>${this.label}</label>` : \"\"}\r\n                <div class=\"checkbox ${this.defaultValue ? \"checked\" : \"\"}\" data-formId='${this.id}'>\r\n                    <span class=\"knob\"></span >\r\n                </div >\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    bindEvents(parent, clickTrackers) {\r\n        this.element = this.getFormElement(parent);\r\n        const detector = new ClickDetector(this.element, {\r\n            consumeEvents: false,\r\n            preventDefault: false,\r\n        });\r\n        clickTrackers.push(detector);\r\n        detector.click.add(this.toggle, this);\r\n    }\r\n\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n\r\n    toggle() {\r\n        this.value = !this.value;\r\n        this.element.classList.toggle(\"checked\", this.value);\r\n    }\r\n\r\n    focus(parent) {}\r\n}\r\n\r\nexport class FormElementItemChooser extends FormElement {\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {string} param0.id\r\n     * @param {string=} param0.label\r\n     * @param {Array<BaseItem>} param0.items\r\n     */\r\n    constructor({ id, label, items = [] }) {\r\n        super(id, label);\r\n        this.items = items;\r\n        this.element = null;\r\n\r\n        /**\r\n         * @type {BaseItem}\r\n         */\r\n        this.chosenItem = null;\r\n    }\r\n\r\n    getHtml() {\r\n        let classes = [];\r\n\r\n        return `\r\n            <div class=\"formElement\">\r\n                ${this.label ? `<label>${this.label}</label>` : \"\"}\r\n                <div class=\"ingameItemChooser input\" data-formId=\"${this.id}\"></div>\r\n            </div>\r\n            `;\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement} parent\r\n     * @param {Array<ClickDetector>} clickTrackers\r\n     */\r\n    bindEvents(parent, clickTrackers) {\r\n        this.element = this.getFormElement(parent);\r\n\r\n        for (let i = 0; i < this.items.length; ++i) {\r\n            const item = this.items[i];\r\n\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = 128;\r\n            canvas.height = 128;\r\n            const context = canvas.getContext(\"2d\");\r\n            item.drawFullSizeOnCanvas(context, 128);\r\n            this.element.appendChild(canvas);\r\n\r\n            const detector = new ClickDetector(canvas, {});\r\n            clickTrackers.push(detector);\r\n            detector.click.add(() => {\r\n                this.chosenItem = item;\r\n                this.valueChosen.dispatch(item);\r\n            });\r\n        }\r\n    }\r\n\r\n    isValid() {\r\n        return true;\r\n    }\r\n\r\n    getValue() {\r\n        return null;\r\n    }\r\n\r\n    focus() {}\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/modal_dialog_forms.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 466,
    "kind": "class",
    "name": "FormElement",
    "memberof": "js/core/modal_dialog_forms.js",
    "static": true,
    "longname": "js/core/modal_dialog_forms.js~FormElement",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/modal_dialog_forms.js",
    "importStyle": "{FormElement}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 467,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/modal_dialog_forms.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElement#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 468,
    "kind": "member",
    "name": "id",
    "memberof": "js/core/modal_dialog_forms.js~FormElement",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElement#id",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 469,
    "kind": "member",
    "name": "label",
    "memberof": "js/core/modal_dialog_forms.js~FormElement",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElement#label",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 470,
    "kind": "member",
    "name": "valueChosen",
    "memberof": "js/core/modal_dialog_forms.js~FormElement",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElement#valueChosen",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 471,
    "kind": "method",
    "name": "getHtml",
    "memberof": "js/core/modal_dialog_forms.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElement#getHtml",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 472,
    "kind": "method",
    "name": "getFormElement",
    "memberof": "js/core/modal_dialog_forms.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElement#getFormElement",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 473,
    "kind": "method",
    "name": "bindEvents",
    "memberof": "js/core/modal_dialog_forms.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElement#bindEvents",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "clickTrackers",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 474,
    "kind": "method",
    "name": "focus",
    "memberof": "js/core/modal_dialog_forms.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElement#focus",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 475,
    "kind": "method",
    "name": "isValid",
    "memberof": "js/core/modal_dialog_forms.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElement#isValid",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 476,
    "kind": "method",
    "name": "getValue",
    "memberof": "js/core/modal_dialog_forms.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElement#getValue",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 477,
    "kind": "class",
    "name": "FormElementInput",
    "memberof": "js/core/modal_dialog_forms.js",
    "static": true,
    "longname": "js/core/modal_dialog_forms.js~FormElementInput",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/modal_dialog_forms.js",
    "importStyle": "{FormElementInput}",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "interface": false,
    "extends": [
      "FormElement"
    ]
  },
  {
    "__docId__": 478,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/modal_dialog_forms.js~FormElementInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementInput#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 479,
    "kind": "member",
    "name": "placeholder",
    "memberof": "js/core/modal_dialog_forms.js~FormElementInput",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementInput#placeholder",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 480,
    "kind": "member",
    "name": "defaultValue",
    "memberof": "js/core/modal_dialog_forms.js~FormElementInput",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementInput#defaultValue",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 481,
    "kind": "member",
    "name": "inputType",
    "memberof": "js/core/modal_dialog_forms.js~FormElementInput",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementInput#inputType",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 482,
    "kind": "member",
    "name": "validator",
    "memberof": "js/core/modal_dialog_forms.js~FormElementInput",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementInput#validator",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 483,
    "kind": "member",
    "name": "element",
    "memberof": "js/core/modal_dialog_forms.js~FormElementInput",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementInput#element",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 484,
    "kind": "method",
    "name": "getHtml",
    "memberof": "js/core/modal_dialog_forms.js~FormElementInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementInput#getHtml",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 485,
    "kind": "method",
    "name": "bindEvents",
    "memberof": "js/core/modal_dialog_forms.js~FormElementInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementInput#bindEvents",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "clickTrackers",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 487,
    "kind": "method",
    "name": "updateErrorState",
    "memberof": "js/core/modal_dialog_forms.js~FormElementInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementInput#updateErrorState",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 488,
    "kind": "method",
    "name": "isValid",
    "memberof": "js/core/modal_dialog_forms.js~FormElementInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementInput#isValid",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 489,
    "kind": "method",
    "name": "getValue",
    "memberof": "js/core/modal_dialog_forms.js~FormElementInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementInput#getValue",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 490,
    "kind": "method",
    "name": "focus",
    "memberof": "js/core/modal_dialog_forms.js~FormElementInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementInput#focus",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 491,
    "kind": "class",
    "name": "FormElementCheckbox",
    "memberof": "js/core/modal_dialog_forms.js",
    "static": true,
    "longname": "js/core/modal_dialog_forms.js~FormElementCheckbox",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/modal_dialog_forms.js",
    "importStyle": "{FormElementCheckbox}",
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "interface": false,
    "extends": [
      "FormElement"
    ]
  },
  {
    "__docId__": 492,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/modal_dialog_forms.js~FormElementCheckbox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementCheckbox#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true
  },
  {
    "__docId__": 493,
    "kind": "member",
    "name": "defaultValue",
    "memberof": "js/core/modal_dialog_forms.js~FormElementCheckbox",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementCheckbox#defaultValue",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 494,
    "kind": "member",
    "name": "value",
    "memberof": "js/core/modal_dialog_forms.js~FormElementCheckbox",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementCheckbox#value",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 495,
    "kind": "member",
    "name": "element",
    "memberof": "js/core/modal_dialog_forms.js~FormElementCheckbox",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementCheckbox#element",
    "access": "public",
    "description": null,
    "lineNumber": 131,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 496,
    "kind": "method",
    "name": "getHtml",
    "memberof": "js/core/modal_dialog_forms.js~FormElementCheckbox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementCheckbox#getHtml",
    "access": "public",
    "description": null,
    "lineNumber": 134,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 497,
    "kind": "method",
    "name": "bindEvents",
    "memberof": "js/core/modal_dialog_forms.js~FormElementCheckbox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementCheckbox#bindEvents",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "clickTrackers",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 499,
    "kind": "method",
    "name": "getValue",
    "memberof": "js/core/modal_dialog_forms.js~FormElementCheckbox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementCheckbox#getValue",
    "access": "public",
    "description": null,
    "lineNumber": 155,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 500,
    "kind": "method",
    "name": "toggle",
    "memberof": "js/core/modal_dialog_forms.js~FormElementCheckbox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementCheckbox#toggle",
    "access": "public",
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 502,
    "kind": "method",
    "name": "focus",
    "memberof": "js/core/modal_dialog_forms.js~FormElementCheckbox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementCheckbox#focus",
    "access": "public",
    "description": null,
    "lineNumber": 164,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 503,
    "kind": "class",
    "name": "FormElementItemChooser",
    "memberof": "js/core/modal_dialog_forms.js",
    "static": true,
    "longname": "js/core/modal_dialog_forms.js~FormElementItemChooser",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/modal_dialog_forms.js",
    "importStyle": "{FormElementItemChooser}",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "interface": false,
    "extends": [
      "FormElement"
    ]
  },
  {
    "__docId__": 504,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/modal_dialog_forms.js~FormElementItemChooser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementItemChooser#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 175,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.label",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<BaseItem>"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.items",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 505,
    "kind": "member",
    "name": "items",
    "memberof": "js/core/modal_dialog_forms.js~FormElementItemChooser",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementItemChooser#items",
    "access": "public",
    "description": null,
    "lineNumber": 177,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 506,
    "kind": "member",
    "name": "element",
    "memberof": "js/core/modal_dialog_forms.js~FormElementItemChooser",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementItemChooser#element",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 507,
    "kind": "member",
    "name": "chosenItem",
    "memberof": "js/core/modal_dialog_forms.js~FormElementItemChooser",
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementItemChooser#chosenItem",
    "access": "public",
    "description": "",
    "lineNumber": 183,
    "type": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 508,
    "kind": "method",
    "name": "getHtml",
    "memberof": "js/core/modal_dialog_forms.js~FormElementItemChooser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementItemChooser#getHtml",
    "access": "public",
    "description": null,
    "lineNumber": 186,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 509,
    "kind": "method",
    "name": "bindEvents",
    "memberof": "js/core/modal_dialog_forms.js~FormElementItemChooser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementItemChooser#bindEvents",
    "access": "public",
    "description": "",
    "lineNumber": 201,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<ClickDetector>"
        ],
        "spread": false,
        "optional": false,
        "name": "clickTrackers",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 512,
    "kind": "method",
    "name": "isValid",
    "memberof": "js/core/modal_dialog_forms.js~FormElementItemChooser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementItemChooser#isValid",
    "access": "public",
    "description": null,
    "lineNumber": 223,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 513,
    "kind": "method",
    "name": "getValue",
    "memberof": "js/core/modal_dialog_forms.js~FormElementItemChooser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementItemChooser#getValue",
    "access": "public",
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 514,
    "kind": "method",
    "name": "focus",
    "memberof": "js/core/modal_dialog_forms.js~FormElementItemChooser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/modal_dialog_forms.js~FormElementItemChooser#focus",
    "access": "public",
    "description": null,
    "lineNumber": 231,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 515,
    "kind": "file",
    "name": "js/core/polyfills.js",
    "content": "function mathPolyfills() {\r\n    // Converts from degrees to radians.\r\n    Math.radians = function (degrees) {\r\n        return (degrees * Math.PI) / 180.0;\r\n    };\r\n\r\n    // Converts from radians to degrees.\r\n    Math.degrees = function (radians) {\r\n        return (radians * 180.0) / Math.PI;\r\n    };\r\n}\r\n\r\nfunction stringPolyfills() {\r\n    // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\n    if (!String.prototype.padStart) {\r\n        String.prototype.padStart = function padStart(targetLength, padString) {\r\n            targetLength = targetLength >> 0; //truncate if number, or convert non-number to 0;\r\n            padString = String(typeof padString !== \"undefined\" ? padString : \" \");\r\n            if (this.length >= targetLength) {\r\n                return String(this);\r\n            } else {\r\n                targetLength = targetLength - this.length;\r\n                if (targetLength > padString.length) {\r\n                    padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\r\n                }\r\n                return padString.slice(0, targetLength) + String(this);\r\n            }\r\n        };\r\n    }\r\n\r\n    // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\r\n    if (!String.prototype.padEnd) {\r\n        String.prototype.padEnd = function padEnd(targetLength, padString) {\r\n            targetLength = targetLength >> 0; //floor if number or convert non-number to 0;\r\n            padString = String(typeof padString !== \"undefined\" ? padString : \" \");\r\n            if (this.length > targetLength) {\r\n                return String(this);\r\n            } else {\r\n                targetLength = targetLength - this.length;\r\n                if (targetLength > padString.length) {\r\n                    padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\r\n                }\r\n                return String(this) + padString.slice(0, targetLength);\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nfunction objectPolyfills() {\r\n    // https://github.com/tc39/proposal-object-values-entries/blob/master/polyfill.js\r\n\r\n    // @ts-ignore\r\n    const reduce = Function.bind.call(Function.call, Array.prototype.reduce);\r\n    // @ts-ignore\r\n    const isEnumerable = Function.bind.call(Function.call, Object.prototype.propertyIsEnumerable);\r\n    // @ts-ignore\r\n    const concat = Function.bind.call(Function.call, Array.prototype.concat);\r\n    const keys = Reflect.ownKeys;\r\n\r\n    // @ts-ignore\r\n    if (!Object.values) {\r\n        // @ts-ignore\r\n        Object.values = function values(O) {\r\n            return reduce(\r\n                keys(O),\r\n                (v, k) => concat(v, typeof k === \"string\" && isEnumerable(O, k) ? [O[k]] : []),\r\n                []\r\n            );\r\n        };\r\n    }\r\n\r\n    if (!Object.entries) {\r\n        // @ts-ignore\r\n        Object.entries = function entries(O) {\r\n            return reduce(\r\n                keys(O),\r\n                (e, k) => concat(e, typeof k === \"string\" && isEnumerable(O, k) ? [[k, O[k]]] : []),\r\n                []\r\n            );\r\n        };\r\n    }\r\n}\r\n\r\nfunction initPolyfills() {\r\n    mathPolyfills();\r\n    stringPolyfills();\r\n    objectPolyfills();\r\n}\r\n\r\nfunction initExtensions() {\r\n    String.prototype.replaceAll = function (search, replacement) {\r\n        var target = this;\r\n        return target.split(search).join(replacement);\r\n    };\r\n}\r\n\r\n// Fetch polyfill\r\nimport \"whatwg-fetch\";\r\n// Other polyfills\r\ninitPolyfills();\r\ninitExtensions();\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/polyfills.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 516,
    "kind": "function",
    "name": "mathPolyfills",
    "memberof": "js/core/polyfills.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/polyfills.js~mathPolyfills",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/polyfills.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 517,
    "kind": "function",
    "name": "stringPolyfills",
    "memberof": "js/core/polyfills.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/polyfills.js~stringPolyfills",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/polyfills.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 518,
    "kind": "function",
    "name": "objectPolyfills",
    "memberof": "js/core/polyfills.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/polyfills.js~objectPolyfills",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/polyfills.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 519,
    "kind": "function",
    "name": "initPolyfills",
    "memberof": "js/core/polyfills.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/polyfills.js~initPolyfills",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/polyfills.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 520,
    "kind": "function",
    "name": "initExtensions",
    "memberof": "js/core/polyfills.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/polyfills.js~initExtensions",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/polyfills.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 521,
    "kind": "file",
    "name": "js/core/query_parameters.js",
    "content": "const queryString = require(\"query-string\");\r\nconst options = queryString.parse(location.search);\r\n\r\nexport let queryParamOptions = {\r\n    embedProvider: null,\r\n    fullVersion: false,\r\n    sandboxMode: false,\r\n};\r\n\r\nif (options.embed) {\r\n    queryParamOptions.embedProvider = options.embed;\r\n}\r\n\r\n// Allow testing full version outside of standalone\r\nif (options.fullVersion && !G_IS_RELEASE) {\r\n    queryParamOptions.fullVersion = true;\r\n}\r\n\r\n// Allow testing full version outside of standalone\r\nif (options.sandboxMode && !G_IS_RELEASE) {\r\n    queryParamOptions.sandboxMode = true;\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/query_parameters.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 522,
    "kind": "variable",
    "name": "queryString",
    "memberof": "js/core/query_parameters.js",
    "static": true,
    "longname": "js/core/query_parameters.js~queryString",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/query_parameters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 523,
    "kind": "variable",
    "name": "options",
    "memberof": "js/core/query_parameters.js",
    "static": true,
    "longname": "js/core/query_parameters.js~options",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/query_parameters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 524,
    "kind": "variable",
    "name": "queryParamOptions",
    "memberof": "js/core/query_parameters.js",
    "static": true,
    "longname": "js/core/query_parameters.js~queryParamOptions",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/query_parameters.js",
    "importStyle": "{queryParamOptions}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"embedProvider\": *, \"fullVersion\": *, \"sandboxMode\": *}"
      ]
    }
  },
  {
    "__docId__": 525,
    "kind": "file",
    "name": "js/core/read_write_proxy.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\n\r\nimport { sha1, CRC_PREFIX, computeCrc } from \"./sensitive_utils.encrypt\";\r\nimport { createLogger } from \"./logging\";\r\nimport { FILE_NOT_FOUND } from \"../platform/storage\";\r\nimport { accessNestedPropertyReverse } from \"./utils\";\r\nimport { IS_DEBUG, globalConfig } from \"./config\";\r\nimport { ExplainedResult } from \"./explained_result\";\r\nimport { decompressX64, compressX64 } from \"./lzstring\";\r\nimport { asyncCompressor, compressionPrefix } from \"./async_compression\";\r\nimport { compressObject, decompressObject } from \"../savegame/savegame_compressor\";\r\nimport { savegameInterfaces } from \"../savegame/savegame_interface_registry\";\r\n\r\nconst debounce = require(\"debounce-promise\");\r\n\r\nconst logger = createLogger(\"read_write_proxy\");\r\n\r\nconst salt = accessNestedPropertyReverse(globalConfig, [\"file\", \"info\"]);\r\n\r\n// Helper which only writes / reads if verify() works. Also performs migration\r\nexport class ReadWriteProxy {\r\n    constructor(app, filename) {\r\n        /** @type {Application} */\r\n        this.app = app;\r\n\r\n        this.filename = filename;\r\n\r\n        /** @type {object} */\r\n        this.currentData = null;\r\n\r\n        // TODO: EXTREMELY HACKY! To verify we need to do this a step later\r\n        if (G_IS_DEV && IS_DEBUG) {\r\n            setTimeout(() => {\r\n                assert(\r\n                    this.verify(this.getDefaultData()).result,\r\n                    \"Verify() failed for default data: \" + this.verify(this.getDefaultData()).reason\r\n                );\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Store a debounced handler to prevent double writes\r\n         */\r\n        this.debouncedWrite = debounce(this.doWriteAsync.bind(this), 50);\r\n    }\r\n\r\n    // -- Methods to override\r\n\r\n    /** @returns {ExplainedResult} */\r\n    verify(data) {\r\n        abstract;\r\n        return ExplainedResult.bad();\r\n    }\r\n\r\n    // Should return the default data\r\n    getDefaultData() {\r\n        abstract;\r\n        return {};\r\n    }\r\n\r\n    // Should return the current version as an integer\r\n    getCurrentVersion() {\r\n        abstract;\r\n        return 0;\r\n    }\r\n\r\n    // Should migrate the data (Modify in place)\r\n    /** @returns {ExplainedResult} */\r\n    migrate(data) {\r\n        abstract;\r\n        return ExplainedResult.bad();\r\n    }\r\n\r\n    // -- / Methods\r\n\r\n    // Resets whole data, returns promise\r\n    resetEverythingAsync() {\r\n        logger.warn(\"Reset data to default\");\r\n        this.currentData = this.getDefaultData();\r\n        return this.writeAsync();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} obj\r\n     */\r\n    static serializeObject(obj) {\r\n        const jsonString = JSON.stringify(compressObject(obj));\r\n        const checksum = computeCrc(jsonString + salt);\r\n        return compressionPrefix + compressX64(checksum + jsonString);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} text\r\n     */\r\n    static deserializeObject(text) {\r\n        const decompressed = decompressX64(text.substr(compressionPrefix.length));\r\n        if (!decompressed) {\r\n            // LZ string decompression failure\r\n            throw new Error(\"bad-content / decompression-failed\");\r\n        }\r\n        if (decompressed.length < 40) {\r\n            // String too short\r\n            throw new Error(\"bad-content / payload-too-small\");\r\n        }\r\n\r\n        // Compare stored checksum with actual checksum\r\n        const checksum = decompressed.substring(0, 40);\r\n        const jsonString = decompressed.substr(40);\r\n\r\n        const desiredChecksum = checksum.startsWith(CRC_PREFIX) ?\r\n            computeCrc(jsonString + salt) :\r\n            sha1(jsonString + salt);\r\n\r\n        if (desiredChecksum !== checksum) {\r\n            // Checksum mismatch\r\n            throw new Error(\"bad-content / checksum-mismatch\");\r\n        }\r\n\r\n        const parsed = JSON.parse(jsonString);\r\n        const decoded = decompressObject(parsed);\r\n        return decoded;\r\n    }\r\n\r\n    /**\r\n     * Writes the data asychronously, fails if verify() fails.\r\n     * Debounces the operation by up to 50ms\r\n     * @returns {Promise<void>}\r\n     */\r\n    writeAsync() {\r\n        const verifyResult = this.internalVerifyEntry(this.currentData);\r\n\r\n        if (!verifyResult.result) {\r\n            logger.error(\"Tried to write invalid data to\", this.filename, \"reason:\", verifyResult.reason);\r\n            return Promise.reject(verifyResult.reason);\r\n        }\r\n\r\n        return this.debouncedWrite();\r\n    }\r\n\r\n    /**\r\n     * Actually writes the data asychronously\r\n     * @returns {Promise<void>}\r\n     */\r\n    doWriteAsync() {\r\n        return asyncCompressor\r\n            .compressObjectAsync(this.currentData)\r\n            .then(compressed => {\r\n                return this.app.storage.writeFileAsync(this.filename, compressed);\r\n            })\r\n            .then(() => {\r\n                logger.log(\"📄 Wrote\", this.filename);\r\n            })\r\n            .catch(err => {\r\n                logger.error(\"Failed to write\", this.filename, \":\", err);\r\n                throw err;\r\n            });\r\n    }\r\n\r\n    // Reads the data asynchronously, fails if verify() fails\r\n    readAsync() {\r\n        // Start read request\r\n        return (\r\n            this.app.storage\r\n            .readFileAsync(this.filename)\r\n\r\n            // Check for errors during read\r\n            .catch(err => {\r\n                if (err === FILE_NOT_FOUND) {\r\n                    logger.log(\"File not found, using default data\");\r\n\r\n                    // File not found or unreadable, assume default file\r\n                    return Promise.resolve(null);\r\n                }\r\n\r\n                return Promise.reject(\"file-error: \" + err);\r\n            })\r\n\r\n            // Decrypt data (if its encrypted)\r\n            // @ts-ignore\r\n            .then(rawData => {\r\n                if (rawData == null) {\r\n                    // So, the file has not been found, use default data\r\n                    return JSON.stringify(compressObject(this.getDefaultData()));\r\n                }\r\n\r\n                if (rawData.startsWith(compressionPrefix)) {\r\n                    const decompressed = decompressX64(rawData.substr(compressionPrefix.length));\r\n                    if (!decompressed) {\r\n                        // LZ string decompression failure\r\n                        return Promise.reject(\"bad-content / decompression-failed\");\r\n                    }\r\n                    if (decompressed.length < 40) {\r\n                        // String too short\r\n                        return Promise.reject(\"bad-content / payload-too-small\");\r\n                    }\r\n\r\n                    // Compare stored checksum with actual checksum\r\n                    const checksum = decompressed.substring(0, 40);\r\n                    const jsonString = decompressed.substr(40);\r\n\r\n                    const desiredChecksum = checksum.startsWith(CRC_PREFIX) ?\r\n                        computeCrc(jsonString + salt) :\r\n                        sha1(jsonString + salt);\r\n\r\n                    if (desiredChecksum !== checksum) {\r\n                        // Checksum mismatch\r\n                        return Promise.reject(\r\n                            \"bad-content / checksum-mismatch: \" + desiredChecksum + \" vs \" + checksum\r\n                        );\r\n                    }\r\n                    return jsonString;\r\n                } else {\r\n                    if (!G_IS_DEV) {\r\n                        return Promise.reject(\"bad-content / missing-compression\");\r\n                    }\r\n                }\r\n                return rawData;\r\n            })\r\n\r\n            // Parse JSON, this could throw but that's fine\r\n            .then(res => {\r\n                try {\r\n                    return JSON.parse(res);\r\n                } catch (ex) {\r\n                    logger.error(\r\n                        \"Failed to parse file content of\",\r\n                        this.filename,\r\n                        \":\",\r\n                        ex,\r\n                        \"(content was:\",\r\n                        res,\r\n                        \")\"\r\n                    );\r\n                    throw new Error(\"invalid-serialized-data\");\r\n                }\r\n            })\r\n\r\n            // Decompress\r\n            .then(compressed => decompressObject(compressed))\r\n\r\n            // Verify basic structure\r\n            .then(contents => {\r\n                const result = this.internalVerifyBasicStructure(contents);\r\n                if (!result.isGood()) {\r\n                    return Promise.reject(\"verify-failed: \" + result.reason);\r\n                }\r\n                return contents;\r\n            })\r\n\r\n            // Check version and migrate if required\r\n            .then(contents => {\r\n                if (contents.version > this.getCurrentVersion()) {\r\n                    return Promise.reject(\"stored-data-is-newer\");\r\n                }\r\n\r\n                if (contents.version < this.getCurrentVersion()) {\r\n                    logger.log(\r\n                        \"Trying to migrate data object from version\",\r\n                        contents.version,\r\n                        \"to\",\r\n                        this.getCurrentVersion()\r\n                    );\r\n                    const migrationResult = this.migrate(contents); // modify in place\r\n                    if (migrationResult.isBad()) {\r\n                        return Promise.reject(\"migration-failed: \" + migrationResult.reason);\r\n                    }\r\n                }\r\n                return contents;\r\n            })\r\n\r\n            // Verify\r\n            .then(contents => {\r\n                const verifyResult = this.internalVerifyEntry(contents);\r\n                if (!verifyResult.result) {\r\n                    logger.error(\r\n                        \"Read invalid data from\",\r\n                        this.filename,\r\n                        \"reason:\",\r\n                        verifyResult.reason,\r\n                        \"contents:\",\r\n                        contents\r\n                    );\r\n                    return Promise.reject(\"invalid-data: \" + verifyResult.reason);\r\n                }\r\n                return contents;\r\n            })\r\n\r\n            // Store\r\n            .then(contents => {\r\n                this.currentData = contents;\r\n                logger.log(\"📄 Read data with version\", this.currentData.version, \"from\", this.filename);\r\n                return contents;\r\n            })\r\n\r\n            // Catchall\r\n            .catch(err => {\r\n                return Promise.reject(\"Failed to read \" + this.filename + \": \" + err);\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Deletes the file\r\n     * @returns {Promise<void>}\r\n     */\r\n    deleteAsync() {\r\n        return this.app.storage.deleteFileAsync(this.filename);\r\n    }\r\n\r\n    // Internal\r\n\r\n    /** @returns {ExplainedResult} */\r\n    internalVerifyBasicStructure(data) {\r\n        if (!data) {\r\n            return ExplainedResult.bad(\"Data is empty\");\r\n        }\r\n        if (!savegameInterfaces[data.version] && (!Number.isInteger(data.version) || data.version < 0)) {\r\n            return ExplainedResult.bad(\r\n                `Data has invalid version: ${data.version} (expected ${this.getCurrentVersion()})`\r\n            );\r\n        }\r\n\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    /** @returns {ExplainedResult} */\r\n    internalVerifyEntry(data) {\r\n        if (data.version !== this.getCurrentVersion()) {\r\n            return ExplainedResult.bad(\r\n                \"Version mismatch, got \" + data.version + \" and expected \" + this.getCurrentVersion()\r\n            );\r\n        }\r\n\r\n        const verifyStructureError = this.internalVerifyBasicStructure(data);\r\n        if (!verifyStructureError.isGood()) {\r\n            return verifyStructureError;\r\n        }\r\n        return this.verify(data);\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/read_write_proxy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 526,
    "kind": "variable",
    "name": "debounce",
    "memberof": "js/core/read_write_proxy.js",
    "static": true,
    "longname": "js/core/read_write_proxy.js~debounce",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/read_write_proxy.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 527,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/read_write_proxy.js",
    "static": true,
    "longname": "js/core/read_write_proxy.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/read_write_proxy.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 528,
    "kind": "variable",
    "name": "salt",
    "memberof": "js/core/read_write_proxy.js",
    "static": true,
    "longname": "js/core/read_write_proxy.js~salt",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/read_write_proxy.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 529,
    "kind": "class",
    "name": "ReadWriteProxy",
    "memberof": "js/core/read_write_proxy.js",
    "static": true,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/read_write_proxy.js",
    "importStyle": "{ReadWriteProxy}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 530,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 531,
    "kind": "member",
    "name": "app",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#app",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Application"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 532,
    "kind": "member",
    "name": "filename",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#filename",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 533,
    "kind": "member",
    "name": "currentData",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#currentData",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 534,
    "kind": "member",
    "name": "debouncedWrite",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#debouncedWrite",
    "access": "public",
    "description": "Store a debounced handler to prevent double writes",
    "lineNumber": 46,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 535,
    "kind": "method",
    "name": "verify",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#verify",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ExplainedResult}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ExplainedResult"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 536,
    "kind": "method",
    "name": "getDefaultData",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#getDefaultData",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 537,
    "kind": "method",
    "name": "getCurrentVersion",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#getCurrentVersion",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 538,
    "kind": "method",
    "name": "migrate",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#migrate",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ExplainedResult}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ExplainedResult"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 539,
    "kind": "method",
    "name": "resetEverythingAsync",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#resetEverythingAsync",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 541,
    "kind": "method",
    "name": "serializeObject",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy.serializeObject",
    "access": "public",
    "description": "",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 542,
    "kind": "method",
    "name": "deserializeObject",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy.deserializeObject",
    "access": "public",
    "description": "",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 543,
    "kind": "method",
    "name": "writeAsync",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#writeAsync",
    "access": "public",
    "description": "Writes the data asychronously, fails if verify() fails.\nDebounces the operation by up to 50ms",
    "lineNumber": 133,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 544,
    "kind": "method",
    "name": "doWriteAsync",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#doWriteAsync",
    "access": "public",
    "description": "Actually writes the data asychronously",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 545,
    "kind": "method",
    "name": "readAsync",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#readAsync",
    "access": "public",
    "description": null,
    "lineNumber": 164,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 547,
    "kind": "method",
    "name": "deleteAsync",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#deleteAsync",
    "access": "public",
    "description": "Deletes the file",
    "lineNumber": 310,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 548,
    "kind": "method",
    "name": "internalVerifyBasicStructure",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#internalVerifyBasicStructure",
    "access": "public",
    "description": null,
    "lineNumber": 317,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ExplainedResult}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ExplainedResult"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 549,
    "kind": "method",
    "name": "internalVerifyEntry",
    "memberof": "js/core/read_write_proxy.js~ReadWriteProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/read_write_proxy.js~ReadWriteProxy#internalVerifyEntry",
    "access": "public",
    "description": null,
    "lineNumber": 331,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ExplainedResult}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ExplainedResult"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 550,
    "kind": "file",
    "name": "js/core/rectangle.js",
    "content": "import { globalConfig } from \"./config\";\r\nimport { epsilonCompare, round2Digits } from \"./utils\";\r\nimport { Vector } from \"./vector\";\r\n\r\nexport class Rectangle {\r\n    constructor(x = 0, y = 0, w = 0, h = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n\r\n    /**\r\n     * Creates a rectangle from top right bottom and left offsets\r\n     * @param {number} top\r\n     * @param {number} right\r\n     * @param {number} bottom\r\n     * @param {number} left\r\n     */\r\n    static fromTRBL(top, right, bottom, left) {\r\n        return new Rectangle(left, top, right - left, bottom - top);\r\n    }\r\n\r\n    /**\r\n     * Constructs a new square rectangle\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} size\r\n     */\r\n    static fromSquare(x, y, size) {\r\n        return new Rectangle(x, y, size, size);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Vector} p1\r\n     * @param {Vector} p2\r\n     */\r\n    static fromTwoPoints(p1, p2) {\r\n        const left = Math.min(p1.x, p2.x);\r\n        const top = Math.min(p1.y, p2.y);\r\n        const right = Math.max(p1.x, p2.x);\r\n        const bottom = Math.max(p1.y, p2.y);\r\n        return new Rectangle(left, top, right - left, bottom - top);\r\n    }\r\n\r\n    /**\r\n     * Returns if a intersects b\r\n     * @param {Rectangle} a\r\n     * @param {Rectangle} b\r\n     */\r\n    static intersects(a, b) {\r\n        return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom;\r\n    }\r\n\r\n    /**\r\n     * Copies this instance\r\n     * @returns {Rectangle}\r\n     */\r\n    clone() {\r\n        return new Rectangle(this.x, this.y, this.w, this.h);\r\n    }\r\n\r\n    /**\r\n     * Returns if this rectangle is empty\r\n     * @returns {boolean}\r\n     */\r\n    isEmpty() {\r\n        return epsilonCompare(this.w * this.h, 0);\r\n    }\r\n\r\n    /**\r\n     * Returns if this rectangle is equal to the other while taking an epsilon into account\r\n     * @param {Rectangle} other\r\n     * @param {number} epsilon\r\n     */\r\n    equalsEpsilon(other, epsilon) {\r\n        return (\r\n            epsilonCompare(this.x, other.x, epsilon) &&\r\n            epsilonCompare(this.y, other.y, epsilon) &&\r\n            epsilonCompare(this.w, other.w, epsilon) &&\r\n            epsilonCompare(this.h, other.h, epsilon)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    left() {\r\n        return this.x;\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    right() {\r\n        return this.x + this.w;\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    top() {\r\n        return this.y;\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    bottom() {\r\n        return this.y + this.h;\r\n    }\r\n\r\n    /**\r\n     * Returns Top, Right, Bottom, Left\r\n     * @returns {[number, number, number, number]}\r\n     */\r\n    trbl() {\r\n        return [this.y, this.right(), this.bottom(), this.x];\r\n    }\r\n\r\n    /**\r\n     * Returns the center of the rect\r\n     * @returns {Vector}\r\n     */\r\n    getCenter() {\r\n        return new Vector(this.x + this.w / 2, this.y + this.h / 2);\r\n    }\r\n\r\n    /**\r\n     * Sets the right side of the rect without moving it\r\n     * @param {number} right\r\n     */\r\n    setRight(right) {\r\n        this.w = right - this.x;\r\n    }\r\n\r\n    /**\r\n     * Sets the bottom side of the rect without moving it\r\n     * @param {number} bottom\r\n     */\r\n    setBottom(bottom) {\r\n        this.h = bottom - this.y;\r\n    }\r\n\r\n    /**\r\n     * Sets the top side of the rect without scaling it\r\n     * @param {number} top\r\n     */\r\n    setTop(top) {\r\n        const bottom = this.bottom();\r\n        this.y = top;\r\n        this.setBottom(bottom);\r\n    }\r\n\r\n    /**\r\n     * Sets the left side of the rect without scaling it\r\n     * @param {number} left\r\n     */\r\n    setLeft(left) {\r\n        const right = this.right();\r\n        this.x = left;\r\n        this.setRight(right);\r\n    }\r\n\r\n    /**\r\n     * Returns the top left point\r\n     * @returns {Vector}\r\n     */\r\n    topLeft() {\r\n        return new Vector(this.x, this.y);\r\n    }\r\n\r\n    /**\r\n     * Returns the bottom left point\r\n     * @returns {Vector}\r\n     */\r\n    bottomRight() {\r\n        return new Vector(this.right(), this.bottom());\r\n    }\r\n\r\n    /**\r\n     * Moves the rectangle by the given parameters\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    moveBy(x, y) {\r\n        this.x += x;\r\n        this.y += y;\r\n    }\r\n\r\n    /**\r\n     * Moves the rectangle by the given vector\r\n     * @param {Vector} vec\r\n     */\r\n    moveByVector(vec) {\r\n        this.x += vec.x;\r\n        this.y += vec.y;\r\n    }\r\n\r\n    /**\r\n     * Scales every parameter (w, h, x, y) by the given factor. Useful to transform from world to\r\n     * tile space and vice versa\r\n     * @param {number} factor\r\n     */\r\n    allScaled(factor) {\r\n        return new Rectangle(this.x * factor, this.y * factor, this.w * factor, this.h * factor);\r\n    }\r\n\r\n    /**\r\n     * Expands the rectangle in all directions\r\n     * @param {number} amount\r\n     * @returns {Rectangle} new rectangle\r\n     */\r\n    expandedInAllDirections(amount) {\r\n        return new Rectangle(this.x - amount, this.y - amount, this.w + 2 * amount, this.h + 2 * amount);\r\n    }\r\n\r\n    /**\r\n     * Returns if the given rectangle is contained\r\n     * @param {Rectangle} rect\r\n     * @returns {boolean}\r\n     */\r\n    containsRect(rect) {\r\n        return (\r\n            this.x <= rect.right() &&\r\n            rect.x <= this.right() &&\r\n            this.y <= rect.bottom() &&\r\n            rect.y <= this.bottom()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns if this rectangle contains the other rectangle specified by the parameters\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} w\r\n     * @param {number} h\r\n     * @returns {boolean}\r\n     */\r\n    containsRect4Params(x, y, w, h) {\r\n        return this.x <= x + w && x <= this.right() && this.y <= y + h && y <= this.bottom();\r\n    }\r\n\r\n    /**\r\n     * Returns if the rectangle contains the given circle at (x, y) with the radius (radius)\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} radius\r\n     * @returns {boolean}\r\n     */\r\n    containsCircle(x, y, radius) {\r\n        return (\r\n            this.x <= x + radius &&\r\n            x - radius <= this.right() &&\r\n            this.y <= y + radius &&\r\n            y - radius <= this.bottom()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns if hte rectangle contains the given point\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {boolean}\r\n     */\r\n    containsPoint(x, y) {\r\n        return x >= this.x && x < this.right() && y >= this.y && y < this.bottom();\r\n    }\r\n\r\n    /**\r\n     * Returns the shared area with another rectangle, or null if there is no intersection\r\n     * @param {Rectangle} rect\r\n     * @returns {Rectangle|null}\r\n     */\r\n    getIntersection(rect) {\r\n        const left = Math.max(this.x, rect.x);\r\n        const top = Math.max(this.y, rect.y);\r\n\r\n        const right = Math.min(this.x + this.w, rect.x + rect.w);\r\n        const bottom = Math.min(this.y + this.h, rect.y + rect.h);\r\n\r\n        if (right <= left || bottom <= top) {\r\n            return null;\r\n        }\r\n\r\n        return Rectangle.fromTRBL(top, right, bottom, left);\r\n    }\r\n\r\n    /**\r\n     * Returns the union of this rectangle with another\r\n     * @param {Rectangle} rect\r\n     */\r\n    getUnion(rect) {\r\n        if (this.isEmpty()) {\r\n            // If this is rect is empty, return the other one\r\n            return rect.clone();\r\n        }\r\n        if (rect.isEmpty()) {\r\n            // If the other is empty, return this one\r\n            return this.clone();\r\n        }\r\n\r\n        // Find contained area\r\n        const left = Math.min(this.x, rect.x);\r\n        const top = Math.min(this.y, rect.y);\r\n        const right = Math.max(this.right(), rect.right());\r\n        const bottom = Math.max(this.bottom(), rect.bottom());\r\n\r\n        return Rectangle.fromTRBL(top, right, bottom, left);\r\n    }\r\n\r\n    /**\r\n     * Good for caching stuff\r\n     */\r\n    toCompareableString() {\r\n        return (\r\n            round2Digits(this.x) +\r\n            \"/\" +\r\n            round2Digits(this.y) +\r\n            \"/\" +\r\n            round2Digits(this.w) +\r\n            \"/\" +\r\n            round2Digits(this.h)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Good for printing stuff\r\n     */\r\n    toString() {\r\n        return (\r\n            \"[x:\" +\r\n            round2Digits(this.x) +\r\n            \"| y:\" +\r\n            round2Digits(this.y) +\r\n            \"| w:\" +\r\n            round2Digits(this.w) +\r\n            \"| h:\" +\r\n            round2Digits(this.h) +\r\n            \"]\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns a new rectangle in tile space which includes all tiles which are visible in this rect\r\n     * @returns {Rectangle}\r\n     */\r\n    toTileCullRectangle() {\r\n        return new Rectangle(\r\n            Math.floor(this.x / globalConfig.tileSize),\r\n            Math.floor(this.y / globalConfig.tileSize),\r\n            Math.ceil(this.w / globalConfig.tileSize),\r\n            Math.ceil(this.h / globalConfig.tileSize)\r\n        );\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/rectangle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 551,
    "kind": "class",
    "name": "Rectangle",
    "memberof": "js/core/rectangle.js",
    "static": true,
    "longname": "js/core/rectangle.js~Rectangle",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/rectangle.js",
    "importStyle": "{Rectangle}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 552,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 553,
    "kind": "member",
    "name": "x",
    "memberof": "js/core/rectangle.js~Rectangle",
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#x",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 554,
    "kind": "member",
    "name": "y",
    "memberof": "js/core/rectangle.js~Rectangle",
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#y",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 555,
    "kind": "member",
    "name": "w",
    "memberof": "js/core/rectangle.js~Rectangle",
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#w",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 556,
    "kind": "member",
    "name": "h",
    "memberof": "js/core/rectangle.js~Rectangle",
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#h",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 557,
    "kind": "method",
    "name": "fromTRBL",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/rectangle.js~Rectangle.fromTRBL",
    "access": "public",
    "description": "Creates a rectangle from top right bottom and left offsets",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "top",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "right",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bottom",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "left",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 558,
    "kind": "method",
    "name": "fromSquare",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/rectangle.js~Rectangle.fromSquare",
    "access": "public",
    "description": "Constructs a new square rectangle",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 559,
    "kind": "method",
    "name": "fromTwoPoints",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/rectangle.js~Rectangle.fromTwoPoints",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "p2",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 560,
    "kind": "method",
    "name": "intersects",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/rectangle.js~Rectangle.intersects",
    "access": "public",
    "description": "Returns if a intersects b",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "Rectangle"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Rectangle"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 561,
    "kind": "method",
    "name": "clone",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#clone",
    "access": "public",
    "description": "Copies this instance",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Rectangle}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Rectangle"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 562,
    "kind": "method",
    "name": "isEmpty",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#isEmpty",
    "access": "public",
    "description": "Returns if this rectangle is empty",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 563,
    "kind": "method",
    "name": "equalsEpsilon",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#equalsEpsilon",
    "access": "public",
    "description": "Returns if this rectangle is equal to the other while taking an epsilon into account",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Rectangle"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "epsilon",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 564,
    "kind": "method",
    "name": "left",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#left",
    "access": "public",
    "description": "",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 565,
    "kind": "method",
    "name": "right",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#right",
    "access": "public",
    "description": "",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 566,
    "kind": "method",
    "name": "top",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#top",
    "access": "public",
    "description": "",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 567,
    "kind": "method",
    "name": "bottom",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#bottom",
    "access": "public",
    "description": "",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 568,
    "kind": "method",
    "name": "trbl",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#trbl",
    "access": "public",
    "description": "Returns Top, Right, Bottom, Left",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[number, number, number, number]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[number, number, number, number]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 569,
    "kind": "method",
    "name": "getCenter",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#getCenter",
    "access": "public",
    "description": "Returns the center of the rect",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 570,
    "kind": "method",
    "name": "setRight",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#setRight",
    "access": "public",
    "description": "Sets the right side of the rect without moving it",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "right",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 572,
    "kind": "method",
    "name": "setBottom",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#setBottom",
    "access": "public",
    "description": "Sets the bottom side of the rect without moving it",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bottom",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 574,
    "kind": "method",
    "name": "setTop",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#setTop",
    "access": "public",
    "description": "Sets the top side of the rect without scaling it",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "top",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 576,
    "kind": "method",
    "name": "setLeft",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#setLeft",
    "access": "public",
    "description": "Sets the left side of the rect without scaling it",
    "lineNumber": 160,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "left",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 578,
    "kind": "method",
    "name": "topLeft",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#topLeft",
    "access": "public",
    "description": "Returns the top left point",
    "lineNumber": 170,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 579,
    "kind": "method",
    "name": "bottomRight",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#bottomRight",
    "access": "public",
    "description": "Returns the bottom left point",
    "lineNumber": 178,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 580,
    "kind": "method",
    "name": "moveBy",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#moveBy",
    "access": "public",
    "description": "Moves the rectangle by the given parameters",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 583,
    "kind": "method",
    "name": "moveByVector",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#moveByVector",
    "access": "public",
    "description": "Moves the rectangle by the given vector",
    "lineNumber": 196,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "vec",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 586,
    "kind": "method",
    "name": "allScaled",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#allScaled",
    "access": "public",
    "description": "Scales every parameter (w, h, x, y) by the given factor. Useful to transform from world to\ntile space and vice versa",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "factor",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 587,
    "kind": "method",
    "name": "expandedInAllDirections",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#expandedInAllDirections",
    "access": "public",
    "description": "Expands the rectangle in all directions",
    "lineNumber": 215,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Rectangle} new rectangle"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Rectangle"
      ],
      "spread": false,
      "description": "new rectangle"
    }
  },
  {
    "__docId__": 588,
    "kind": "method",
    "name": "containsRect",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#containsRect",
    "access": "public",
    "description": "Returns if the given rectangle is contained",
    "lineNumber": 224,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Rectangle"
        ],
        "spread": false,
        "optional": false,
        "name": "rect",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 589,
    "kind": "method",
    "name": "containsRect4Params",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#containsRect4Params",
    "access": "public",
    "description": "Returns if this rectangle contains the other rectangle specified by the parameters",
    "lineNumber": 241,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 590,
    "kind": "method",
    "name": "containsCircle",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#containsCircle",
    "access": "public",
    "description": "Returns if the rectangle contains the given circle at (x, y) with the radius (radius)",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 591,
    "kind": "method",
    "name": "containsPoint",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#containsPoint",
    "access": "public",
    "description": "Returns if hte rectangle contains the given point",
    "lineNumber": 267,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 592,
    "kind": "method",
    "name": "getIntersection",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#getIntersection",
    "access": "public",
    "description": "Returns the shared area with another rectangle, or null if there is no intersection",
    "lineNumber": 276,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Rectangle|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Rectangle"
        ],
        "spread": false,
        "optional": false,
        "name": "rect",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Rectangle",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 593,
    "kind": "method",
    "name": "getUnion",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#getUnion",
    "access": "public",
    "description": "Returns the union of this rectangle with another",
    "lineNumber": 294,
    "params": [
      {
        "nullable": null,
        "types": [
          "Rectangle"
        ],
        "spread": false,
        "optional": false,
        "name": "rect",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 594,
    "kind": "method",
    "name": "toCompareableString",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#toCompareableString",
    "access": "public",
    "description": "Good for caching stuff",
    "lineNumber": 316,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 595,
    "kind": "method",
    "name": "toString",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#toString",
    "access": "public",
    "description": "Good for printing stuff",
    "lineNumber": 331,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 596,
    "kind": "method",
    "name": "toTileCullRectangle",
    "memberof": "js/core/rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rectangle.js~Rectangle#toTileCullRectangle",
    "access": "public",
    "description": "Returns a new rectangle in tile space which includes all tiles which are visible in this rect",
    "lineNumber": 349,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Rectangle}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Rectangle"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 597,
    "kind": "file",
    "name": "js/core/request_channel.js",
    "content": "import { createLogger } from \"../core/logging\";\r\nimport { fastArrayDeleteValueIfContained } from \"../core/utils\";\r\n\r\nconst logger = createLogger(\"request_channel\");\r\n\r\n// Thrown when a request is aborted\r\nexport const PROMISE_ABORTED = \"promise-aborted\";\r\n\r\nexport class RequestChannel {\r\n    constructor() {\r\n        /** @type {Array<Promise>} */\r\n        this.pendingPromises = [];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Promise<any>} promise\r\n     * @returns {Promise<any>}\r\n     */\r\n    watch(promise) {\r\n        // log(this, \"Added new promise:\", promise, \"(pending =\", this.pendingPromises.length, \")\");\r\n        let cancelled = false;\r\n        const wrappedPromise = new Promise((resolve, reject) => {\r\n            promise.then(\r\n                result => {\r\n                    // Remove from pending promises\r\n                    fastArrayDeleteValueIfContained(this.pendingPromises, wrappedPromise);\r\n\r\n                    // If not cancelled, resolve promise with same payload\r\n                    if (!cancelled) {\r\n                        resolve.call(this, result);\r\n                    } else {\r\n                        logger.warn(\"Not resolving because promise got cancelled\");\r\n                        // reject.call(this, PROMISE_ABORTED);\r\n                    }\r\n                },\r\n                err => {\r\n                    // Remove from pending promises\r\n                    fastArrayDeleteValueIfContained(this.pendingPromises, wrappedPromise);\r\n\r\n                    // If not cancelled, reject promise with same payload\r\n                    if (!cancelled) {\r\n                        reject.call(this, err);\r\n                    } else {\r\n                        logger.warn(\"Not rejecting because promise got cancelled\");\r\n                        // reject.call(this, PROMISE_ABORTED);\r\n                    }\r\n                }\r\n            );\r\n        });\r\n\r\n        // Add cancel handler\r\n        // @ts-ignore\r\n        wrappedPromise.cancel = function () {\r\n            cancelled = true;\r\n        };\r\n\r\n        this.pendingPromises.push(wrappedPromise);\r\n        return wrappedPromise;\r\n    }\r\n\r\n    cancelAll() {\r\n        if (this.pendingPromises.length > 0) {\r\n            logger.log(\"Cancel all pending promises (\", this.pendingPromises.length, \")\");\r\n        }\r\n        for (let i = 0; i < this.pendingPromises.length; ++i) {\r\n            // @ts-ignore\r\n            this.pendingPromises[i].cancel();\r\n        }\r\n        this.pendingPromises = [];\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/request_channel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 598,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/request_channel.js",
    "static": true,
    "longname": "js/core/request_channel.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/request_channel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 599,
    "kind": "variable",
    "name": "PROMISE_ABORTED",
    "memberof": "js/core/request_channel.js",
    "static": true,
    "longname": "js/core/request_channel.js~PROMISE_ABORTED",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/request_channel.js",
    "importStyle": "{PROMISE_ABORTED}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 600,
    "kind": "class",
    "name": "RequestChannel",
    "memberof": "js/core/request_channel.js",
    "static": true,
    "longname": "js/core/request_channel.js~RequestChannel",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/request_channel.js",
    "importStyle": "{RequestChannel}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 601,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/request_channel.js~RequestChannel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/request_channel.js~RequestChannel#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 602,
    "kind": "member",
    "name": "pendingPromises",
    "memberof": "js/core/request_channel.js~RequestChannel",
    "static": false,
    "longname": "js/core/request_channel.js~RequestChannel#pendingPromises",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "Array<Promise>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 603,
    "kind": "method",
    "name": "watch",
    "memberof": "js/core/request_channel.js~RequestChannel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/request_channel.js~RequestChannel#watch",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<any>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Promise<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "promise",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<any>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 604,
    "kind": "method",
    "name": "cancelAll",
    "memberof": "js/core/request_channel.js~RequestChannel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/request_channel.js~RequestChannel#cancelAll",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 606,
    "kind": "file",
    "name": "js/core/restriction_manager.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\nimport { IS_MAC } from \"./config\";\r\nimport { ExplainedResult } from \"./explained_result\";\r\nimport { queryParamOptions } from \"./query_parameters\";\r\nimport { ReadWriteProxy } from \"./read_write_proxy\";\r\n\r\nexport class RestrictionManager extends ReadWriteProxy {\r\n    /**\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        super(app, \"restriction-flags.bin\");\r\n\r\n        this.currentData = this.getDefaultData();\r\n    }\r\n\r\n    // -- RW Proxy Impl\r\n\r\n    /**\r\n     * @param {any} data\r\n     */\r\n    verify(data) {\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    /**\r\n     */\r\n    getDefaultData() {\r\n        return {\r\n            version: this.getCurrentVersion(),\r\n            savegameV1119Imported: false,\r\n        };\r\n    }\r\n\r\n    /**\r\n     */\r\n    getCurrentVersion() {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @param {any} data\r\n     */\r\n    migrate(data) {\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    initialize() {\r\n        return this.readAsync().then(() => {\r\n            if (this.currentData.savegameV1119Imported) {\r\n                console.warn(\"Levelunlock is granted to current user due to past savegame\");\r\n            }\r\n        });\r\n    }\r\n\r\n    // -- End RW Proxy Impl\r\n\r\n    /**\r\n     * Checks if there are any savegames from the 1.1.19 version\r\n     */\r\n    onHasLegacySavegamesChanged(has119Savegames = false) {\r\n        if (has119Savegames && !this.currentData.savegameV1119Imported) {\r\n            this.currentData.savegameV1119Imported = true;\r\n            console.warn(\"Current user now has access to all levels due to 1119 savegame\");\r\n            return this.writeAsync();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * Returns if the app is currently running as the limited version\r\n     * @returns {boolean}\r\n     */\r\n    isLimitedVersion() {\r\n        if (IS_MAC) {\r\n            // On mac, the full version is always active\r\n            return false;\r\n        }\r\n\r\n        if (G_IS_STANDALONE) {\r\n            // Standalone is never limited\r\n            return false;\r\n        }\r\n\r\n        if (queryParamOptions.fullVersion) {\r\n            // Full version is activated via flag\r\n            return false;\r\n        }\r\n\r\n        if (G_IS_DEV) {\r\n            return typeof window !== \"undefined\" && window.location.search.indexOf(\"demo\") >= 0;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns if the app markets the standalone version on steam\r\n     * @returns {boolean}\r\n     */\r\n    getIsStandaloneMarketingActive() {\r\n        return this.isLimitedVersion();\r\n    }\r\n\r\n    /**\r\n     * Returns if exporting the base as a screenshot is possible\r\n     * @returns {boolean}\r\n     */\r\n    getIsExportingScreenshotsPossible() {\r\n        return !this.isLimitedVersion();\r\n    }\r\n\r\n    /**\r\n     * Returns the maximum number of supported waypoints\r\n     * @returns {number}\r\n     */\r\n    getMaximumWaypoints() {\r\n        return this.isLimitedVersion() ? 2 : 1e20;\r\n    }\r\n\r\n    /**\r\n     * Returns if the user has unlimited savegames\r\n     * @returns {boolean}\r\n     */\r\n    getHasUnlimitedSavegames() {\r\n        return !this.isLimitedVersion();\r\n    }\r\n\r\n    /**\r\n     * Returns if the app has all settings available\r\n     * @returns {boolean}\r\n     */\r\n    getHasExtendedSettings() {\r\n        return !this.isLimitedVersion();\r\n    }\r\n\r\n    /**\r\n     * Returns if all upgrades are available\r\n     * @returns {boolean}\r\n     */\r\n    getHasExtendedUpgrades() {\r\n        return !this.isLimitedVersion() || this.currentData.savegameV1119Imported;\r\n    }\r\n\r\n    /**\r\n     * Returns if all levels & freeplay is available\r\n     * @returns {boolean}\r\n     */\r\n    getHasExtendedLevelsAndFreeplay() {\r\n        return !this.isLimitedVersion() || this.currentData.savegameV1119Imported;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/restriction_manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 607,
    "kind": "class",
    "name": "RestrictionManager",
    "memberof": "js/core/restriction_manager.js",
    "static": true,
    "longname": "js/core/restriction_manager.js~RestrictionManager",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/restriction_manager.js",
    "importStyle": "{RestrictionManager}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/core/read_write_proxy.js~ReadWriteProxy"
    ]
  },
  {
    "__docId__": 608,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 609,
    "kind": "member",
    "name": "currentData",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#currentData",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 610,
    "kind": "method",
    "name": "verify",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#verify",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 611,
    "kind": "method",
    "name": "getDefaultData",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#getDefaultData",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [],
    "return": {
      "types": [
        "{\"version\": *, \"savegameV1119Imported\": *}"
      ]
    }
  },
  {
    "__docId__": 612,
    "kind": "method",
    "name": "getCurrentVersion",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#getCurrentVersion",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 613,
    "kind": "method",
    "name": "migrate",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#migrate",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 614,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 615,
    "kind": "method",
    "name": "onHasLegacySavegamesChanged",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#onHasLegacySavegamesChanged",
    "access": "public",
    "description": "Checks if there are any savegames from the 1.1.19 version",
    "lineNumber": 63,
    "params": [
      {
        "name": "has119Savegames",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 616,
    "kind": "method",
    "name": "isLimitedVersion",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#isLimitedVersion",
    "access": "public",
    "description": "Returns if the app is currently running as the limited version",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 617,
    "kind": "method",
    "name": "getIsStandaloneMarketingActive",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#getIsStandaloneMarketingActive",
    "access": "public",
    "description": "Returns if the app markets the standalone version on steam",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 618,
    "kind": "method",
    "name": "getIsExportingScreenshotsPossible",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#getIsExportingScreenshotsPossible",
    "access": "public",
    "description": "Returns if exporting the base as a screenshot is possible",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 619,
    "kind": "method",
    "name": "getMaximumWaypoints",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#getMaximumWaypoints",
    "access": "public",
    "description": "Returns the maximum number of supported waypoints",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 620,
    "kind": "method",
    "name": "getHasUnlimitedSavegames",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#getHasUnlimitedSavegames",
    "access": "public",
    "description": "Returns if the user has unlimited savegames",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 621,
    "kind": "method",
    "name": "getHasExtendedSettings",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#getHasExtendedSettings",
    "access": "public",
    "description": "Returns if the app has all settings available",
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 622,
    "kind": "method",
    "name": "getHasExtendedUpgrades",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#getHasExtendedUpgrades",
    "access": "public",
    "description": "Returns if all upgrades are available",
    "lineNumber": 143,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 623,
    "kind": "method",
    "name": "getHasExtendedLevelsAndFreeplay",
    "memberof": "js/core/restriction_manager.js~RestrictionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/restriction_manager.js~RestrictionManager#getHasExtendedLevelsAndFreeplay",
    "access": "public",
    "description": "Returns if all levels & freeplay is available",
    "lineNumber": 151,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 624,
    "kind": "file",
    "name": "js/core/rng.js",
    "content": "// ALEA RNG\r\n\r\nfunction Mash() {\r\n    var n = 0xefc8249d;\r\n    return function (data) {\r\n        data = data.toString();\r\n        for (var i = 0; i < data.length; i++) {\r\n            n += data.charCodeAt(i);\r\n            var h = 0.02519603282416938 * n;\r\n            n = h >>> 0;\r\n            h -= n;\r\n            h *= n;\r\n            n = h >>> 0;\r\n            h -= n;\r\n            n += h * 0x100000000; // 2^32\r\n        }\r\n        return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\r\n    };\r\n}\r\n\r\n/**\r\n * @param {number|string} seed\r\n */\r\nfunction makeNewRng(seed) {\r\n    // Johannes Baagøe <baagoe@baagoe.com>, 2010\r\n    var c = 1;\r\n    var mash = Mash();\r\n    let s0 = mash(\" \");\r\n    let s1 = mash(\" \");\r\n    let s2 = mash(\" \");\r\n\r\n    s0 -= mash(seed);\r\n    if (s0 < 0) {\r\n        s0 += 1;\r\n    }\r\n    s1 -= mash(seed);\r\n    if (s1 < 0) {\r\n        s1 += 1;\r\n    }\r\n    s2 -= mash(seed);\r\n    if (s2 < 0) {\r\n        s2 += 1;\r\n    }\r\n    mash = null;\r\n\r\n    var random = function () {\r\n        var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\r\n        s0 = s1;\r\n        s1 = s2;\r\n        return (s2 = t - (c = t | 0));\r\n    };\r\n\r\n    random.exportState = function () {\r\n        return [s0, s1, s2, c];\r\n    };\r\n\r\n    random.importState = function (i) {\r\n        s0 = +i[0] || 0;\r\n        s1 = +i[1] || 0;\r\n        s2 = +i[2] || 0;\r\n        c = +i[3] || 0;\r\n    };\r\n\r\n    return random;\r\n}\r\n\r\nexport class RandomNumberGenerator {\r\n    /**\r\n     *\r\n     * @param {number|string=} seed\r\n     */\r\n    constructor(seed) {\r\n        this.internalRng = makeNewRng(seed || Math.random());\r\n    }\r\n\r\n    /**\r\n     * Re-seeds the generator\r\n     * @param {number|string} seed\r\n     */\r\n    reseed(seed) {\r\n        this.internalRng = makeNewRng(seed || Math.random());\r\n    }\r\n\r\n    /**\r\n     * @returns {number} between 0 and 1\r\n     */\r\n    next() {\r\n        return this.internalRng();\r\n    }\r\n\r\n    /**\r\n     * Random choice of an array\r\n     * @param {array} array\r\n     */\r\n    choice(array) {\r\n        const index = this.nextIntRange(0, array.length);\r\n        return array[index];\r\n    }\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @returns {number} Integer in range [min, max[\r\n     */\r\n    nextIntRange(min, max) {\r\n        assert(Number.isFinite(min), \"Minimum is no integer\");\r\n        assert(Number.isFinite(max), \"Maximum is no integer\");\r\n        assert(max > min, \"rng: max <= min\");\r\n        return Math.floor(this.next() * (max - min) + min);\r\n    }\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @returns {number} Number in range [min, max[\r\n     */\r\n    nextRange(min, max) {\r\n        assert(max > min, \"rng: max <= min\");\r\n        return this.next() * (max - min) + min;\r\n    }\r\n\r\n    /**\r\n     * Updates the seed\r\n     * @param {number} seed\r\n     */\r\n    setSeed(seed) {\r\n        this.internalRng = makeNewRng(seed);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/rng.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 625,
    "kind": "function",
    "name": "Mash",
    "memberof": "js/core/rng.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/rng.js~Mash",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/rng.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 626,
    "kind": "function",
    "name": "makeNewRng",
    "memberof": "js/core/rng.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/rng.js~makeNewRng",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/rng.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "seed",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 627,
    "kind": "class",
    "name": "RandomNumberGenerator",
    "memberof": "js/core/rng.js",
    "static": true,
    "longname": "js/core/rng.js~RandomNumberGenerator",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/rng.js",
    "importStyle": "{RandomNumberGenerator}",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 628,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/rng.js~RandomNumberGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rng.js~RandomNumberGenerator#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "seed",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 629,
    "kind": "member",
    "name": "internalRng",
    "memberof": "js/core/rng.js~RandomNumberGenerator",
    "static": false,
    "longname": "js/core/rng.js~RandomNumberGenerator#internalRng",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 630,
    "kind": "method",
    "name": "reseed",
    "memberof": "js/core/rng.js~RandomNumberGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rng.js~RandomNumberGenerator#reseed",
    "access": "public",
    "description": "Re-seeds the generator",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "seed",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 632,
    "kind": "method",
    "name": "next",
    "memberof": "js/core/rng.js~RandomNumberGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rng.js~RandomNumberGenerator#next",
    "access": "public",
    "description": "",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} between 0 and 1"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "between 0 and 1"
    },
    "params": []
  },
  {
    "__docId__": 633,
    "kind": "method",
    "name": "choice",
    "memberof": "js/core/rng.js~RandomNumberGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rng.js~RandomNumberGenerator#choice",
    "access": "public",
    "description": "Random choice of an array",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 634,
    "kind": "method",
    "name": "nextIntRange",
    "memberof": "js/core/rng.js~RandomNumberGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rng.js~RandomNumberGenerator#nextIntRange",
    "access": "public",
    "description": "",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Integer in range [min, max["
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Integer in range [min, max["
    }
  },
  {
    "__docId__": 635,
    "kind": "method",
    "name": "nextRange",
    "memberof": "js/core/rng.js~RandomNumberGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rng.js~RandomNumberGenerator#nextRange",
    "access": "public",
    "description": "",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Number in range [min, max["
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Number in range [min, max["
    }
  },
  {
    "__docId__": 636,
    "kind": "method",
    "name": "setSeed",
    "memberof": "js/core/rng.js~RandomNumberGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/rng.js~RandomNumberGenerator#setSeed",
    "access": "public",
    "description": "Updates the seed",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "seed",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 638,
    "kind": "file",
    "name": "js/core/sensitive_utils.encrypt.js",
    "content": "import { createHash } from \"rusha\";\r\nimport crc32 from \"crc/crc32\";\r\nimport { decompressX64 } from \"./lzstring\";\r\n\r\nexport function sha1(str) {\r\n    return createHash().update(str).digest(\"hex\");\r\n}\r\n\r\n// Window.location.host\r\nexport function getNameOfProvider() {\r\n    return window[decompressX64(\"DYewxghgLgliB2Q\")][decompressX64(\"BYewzgLgdghgtgUyA\")];\r\n}\r\n\r\n// Distinguish legacy crc prefixes\r\nexport const CRC_PREFIX = \"crc32\".padEnd(32, \"-\");\r\n\r\n/**\r\n * Computes the crc for a given string\r\n * @param {string} str\r\n */\r\nexport function computeCrc(str) {\r\n    return CRC_PREFIX + crc32(str).toString(16).padStart(8, \"0\");\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/sensitive_utils.encrypt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 639,
    "kind": "function",
    "name": "sha1",
    "memberof": "js/core/sensitive_utils.encrypt.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/sensitive_utils.encrypt.js~sha1",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/sensitive_utils.encrypt.js",
    "importStyle": "{sha1}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 640,
    "kind": "function",
    "name": "getNameOfProvider",
    "memberof": "js/core/sensitive_utils.encrypt.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/sensitive_utils.encrypt.js~getNameOfProvider",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/sensitive_utils.encrypt.js",
    "importStyle": "{getNameOfProvider}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 641,
    "kind": "variable",
    "name": "CRC_PREFIX",
    "memberof": "js/core/sensitive_utils.encrypt.js",
    "static": true,
    "longname": "js/core/sensitive_utils.encrypt.js~CRC_PREFIX",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/sensitive_utils.encrypt.js",
    "importStyle": "{CRC_PREFIX}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 642,
    "kind": "function",
    "name": "computeCrc",
    "memberof": "js/core/sensitive_utils.encrypt.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/sensitive_utils.encrypt.js~computeCrc",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/sensitive_utils.encrypt.js",
    "importStyle": "{computeCrc}",
    "description": "Computes the crc for a given string",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 643,
    "kind": "file",
    "name": "js/core/signal.js",
    "content": "export const STOP_PROPAGATION = \"stop_propagation\";\r\n\r\nexport class Signal {\r\n    constructor() {\r\n        this.receivers = [];\r\n        this.modifyCount = 0;\r\n    }\r\n\r\n    /**\r\n     * Adds a new signal listener\r\n     * @param {function} receiver\r\n     * @param {object} scope\r\n     */\r\n    add(receiver, scope = null) {\r\n        assert(receiver, \"receiver is null\");\r\n        this.receivers.push({ receiver, scope });\r\n        ++this.modifyCount;\r\n    }\r\n\r\n    /**\r\n     * Dispatches the signal\r\n     * @param  {...any} payload\r\n     */\r\n    dispatch() {\r\n        const modifyState = this.modifyCount;\r\n\r\n        const n = this.receivers.length;\r\n        for (let i = 0; i < n; ++i) {\r\n            const { receiver, scope } = this.receivers[i];\r\n            if (receiver.apply(scope, arguments) === STOP_PROPAGATION) {\r\n                return STOP_PROPAGATION;\r\n            }\r\n\r\n            if (modifyState !== this.modifyCount) {\r\n                // Signal got modified during iteration\r\n                return STOP_PROPAGATION;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes a receiver\r\n     * @param {function} receiver\r\n     */\r\n    remove(receiver) {\r\n        let index = null;\r\n        const n = this.receivers.length;\r\n        for (let i = 0; i < n; ++i) {\r\n            if (this.receivers[i].receiver === receiver) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        assert(index !== null, \"Receiver not found in list\");\r\n        this.receivers.splice(index, 1);\r\n        ++this.modifyCount;\r\n    }\r\n\r\n    /**\r\n     * Removes all receivers\r\n     */\r\n    removeAll() {\r\n        this.receivers = [];\r\n        ++this.modifyCount;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/signal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 644,
    "kind": "variable",
    "name": "STOP_PROPAGATION",
    "memberof": "js/core/signal.js",
    "static": true,
    "longname": "js/core/signal.js~STOP_PROPAGATION",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/signal.js",
    "importStyle": "{STOP_PROPAGATION}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 645,
    "kind": "class",
    "name": "Signal",
    "memberof": "js/core/signal.js",
    "static": true,
    "longname": "js/core/signal.js~Signal",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/signal.js",
    "importStyle": "{Signal}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 646,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/signal.js~Signal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/signal.js~Signal#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 647,
    "kind": "member",
    "name": "receivers",
    "memberof": "js/core/signal.js~Signal",
    "static": false,
    "longname": "js/core/signal.js~Signal#receivers",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 648,
    "kind": "member",
    "name": "modifyCount",
    "memberof": "js/core/signal.js~Signal",
    "static": false,
    "longname": "js/core/signal.js~Signal#modifyCount",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 649,
    "kind": "method",
    "name": "add",
    "memberof": "js/core/signal.js~Signal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/signal.js~Signal#add",
    "access": "public",
    "description": "Adds a new signal listener",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "receiver",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 650,
    "kind": "method",
    "name": "dispatch",
    "memberof": "js/core/signal.js~Signal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/signal.js~Signal#dispatch",
    "access": "public",
    "description": "Dispatches the signal",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "...any"
        ],
        "spread": true,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 651,
    "kind": "method",
    "name": "remove",
    "memberof": "js/core/signal.js~Signal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/signal.js~Signal#remove",
    "access": "public",
    "description": "Removes a receiver",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "receiver",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 652,
    "kind": "method",
    "name": "removeAll",
    "memberof": "js/core/signal.js~Signal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/signal.js~Signal#removeAll",
    "access": "public",
    "description": "Removes all receivers",
    "lineNumber": 62,
    "params": [],
    "return": null
  },
  {
    "__docId__": 654,
    "kind": "file",
    "name": "js/core/singleton_factory.js",
    "content": "import { createLogger } from \"./logging\";\r\n\r\nconst logger = createLogger(\"singleton_factory\");\r\n\r\n// simple factory pattern\r\nexport class SingletonFactory {\r\n    constructor(id) {\r\n        this.id = id;\r\n\r\n        // Store array as well as dictionary, to speed up lookups\r\n        this.entries = [];\r\n        this.idToEntry = {};\r\n    }\r\n\r\n    getId() {\r\n        return this.id;\r\n    }\r\n\r\n    register(classHandle) {\r\n        // First, construct instance\r\n        const instance = new classHandle();\r\n\r\n        // Extract id\r\n        const id = instance.getId();\r\n        assert(id, \"Factory: Invalid id for class \" + classHandle.name + \": \" + id);\r\n\r\n        // Check duplicates\r\n        assert(!this.idToEntry[id], \"Duplicate factory entry for \" + id);\r\n\r\n        // Insert\r\n        this.entries.push(instance);\r\n        this.idToEntry[id] = instance;\r\n    }\r\n\r\n    /**\r\n     * Checks if a given id is registered\r\n     * @param {string} id\r\n     * @returns {boolean}\r\n     */\r\n    hasId(id) {\r\n        return !!this.idToEntry[id];\r\n    }\r\n\r\n    /**\r\n     * Finds an instance by a given id\r\n     * @param {string} id\r\n     * @returns {object}\r\n     */\r\n    findById(id) {\r\n        const entry = this.idToEntry[id];\r\n        if (!entry) {\r\n            logger.error(\"Object with id\", id, \"is not registered!\");\r\n            assert(false, \"Factory: Object with id '\" + id + \"' is not registered!\");\r\n            return null;\r\n        }\r\n        return entry;\r\n    }\r\n\r\n    /**\r\n     * Finds an instance by its constructor (The class handle)\r\n     * @param {object} classHandle\r\n     * @returns {object}\r\n     */\r\n    findByClass(classHandle) {\r\n        for (let i = 0; i < this.entries.length; ++i) {\r\n            if (this.entries[i] instanceof classHandle) {\r\n                return this.entries[i];\r\n            }\r\n        }\r\n        assert(false, \"Factory: Object not found by classHandle (classid: \" + classHandle.name + \")\");\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Returns all entries\r\n     * @returns {Array<object>}\r\n     */\r\n    getEntries() {\r\n        return this.entries;\r\n    }\r\n\r\n    /**\r\n     * Returns all registered ids\r\n     * @returns {Array<string>}\r\n     */\r\n    getAllIds() {\r\n        return Object.keys(this.idToEntry);\r\n    }\r\n\r\n    /**\r\n     * Returns amount of stored entries\r\n     * @returns {number}\r\n     */\r\n    getNumEntries() {\r\n        return this.entries.length;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/singleton_factory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 655,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/singleton_factory.js",
    "static": true,
    "longname": "js/core/singleton_factory.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/singleton_factory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 656,
    "kind": "class",
    "name": "SingletonFactory",
    "memberof": "js/core/singleton_factory.js",
    "static": true,
    "longname": "js/core/singleton_factory.js~SingletonFactory",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/singleton_factory.js",
    "importStyle": "{SingletonFactory}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 657,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/singleton_factory.js~SingletonFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/singleton_factory.js~SingletonFactory#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 658,
    "kind": "member",
    "name": "id",
    "memberof": "js/core/singleton_factory.js~SingletonFactory",
    "static": false,
    "longname": "js/core/singleton_factory.js~SingletonFactory#id",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 659,
    "kind": "member",
    "name": "entries",
    "memberof": "js/core/singleton_factory.js~SingletonFactory",
    "static": false,
    "longname": "js/core/singleton_factory.js~SingletonFactory#entries",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 660,
    "kind": "member",
    "name": "idToEntry",
    "memberof": "js/core/singleton_factory.js~SingletonFactory",
    "static": false,
    "longname": "js/core/singleton_factory.js~SingletonFactory#idToEntry",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 661,
    "kind": "method",
    "name": "getId",
    "memberof": "js/core/singleton_factory.js~SingletonFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/singleton_factory.js~SingletonFactory#getId",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 662,
    "kind": "method",
    "name": "register",
    "memberof": "js/core/singleton_factory.js~SingletonFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/singleton_factory.js~SingletonFactory#register",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "classHandle",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 663,
    "kind": "method",
    "name": "hasId",
    "memberof": "js/core/singleton_factory.js~SingletonFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/singleton_factory.js~SingletonFactory#hasId",
    "access": "public",
    "description": "Checks if a given id is registered",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 664,
    "kind": "method",
    "name": "findById",
    "memberof": "js/core/singleton_factory.js~SingletonFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/singleton_factory.js~SingletonFactory#findById",
    "access": "public",
    "description": "Finds an instance by a given id",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 665,
    "kind": "method",
    "name": "findByClass",
    "memberof": "js/core/singleton_factory.js~SingletonFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/singleton_factory.js~SingletonFactory#findByClass",
    "access": "public",
    "description": "Finds an instance by its constructor (The class handle)",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "classHandle",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 666,
    "kind": "method",
    "name": "getEntries",
    "memberof": "js/core/singleton_factory.js~SingletonFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/singleton_factory.js~SingletonFactory#getEntries",
    "access": "public",
    "description": "Returns all entries",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<object>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<object>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 667,
    "kind": "method",
    "name": "getAllIds",
    "memberof": "js/core/singleton_factory.js~SingletonFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/singleton_factory.js~SingletonFactory#getAllIds",
    "access": "public",
    "description": "Returns all registered ids",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<string>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 668,
    "kind": "method",
    "name": "getNumEntries",
    "memberof": "js/core/singleton_factory.js~SingletonFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/singleton_factory.js~SingletonFactory#getNumEntries",
    "access": "public",
    "description": "Returns amount of stored entries",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 669,
    "kind": "file",
    "name": "js/core/sprites.js",
    "content": "import { DrawParameters } from \"./draw_parameters\";\r\nimport { Rectangle } from \"./rectangle\";\r\nimport { round3Digits } from \"./utils\";\r\n\r\nexport const ORIGINAL_SPRITE_SCALE = \"0.75\";\r\nexport const FULL_CLIP_RECT = new Rectangle(0, 0, 1, 1);\r\n\r\nconst EXTRUDE = 0.1;\r\n\r\nexport class BaseSprite {\r\n    /**\r\n     * Returns the raw handle\r\n     * @returns {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    getRawTexture() {\r\n        abstract;\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Draws the sprite\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} w\r\n     * @param {number} h\r\n     */\r\n    draw(context, x, y, w, h) {\r\n        // eslint-disable-line no-unused-vars\r\n        abstract;\r\n    }\r\n}\r\n\r\n/**\r\n * Position of a sprite within an atlas\r\n */\r\nexport class SpriteAtlasLink {\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {number} param0.packedX\r\n     * @param {number} param0.packedY\r\n     * @param {number} param0.packOffsetX\r\n     * @param {number} param0.packOffsetY\r\n     * @param {number} param0.packedW\r\n     * @param {number} param0.packedH\r\n     * @param {number} param0.w\r\n     * @param {number} param0.h\r\n     * @param {HTMLImageElement|HTMLCanvasElement} param0.atlas\r\n     */\r\n    constructor({ w, h, packedX, packedY, packOffsetX, packOffsetY, packedW, packedH, atlas }) {\r\n        this.packedX = packedX;\r\n        this.packedY = packedY;\r\n        this.packedW = packedW;\r\n        this.packedH = packedH;\r\n        this.packOffsetX = packOffsetX;\r\n        this.packOffsetY = packOffsetY;\r\n        this.atlas = atlas;\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n}\r\n\r\nexport class AtlasSprite extends BaseSprite {\r\n    /**\r\n     *\r\n     * @param {string} spriteName\r\n     */\r\n    constructor(spriteName = \"sprite\") {\r\n        super();\r\n        /** @type {Object.<string, SpriteAtlasLink>} */\r\n        this.linksByResolution = {};\r\n        this.spriteName = spriteName;\r\n    }\r\n\r\n    getRawTexture() {\r\n        return this.linksByResolution[ORIGINAL_SPRITE_SCALE].atlas;\r\n    }\r\n\r\n    /**\r\n     * Draws the sprite onto a regular context using no contexts\r\n     * @see {BaseSprite.draw}\r\n     */\r\n    draw(context, x, y, w, h) {\r\n        if (G_IS_DEV) {\r\n            assert(context instanceof CanvasRenderingContext2D, \"Not a valid context\");\r\n        }\r\n\r\n        const link = this.linksByResolution[ORIGINAL_SPRITE_SCALE];\r\n\r\n        assert(\r\n            link,\r\n            \"Link not known: \" +\r\n                ORIGINAL_SPRITE_SCALE +\r\n                \" (having \" +\r\n                Object.keys(this.linksByResolution) +\r\n                \")\"\r\n        );\r\n\r\n        const width = w || link.w;\r\n        const height = h || link.h;\r\n\r\n        const scaleW = width / link.w;\r\n        const scaleH = height / link.h;\r\n\r\n        context.drawImage(\r\n            link.atlas,\r\n\r\n            link.packedX,\r\n            link.packedY,\r\n            link.packedW,\r\n            link.packedH,\r\n\r\n            x + link.packOffsetX * scaleW,\r\n            y + link.packOffsetY * scaleH,\r\n            link.packedW * scaleW,\r\n            link.packedH * scaleH\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} size\r\n     * @param {boolean=} clipping\r\n     */\r\n    drawCachedCentered(parameters, x, y, size, clipping = true) {\r\n        this.drawCached(parameters, x - size / 2, y - size / 2, size, size, clipping);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} size\r\n     */\r\n    drawCentered(context, x, y, size) {\r\n        this.draw(context, x - size / 2, y - size / 2, size, size);\r\n    }\r\n\r\n    /**\r\n     * Draws the sprite\r\n     * @param {DrawParameters} parameters\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} w\r\n     * @param {number} h\r\n     * @param {boolean=} clipping Whether to perform culling\r\n     */\r\n    drawCached(parameters, x, y, w = null, h = null, clipping = true) {\r\n        if (G_IS_DEV) {\r\n            assert(parameters instanceof DrawParameters, \"Not a valid context\");\r\n            assert(!!w && w > 0, \"Not a valid width:\" + w);\r\n            assert(!!h && h > 0, \"Not a valid height:\" + h);\r\n        }\r\n\r\n        const visibleRect = parameters.visibleRect;\r\n\r\n        const scale = parameters.desiredAtlasScale;\r\n        const link = this.linksByResolution[scale];\r\n\r\n        if (!link) {\r\n            assert(false, `Link not known: ${scale} (having ${Object.keys(this.linksByResolution)})`);\r\n        }\r\n\r\n        const scaleW = w / link.w;\r\n        const scaleH = h / link.h;\r\n\r\n        let destX = x + link.packOffsetX * scaleW;\r\n        let destY = y + link.packOffsetY * scaleH;\r\n        let destW = link.packedW * scaleW;\r\n        let destH = link.packedH * scaleH;\r\n\r\n        let srcX = link.packedX;\r\n        let srcY = link.packedY;\r\n        let srcW = link.packedW;\r\n        let srcH = link.packedH;\r\n\r\n        let intersection = null;\r\n\r\n        if (clipping) {\r\n            const rect = new Rectangle(destX, destY, destW, destH);\r\n            intersection = rect.getIntersection(visibleRect);\r\n            if (!intersection) {\r\n                return;\r\n            }\r\n\r\n            srcX += (intersection.x - destX) / scaleW;\r\n            srcY += (intersection.y - destY) / scaleH;\r\n\r\n            srcW *= intersection.w / destW;\r\n            srcH *= intersection.h / destH;\r\n\r\n            destX = intersection.x;\r\n            destY = intersection.y;\r\n\r\n            destW = intersection.w;\r\n            destH = intersection.h;\r\n        }\r\n\r\n        parameters.context.drawImage(\r\n            link.atlas,\r\n\r\n            // atlas src pos\r\n            srcX,\r\n            srcY,\r\n\r\n            // atlas src size\r\n            srcW,\r\n            srcH,\r\n\r\n            // dest pos and size\r\n            destX - EXTRUDE,\r\n            destY - EXTRUDE,\r\n            destW + 2 * EXTRUDE,\r\n            destH + 2 * EXTRUDE\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Draws a subset of the sprite. Does NO culling\r\n     * @param {DrawParameters} parameters\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} w\r\n     * @param {number} h\r\n     * @param {Rectangle=} clipRect The rectangle in local space (0 ... 1) to draw of the image\r\n     */\r\n    drawCachedWithClipRect(parameters, x, y, w = null, h = null, clipRect = FULL_CLIP_RECT) {\r\n        if (G_IS_DEV) {\r\n            assert(parameters instanceof DrawParameters, \"Not a valid context\");\r\n            assert(!!w && w > 0, \"Not a valid width:\" + w);\r\n            assert(!!h && h > 0, \"Not a valid height:\" + h);\r\n            assert(clipRect, \"No clip rect given!\");\r\n        }\r\n\r\n        const scale = parameters.desiredAtlasScale;\r\n        const link = this.linksByResolution[scale];\r\n\r\n        if (!link) {\r\n            assert(false, `Link not known: ${scale} (having ${Object.keys(this.linksByResolution)})`);\r\n        }\r\n\r\n        const scaleW = w / link.w;\r\n        const scaleH = h / link.h;\r\n\r\n        let destX = x + link.packOffsetX * scaleW + clipRect.x * w;\r\n        let destY = y + link.packOffsetY * scaleH + clipRect.y * h;\r\n        let destW = link.packedW * scaleW * clipRect.w;\r\n        let destH = link.packedH * scaleH * clipRect.h;\r\n\r\n        let srcX = link.packedX + clipRect.x * link.packedW;\r\n        let srcY = link.packedY + clipRect.y * link.packedH;\r\n        let srcW = link.packedW * clipRect.w;\r\n        let srcH = link.packedH * clipRect.h;\r\n\r\n        parameters.context.drawImage(\r\n            link.atlas,\r\n\r\n            // atlas src pos\r\n            srcX,\r\n            srcY,\r\n\r\n            // atlas src siize\r\n            srcW,\r\n            srcH,\r\n\r\n            // dest pos and size\r\n            destX - EXTRUDE,\r\n            destY - EXTRUDE,\r\n            destW + 2 * EXTRUDE,\r\n            destH + 2 * EXTRUDE\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Renders into an html element\r\n     * @param {HTMLElement} element\r\n     * @param {number} w\r\n     * @param {number} h\r\n     */\r\n    renderToHTMLElement(element, w = 1, h = 1) {\r\n        element.style.position = \"relative\";\r\n        element.innerHTML = this.getAsHTML(w, h);\r\n    }\r\n\r\n    /**\r\n     * Returns the html to render as icon\r\n     * @param {number} w\r\n     * @param {number} h\r\n     */\r\n    getAsHTML(w, h) {\r\n        const link = this.linksByResolution[\"0.5\"];\r\n\r\n        // Find out how much we have to scale it so that it fits\r\n        const scaleX = w / link.w;\r\n        const scaleY = h / link.h;\r\n\r\n        // Find out how big the scaled atlas is\r\n        const atlasW = link.atlas.width * scaleX;\r\n        const atlasH = link.atlas.height * scaleY;\r\n\r\n        // @ts-ignore\r\n        const srcSafe = link.atlas.src.replaceAll(\"\\\\\", \"/\");\r\n\r\n        // Find out how big we render the sprite\r\n        const widthAbsolute = scaleX * link.packedW;\r\n        const heightAbsolute = scaleY * link.packedH;\r\n\r\n        // Compute the position in the relative container\r\n        const leftRelative = (link.packOffsetX * scaleX) / w;\r\n        const topRelative = (link.packOffsetY * scaleY) / h;\r\n        const widthRelative = widthAbsolute / w;\r\n        const heightRelative = heightAbsolute / h;\r\n\r\n        // Scale the atlas relative to the width and height of the element\r\n        const bgW = atlasW / widthAbsolute;\r\n        const bgH = atlasH / heightAbsolute;\r\n\r\n        // Figure out what the position of the atlas is\r\n        const bgX = link.packedX * scaleX;\r\n        const bgY = link.packedY * scaleY;\r\n\r\n        // Fuck you, whoever thought its a good idea to make background-position work like it does now\r\n        const bgXRelative = -bgX / (widthAbsolute - atlasW);\r\n        const bgYRelative = -bgY / (heightAbsolute - atlasH);\r\n\r\n        return `\r\n            <span class=\"spritesheetImage\" style=\"\r\n                background-image: url('${srcSafe}');\r\n                left: ${round3Digits(leftRelative * 100.0)}%;\r\n                top: ${round3Digits(topRelative * 100.0)}%;\r\n                width: ${round3Digits(widthRelative * 100.0)}%;\r\n                height: ${round3Digits(heightRelative * 100.0)}%;\r\n                background-repeat: repeat;\r\n                background-position: ${round3Digits(bgXRelative * 100.0)}% ${round3Digits(\r\n            bgYRelative * 100.0\r\n        )}%;\r\n                background-size: ${round3Digits(bgW * 100.0)}% ${round3Digits(bgH * 100.0)}%;\r\n            \"></span>\r\n        `;\r\n    }\r\n}\r\n\r\nexport class RegularSprite extends BaseSprite {\r\n    constructor(sprite, w, h) {\r\n        super();\r\n        this.w = w;\r\n        this.h = h;\r\n        this.sprite = sprite;\r\n    }\r\n\r\n    getRawTexture() {\r\n        return this.sprite;\r\n    }\r\n\r\n    /**\r\n     * Draws the sprite, do *not* use this for sprites which are rendered! Only for drawing\r\n     * images into buffers\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} w\r\n     * @param {number} h\r\n     */\r\n    draw(context, x, y, w, h) {\r\n        assert(context, \"No context given\");\r\n        assert(x !== undefined, \"No x given\");\r\n        assert(y !== undefined, \"No y given\");\r\n        assert(w !== undefined, \"No width given\");\r\n        assert(h !== undefined, \"No height given\");\r\n        context.drawImage(this.sprite, x, y, w, h);\r\n    }\r\n\r\n    /**\r\n     * Draws the sprite, do *not* use this for sprites which are rendered! Only for drawing\r\n     * images into buffers\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} w\r\n     * @param {number} h\r\n     */\r\n    drawCentered(context, x, y, w, h) {\r\n        assert(context, \"No context given\");\r\n        assert(x !== undefined, \"No x given\");\r\n        assert(y !== undefined, \"No y given\");\r\n        assert(w !== undefined, \"No width given\");\r\n        assert(h !== undefined, \"No height given\");\r\n        context.drawImage(this.sprite, x - w / 2, y - h / 2, w, h);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/sprites.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 670,
    "kind": "variable",
    "name": "ORIGINAL_SPRITE_SCALE",
    "memberof": "js/core/sprites.js",
    "static": true,
    "longname": "js/core/sprites.js~ORIGINAL_SPRITE_SCALE",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/sprites.js",
    "importStyle": "{ORIGINAL_SPRITE_SCALE}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 671,
    "kind": "variable",
    "name": "FULL_CLIP_RECT",
    "memberof": "js/core/sprites.js",
    "static": true,
    "longname": "js/core/sprites.js~FULL_CLIP_RECT",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/sprites.js",
    "importStyle": "{FULL_CLIP_RECT}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "js/core/rectangle.js~Rectangle"
      ]
    }
  },
  {
    "__docId__": 672,
    "kind": "variable",
    "name": "EXTRUDE",
    "memberof": "js/core/sprites.js",
    "static": true,
    "longname": "js/core/sprites.js~EXTRUDE",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/sprites.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 673,
    "kind": "class",
    "name": "BaseSprite",
    "memberof": "js/core/sprites.js",
    "static": true,
    "longname": "js/core/sprites.js~BaseSprite",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/sprites.js",
    "importStyle": "{BaseSprite}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 674,
    "kind": "method",
    "name": "getRawTexture",
    "memberof": "js/core/sprites.js~BaseSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~BaseSprite#getRawTexture",
    "access": "public",
    "description": "Returns the raw handle",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{HTMLImageElement|HTMLCanvasElement}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLImageElement",
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 675,
    "kind": "method",
    "name": "draw",
    "memberof": "js/core/sprites.js~BaseSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~BaseSprite#draw",
    "access": "public",
    "description": "Draws the sprite",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 676,
    "kind": "class",
    "name": "SpriteAtlasLink",
    "memberof": "js/core/sprites.js",
    "static": true,
    "longname": "js/core/sprites.js~SpriteAtlasLink",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/sprites.js",
    "importStyle": "{SpriteAtlasLink}",
    "description": "Position of a sprite within an atlas",
    "lineNumber": 37,
    "interface": false
  },
  {
    "__docId__": 677,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/sprites.js~SpriteAtlasLink",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~SpriteAtlasLink#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.packedX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.packedY",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.packOffsetX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.packOffsetY",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.packedW",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.packedH",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.h",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLImageElement",
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.atlas",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 678,
    "kind": "member",
    "name": "packedX",
    "memberof": "js/core/sprites.js~SpriteAtlasLink",
    "static": false,
    "longname": "js/core/sprites.js~SpriteAtlasLink#packedX",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 679,
    "kind": "member",
    "name": "packedY",
    "memberof": "js/core/sprites.js~SpriteAtlasLink",
    "static": false,
    "longname": "js/core/sprites.js~SpriteAtlasLink#packedY",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 680,
    "kind": "member",
    "name": "packedW",
    "memberof": "js/core/sprites.js~SpriteAtlasLink",
    "static": false,
    "longname": "js/core/sprites.js~SpriteAtlasLink#packedW",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 681,
    "kind": "member",
    "name": "packedH",
    "memberof": "js/core/sprites.js~SpriteAtlasLink",
    "static": false,
    "longname": "js/core/sprites.js~SpriteAtlasLink#packedH",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 682,
    "kind": "member",
    "name": "packOffsetX",
    "memberof": "js/core/sprites.js~SpriteAtlasLink",
    "static": false,
    "longname": "js/core/sprites.js~SpriteAtlasLink#packOffsetX",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 683,
    "kind": "member",
    "name": "packOffsetY",
    "memberof": "js/core/sprites.js~SpriteAtlasLink",
    "static": false,
    "longname": "js/core/sprites.js~SpriteAtlasLink#packOffsetY",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 684,
    "kind": "member",
    "name": "atlas",
    "memberof": "js/core/sprites.js~SpriteAtlasLink",
    "static": false,
    "longname": "js/core/sprites.js~SpriteAtlasLink#atlas",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 685,
    "kind": "member",
    "name": "w",
    "memberof": "js/core/sprites.js~SpriteAtlasLink",
    "static": false,
    "longname": "js/core/sprites.js~SpriteAtlasLink#w",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 686,
    "kind": "member",
    "name": "h",
    "memberof": "js/core/sprites.js~SpriteAtlasLink",
    "static": false,
    "longname": "js/core/sprites.js~SpriteAtlasLink#h",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 687,
    "kind": "class",
    "name": "AtlasSprite",
    "memberof": "js/core/sprites.js",
    "static": true,
    "longname": "js/core/sprites.js~AtlasSprite",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/sprites.js",
    "importStyle": "{AtlasSprite}",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseSprite"
    ]
  },
  {
    "__docId__": 688,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/sprites.js~AtlasSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~AtlasSprite#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "spriteName",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 689,
    "kind": "member",
    "name": "linksByResolution",
    "memberof": "js/core/sprites.js~AtlasSprite",
    "static": false,
    "longname": "js/core/sprites.js~AtlasSprite#linksByResolution",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "Object.<string, SpriteAtlasLink>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 690,
    "kind": "member",
    "name": "spriteName",
    "memberof": "js/core/sprites.js~AtlasSprite",
    "static": false,
    "longname": "js/core/sprites.js~AtlasSprite#spriteName",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 691,
    "kind": "method",
    "name": "getRawTexture",
    "memberof": "js/core/sprites.js~AtlasSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~AtlasSprite#getRawTexture",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 692,
    "kind": "method",
    "name": "draw",
    "memberof": "js/core/sprites.js~AtlasSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~AtlasSprite#draw",
    "access": "public",
    "description": "Draws the sprite onto a regular context using no contexts",
    "see": [
      "{BaseSprite.draw}"
    ],
    "lineNumber": 84,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      },
      {
        "name": "w",
        "types": [
          "*"
        ]
      },
      {
        "name": "h",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 693,
    "kind": "method",
    "name": "drawCachedCentered",
    "memberof": "js/core/sprites.js~AtlasSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~AtlasSprite#drawCachedCentered",
    "access": "public",
    "description": "",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "clipping",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 694,
    "kind": "method",
    "name": "drawCentered",
    "memberof": "js/core/sprites.js~AtlasSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~AtlasSprite#drawCentered",
    "access": "public",
    "description": "",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 695,
    "kind": "method",
    "name": "drawCached",
    "memberof": "js/core/sprites.js~AtlasSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~AtlasSprite#drawCached",
    "access": "public",
    "description": "Draws the sprite",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "clipping",
        "description": "Whether to perform culling"
      }
    ],
    "return": null
  },
  {
    "__docId__": 696,
    "kind": "method",
    "name": "drawCachedWithClipRect",
    "memberof": "js/core/sprites.js~AtlasSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~AtlasSprite#drawCachedWithClipRect",
    "access": "public",
    "description": "Draws a subset of the sprite. Does NO culling",
    "lineNumber": 232,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Rectangle="
        ],
        "spread": false,
        "optional": false,
        "name": "clipRect",
        "description": "The rectangle in local space (0 ... 1) to draw of the image"
      }
    ],
    "return": null
  },
  {
    "__docId__": 697,
    "kind": "method",
    "name": "renderToHTMLElement",
    "memberof": "js/core/sprites.js~AtlasSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~AtlasSprite#renderToHTMLElement",
    "access": "public",
    "description": "Renders into an html element",
    "lineNumber": 285,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 698,
    "kind": "method",
    "name": "getAsHTML",
    "memberof": "js/core/sprites.js~AtlasSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~AtlasSprite#getAsHTML",
    "access": "public",
    "description": "Returns the html to render as icon",
    "lineNumber": 295,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 699,
    "kind": "class",
    "name": "RegularSprite",
    "memberof": "js/core/sprites.js",
    "static": true,
    "longname": "js/core/sprites.js~RegularSprite",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/sprites.js",
    "importStyle": "{RegularSprite}",
    "description": null,
    "lineNumber": 348,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseSprite"
    ]
  },
  {
    "__docId__": 700,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/sprites.js~RegularSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~RegularSprite#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 349,
    "undocument": true
  },
  {
    "__docId__": 701,
    "kind": "member",
    "name": "w",
    "memberof": "js/core/sprites.js~RegularSprite",
    "static": false,
    "longname": "js/core/sprites.js~RegularSprite#w",
    "access": "public",
    "description": null,
    "lineNumber": 351,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 702,
    "kind": "member",
    "name": "h",
    "memberof": "js/core/sprites.js~RegularSprite",
    "static": false,
    "longname": "js/core/sprites.js~RegularSprite#h",
    "access": "public",
    "description": null,
    "lineNumber": 352,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 703,
    "kind": "member",
    "name": "sprite",
    "memberof": "js/core/sprites.js~RegularSprite",
    "static": false,
    "longname": "js/core/sprites.js~RegularSprite#sprite",
    "access": "public",
    "description": null,
    "lineNumber": 353,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 704,
    "kind": "method",
    "name": "getRawTexture",
    "memberof": "js/core/sprites.js~RegularSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~RegularSprite#getRawTexture",
    "access": "public",
    "description": null,
    "lineNumber": 356,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 705,
    "kind": "method",
    "name": "draw",
    "memberof": "js/core/sprites.js~RegularSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~RegularSprite#draw",
    "access": "public",
    "description": "Draws the sprite, do *not* use this for sprites which are rendered! Only for drawing\nimages into buffers",
    "lineNumber": 369,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 706,
    "kind": "method",
    "name": "drawCentered",
    "memberof": "js/core/sprites.js~RegularSprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/sprites.js~RegularSprite#drawCentered",
    "access": "public",
    "description": "Draws the sprite, do *not* use this for sprites which are rendered! Only for drawing\nimages into buffers",
    "lineNumber": 387,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 707,
    "kind": "file",
    "name": "js/core/stale_area_detector.js",
    "content": "import { Component } from \"../game/component\";\r\nimport { Entity } from \"../game/entity\";\r\nimport { globalConfig } from \"./config\";\r\nimport { createLogger } from \"./logging\";\r\nimport { Rectangle } from \"./rectangle\";\r\n\r\nconst logger = createLogger(\"stale_areas\");\r\n\r\nexport class StaleAreaDetector {\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {import(\"../game/root\").GameRoot} param0.root\r\n     * @param {string} param0.name The name for reference\r\n     * @param {(Rectangle) => void} param0.recomputeMethod Method which recomputes the given area\r\n     */\r\n    constructor({ root, name, recomputeMethod }) {\r\n        this.root = root;\r\n        this.name = name;\r\n        this.recomputeMethod = recomputeMethod;\r\n\r\n        /** @type {Rectangle} */\r\n        this.staleArea = null;\r\n    }\r\n\r\n    /**\r\n     * Invalidates the given area\r\n     * @param {Rectangle} area\r\n     */\r\n    invalidate(area) {\r\n        // logger.log(this.name, \"invalidated\", area.toString());\r\n        if (this.staleArea) {\r\n            this.staleArea = this.staleArea.getUnion(area);\r\n        } else {\r\n            this.staleArea = area.clone();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Makes this detector recompute the area of an entity whenever\r\n     * it changes in any way\r\n     * @param {Array<typeof Component>} components\r\n     * @param {number} tilesAround How many tiles arround to expand the area\r\n     */\r\n    recomputeOnComponentsChanged(components, tilesAround) {\r\n        const componentIds = components.map(component => component.getId());\r\n\r\n        /**\r\n         * Internal checker method\r\n         * @param {Entity} entity\r\n         */\r\n        const checker = entity => {\r\n            if (!this.root.gameInitialized) {\r\n                return;\r\n            }\r\n\r\n            // Check for all components\r\n            for (let i = 0; i < componentIds.length; ++i) {\r\n                if (entity.components[componentIds[i]]) {\r\n                    // Entity is relevant, compute affected area\r\n                    const area = entity.components.StaticMapEntity.getTileSpaceBounds().expandedInAllDirections(\r\n                        tilesAround\r\n                    );\r\n                    this.invalidate(area);\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n\r\n        this.root.signals.entityAdded.add(checker);\r\n        this.root.signals.entityChanged.add(checker);\r\n        this.root.signals.entityComponentRemoved.add(checker);\r\n        this.root.signals.entityGotNewComponent.add(checker);\r\n        this.root.signals.entityDestroyed.add(checker);\r\n    }\r\n\r\n    /**\r\n     * Updates the stale area\r\n     */\r\n    update() {\r\n        if (this.staleArea) {\r\n            logger.log(this.name, \"is recomputing\", this.staleArea.toString());\r\n            if (G_IS_DEV && globalConfig.debug.renderChanges) {\r\n                this.root.hud.parts.changesDebugger.renderChange(this.name, this.staleArea, \"#fd145b\");\r\n            }\r\n            this.recomputeMethod(this.staleArea);\r\n            this.staleArea = null;\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/stale_area_detector.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 708,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/stale_area_detector.js",
    "static": true,
    "longname": "js/core/stale_area_detector.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/stale_area_detector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 709,
    "kind": "class",
    "name": "StaleAreaDetector",
    "memberof": "js/core/stale_area_detector.js",
    "static": true,
    "longname": "js/core/stale_area_detector.js~StaleAreaDetector",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/stale_area_detector.js",
    "importStyle": "{StaleAreaDetector}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 710,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/stale_area_detector.js~StaleAreaDetector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/stale_area_detector.js~StaleAreaDetector#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "import(\"../game/root\").GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.name",
        "description": "The name for reference"
      },
      {
        "nullable": null,
        "types": [
          "Rectangle) => void"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.recomputeMethod",
        "description": "Method which recomputes the given area"
      }
    ]
  },
  {
    "__docId__": 711,
    "kind": "member",
    "name": "root",
    "memberof": "js/core/stale_area_detector.js~StaleAreaDetector",
    "static": false,
    "longname": "js/core/stale_area_detector.js~StaleAreaDetector#root",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 712,
    "kind": "member",
    "name": "name",
    "memberof": "js/core/stale_area_detector.js~StaleAreaDetector",
    "static": false,
    "longname": "js/core/stale_area_detector.js~StaleAreaDetector#name",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 713,
    "kind": "member",
    "name": "recomputeMethod",
    "memberof": "js/core/stale_area_detector.js~StaleAreaDetector",
    "static": false,
    "longname": "js/core/stale_area_detector.js~StaleAreaDetector#recomputeMethod",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 714,
    "kind": "member",
    "name": "staleArea",
    "memberof": "js/core/stale_area_detector.js~StaleAreaDetector",
    "static": false,
    "longname": "js/core/stale_area_detector.js~StaleAreaDetector#staleArea",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "Rectangle"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 715,
    "kind": "method",
    "name": "invalidate",
    "memberof": "js/core/stale_area_detector.js~StaleAreaDetector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/stale_area_detector.js~StaleAreaDetector#invalidate",
    "access": "public",
    "description": "Invalidates the given area",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Rectangle"
        ],
        "spread": false,
        "optional": false,
        "name": "area",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 718,
    "kind": "method",
    "name": "recomputeOnComponentsChanged",
    "memberof": "js/core/stale_area_detector.js~StaleAreaDetector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/stale_area_detector.js~StaleAreaDetector#recomputeOnComponentsChanged",
    "access": "public",
    "description": "Makes this detector recompute the area of an entity whenever\nit changes in any way",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<typeof Component>"
        ],
        "spread": false,
        "optional": false,
        "name": "components",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tilesAround",
        "description": "How many tiles arround to expand the area"
      }
    ],
    "return": null
  },
  {
    "__docId__": 719,
    "kind": "method",
    "name": "update",
    "memberof": "js/core/stale_area_detector.js~StaleAreaDetector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/stale_area_detector.js~StaleAreaDetector#update",
    "access": "public",
    "description": "Updates the stale area",
    "lineNumber": 80,
    "params": [],
    "return": null
  },
  {
    "__docId__": 721,
    "kind": "file",
    "name": "js/core/state_manager.js",
    "content": "/* typehints:start*/\r\nimport { Application } from \"../application\";\r\n/* typehints:end*/\r\n\r\nimport { GameState } from \"./game_state\";\r\nimport { createLogger } from \"./logging\";\r\nimport { APPLICATION_ERROR_OCCURED } from \"./error_handler\";\r\nimport { waitNextFrame, removeAllChildren } from \"./utils\";\r\n\r\nconst logger = createLogger(\"state_manager\");\r\n\r\n/**\r\n * This is the main state machine which drives the game states.\r\n */\r\nexport class StateManager {\r\n    /**\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        this.app = app;\r\n\r\n        /** @type {GameState} */\r\n        this.currentState = null;\r\n\r\n        /** @type {Object.<string, new() => GameState>} */\r\n        this.stateClasses = {};\r\n    }\r\n\r\n    /**\r\n     * Registers a new state class, should be a GameState derived class\r\n     * @param {object} stateClass\r\n     */\r\n    register(stateClass) {\r\n        // Create a dummy to retrieve the key\r\n        const dummy = new stateClass();\r\n        assert(dummy instanceof GameState, \"Not a state!\");\r\n        const key = dummy.getKey();\r\n        assert(!this.stateClasses[key], `State '${key}' is already registered!`);\r\n        this.stateClasses[key] = stateClass;\r\n    }\r\n\r\n    /**\r\n     * Constructs a new state or returns the instance from the cache\r\n     * @param {string} key\r\n     */\r\n    constructState(key) {\r\n        if (this.stateClasses[key]) {\r\n            return new this.stateClasses[key]();\r\n        }\r\n        assert(false, `State '${key}' is not known!`);\r\n    }\r\n\r\n    /**\r\n     * Moves to a given state\r\n     * @param {string} key State Key\r\n     */\r\n    moveToState(key, payload = {}) {\r\n        if (APPLICATION_ERROR_OCCURED) {\r\n            console.warn(\"Skipping state transition because of application crash\");\r\n            return;\r\n        }\r\n\r\n        if (this.currentState) {\r\n            if (key === this.currentState.getKey()) {\r\n                logger.error(`State '${key}' is already active!`);\r\n                return false;\r\n            }\r\n            this.currentState.internalLeaveCallback();\r\n\r\n            // Remove all references\r\n            for (const stateKey in this.currentState) {\r\n                if (this.currentState.hasOwnProperty(stateKey)) {\r\n                    delete this.currentState[stateKey];\r\n                }\r\n            }\r\n            this.currentState = null;\r\n        }\r\n\r\n        this.currentState = this.constructState(key);\r\n        this.currentState.internalRegisterCallback(this, this.app);\r\n\r\n        // Clean up old elements\r\n        removeAllChildren(document.body);\r\n\r\n        document.body.className = \"gameState \" + (this.currentState.getHasFadeIn() ? \"\" : \"arrived\");\r\n        document.body.id = \"state_\" + key;\r\n        document.body.innerHTML = this.currentState.internalGetFullHtml();\r\n\r\n        const dialogParent = document.createElement(\"div\");\r\n        dialogParent.classList.add(\"modalDialogParent\");\r\n        document.body.appendChild(dialogParent);\r\n\r\n        this.app.sound.playThemeMusic(this.currentState.getThemeMusic());\r\n\r\n        this.currentState.internalEnterCallback(payload);\r\n        this.currentState.onResized(this.app.screenWidth, this.app.screenHeight);\r\n\r\n        this.app.analytics.trackStateEnter(key);\r\n\r\n        window.history.pushState(\r\n            {\r\n                key,\r\n            },\r\n            key\r\n        );\r\n\r\n        waitNextFrame().then(() => {\r\n            document.body.classList.add(\"arrived\");\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns the current state\r\n     * @returns {GameState}\r\n     */\r\n    getCurrentState() {\r\n        return this.currentState;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/state_manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 722,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/core/state_manager.js",
    "static": true,
    "longname": "js/core/state_manager.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/state_manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 723,
    "kind": "class",
    "name": "StateManager",
    "memberof": "js/core/state_manager.js",
    "static": true,
    "longname": "js/core/state_manager.js~StateManager",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/state_manager.js",
    "importStyle": "{StateManager}",
    "description": "This is the main state machine which drives the game states.",
    "lineNumber": 15,
    "interface": false
  },
  {
    "__docId__": 724,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/state_manager.js~StateManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/state_manager.js~StateManager#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 725,
    "kind": "member",
    "name": "app",
    "memberof": "js/core/state_manager.js~StateManager",
    "static": false,
    "longname": "js/core/state_manager.js~StateManager#app",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 726,
    "kind": "member",
    "name": "currentState",
    "memberof": "js/core/state_manager.js~StateManager",
    "static": false,
    "longname": "js/core/state_manager.js~StateManager#currentState",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "GameState"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 727,
    "kind": "member",
    "name": "stateClasses",
    "memberof": "js/core/state_manager.js~StateManager",
    "static": false,
    "longname": "js/core/state_manager.js~StateManager#stateClasses",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Object.<string, new() => GameState>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 728,
    "kind": "method",
    "name": "register",
    "memberof": "js/core/state_manager.js~StateManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/state_manager.js~StateManager#register",
    "access": "public",
    "description": "Registers a new state class, should be a GameState derived class",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "stateClass",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 729,
    "kind": "method",
    "name": "constructState",
    "memberof": "js/core/state_manager.js~StateManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/state_manager.js~StateManager#constructState",
    "access": "public",
    "description": "Constructs a new state or returns the instance from the cache",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 730,
    "kind": "method",
    "name": "moveToState",
    "memberof": "js/core/state_manager.js~StateManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/state_manager.js~StateManager#moveToState",
    "access": "public",
    "description": "Moves to a given state",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "State Key"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 733,
    "kind": "method",
    "name": "getCurrentState",
    "memberof": "js/core/state_manager.js~StateManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/state_manager.js~StateManager#getCurrentState",
    "access": "public",
    "description": "Returns the current state",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{GameState}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "GameState"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 734,
    "kind": "file",
    "name": "js/core/textual_game_state.js",
    "content": "import { HUDModalDialogs } from \"../game/hud/parts/modal_dialogs\";\r\nimport { GameState } from \"./game_state\";\r\nimport { T } from \"../translations\";\r\n\r\n/**\r\n * Baseclass for all game states which are structured similary: A header with back button + some\r\n * scrollable content.\r\n */\r\nexport class TextualGameState extends GameState {\r\n    ///// INTERFACE ////\r\n\r\n    /**\r\n     * Should return the states inner html. If not overriden, will create a scrollable container\r\n     * with the content of getMainContentHTML()\r\n     * @returns {string}\r\n     */\r\n    getInnerHTML() {\r\n        return `\r\n            <div class=\"content mainContent\">\r\n                ${this.getMainContentHTML()}\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Should return the states HTML content.\r\n     */\r\n    getMainContentHTML() {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Should return the title of the game state. If null, no title and back button will\r\n     * get created\r\n     * @returns {string|null}\r\n     */\r\n    getStateHeaderTitle() {\r\n        return null;\r\n    }\r\n\r\n    /////////////\r\n\r\n    /**\r\n     * Back button handler, can be overridden. Per default it goes back to the main menu,\r\n     * or if coming from the game it moves back to the game again.\r\n     */\r\n    onBackButton() {\r\n        if (this.backToStateId) {\r\n            this.moveToState(this.backToStateId, this.backToStatePayload);\r\n        } else {\r\n            this.moveToState(this.getDefaultPreviousState());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the default state to go back to\r\n     */\r\n    getDefaultPreviousState() {\r\n        return \"MainMenuState\";\r\n    }\r\n\r\n    /**\r\n     * Goes to a new state, telling him to go back to this state later\r\n     * @param {string} stateId\r\n     * @param {object} payload\r\n     */\r\n    moveToStateAddGoBack(stateId, payload = undefined) {\r\n        let statePayload = {\r\n            backToStateId: this.key,\r\n            backToStatePayload: {\r\n                backToStateId: this.backToStateId,\r\n                backToStatePayload: this.backToStatePayload,\r\n            },\r\n        };\r\n        payload = payload ? Object.assign({}, payload, statePayload) : statePayload;\r\n        this.moveToState(stateId, payload);\r\n    }\r\n\r\n    /**\r\n     * Removes all click detectors, except the one on the back button. Useful when regenerating\r\n     * content.\r\n     */\r\n    clearClickDetectorsExceptHeader() {\r\n        for (let i = 0; i < this.clickDetectors.length; ++i) {\r\n            const detector = this.clickDetectors[i];\r\n            if (detector.element === this.headerElement) {\r\n                continue;\r\n            }\r\n            detector.cleanup();\r\n            this.clickDetectors.splice(i, 1);\r\n            i -= 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Overrides the GameState implementation to provide our own html\r\n     */\r\n    internalGetFullHtml() {\r\n        let headerHtml = \"\";\r\n        if (this.getStateHeaderTitle()) {\r\n            headerHtml = `\r\n            <div class=\"headerBar\">\r\n\r\n                <h1><button class=\"backButton\"></button> ${this.getStateHeaderTitle()}</h1>\r\n            </div>`;\r\n        }\r\n\r\n        return `\r\n            ${headerHtml}\r\n            <div class=\"container\">\r\n                    ${this.getInnerHTML()}\r\n\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    //// INTERNALS /////\r\n\r\n    /**\r\n     * Overrides the GameState leave callback to cleanup stuff\r\n     */\r\n    internalLeaveCallback() {\r\n        super.internalLeaveCallback();\r\n        this.dialogs.cleanup();\r\n    }\r\n\r\n    /**\r\n     * Overrides the GameState enter callback to setup required stuff\r\n     * @param {any} payload\r\n     */\r\n    internalEnterCallback(payload) {\r\n        super.internalEnterCallback(payload, false);\r\n        if (payload.backToStateId) {\r\n            this.backToStateId = payload.backToStateId;\r\n            this.backToStatePayload = payload.backToStatePayload;\r\n        }\r\n\r\n        this.htmlElement.classList.add(\"textualState\");\r\n        if (this.getStateHeaderTitle()) {\r\n            this.htmlElement.classList.add(\"hasTitle\");\r\n        }\r\n\r\n        this.containerElement = this.htmlElement.querySelector(\".widthKeeper .container\");\r\n        this.headerElement = this.htmlElement.querySelector(\".headerBar > h1\");\r\n\r\n        if (this.headerElement) {\r\n            this.trackClicks(this.headerElement, this.onBackButton);\r\n        }\r\n\r\n        this.dialogs = new HUDModalDialogs(null, this.app);\r\n        const dialogsElement = document.body.querySelector(\".modalDialogParent\");\r\n        this.dialogs.initializeToElement(dialogsElement);\r\n\r\n        this.onEnter(payload);\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/textual_game_state.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 735,
    "kind": "class",
    "name": "TextualGameState",
    "memberof": "js/core/textual_game_state.js",
    "static": true,
    "longname": "js/core/textual_game_state.js~TextualGameState",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/textual_game_state.js",
    "importStyle": "{TextualGameState}",
    "description": "Baseclass for all game states which are structured similary: A header with back button + some\nscrollable content.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "js/core/game_state.js~GameState"
    ]
  },
  {
    "__docId__": 736,
    "kind": "method",
    "name": "getInnerHTML",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#getInnerHTML",
    "access": "public",
    "description": "Should return the states inner html. If not overriden, will create a scrollable container\nwith the content of getMainContentHTML()",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 737,
    "kind": "method",
    "name": "getMainContentHTML",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#getMainContentHTML",
    "access": "public",
    "description": "Should return the states HTML content.",
    "lineNumber": 28,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 738,
    "kind": "method",
    "name": "getStateHeaderTitle",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#getStateHeaderTitle",
    "access": "public",
    "description": "Should return the title of the game state. If null, no title and back button will\nget created",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|null}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 739,
    "kind": "method",
    "name": "onBackButton",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#onBackButton",
    "access": "public",
    "description": "Back button handler, can be overridden. Per default it goes back to the main menu,\nor if coming from the game it moves back to the game again.",
    "lineNumber": 47,
    "params": [],
    "return": null
  },
  {
    "__docId__": 740,
    "kind": "method",
    "name": "getDefaultPreviousState",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#getDefaultPreviousState",
    "access": "public",
    "description": "Returns the default state to go back to",
    "lineNumber": 58,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 741,
    "kind": "method",
    "name": "moveToStateAddGoBack",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#moveToStateAddGoBack",
    "access": "public",
    "description": "Goes to a new state, telling him to go back to this state later",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "stateId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 742,
    "kind": "method",
    "name": "clearClickDetectorsExceptHeader",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#clearClickDetectorsExceptHeader",
    "access": "public",
    "description": "Removes all click detectors, except the one on the back button. Useful when regenerating\ncontent.",
    "lineNumber": 83,
    "params": [],
    "return": null
  },
  {
    "__docId__": 743,
    "kind": "method",
    "name": "internalGetFullHtml",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#internalGetFullHtml",
    "access": "public",
    "description": "Overrides the GameState implementation to provide our own html",
    "lineNumber": 98,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 744,
    "kind": "method",
    "name": "internalLeaveCallback",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#internalLeaveCallback",
    "access": "public",
    "description": "Overrides the GameState leave callback to cleanup stuff",
    "lineNumber": 122,
    "params": [],
    "return": null
  },
  {
    "__docId__": 745,
    "kind": "method",
    "name": "internalEnterCallback",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#internalEnterCallback",
    "access": "public",
    "description": "Overrides the GameState enter callback to setup required stuff",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 746,
    "kind": "member",
    "name": "backToStateId",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#backToStateId",
    "access": "public",
    "description": null,
    "lineNumber": 134,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 747,
    "kind": "member",
    "name": "backToStatePayload",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#backToStatePayload",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 748,
    "kind": "member",
    "name": "containerElement",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#containerElement",
    "access": "public",
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 749,
    "kind": "member",
    "name": "headerElement",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#headerElement",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 750,
    "kind": "member",
    "name": "dialogs",
    "memberof": "js/core/textual_game_state.js~TextualGameState",
    "static": false,
    "longname": "js/core/textual_game_state.js~TextualGameState#dialogs",
    "access": "public",
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 751,
    "kind": "file",
    "name": "js/core/tracked_state.js",
    "content": "export class TrackedState {\r\n    constructor(callbackMethod = null, callbackScope = null) {\r\n        this.lastSeenValue = null;\r\n\r\n        if (callbackMethod) {\r\n            this.callback = callbackMethod;\r\n            if (callbackScope) {\r\n                this.callback = this.callback.bind(callbackScope);\r\n            }\r\n        }\r\n    }\r\n\r\n    set(value, changeHandler = null, changeScope = null) {\r\n        if (value !== this.lastSeenValue) {\r\n            // Copy value since the changeHandler call could actually modify our lastSeenValue\r\n            const valueCopy = value;\r\n            this.lastSeenValue = value;\r\n            if (changeHandler) {\r\n                if (changeScope) {\r\n                    changeHandler.call(changeScope, valueCopy);\r\n                } else {\r\n                    changeHandler(valueCopy);\r\n                }\r\n            } else if (this.callback) {\r\n                this.callback(value);\r\n            } else {\r\n                assert(false, \"No callback specified\");\r\n            }\r\n        }\r\n    }\r\n\r\n    setSilent(value) {\r\n        this.lastSeenValue = value;\r\n    }\r\n\r\n    get() {\r\n        return this.lastSeenValue;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/tracked_state.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 752,
    "kind": "class",
    "name": "TrackedState",
    "memberof": "js/core/tracked_state.js",
    "static": true,
    "longname": "js/core/tracked_state.js~TrackedState",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/tracked_state.js",
    "importStyle": "{TrackedState}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 753,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/tracked_state.js~TrackedState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/tracked_state.js~TrackedState#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 754,
    "kind": "member",
    "name": "lastSeenValue",
    "memberof": "js/core/tracked_state.js~TrackedState",
    "static": false,
    "longname": "js/core/tracked_state.js~TrackedState#lastSeenValue",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 755,
    "kind": "member",
    "name": "callback",
    "memberof": "js/core/tracked_state.js~TrackedState",
    "static": false,
    "longname": "js/core/tracked_state.js~TrackedState#callback",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 757,
    "kind": "method",
    "name": "set",
    "memberof": "js/core/tracked_state.js~TrackedState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/tracked_state.js~TrackedState#set",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "changeHandler",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      },
      {
        "name": "changeScope",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": null
  },
  {
    "__docId__": 759,
    "kind": "method",
    "name": "setSilent",
    "memberof": "js/core/tracked_state.js~TrackedState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/tracked_state.js~TrackedState#setSilent",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 761,
    "kind": "method",
    "name": "get",
    "memberof": "js/core/tracked_state.js~TrackedState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/tracked_state.js~TrackedState#get",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 762,
    "kind": "file",
    "name": "js/core/utils.js",
    "content": "import { T } from \"../translations\";\r\n\r\nconst bigNumberSuffixTranslationKeys = [\"thousands\", \"millions\", \"billions\", \"trillions\"];\r\n\r\n/**\r\n * Returns if this platform is android\r\n * @returns {boolean}\r\n */\r\nexport function isAndroid() {\r\n    if (!G_IS_MOBILE_APP) {\r\n        return false;\r\n    }\r\n    const platform = window.device.platform;\r\n    return platform === \"Android\" || platform === \"amazon-fireos\";\r\n}\r\n\r\n/**\r\n * Returns if this platform is iOs\r\n * @returns {boolean}\r\n */\r\nexport function isIos() {\r\n    if (!G_IS_MOBILE_APP) {\r\n        return false;\r\n    }\r\n    return window.device.platform === \"iOS\";\r\n}\r\n\r\n/**\r\n * Returns a platform name\r\n * @returns {\"android\" | \"browser\" | \"ios\" | \"standalone\" | \"unknown\"}\r\n */\r\nexport function getPlatformName() {\r\n    if (G_IS_STANDALONE) {\r\n        return \"standalone\";\r\n    } else if (G_IS_BROWSER) {\r\n        return \"browser\";\r\n    } else if (G_IS_MOBILE_APP && isAndroid()) {\r\n        return \"android\";\r\n    } else if (G_IS_MOBILE_APP && isIos()) {\r\n        return \"ios\";\r\n    }\r\n    return \"unknown\";\r\n}\r\n\r\n/**\r\n * Returns the IPC renderer, or null if not within the standalone\r\n * @returns {object|null}\r\n */\r\nlet ipcRenderer = null;\r\nexport function getIPCRenderer() {\r\n    if (!G_IS_STANDALONE) {\r\n        return null;\r\n    }\r\n    if (!ipcRenderer) {\r\n        ipcRenderer = eval(\"require\")(\"electron\").ipcRenderer;\r\n    }\r\n    return ipcRenderer;\r\n}\r\n\r\n/**\r\n * Makes a new 2D array with undefined contents\r\n * @param {number} w\r\n * @param {number} h\r\n * @returns {Array<Array<any>>}\r\n */\r\nexport function make2DUndefinedArray(w, h) {\r\n    const result = new Array(w);\r\n    for (let x = 0; x < w; ++x) {\r\n        result[x] = new Array(h);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Creates a new map (an empty object without any props)\r\n */\r\nexport function newEmptyMap() {\r\n    return Object.create(null);\r\n}\r\n\r\n/**\r\n * Returns a random integer in the range [start,end]\r\n * @param {number} start\r\n * @param {number} end\r\n */\r\nexport function randomInt(start, end) {\r\n    return start + Math.round(Math.random() * (end - start));\r\n}\r\n\r\n/**\r\n * Access an object in a very annoying way, used for obsfuscation.\r\n * @param {any} obj\r\n * @param {Array<string>} keys\r\n */\r\nexport function accessNestedPropertyReverse(obj, keys) {\r\n    let result = obj;\r\n    for (let i = keys.length - 1; i >= 0; --i) {\r\n        result = result[keys[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Chooses a random entry of an array\r\n * @template T\r\n * @param {T[]} arr\r\n * @returns {T}\r\n */\r\nexport function randomChoice(arr) {\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\n/**\r\n * Deletes from an array by swapping with the last element\r\n * @param {Array<any>} array\r\n * @param {number} index\r\n */\r\nexport function fastArrayDelete(array, index) {\r\n    if (index < 0 || index >= array.length) {\r\n        throw new Error(\"Out of bounds\");\r\n    }\r\n    // When the element is not the last element\r\n    if (index !== array.length - 1) {\r\n        // Get the last element, and swap it with the one we want to delete\r\n        const last = array[array.length - 1];\r\n        array[index] = last;\r\n    }\r\n\r\n    // Finally remove the last element\r\n    array.length -= 1;\r\n}\r\n\r\n/**\r\n * Deletes from an array by swapping with the last element. Searches\r\n * for the value in the array first\r\n * @param {Array<any>} array\r\n * @param {any} value\r\n */\r\nexport function fastArrayDeleteValue(array, value) {\r\n    if (array == null) {\r\n        throw new Error(\"Tried to delete from non array!\");\r\n    }\r\n    const index = array.indexOf(value);\r\n    if (index < 0) {\r\n        console.error(\"Value\", value, \"not contained in array:\", array, \"!\");\r\n        return value;\r\n    }\r\n    return fastArrayDelete(array, index);\r\n}\r\n\r\n/**\r\n * @see fastArrayDeleteValue\r\n * @param {Array<any>} array\r\n * @param {any} value\r\n */\r\nexport function fastArrayDeleteValueIfContained(array, value) {\r\n    if (array == null) {\r\n        throw new Error(\"Tried to delete from non array!\");\r\n    }\r\n    const index = array.indexOf(value);\r\n    if (index < 0) {\r\n        return value;\r\n    }\r\n    return fastArrayDelete(array, index);\r\n}\r\n\r\n/**\r\n * Deletes from an array at the given index\r\n * @param {Array<any>} array\r\n * @param {number} index\r\n */\r\nexport function arrayDelete(array, index) {\r\n    if (index < 0 || index >= array.length) {\r\n        throw new Error(\"Out of bounds\");\r\n    }\r\n    array.splice(index, 1);\r\n}\r\n\r\n/**\r\n * Deletes the given value from an array\r\n * @param {Array<any>} array\r\n * @param {any} value\r\n */\r\nexport function arrayDeleteValue(array, value) {\r\n    if (array == null) {\r\n        throw new Error(\"Tried to delete from non array!\");\r\n    }\r\n    const index = array.indexOf(value);\r\n    if (index < 0) {\r\n        console.error(\"Value\", value, \"not contained in array:\", array, \"!\");\r\n        return value;\r\n    }\r\n    return arrayDelete(array, index);\r\n}\r\n\r\n/**\r\n * Compare two floats for epsilon equality\r\n * @param {number} a\r\n * @param {number} b\r\n * @returns {boolean}\r\n */\r\nexport function epsilonCompare(a, b, epsilon = 1e-5) {\r\n    return Math.abs(a - b) < epsilon;\r\n}\r\n\r\n/**\r\n * Interpolates two numbers\r\n * @param {number} a\r\n * @param {number} b\r\n * @param {number} x Mix factor, 0 means 100% a, 1 means 100%b, rest is interpolated\r\n */\r\nexport function lerp(a, b, x) {\r\n    return a * (1 - x) + b * x;\r\n}\r\n\r\n/**\r\n * Finds a value which is nice to display, e.g. 15669 -> 15000. Also handles fractional stuff\r\n * @param {number} num\r\n */\r\nexport function findNiceValue(num) {\r\n    if (num > 1e8) {\r\n        return num;\r\n    }\r\n    if (num < 0.00001) {\r\n        return 0;\r\n    }\r\n\r\n    let roundAmount = 1;\r\n    if (num > 50000) {\r\n        roundAmount = 10000;\r\n    } else if (num > 20000) {\r\n        roundAmount = 5000;\r\n    } else if (num > 5000) {\r\n        roundAmount = 1000;\r\n    } else if (num > 2000) {\r\n        roundAmount = 500;\r\n    } else if (num > 1000) {\r\n        roundAmount = 100;\r\n    } else if (num > 100) {\r\n        roundAmount = 20;\r\n    } else if (num > 20) {\r\n        roundAmount = 5;\r\n    }\r\n\r\n    const niceValue = Math.floor(num / roundAmount) * roundAmount;\r\n    if (num >= 10) {\r\n        return Math.round(niceValue);\r\n    }\r\n    if (num >= 1) {\r\n        return Math.round(niceValue * 10) / 10;\r\n    }\r\n\r\n    return Math.round(niceValue * 100) / 100;\r\n}\r\n\r\n/**\r\n * Finds a nice integer value\r\n * @see findNiceValue\r\n * @param {number} num\r\n */\r\nexport function findNiceIntegerValue(num) {\r\n    return Math.ceil(findNiceValue(num));\r\n}\r\n\r\n/**\r\n * Formats a big number\r\n * @param {number} num\r\n * @param {string=} separator The decimal separator for numbers like 50.1 (separator='.')\r\n * @returns {string}\r\n */\r\nexport function formatBigNumber(num, separator = T.global.decimalSeparator) {\r\n    const sign = num < 0 ? \"-\" : \"\";\r\n    num = Math.abs(num);\r\n\r\n    if (num > 1e54) {\r\n        return sign + T.global.infinite;\r\n    }\r\n\r\n    if (num < 10 && !Number.isInteger(num)) {\r\n        return sign + num.toFixed(2);\r\n    }\r\n    if (num < 50 && !Number.isInteger(num)) {\r\n        return sign + num.toFixed(1);\r\n    }\r\n    num = Math.floor(num);\r\n\r\n    if (num < 1000) {\r\n        return sign + \"\" + num;\r\n    } else {\r\n        let leadingDigits = num;\r\n        let suffix = \"\";\r\n        for (let suffixIndex = 0; suffixIndex < bigNumberSuffixTranslationKeys.length; ++suffixIndex) {\r\n            leadingDigits = leadingDigits / 1000;\r\n            suffix = T.global.suffix[bigNumberSuffixTranslationKeys[suffixIndex]];\r\n            if (leadingDigits < 1000) {\r\n                break;\r\n            }\r\n        }\r\n        const leadingDigitsRounded = round1Digit(leadingDigits);\r\n        const leadingDigitsNoTrailingDecimal = leadingDigitsRounded\r\n            .toString()\r\n            .replace(\".0\", \"\")\r\n            .replace(\".\", separator);\r\n        return sign + leadingDigitsNoTrailingDecimal + suffix;\r\n    }\r\n}\r\n\r\n/**\r\n * Formats a big number, but does not add any suffix and instead uses its full representation\r\n * @param {number} num\r\n * @param {string=} divider The divider for numbers like 50,000 (divider=',')\r\n * @returns {string}\r\n */\r\nexport function formatBigNumberFull(num, divider = T.global.thousandsDivider) {\r\n    if (num < 1000) {\r\n        return num + \"\";\r\n    }\r\n    if (num > 1e54) {\r\n        return T.global.infinite;\r\n    }\r\n    let rest = num;\r\n    let out = \"\";\r\n    while (rest >= 1000) {\r\n        out = (rest % 1000).toString().padStart(3, \"0\") + divider + out;\r\n        rest = Math.floor(rest / 1000);\r\n    }\r\n    out = rest + divider + out;\r\n\r\n    return out.substring(0, out.length - 1);\r\n}\r\n\r\n/**\r\n * Waits two frames so the ui is updated\r\n * @returns {Promise<void>}\r\n */\r\nexport function waitNextFrame() {\r\n    return new Promise(function(resolve) {\r\n        window.requestAnimationFrame(function() {\r\n            window.requestAnimationFrame(function() {\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Rounds 1 digit\r\n * @param {number} n\r\n * @returns {number}\r\n */\r\nexport function round1Digit(n) {\r\n    return Math.floor(n * 10.0) / 10.0;\r\n}\r\n\r\n/**\r\n * Rounds 2 digits\r\n * @param {number} n\r\n * @returns {number}\r\n */\r\nexport function round2Digits(n) {\r\n    return Math.floor(n * 100.0) / 100.0;\r\n}\r\n\r\n/**\r\n * Rounds 3 digits\r\n * @param {number} n\r\n * @returns {number}\r\n */\r\nexport function round3Digits(n) {\r\n    return Math.floor(n * 1000.0) / 1000.0;\r\n}\r\n\r\n/**\r\n * Rounds 4 digits\r\n * @param {number} n\r\n * @returns {number}\r\n */\r\nexport function round4Digits(n) {\r\n    return Math.floor(n * 10000.0) / 10000.0;\r\n}\r\n\r\n/**\r\n * Clamps a value between [min, max]\r\n * @param {number} v\r\n * @param {number=} minimum Default 0\r\n * @param {number=} maximum Default 1\r\n */\r\nexport function clamp(v, minimum = 0, maximum = 1) {\r\n    return Math.max(minimum, Math.min(maximum, v));\r\n}\r\n\r\n/**\r\n * Helper method to create a new div element\r\n * @param {string=} id\r\n * @param {Array<string>=} classes\r\n * @param {string=} innerHTML\r\n */\r\nfunction makeDivElement(id = null, classes = [], innerHTML = \"\") {\r\n    const div = document.createElement(\"div\");\r\n    if (id) {\r\n        div.id = id;\r\n    }\r\n    for (let i = 0; i < classes.length; ++i) {\r\n        div.classList.add(classes[i]);\r\n    }\r\n    div.innerHTML = innerHTML;\r\n    return div;\r\n}\r\n\r\n/**\r\n * Helper method to create a new div\r\n * @param {Element} parent\r\n * @param {string=} id\r\n * @param {Array<string>=} classes\r\n * @param {string=} innerHTML\r\n */\r\nexport function makeDiv(parent, id = null, classes = [], innerHTML = \"\") {\r\n    const div = makeDivElement(id, classes, innerHTML);\r\n    parent.appendChild(div);\r\n    return div;\r\n}\r\n\r\n/**\r\n * Helper method to create a new button element\r\n * @param {Array<string>=} classes\r\n * @param {string=} innerHTML\r\n */\r\nexport function makeButtonElement(classes = [], innerHTML = \"\") {\r\n    const element = document.createElement(\"button\");\r\n    for (let i = 0; i < classes.length; ++i) {\r\n        element.classList.add(classes[i]);\r\n    }\r\n    element.classList.add(\"styledButton\");\r\n    element.innerHTML = innerHTML;\r\n    return element;\r\n}\r\n\r\n/**\r\n * Helper method to create a new button\r\n * @param {Element} parent\r\n * @param {Array<string>=} classes\r\n * @param {string=} innerHTML\r\n */\r\nexport function makeButton(parent, classes = [], innerHTML = \"\") {\r\n    const element = makeButtonElement(classes, innerHTML);\r\n    parent.appendChild(element);\r\n    return element;\r\n}\r\n\r\n/**\r\n * Removes all children of the given element\r\n * @param {Element} elem\r\n */\r\nexport function removeAllChildren(elem) {\r\n    if (elem) {\r\n        var range = document.createRange();\r\n        range.selectNodeContents(elem);\r\n        range.deleteContents();\r\n    }\r\n}\r\n\r\n/**\r\n * Returns if the game supports this browser\r\n */\r\nexport function isSupportedBrowser() {\r\n    // please note,\r\n    // that IE11 now returns undefined again for window.chrome\r\n    // and new Opera 30 outputs true for window.chrome\r\n    // but needs to check if window.opr is not undefined\r\n    // and new IE Edge outputs to true now for window.chrome\r\n    // and if not iOS Chrome check\r\n    // so use the below updated condition\r\n\r\n    if (G_IS_MOBILE_APP || G_IS_STANDALONE) {\r\n        return true;\r\n    }\r\n\r\n    // @ts-ignore\r\n    var isChromium = window.chrome;\r\n    var winNav = window.navigator;\r\n    var vendorName = winNav.vendor;\r\n    // @ts-ignore\r\n    var isIEedge = winNav.userAgent.indexOf(\"Edge\") > -1;\r\n    var isIOSChrome = winNav.userAgent.match(\"CriOS\");\r\n\r\n    if (isIOSChrome) {\r\n        // is Google Chrome on IOS\r\n        return false;\r\n    } else if (\r\n        isChromium !== null &&\r\n        typeof isChromium !== \"undefined\" &&\r\n        vendorName === \"Google Inc.\" &&\r\n        isIEedge === false\r\n    ) {\r\n        // is Google Chrome\r\n        return true;\r\n    } else {\r\n        // not Google Chrome\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * Formats an amount of seconds into something like \"5s ago\"\r\n * @param {number} secs Seconds\r\n * @returns {string}\r\n */\r\nexport function formatSecondsToTimeAgo(secs) {\r\n    const seconds = Math.floor(secs);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n    const days = Math.floor(hours / 24);\r\n\r\n    if (seconds < 60) {\r\n        if (seconds === 1) {\r\n            return T.global.time.oneSecondAgo;\r\n        }\r\n        return T.global.time.xSecondsAgo.replace(\"<x>\", \"\" + seconds);\r\n    } else if (minutes < 60) {\r\n        if (minutes === 1) {\r\n            return T.global.time.oneMinuteAgo;\r\n        }\r\n        return T.global.time.xMinutesAgo.replace(\"<x>\", \"\" + minutes);\r\n    } else if (hours < 24) {\r\n        if (hours === 1) {\r\n            return T.global.time.oneHourAgo;\r\n        }\r\n        return T.global.time.xHoursAgo.replace(\"<x>\", \"\" + hours);\r\n    } else {\r\n        if (days === 1) {\r\n            return T.global.time.oneDayAgo;\r\n        }\r\n        return T.global.time.xDaysAgo.replace(\"<x>\", \"\" + days);\r\n    }\r\n}\r\n\r\n/**\r\n * Formats seconds into a readable string like \"5h 23m\"\r\n * @param {number} secs Seconds\r\n * @returns {string}\r\n */\r\nexport function formatSeconds(secs) {\r\n    const trans = T.global.time;\r\n    secs = Math.ceil(secs);\r\n    if (secs < 60) {\r\n        return trans.secondsShort.replace(\"<seconds>\", \"\" + secs);\r\n    } else if (secs < 60 * 60) {\r\n        const minutes = Math.floor(secs / 60);\r\n        const seconds = secs % 60;\r\n        return trans.minutesAndSecondsShort\r\n            .replace(\"<seconds>\", \"\" + seconds)\r\n            .replace(\"<minutes>\", \"\" + minutes);\r\n    } else {\r\n        const hours = Math.floor(secs / 3600);\r\n        const minutes = Math.floor(secs / 60) % 60;\r\n        return trans.hoursAndMinutesShort.replace(\"<minutes>\", \"\" + minutes).replace(\"<hours>\", \"\" + hours);\r\n    }\r\n}\r\n\r\n/**\r\n * Formats a number like 2.51 to \"2.5\"\r\n * @param {number} speed\r\n * @param {string=} separator The decimal separator for numbers like 50.1 (separator='.')\r\n */\r\nexport function round1DigitLocalized(speed, separator = T.global.decimalSeparator) {\r\n    return round1Digit(speed).toString().replace(\".\", separator);\r\n}\r\n\r\n/**\r\n * Formats a number like 2.51 to \"2.51 items / s\"\r\n * @param {number} speed\r\n * @param {boolean=} double\r\n * @param {string=} separator The decimal separator for numbers like 50.1 (separator='.')\r\n */\r\nexport function formatItemsPerSecond(speed, double = false, separator = T.global.decimalSeparator) {\r\n    return speed === 1.0 ?\r\n        T.ingame.buildingPlacement.infoTexts.oneItemPerSecond :\r\n        T.ingame.buildingPlacement.infoTexts.itemsPerSecond.replace(\r\n            \"<x>\",\r\n            round2Digits(speed).toString().replace(\".\", separator)\r\n        ) + (double ? \"  \" + T.ingame.buildingPlacement.infoTexts.itemsPerSecondDouble : \"\");\r\n}\r\n\r\n/**\r\n * Rotates a flat 3x3 matrix clockwise\r\n * Entries:\r\n * 0 lo\r\n * 1 mo\r\n * 2 ro\r\n * 3 lm\r\n * 4 mm\r\n * 5 rm\r\n * 6 lu\r\n * 7 mu\r\n * 8 ru\r\n * @param {Array<number>} flatMatrix\r\n */\r\n\r\nexport function rotateFlatMatrix3x3(flatMatrix) {\r\n    return [\r\n        flatMatrix[6],\r\n        flatMatrix[3],\r\n        flatMatrix[0],\r\n        flatMatrix[7],\r\n        flatMatrix[4],\r\n        flatMatrix[1],\r\n        flatMatrix[8],\r\n        flatMatrix[5],\r\n        flatMatrix[2],\r\n    ];\r\n}\r\n\r\n/**\r\n * Generates rotated variants of the matrix\r\n * @param {Array<number>} originalMatrix\r\n * @returns {Object<number, Array<number>>}\r\n */\r\nexport function generateMatrixRotations(originalMatrix) {\r\n    const result = {\r\n        0: originalMatrix,\r\n    };\r\n\r\n    originalMatrix = rotateFlatMatrix3x3(originalMatrix);\r\n    result[90] = originalMatrix;\r\n\r\n    originalMatrix = rotateFlatMatrix3x3(originalMatrix);\r\n    result[180] = originalMatrix;\r\n\r\n    originalMatrix = rotateFlatMatrix3x3(originalMatrix);\r\n    result[270] = originalMatrix;\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n * @typedef {{\r\n *   top: any,\r\n *   right: any,\r\n *   bottom: any,\r\n *   left: any\r\n * }} DirectionalObject\r\n */\r\n\r\n/**\r\n * Rotates a directional object\r\n * @param {DirectionalObject} obj\r\n * @returns {DirectionalObject}\r\n */\r\nexport function rotateDirectionalObject(obj, rotation) {\r\n    const queue = [obj.top, obj.right, obj.bottom, obj.left];\r\n    while (rotation !== 0) {\r\n        rotation -= 90;\r\n        queue.push(queue.shift());\r\n    }\r\n\r\n    return {\r\n        top: queue[0],\r\n        right: queue[1],\r\n        bottom: queue[2],\r\n        left: queue[3],\r\n    };\r\n}\r\n\r\n/**\r\n * Modulo which works for negative numbers\r\n * @param {number} n\r\n * @param {number} m\r\n */\r\nexport function safeModulo(n, m) {\r\n    return ((n % m) + m) % m;\r\n}\r\n\r\n/**\r\n * Returns a smooth pulse between 0 and 1\r\n * @param {number} time time in seconds\r\n * @returns {number}\r\n */\r\nexport function smoothPulse(time) {\r\n    return Math.sin(time * 4) * 0.5 + 0.5;\r\n}\r\n\r\n/**\r\n * Fills in a <link> tag\r\n * @param {string} translation\r\n * @param {string} link\r\n */\r\nexport function fillInLinkIntoTranslation(translation, link) {\r\n    return translation\r\n        .replace(\"<link>\", \"<a href='\" + link + \"' target='_blank'>\")\r\n        .replace(\"</link>\", \"</a>\");\r\n}\r\n\r\n/**\r\n * Generates a file download\r\n * @param {string} filename\r\n * @param {string} text\r\n */\r\nexport function generateFileDownload(filename, text) {\r\n    var element = document.createElement(\"a\");\r\n    element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\r\n    element.setAttribute(\"download\", filename);\r\n\r\n    element.style.display = \"none\";\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n    document.body.removeChild(element);\r\n}\r\n\r\n/**\r\n * Starts a file chooser\r\n * @param {string} acceptedType\r\n */\r\nexport function startFileChoose(acceptedType = \".bin\") {\r\n    var input = document.createElement(\"input\");\r\n    input.type = \"file\";\r\n    input.accept = acceptedType;\r\n\r\n    return new Promise(resolve => {\r\n        input.onchange = _ => resolve(input.files[0]);\r\n        input.click();\r\n    });\r\n}\r\n\r\nconst MAX_ROMAN_NUMBER = 49;\r\nconst romanLiteralsCache = [\"0\"];\r\n\r\n/**\r\n *\r\n * @param {number} number\r\n * @returns {string}\r\n */\r\nexport function getRomanNumber(number) {\r\n    number = Math.max(0, Math.round(number));\r\n    if (romanLiteralsCache[number]) {\r\n        return romanLiteralsCache[number];\r\n    }\r\n\r\n    if (number > MAX_ROMAN_NUMBER) {\r\n        return String(number);\r\n    }\r\n\r\n    function formatDigit(digit, unit, quintuple, decuple) {\r\n        switch (digit) {\r\n            case 0:\r\n                return \"\";\r\n            case 1: // I\r\n                return unit;\r\n            case 2: // II\r\n                return unit + unit;\r\n            case 3: // III\r\n                return unit + unit + unit;\r\n            case 4: // IV\r\n                return unit + quintuple;\r\n            case 9: // IX\r\n                return unit + decuple;\r\n            default:\r\n                // V, VI, VII, VIII\r\n                return quintuple + formatDigit(digit - 5, unit, quintuple, decuple);\r\n        }\r\n    }\r\n\r\n    let thousands = Math.floor(number / 1000);\r\n    let thousandsPart = \"\";\r\n    while (thousands > 0) {\r\n        thousandsPart += \"M\";\r\n        thousands -= 1;\r\n    }\r\n\r\n    const hundreds = Math.floor((number % 1000) / 100);\r\n    const hundredsPart = formatDigit(hundreds, \"C\", \"D\", \"M\");\r\n\r\n    const tens = Math.floor((number % 100) / 10);\r\n    const tensPart = formatDigit(tens, \"X\", \"L\", \"C\");\r\n\r\n    const units = number % 10;\r\n    const unitsPart = formatDigit(units, \"I\", \"V\", \"X\");\r\n\r\n    const formatted = thousandsPart + hundredsPart + tensPart + unitsPart;\r\n\r\n    romanLiteralsCache[number] = formatted;\r\n    return formatted;\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 763,
    "kind": "variable",
    "name": "bigNumberSuffixTranslationKeys",
    "memberof": "js/core/utils.js",
    "static": true,
    "longname": "js/core/utils.js~bigNumberSuffixTranslationKeys",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 764,
    "kind": "function",
    "name": "isAndroid",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~isAndroid",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{isAndroid}",
    "description": "Returns if this platform is android",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 765,
    "kind": "function",
    "name": "isIos",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~isIos",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{isIos}",
    "description": "Returns if this platform is iOs",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 766,
    "kind": "function",
    "name": "getPlatformName",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~getPlatformName",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{getPlatformName}",
    "description": "Returns a platform name",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{\"android\" | \"browser\" | \"ios\" | \"standalone\" | \"unknown\"}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "\"android\" ",
        " \"browser\" ",
        " \"ios\" ",
        " \"standalone\" ",
        " \"unknown\""
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 767,
    "kind": "variable",
    "name": "ipcRenderer",
    "memberof": "js/core/utils.js",
    "static": true,
    "longname": "js/core/utils.js~ipcRenderer",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": null,
    "description": "Returns the IPC renderer, or null if not within the standalone",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object|null}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 768,
    "kind": "function",
    "name": "getIPCRenderer",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~getIPCRenderer",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{getIPCRenderer}",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 769,
    "kind": "function",
    "name": "make2DUndefinedArray",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~make2DUndefinedArray",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{make2DUndefinedArray}",
    "description": "Makes a new 2D array with undefined contents",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<Array<any>>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Array<any>>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 770,
    "kind": "function",
    "name": "newEmptyMap",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~newEmptyMap",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{newEmptyMap}",
    "description": "Creates a new map (an empty object without any props)",
    "lineNumber": 77,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 771,
    "kind": "function",
    "name": "randomInt",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~randomInt",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{randomInt}",
    "description": "Returns a random integer in the range [start,end]",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 772,
    "kind": "function",
    "name": "accessNestedPropertyReverse",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~accessNestedPropertyReverse",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{accessNestedPropertyReverse}",
    "description": "Access an object in a very annoying way, used for obsfuscation.",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "keys",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 773,
    "kind": "function",
    "name": "randomChoice",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~randomChoice",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{randomChoice}",
    "description": "Chooses a random entry of an array",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@template",
        "tagValue": "T"
      },
      {
        "tagName": "@returns",
        "tagValue": "{T}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "T[]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "T"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 774,
    "kind": "function",
    "name": "fastArrayDelete",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~fastArrayDelete",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{fastArrayDelete}",
    "description": "Deletes from an array by swapping with the last element",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 775,
    "kind": "function",
    "name": "fastArrayDeleteValue",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~fastArrayDeleteValue",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{fastArrayDeleteValue}",
    "description": "Deletes from an array by swapping with the last element. Searches\nfor the value in the array first",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 776,
    "kind": "function",
    "name": "fastArrayDeleteValueIfContained",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~fastArrayDeleteValueIfContained",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{fastArrayDeleteValueIfContained}",
    "description": "",
    "see": [
      "fastArrayDeleteValue"
    ],
    "lineNumber": 156,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 777,
    "kind": "function",
    "name": "arrayDelete",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~arrayDelete",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{arrayDelete}",
    "description": "Deletes from an array at the given index",
    "lineNumber": 172,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 778,
    "kind": "function",
    "name": "arrayDeleteValue",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~arrayDeleteValue",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{arrayDeleteValue}",
    "description": "Deletes the given value from an array",
    "lineNumber": 184,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 779,
    "kind": "function",
    "name": "epsilonCompare",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~epsilonCompare",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{epsilonCompare}",
    "description": "Compare two floats for epsilon equality",
    "lineNumber": 202,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 780,
    "kind": "function",
    "name": "lerp",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~lerp",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{lerp}",
    "description": "Interpolates two numbers",
    "lineNumber": 212,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mix factor, 0 means 100% a, 1 means 100%b, rest is interpolated"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 781,
    "kind": "function",
    "name": "findNiceValue",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~findNiceValue",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{findNiceValue}",
    "description": "Finds a value which is nice to display, e.g. 15669 -> 15000. Also handles fractional stuff",
    "lineNumber": 220,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 782,
    "kind": "function",
    "name": "findNiceIntegerValue",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~findNiceIntegerValue",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{findNiceIntegerValue}",
    "description": "Finds a nice integer value",
    "see": [
      "findNiceValue"
    ],
    "lineNumber": 261,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 783,
    "kind": "function",
    "name": "formatBigNumber",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~formatBigNumber",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{formatBigNumber}",
    "description": "Formats a big number",
    "lineNumber": 271,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "separator",
        "description": "The decimal separator for numbers like 50.1 (separator='.')"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 784,
    "kind": "function",
    "name": "formatBigNumberFull",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~formatBigNumberFull",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{formatBigNumberFull}",
    "description": "Formats a big number, but does not add any suffix and instead uses its full representation",
    "lineNumber": 314,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "divider",
        "description": "The divider for numbers like 50,000 (divider=',')"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 785,
    "kind": "function",
    "name": "waitNextFrame",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~waitNextFrame",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{waitNextFrame}",
    "description": "Waits two frames so the ui is updated",
    "lineNumber": 336,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 786,
    "kind": "function",
    "name": "round1Digit",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~round1Digit",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{round1Digit}",
    "description": "Rounds 1 digit",
    "lineNumber": 351,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 787,
    "kind": "function",
    "name": "round2Digits",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~round2Digits",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{round2Digits}",
    "description": "Rounds 2 digits",
    "lineNumber": 360,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 788,
    "kind": "function",
    "name": "round3Digits",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~round3Digits",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{round3Digits}",
    "description": "Rounds 3 digits",
    "lineNumber": 369,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 789,
    "kind": "function",
    "name": "round4Digits",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~round4Digits",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{round4Digits}",
    "description": "Rounds 4 digits",
    "lineNumber": 378,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 790,
    "kind": "function",
    "name": "clamp",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~clamp",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{clamp}",
    "description": "Clamps a value between [min, max]",
    "lineNumber": 388,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "minimum",
        "description": "Default 0"
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "maximum",
        "description": "Default 1"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 791,
    "kind": "function",
    "name": "makeDivElement",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~makeDivElement",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": null,
    "description": "Helper method to create a new div element",
    "lineNumber": 398,
    "params": [
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<string>="
        ],
        "spread": false,
        "optional": false,
        "name": "classes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "innerHTML",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 792,
    "kind": "function",
    "name": "makeDiv",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~makeDiv",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{makeDiv}",
    "description": "Helper method to create a new div",
    "lineNumber": 417,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<string>="
        ],
        "spread": false,
        "optional": false,
        "name": "classes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "innerHTML",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 793,
    "kind": "function",
    "name": "makeButtonElement",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~makeButtonElement",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{makeButtonElement}",
    "description": "Helper method to create a new button element",
    "lineNumber": 428,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>="
        ],
        "spread": false,
        "optional": false,
        "name": "classes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "innerHTML",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 794,
    "kind": "function",
    "name": "makeButton",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~makeButton",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{makeButton}",
    "description": "Helper method to create a new button",
    "lineNumber": 444,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<string>="
        ],
        "spread": false,
        "optional": false,
        "name": "classes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "innerHTML",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 795,
    "kind": "function",
    "name": "removeAllChildren",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~removeAllChildren",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{removeAllChildren}",
    "description": "Removes all children of the given element",
    "lineNumber": 454,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 796,
    "kind": "function",
    "name": "isSupportedBrowser",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~isSupportedBrowser",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{isSupportedBrowser}",
    "description": "Returns if the game supports this browser",
    "lineNumber": 465,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 797,
    "kind": "function",
    "name": "formatSecondsToTimeAgo",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~formatSecondsToTimeAgo",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{formatSecondsToTimeAgo}",
    "description": "Formats an amount of seconds into something like \"5s ago\"",
    "lineNumber": 508,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "secs",
        "description": "Seconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 798,
    "kind": "function",
    "name": "formatSeconds",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~formatSeconds",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{formatSeconds}",
    "description": "Formats seconds into a readable string like \"5h 23m\"",
    "lineNumber": 542,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "secs",
        "description": "Seconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 799,
    "kind": "function",
    "name": "round1DigitLocalized",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~round1DigitLocalized",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{round1DigitLocalized}",
    "description": "Formats a number like 2.51 to \"2.5\"",
    "lineNumber": 565,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "speed",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "separator",
        "description": "The decimal separator for numbers like 50.1 (separator='.')"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 800,
    "kind": "function",
    "name": "formatItemsPerSecond",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~formatItemsPerSecond",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{formatItemsPerSecond}",
    "description": "Formats a number like 2.51 to \"2.51 items / s\"",
    "lineNumber": 575,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "speed",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "double",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "separator",
        "description": "The decimal separator for numbers like 50.1 (separator='.')"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 801,
    "kind": "function",
    "name": "rotateFlatMatrix3x3",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~rotateFlatMatrix3x3",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{rotateFlatMatrix3x3}",
    "description": "Rotates a flat 3x3 matrix clockwise\nEntries:\n0 lo\n1 mo\n2 ro\n3 lm\n4 mm\n5 rm\n6 lu\n7 mu\n8 ru",
    "lineNumber": 599,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<number>"
        ],
        "spread": false,
        "optional": false,
        "name": "flatMatrix",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 802,
    "kind": "function",
    "name": "generateMatrixRotations",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~generateMatrixRotations",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{generateMatrixRotations}",
    "description": "Generates rotated variants of the matrix",
    "lineNumber": 618,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object<number, Array<number>>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<number>"
        ],
        "spread": false,
        "optional": false,
        "name": "originalMatrix",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object<number, Array<number>>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 803,
    "kind": "typedef",
    "name": "DirectionalObject",
    "memberof": "js/core/utils.js",
    "static": true,
    "longname": "js/core/utils.js~DirectionalObject",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "{\n  top: any,\n  right: any,\n  bottom: any,\n  left: any\n}"
      ],
      "optional": false,
      "name": "DirectionalObject"
    }
  },
  {
    "__docId__": 804,
    "kind": "function",
    "name": "rotateDirectionalObject",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~rotateDirectionalObject",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{rotateDirectionalObject}",
    "description": "Rotates a directional object",
    "lineNumber": 650,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DirectionalObject}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DirectionalObject"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DirectionalObject"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 805,
    "kind": "function",
    "name": "safeModulo",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~safeModulo",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{safeModulo}",
    "description": "Modulo which works for negative numbers",
    "lineNumber": 670,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "m",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 806,
    "kind": "function",
    "name": "smoothPulse",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~smoothPulse",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{smoothPulse}",
    "description": "Returns a smooth pulse between 0 and 1",
    "lineNumber": 679,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": "time in seconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 807,
    "kind": "function",
    "name": "fillInLinkIntoTranslation",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~fillInLinkIntoTranslation",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{fillInLinkIntoTranslation}",
    "description": "Fills in a <link> tag",
    "lineNumber": 688,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "translation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "link",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 808,
    "kind": "function",
    "name": "generateFileDownload",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~generateFileDownload",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{generateFileDownload}",
    "description": "Generates a file download",
    "lineNumber": 699,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 809,
    "kind": "function",
    "name": "startFileChoose",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~startFileChoose",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{startFileChoose}",
    "description": "Starts a file chooser",
    "lineNumber": 715,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "acceptedType",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 810,
    "kind": "variable",
    "name": "MAX_ROMAN_NUMBER",
    "memberof": "js/core/utils.js",
    "static": true,
    "longname": "js/core/utils.js~MAX_ROMAN_NUMBER",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 726,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 811,
    "kind": "variable",
    "name": "romanLiteralsCache",
    "memberof": "js/core/utils.js",
    "static": true,
    "longname": "js/core/utils.js~romanLiteralsCache",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 727,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 812,
    "kind": "function",
    "name": "getRomanNumber",
    "memberof": "js/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/utils.js~getRomanNumber",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/utils.js",
    "importStyle": "{getRomanNumber}",
    "description": "",
    "lineNumber": 734,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 813,
    "kind": "file",
    "name": "js/core/vector.js",
    "content": "import { globalConfig } from \"./config\";\r\nimport { safeModulo } from \"./utils\";\r\n\r\nconst tileSize = globalConfig.tileSize;\r\nconst halfTileSize = globalConfig.halfTileSize;\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport const enumDirection = {\r\n    top: \"top\",\r\n    right: \"right\",\r\n    bottom: \"bottom\",\r\n    left: \"left\",\r\n};\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport const enumInvertedDirections = {\r\n    [enumDirection.top]: enumDirection.bottom,\r\n    [enumDirection.right]: enumDirection.left,\r\n    [enumDirection.bottom]: enumDirection.top,\r\n    [enumDirection.left]: enumDirection.right,\r\n};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport const enumDirectionToAngle = {\r\n    [enumDirection.top]: 0,\r\n    [enumDirection.right]: 90,\r\n    [enumDirection.bottom]: 180,\r\n    [enumDirection.left]: 270,\r\n};\r\n\r\n/**\r\n * @enum {enumDirection}\r\n */\r\nexport const enumAngleToDirection = {\r\n    0: enumDirection.top,\r\n    90: enumDirection.right,\r\n    180: enumDirection.bottom,\r\n    270: enumDirection.left,\r\n};\r\n\r\n/** @type {Array<enumDirection>} */\r\nexport const arrayAllDirections = [\r\n    enumDirection.top,\r\n    enumDirection.right,\r\n    enumDirection.bottom,\r\n    enumDirection.left,\r\n];\r\n\r\nexport class Vector {\r\n    /**\r\n     *\r\n     * @param {number=} x\r\n     * @param {number=} y\r\n     */\r\n    constructor(x, y) {\r\n        this.x = x || 0;\r\n        this.y = y || 0;\r\n    }\r\n\r\n    /**\r\n     * return a copy of the vector\r\n     * @returns {Vector}\r\n     */\r\n    copy() {\r\n        return new Vector(this.x, this.y);\r\n    }\r\n\r\n    /**\r\n     * Adds a vector and return a new vector\r\n     * @param {Vector} other\r\n     * @returns {Vector}\r\n     */\r\n    add(other) {\r\n        return new Vector(this.x + other.x, this.y + other.y);\r\n    }\r\n\r\n    /**\r\n     * Adds a vector\r\n     * @param {Vector} other\r\n     * @returns {Vector}\r\n     */\r\n    addInplace(other) {\r\n        this.x += other.x;\r\n        this.y += other.y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Substracts a vector and return a new vector\r\n     * @param {Vector} other\r\n     * @returns {Vector}\r\n     */\r\n    sub(other) {\r\n        return new Vector(this.x - other.x, this.y - other.y);\r\n    }\r\n\r\n    /**\r\n     * Subs a vector\r\n     * @param {Vector} other\r\n     * @returns {Vector}\r\n     */\r\n    subInplace(other) {\r\n        this.x -= other.x;\r\n        this.y -= other.y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Multiplies with a vector and return a new vector\r\n     * @param {Vector} other\r\n     * @returns {Vector}\r\n     */\r\n    mul(other) {\r\n        return new Vector(this.x * other.x, this.y * other.y);\r\n    }\r\n\r\n    /**\r\n     * Adds two scalars and return a new vector\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {Vector}\r\n     */\r\n    addScalars(x, y) {\r\n        return new Vector(this.x + x, this.y + y);\r\n    }\r\n\r\n    /**\r\n     * Substracts a scalar and return a new vector\r\n     * @param {number} f\r\n     * @returns {Vector}\r\n     */\r\n    subScalar(f) {\r\n        return new Vector(this.x - f, this.y - f);\r\n    }\r\n\r\n    /**\r\n     * Substracts two scalars and return a new vector\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {Vector}\r\n     */\r\n    subScalars(x, y) {\r\n        return new Vector(this.x - x, this.y - y);\r\n    }\r\n\r\n    /**\r\n     * Returns the euclidian length\r\n     * @returns {number}\r\n     */\r\n    length() {\r\n        return Math.hypot(this.x, this.y);\r\n    }\r\n\r\n    /**\r\n     * Returns the square length\r\n     * @returns {number}\r\n     */\r\n    lengthSquare() {\r\n        return this.x * this.x + this.y * this.y;\r\n    }\r\n\r\n    /**\r\n     * Divides both components by a scalar and return a new vector\r\n     * @param {number} f\r\n     * @returns {Vector}\r\n     */\r\n    divideScalar(f) {\r\n        return new Vector(this.x / f, this.y / f);\r\n    }\r\n\r\n    /**\r\n     * Divides both components by the given scalars and return a new vector\r\n     * @param {number} a\r\n     * @param {number} b\r\n     * @returns {Vector}\r\n     */\r\n    divideScalars(a, b) {\r\n        return new Vector(this.x / a, this.y / b);\r\n    }\r\n\r\n    /**\r\n     * Divides both components by a scalar\r\n     * @param {number} f\r\n     * @returns {Vector}\r\n     */\r\n    divideScalarInplace(f) {\r\n        this.x /= f;\r\n        this.y /= f;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Multiplies both components with a scalar and return a new vector\r\n     * @param {number} f\r\n     * @returns {Vector}\r\n     */\r\n    multiplyScalar(f) {\r\n        return new Vector(this.x * f, this.y * f);\r\n    }\r\n\r\n    /**\r\n     * Multiplies both components with two scalars and returns a new vector\r\n     * @param {number} a\r\n     * @param {number} b\r\n     * @returns {Vector}\r\n     */\r\n    multiplyScalars(a, b) {\r\n        return new Vector(this.x * a, this.y * b);\r\n    }\r\n\r\n    /**\r\n     * For both components, compute the maximum of each component and the given scalar, and return a new vector.\r\n     * For example:\r\n     *   - new Vector(-1, 5).maxScalar(0) -> Vector(0, 5)\r\n     * @param {number} f\r\n     * @returns {Vector}\r\n     */\r\n    maxScalar(f) {\r\n        return new Vector(Math.max(f, this.x), Math.max(f, this.y));\r\n    }\r\n\r\n    /**\r\n     * Adds a scalar to both components and return a new vector\r\n     * @param {number} f\r\n     * @returns {Vector}\r\n     */\r\n    addScalar(f) {\r\n        return new Vector(this.x + f, this.y + f);\r\n    }\r\n\r\n    /**\r\n     * Computes the component wise minimum and return a new vector\r\n     * @param {Vector} v\r\n     * @returns {Vector}\r\n     */\r\n    min(v) {\r\n        return new Vector(Math.min(v.x, this.x), Math.min(v.y, this.y));\r\n    }\r\n\r\n    /**\r\n     * Computes the component wise maximum and return a new vector\r\n     * @param {Vector} v\r\n     * @returns {Vector}\r\n     */\r\n    max(v) {\r\n        return new Vector(Math.max(v.x, this.x), Math.max(v.y, this.y));\r\n    }\r\n    /**\r\n     * Computes the component wise absolute\r\n     * @returns {Vector}\r\n     */\r\n    abs() {\r\n        return new Vector(Math.abs(this.x), Math.abs(this.y));\r\n    }\r\n\r\n    /**\r\n     * Computes the scalar product\r\n     * @param {Vector} v\r\n     * @returns {number}\r\n     */\r\n    dot(v) {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n\r\n    /**\r\n     * Computes the distance to a given vector\r\n     * @param {Vector} v\r\n     * @returns {number}\r\n     */\r\n    distance(v) {\r\n        return Math.hypot(this.x - v.x, this.y - v.y);\r\n    }\r\n\r\n    /**\r\n     * Computes the square distance to a given vectort\r\n     * @param {Vector} v\r\n     * @returns {number}\r\n     */\r\n    distanceSquare(v) {\r\n        const dx = this.x - v.x;\r\n        const dy = this.y - v.y;\r\n        return dx * dx + dy * dy;\r\n    }\r\n\r\n    /**\r\n     * Returns x % f, y % f\r\n     * @param {number} f\r\n     * @returns {Vector} new vector\r\n     */\r\n    modScalar(f) {\r\n        return new Vector(safeModulo(this.x, f), safeModulo(this.y, f));\r\n    }\r\n\r\n    /**\r\n     * Computes and returns the center between both points\r\n     * @param {Vector} v\r\n     * @returns {Vector}\r\n     */\r\n    centerPoint(v) {\r\n        const cx = this.x + v.x;\r\n        const cy = this.y + v.y;\r\n        return new Vector(cx / 2, cy / 2);\r\n    }\r\n\r\n    /**\r\n     * Computes componentwise floor and returns a new vector\r\n     * @returns {Vector}\r\n     */\r\n    floor() {\r\n        return new Vector(Math.floor(this.x), Math.floor(this.y));\r\n    }\r\n\r\n    /**\r\n     * Computes componentwise ceil and returns a new vector\r\n     * @returns {Vector}\r\n     */\r\n    ceil() {\r\n        return new Vector(Math.ceil(this.x), Math.ceil(this.y));\r\n    }\r\n\r\n    /**\r\n     * Computes componentwise round and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    round() {\r\n        return new Vector(Math.round(this.x), Math.round(this.y));\r\n    }\r\n\r\n    /**\r\n     * Converts this vector from world to tile space and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    toTileSpace() {\r\n        return new Vector(Math.floor(this.x / tileSize), Math.floor(this.y / tileSize));\r\n    }\r\n\r\n    /**\r\n     * Converts this vector from world to street space and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    toStreetSpace() {\r\n        return new Vector(Math.floor(this.x / halfTileSize + 0.25), Math.floor(this.y / halfTileSize + 0.25));\r\n    }\r\n\r\n    /**\r\n     * Converts this vector to world space and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    toWorldSpace() {\r\n        return new Vector(this.x * tileSize, this.y * tileSize);\r\n    }\r\n\r\n    /**\r\n     * Converts this vector to world space and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    toWorldSpaceCenterOfTile() {\r\n        return new Vector(this.x * tileSize + halfTileSize, this.y * tileSize + halfTileSize);\r\n    }\r\n\r\n    /**\r\n     * Converts the top left tile position of this vector\r\n     * @returns {Vector}\r\n     */\r\n    snapWorldToTile() {\r\n        return new Vector(Math.floor(this.x / tileSize) * tileSize, Math.floor(this.y / tileSize) * tileSize);\r\n    }\r\n\r\n    /**\r\n     * Normalizes the vector, dividing by the length(), and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    normalize() {\r\n        const len = Math.max(1e-5, Math.hypot(this.x, this.y));\r\n        return new Vector(this.x / len, this.y / len);\r\n    }\r\n\r\n    /**\r\n     * Normalizes the vector, dividing by the length(), and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    normalizeIfGreaterOne() {\r\n        const len = Math.max(1, Math.hypot(this.x, this.y));\r\n        return new Vector(this.x / len, this.y / len);\r\n    }\r\n\r\n    /**\r\n     * Returns the normalized vector to the other point\r\n     * @param {Vector} v\r\n     * @returns {Vector}\r\n     */\r\n    normalizedDirection(v) {\r\n        const dx = v.x - this.x;\r\n        const dy = v.y - this.y;\r\n        const len = Math.max(1e-5, Math.hypot(dx, dy));\r\n        return new Vector(dx / len, dy / len);\r\n    }\r\n\r\n    /**\r\n     * Returns a perpendicular vector\r\n     * @returns {Vector}\r\n     */\r\n    findPerpendicular() {\r\n        return new Vector(-this.y, this.x);\r\n    }\r\n\r\n    /**\r\n     * Returns the unnormalized direction to the other point\r\n     * @param {Vector} v\r\n     * @returns {Vector}\r\n     */\r\n    direction(v) {\r\n        return new Vector(v.x - this.x, v.y - this.y);\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of the vector\r\n     * @returns {string}\r\n     */\r\n    toString() {\r\n        return this.x + \",\" + this.y;\r\n    }\r\n\r\n    /**\r\n     * Compares both vectors for exact equality. Does not do an epsilon compare\r\n     * @param {Vector} v\r\n     * @returns {Boolean}\r\n     */\r\n    equals(v) {\r\n        return this.x === v.x && this.y === v.y;\r\n    }\r\n\r\n    /**\r\n     * Rotates this vector\r\n     * @param {number} angle\r\n     * @returns {Vector} new vector\r\n     */\r\n    rotated(angle) {\r\n        const sin = Math.sin(angle);\r\n        const cos = Math.cos(angle);\r\n        return new Vector(this.x * cos - this.y * sin, this.x * sin + this.y * cos);\r\n    }\r\n\r\n    /**\r\n     * Rotates this vector\r\n     * @param {number} angle\r\n     * @returns {Vector} this vector\r\n     */\r\n    rotateInplaceFastMultipleOf90(angle) {\r\n        // const sin = Math.sin(angle);\r\n        // const cos = Math.cos(angle);\r\n        // let sin = 0, cos = 1;\r\n        assert(angle >= 0 && angle <= 360, \"Invalid angle, please clamp first: \" + angle);\r\n\r\n        switch (angle) {\r\n            case 0:\r\n            case 360: {\r\n                return this;\r\n            }\r\n            case 90: {\r\n                // sin = 1;\r\n                // cos = 0;\r\n\r\n                const x = this.x;\r\n                this.x = -this.y;\r\n                this.y = x;\r\n                return this;\r\n            }\r\n            case 180: {\r\n                // sin = 0\r\n                // cos = -1\r\n                this.x = -this.x;\r\n                this.y = -this.y;\r\n                return this;\r\n            }\r\n            case 270: {\r\n                // sin = -1\r\n                // cos = 0\r\n                const x = this.x;\r\n                this.x = this.y;\r\n                this.y = -x;\r\n                return this;\r\n            }\r\n            default: {\r\n                assertAlways(false, \"Invalid fast inplace rotation: \" + angle);\r\n                return this;\r\n            }\r\n        }\r\n        // return new Vector(this.x * cos - this.y * sin, this.x * sin + this.y * cos);\r\n    }\r\n\r\n    /**\r\n     * Rotates this vector\r\n     * @param {number} angle\r\n     * @returns {Vector} new vector\r\n     */\r\n    rotateFastMultipleOf90(angle) {\r\n        assert(angle >= 0 && angle <= 360, \"Invalid angle, please clamp first: \" + angle);\r\n\r\n        switch (angle) {\r\n            case 360:\r\n            case 0: {\r\n                return new Vector(this.x, this.y);\r\n            }\r\n            case 90: {\r\n                return new Vector(-this.y, this.x);\r\n            }\r\n            case 180: {\r\n                return new Vector(-this.x, -this.y);\r\n            }\r\n            case 270: {\r\n                return new Vector(this.y, -this.x);\r\n            }\r\n            default: {\r\n                assertAlways(false, \"Invalid fast inplace rotation: \" + angle);\r\n                return new Vector();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper method to rotate a direction\r\n     * @param {enumDirection} direction\r\n     * @param {number} angle\r\n     * @returns {enumDirection}\r\n     */\r\n    static transformDirectionFromMultipleOf90(direction, angle) {\r\n        if (angle === 0 || angle === 360) {\r\n            return direction;\r\n        }\r\n        assert(angle >= 0 && angle <= 360, \"Invalid angle: \" + angle);\r\n        switch (direction) {\r\n            case enumDirection.top: {\r\n                switch (angle) {\r\n                    case 90:\r\n                        return enumDirection.right;\r\n                    case 180:\r\n                        return enumDirection.bottom;\r\n                    case 270:\r\n                        return enumDirection.left;\r\n                    default:\r\n                        assertAlways(false, \"Invalid angle: \" + angle);\r\n                        return;\r\n                }\r\n            }\r\n\r\n            case enumDirection.right: {\r\n                switch (angle) {\r\n                    case 90:\r\n                        return enumDirection.bottom;\r\n                    case 180:\r\n                        return enumDirection.left;\r\n                    case 270:\r\n                        return enumDirection.top;\r\n                    default:\r\n                        assertAlways(false, \"Invalid angle: \" + angle);\r\n                        return;\r\n                }\r\n            }\r\n\r\n            case enumDirection.bottom: {\r\n                switch (angle) {\r\n                    case 90:\r\n                        return enumDirection.left;\r\n                    case 180:\r\n                        return enumDirection.top;\r\n                    case 270:\r\n                        return enumDirection.right;\r\n                    default:\r\n                        assertAlways(false, \"Invalid angle: \" + angle);\r\n                        return;\r\n                }\r\n            }\r\n\r\n            case enumDirection.left: {\r\n                switch (angle) {\r\n                    case 90:\r\n                        return enumDirection.top;\r\n                    case 180:\r\n                        return enumDirection.right;\r\n                    case 270:\r\n                        return enumDirection.bottom;\r\n                    default:\r\n                        assertAlways(false, \"Invalid angle: \" + angle);\r\n                        return;\r\n                }\r\n            }\r\n            default:\r\n                assertAlways(false, \"Invalid angle: \" + angle);\r\n                return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Compares both vectors for epsilon equality\r\n     * @param {Vector} v\r\n     * @returns {Boolean}\r\n     */\r\n    equalsEpsilon(v, epsilon = 1e-5) {\r\n        return Math.abs(this.x - v.x) < 1e-5 && Math.abs(this.y - v.y) < epsilon;\r\n    }\r\n\r\n    /**\r\n     * Returns the angle\r\n     * @returns {number} 0 .. 2 PI\r\n     */\r\n    angle() {\r\n        return Math.atan2(this.y, this.x) + Math.PI / 2;\r\n    }\r\n\r\n    /**\r\n     * Serializes the vector to a string\r\n     * @returns {string}\r\n     */\r\n    serializeTile() {\r\n        return String.fromCharCode(33 + this.x) + String.fromCharCode(33 + this.y);\r\n    }\r\n\r\n    /**\r\n     * Creates a simple representation of the vector\r\n     */\r\n    serializeSimple() {\r\n        return { x: this.x, y: this.y };\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    serializeTileToInt() {\r\n        return this.x + this.y * 256;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} i\r\n     * @returns {Vector}\r\n     */\r\n    static deserializeTileFromInt(i) {\r\n        const x = i % 256;\r\n        const y = Math.floor(i / 256);\r\n        return new Vector(x, y);\r\n    }\r\n\r\n    /**\r\n     * Deserializes a vector from a string\r\n     * @param {string} s\r\n     * @returns {Vector}\r\n     */\r\n    static deserializeTile(s) {\r\n        return new Vector(s.charCodeAt(0) - 33, s.charCodeAt(1) - 33);\r\n    }\r\n\r\n    /**\r\n     * Deserializes a vector from a serialized json object\r\n     * @param {object} obj\r\n     * @returns {Vector}\r\n     */\r\n    static fromSerializedObject(obj) {\r\n        if (obj) {\r\n            return new Vector(obj.x || 0, obj.y || 0);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Interpolates two vectors, for a = 0, returns v1 and for a = 1 return v2, otherwise interpolate\r\n * @param {Vector} v1\r\n * @param {Vector} v2\r\n * @param {number} a\r\n */\r\nexport function mixVector(v1, v2, a) {\r\n    return new Vector(v1.x * (1 - a) + v2.x * a, v1.y * (1 - a) + v2.y * a);\r\n}\r\n\r\n/**\r\n * Mapping from string direction to actual vector\r\n * @enum {Vector}\r\n */\r\nexport const enumDirectionToVector = {\r\n    top: new Vector(0, -1),\r\n    right: new Vector(1, 0),\r\n    bottom: new Vector(0, 1),\r\n    left: new Vector(-1, 0),\r\n};\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/core/vector.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 814,
    "kind": "variable",
    "name": "tileSize",
    "memberof": "js/core/vector.js",
    "static": true,
    "longname": "js/core/vector.js~tileSize",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/vector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 815,
    "kind": "variable",
    "name": "halfTileSize",
    "memberof": "js/core/vector.js",
    "static": true,
    "longname": "js/core/vector.js~halfTileSize",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/core/vector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 816,
    "kind": "variable",
    "name": "enumDirection",
    "memberof": "js/core/vector.js",
    "static": true,
    "longname": "js/core/vector.js~enumDirection",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/vector.js",
    "importStyle": "{enumDirection}",
    "description": "",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"top\": string, \"right\": string, \"bottom\": string, \"left\": string}"
      ]
    }
  },
  {
    "__docId__": 817,
    "kind": "variable",
    "name": "enumInvertedDirections",
    "memberof": "js/core/vector.js",
    "static": true,
    "longname": "js/core/vector.js~enumInvertedDirections",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/vector.js",
    "importStyle": "{enumInvertedDirections}",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"undefined\": *}"
      ]
    }
  },
  {
    "__docId__": 818,
    "kind": "variable",
    "name": "enumDirectionToAngle",
    "memberof": "js/core/vector.js",
    "static": true,
    "longname": "js/core/vector.js~enumDirectionToAngle",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/vector.js",
    "importStyle": "{enumDirectionToAngle}",
    "description": "",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{number}"
      }
    ],
    "type": {
      "types": [
        "{\"undefined\": number}"
      ]
    }
  },
  {
    "__docId__": 819,
    "kind": "variable",
    "name": "enumAngleToDirection",
    "memberof": "js/core/vector.js",
    "static": true,
    "longname": "js/core/vector.js~enumAngleToDirection",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/vector.js",
    "importStyle": "{enumAngleToDirection}",
    "description": "",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{enumDirection}"
      }
    ],
    "type": {
      "types": [
        "{\"0\": *, \"90\": *, \"180\": *, \"270\": *}"
      ]
    }
  },
  {
    "__docId__": 820,
    "kind": "variable",
    "name": "arrayAllDirections",
    "memberof": "js/core/vector.js",
    "static": true,
    "longname": "js/core/vector.js~arrayAllDirections",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/vector.js",
    "importStyle": "{arrayAllDirections}",
    "description": null,
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Array<enumDirection>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 821,
    "kind": "class",
    "name": "Vector",
    "memberof": "js/core/vector.js",
    "static": true,
    "longname": "js/core/vector.js~Vector",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/vector.js",
    "importStyle": "{Vector}",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 822,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 823,
    "kind": "member",
    "name": "x",
    "memberof": "js/core/vector.js~Vector",
    "static": false,
    "longname": "js/core/vector.js~Vector#x",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 824,
    "kind": "member",
    "name": "y",
    "memberof": "js/core/vector.js~Vector",
    "static": false,
    "longname": "js/core/vector.js~Vector#y",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 825,
    "kind": "method",
    "name": "copy",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#copy",
    "access": "public",
    "description": "return a copy of the vector",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 826,
    "kind": "method",
    "name": "add",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#add",
    "access": "public",
    "description": "Adds a vector and return a new vector",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 827,
    "kind": "method",
    "name": "addInplace",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#addInplace",
    "access": "public",
    "description": "Adds a vector",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 830,
    "kind": "method",
    "name": "sub",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#sub",
    "access": "public",
    "description": "Substracts a vector and return a new vector",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 831,
    "kind": "method",
    "name": "subInplace",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#subInplace",
    "access": "public",
    "description": "Subs a vector",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 834,
    "kind": "method",
    "name": "mul",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#mul",
    "access": "public",
    "description": "Multiplies with a vector and return a new vector",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 835,
    "kind": "method",
    "name": "addScalars",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#addScalars",
    "access": "public",
    "description": "Adds two scalars and return a new vector",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 836,
    "kind": "method",
    "name": "subScalar",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#subScalar",
    "access": "public",
    "description": "Substracts a scalar and return a new vector",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 837,
    "kind": "method",
    "name": "subScalars",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#subScalars",
    "access": "public",
    "description": "Substracts two scalars and return a new vector",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 838,
    "kind": "method",
    "name": "length",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#length",
    "access": "public",
    "description": "Returns the euclidian length",
    "lineNumber": 156,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 839,
    "kind": "method",
    "name": "lengthSquare",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#lengthSquare",
    "access": "public",
    "description": "Returns the square length",
    "lineNumber": 164,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 840,
    "kind": "method",
    "name": "divideScalar",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#divideScalar",
    "access": "public",
    "description": "Divides both components by a scalar and return a new vector",
    "lineNumber": 173,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 841,
    "kind": "method",
    "name": "divideScalars",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#divideScalars",
    "access": "public",
    "description": "Divides both components by the given scalars and return a new vector",
    "lineNumber": 183,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 842,
    "kind": "method",
    "name": "divideScalarInplace",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#divideScalarInplace",
    "access": "public",
    "description": "Divides both components by a scalar",
    "lineNumber": 192,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 845,
    "kind": "method",
    "name": "multiplyScalar",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#multiplyScalar",
    "access": "public",
    "description": "Multiplies both components with a scalar and return a new vector",
    "lineNumber": 203,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 846,
    "kind": "method",
    "name": "multiplyScalars",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#multiplyScalars",
    "access": "public",
    "description": "Multiplies both components with two scalars and returns a new vector",
    "lineNumber": 213,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 847,
    "kind": "method",
    "name": "maxScalar",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#maxScalar",
    "access": "public",
    "description": "For both components, compute the maximum of each component and the given scalar, and return a new vector.\nFor example:\n  - new Vector(-1, 5).maxScalar(0) -> Vector(0, 5)",
    "lineNumber": 224,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 848,
    "kind": "method",
    "name": "addScalar",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#addScalar",
    "access": "public",
    "description": "Adds a scalar to both components and return a new vector",
    "lineNumber": 233,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 849,
    "kind": "method",
    "name": "min",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#min",
    "access": "public",
    "description": "Computes the component wise minimum and return a new vector",
    "lineNumber": 242,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 850,
    "kind": "method",
    "name": "max",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#max",
    "access": "public",
    "description": "Computes the component wise maximum and return a new vector",
    "lineNumber": 251,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 851,
    "kind": "method",
    "name": "abs",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#abs",
    "access": "public",
    "description": "Computes the component wise absolute",
    "lineNumber": 258,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 852,
    "kind": "method",
    "name": "dot",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#dot",
    "access": "public",
    "description": "Computes the scalar product",
    "lineNumber": 267,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 853,
    "kind": "method",
    "name": "distance",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#distance",
    "access": "public",
    "description": "Computes the distance to a given vector",
    "lineNumber": 276,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 854,
    "kind": "method",
    "name": "distanceSquare",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#distanceSquare",
    "access": "public",
    "description": "Computes the square distance to a given vectort",
    "lineNumber": 285,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 855,
    "kind": "method",
    "name": "modScalar",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#modScalar",
    "access": "public",
    "description": "Returns x % f, y % f",
    "lineNumber": 296,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector} new vector"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": "new vector"
    }
  },
  {
    "__docId__": 856,
    "kind": "method",
    "name": "centerPoint",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#centerPoint",
    "access": "public",
    "description": "Computes and returns the center between both points",
    "lineNumber": 305,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 857,
    "kind": "method",
    "name": "floor",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#floor",
    "access": "public",
    "description": "Computes componentwise floor and returns a new vector",
    "lineNumber": 315,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 858,
    "kind": "method",
    "name": "ceil",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#ceil",
    "access": "public",
    "description": "Computes componentwise ceil and returns a new vector",
    "lineNumber": 323,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 859,
    "kind": "method",
    "name": "round",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#round",
    "access": "public",
    "description": "Computes componentwise round and return a new vector",
    "lineNumber": 331,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 860,
    "kind": "method",
    "name": "toTileSpace",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#toTileSpace",
    "access": "public",
    "description": "Converts this vector from world to tile space and return a new vector",
    "lineNumber": 339,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 861,
    "kind": "method",
    "name": "toStreetSpace",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#toStreetSpace",
    "access": "public",
    "description": "Converts this vector from world to street space and return a new vector",
    "lineNumber": 347,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 862,
    "kind": "method",
    "name": "toWorldSpace",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#toWorldSpace",
    "access": "public",
    "description": "Converts this vector to world space and return a new vector",
    "lineNumber": 355,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 863,
    "kind": "method",
    "name": "toWorldSpaceCenterOfTile",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#toWorldSpaceCenterOfTile",
    "access": "public",
    "description": "Converts this vector to world space and return a new vector",
    "lineNumber": 363,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 864,
    "kind": "method",
    "name": "snapWorldToTile",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#snapWorldToTile",
    "access": "public",
    "description": "Converts the top left tile position of this vector",
    "lineNumber": 371,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 865,
    "kind": "method",
    "name": "normalize",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#normalize",
    "access": "public",
    "description": "Normalizes the vector, dividing by the length(), and return a new vector",
    "lineNumber": 379,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 866,
    "kind": "method",
    "name": "normalizeIfGreaterOne",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#normalizeIfGreaterOne",
    "access": "public",
    "description": "Normalizes the vector, dividing by the length(), and return a new vector",
    "lineNumber": 388,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 867,
    "kind": "method",
    "name": "normalizedDirection",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#normalizedDirection",
    "access": "public",
    "description": "Returns the normalized vector to the other point",
    "lineNumber": 398,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 868,
    "kind": "method",
    "name": "findPerpendicular",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#findPerpendicular",
    "access": "public",
    "description": "Returns a perpendicular vector",
    "lineNumber": 409,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 869,
    "kind": "method",
    "name": "direction",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#direction",
    "access": "public",
    "description": "Returns the unnormalized direction to the other point",
    "lineNumber": 418,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 870,
    "kind": "method",
    "name": "toString",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#toString",
    "access": "public",
    "description": "Returns a string representation of the vector",
    "lineNumber": 426,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 871,
    "kind": "method",
    "name": "equals",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#equals",
    "access": "public",
    "description": "Compares both vectors for exact equality. Does not do an epsilon compare",
    "lineNumber": 435,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 872,
    "kind": "method",
    "name": "rotated",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#rotated",
    "access": "public",
    "description": "Rotates this vector",
    "lineNumber": 444,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector} new vector"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": "new vector"
    }
  },
  {
    "__docId__": 873,
    "kind": "method",
    "name": "rotateInplaceFastMultipleOf90",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#rotateInplaceFastMultipleOf90",
    "access": "public",
    "description": "Rotates this vector",
    "lineNumber": 455,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector} this vector"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": "this vector"
    }
  },
  {
    "__docId__": 880,
    "kind": "method",
    "name": "rotateFastMultipleOf90",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#rotateFastMultipleOf90",
    "access": "public",
    "description": "Rotates this vector",
    "lineNumber": 503,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector} new vector"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": "new vector"
    }
  },
  {
    "__docId__": 881,
    "kind": "method",
    "name": "transformDirectionFromMultipleOf90",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/vector.js~Vector.transformDirectionFromMultipleOf90",
    "access": "public",
    "description": "Helper method to rotate a direction",
    "lineNumber": 533,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{enumDirection}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "enumDirection"
        ],
        "spread": false,
        "optional": false,
        "name": "direction",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "enumDirection"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 882,
    "kind": "method",
    "name": "equalsEpsilon",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#equalsEpsilon",
    "access": "public",
    "description": "Compares both vectors for epsilon equality",
    "lineNumber": 605,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 883,
    "kind": "method",
    "name": "angle",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#angle",
    "access": "public",
    "description": "Returns the angle",
    "lineNumber": 613,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 0 .. 2 PI"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "0 .. 2 PI"
    },
    "params": []
  },
  {
    "__docId__": 884,
    "kind": "method",
    "name": "serializeTile",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#serializeTile",
    "access": "public",
    "description": "Serializes the vector to a string",
    "lineNumber": 621,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 885,
    "kind": "method",
    "name": "serializeSimple",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#serializeSimple",
    "access": "public",
    "description": "Creates a simple representation of the vector",
    "lineNumber": 628,
    "params": [],
    "return": {
      "types": [
        "{\"x\": *, \"y\": *}"
      ]
    }
  },
  {
    "__docId__": 886,
    "kind": "method",
    "name": "serializeTileToInt",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/core/vector.js~Vector#serializeTileToInt",
    "access": "public",
    "description": "",
    "lineNumber": 635,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 887,
    "kind": "method",
    "name": "deserializeTileFromInt",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/vector.js~Vector.deserializeTileFromInt",
    "access": "public",
    "description": "",
    "lineNumber": 644,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "i",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 888,
    "kind": "method",
    "name": "deserializeTile",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/vector.js~Vector.deserializeTile",
    "access": "public",
    "description": "Deserializes a vector from a string",
    "lineNumber": 655,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 889,
    "kind": "method",
    "name": "fromSerializedObject",
    "memberof": "js/core/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/vector.js~Vector.fromSerializedObject",
    "access": "public",
    "description": "Deserializes a vector from a serialized json object",
    "lineNumber": 664,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 890,
    "kind": "function",
    "name": "mixVector",
    "memberof": "js/core/vector.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/core/vector.js~mixVector",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/vector.js",
    "importStyle": "{mixVector}",
    "description": "Interpolates two vectors, for a = 0, returns v1 and for a = 1 return v2, otherwise interpolate",
    "lineNumber": 677,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "v1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "v2",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 891,
    "kind": "variable",
    "name": "enumDirectionToVector",
    "memberof": "js/core/vector.js",
    "static": true,
    "longname": "js/core/vector.js~enumDirectionToVector",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/core/vector.js",
    "importStyle": "{enumDirectionToVector}",
    "description": "Mapping from string direction to actual vector",
    "lineNumber": 685,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{Vector}"
      }
    ],
    "type": {
      "types": [
        "{\"top\": *, \"right\": *, \"bottom\": *, \"left\": *}"
      ]
    }
  },
  {
    "__docId__": 892,
    "kind": "file",
    "name": "js/game/automatic_save.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { GameRoot } from \"./root\";\r\n\r\n// How important it is that a savegame is created\r\n/**\r\n * @enum {number}\r\n */\r\nexport const enumSavePriority = {\r\n    regular: 2,\r\n    asap: 100,\r\n};\r\n\r\nconst logger = createLogger(\"autosave\");\r\n\r\nexport class AutomaticSave {\r\n    constructor(root) {\r\n        /** @type {GameRoot} */\r\n        this.root = root;\r\n\r\n        // Store the current maximum save importance\r\n        this.saveImportance = enumSavePriority.regular;\r\n\r\n        this.lastSaveAttempt = -1000;\r\n    }\r\n\r\n    setSaveImportance(importance) {\r\n        this.saveImportance = Math.max(this.saveImportance, importance);\r\n    }\r\n\r\n    doSave() {\r\n        if (G_IS_DEV && globalConfig.debug.disableSavegameWrite) {\r\n            return;\r\n        }\r\n\r\n        this.root.gameState.doSave();\r\n        this.saveImportance = enumSavePriority.regular;\r\n    }\r\n\r\n    update() {\r\n        if (!this.root.gameInitialized) {\r\n            // Bad idea\r\n            return;\r\n        }\r\n\r\n        const saveInterval = this.root.app.settings.getAutosaveIntervalSeconds();\r\n        if (!saveInterval) {\r\n            // Disabled\r\n            return;\r\n        }\r\n\r\n        // Check when the last save was, but make sure that if it fails, we don't spam\r\n        const lastSaveTime = Math.max(this.lastSaveAttempt, this.root.savegame.getRealLastUpdate());\r\n\r\n        const secondsSinceLastSave = (Date.now() - lastSaveTime) / 1000.0;\r\n        let shouldSave = false;\r\n\r\n        switch (this.saveImportance) {\r\n            case enumSavePriority.asap:\r\n                // High always should save\r\n                shouldSave = true;\r\n                break;\r\n\r\n            case enumSavePriority.regular:\r\n                // Could determine if there is a good / bad point here\r\n                shouldSave = secondsSinceLastSave > saveInterval;\r\n                break;\r\n\r\n            default:\r\n                assert(false, \"Unknown save prio: \" + this.saveImportance);\r\n                break;\r\n        }\r\n        if (shouldSave) {\r\n            logger.log(\"Saving automatically\");\r\n            this.lastSaveAttempt = Date.now();\r\n            this.doSave();\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/automatic_save.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 893,
    "kind": "variable",
    "name": "enumSavePriority",
    "memberof": "js/game/automatic_save.js",
    "static": true,
    "longname": "js/game/automatic_save.js~enumSavePriority",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/automatic_save.js",
    "importStyle": "{enumSavePriority}",
    "description": "",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{number}"
      }
    ],
    "type": {
      "types": [
        "{\"regular\": number, \"asap\": number}"
      ]
    }
  },
  {
    "__docId__": 894,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/automatic_save.js",
    "static": true,
    "longname": "js/game/automatic_save.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/automatic_save.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 895,
    "kind": "class",
    "name": "AutomaticSave",
    "memberof": "js/game/automatic_save.js",
    "static": true,
    "longname": "js/game/automatic_save.js~AutomaticSave",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/automatic_save.js",
    "importStyle": "{AutomaticSave}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 896,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/automatic_save.js~AutomaticSave",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/automatic_save.js~AutomaticSave#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 897,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/automatic_save.js~AutomaticSave",
    "static": false,
    "longname": "js/game/automatic_save.js~AutomaticSave#root",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "GameRoot"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 898,
    "kind": "member",
    "name": "saveImportance",
    "memberof": "js/game/automatic_save.js~AutomaticSave",
    "static": false,
    "longname": "js/game/automatic_save.js~AutomaticSave#saveImportance",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 899,
    "kind": "member",
    "name": "lastSaveAttempt",
    "memberof": "js/game/automatic_save.js~AutomaticSave",
    "static": false,
    "longname": "js/game/automatic_save.js~AutomaticSave#lastSaveAttempt",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 900,
    "kind": "method",
    "name": "setSaveImportance",
    "memberof": "js/game/automatic_save.js~AutomaticSave",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/automatic_save.js~AutomaticSave#setSaveImportance",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "importance",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 902,
    "kind": "method",
    "name": "doSave",
    "memberof": "js/game/automatic_save.js~AutomaticSave",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/automatic_save.js~AutomaticSave#doSave",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 904,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/automatic_save.js~AutomaticSave",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/automatic_save.js~AutomaticSave#update",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 906,
    "kind": "file",
    "name": "js/game/base_item.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { BasicSerializableObject } from \"../savegame/serialization\";\r\n\r\n/**\r\n * Class for items on belts etc. Not an entity for performance reasons\r\n */\r\nexport class BaseItem extends BasicSerializableObject {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static getId() {\r\n        return \"base_item\";\r\n    }\r\n\r\n    /** @returns {object} */\r\n    static getSchema() {\r\n        return {};\r\n    }\r\n\r\n    /** @returns {ItemType} **/\r\n    getItemType() {\r\n        abstract;\r\n        return \"shape\";\r\n    }\r\n\r\n    /**\r\n     * Returns a string id of the item\r\n     * @returns {string}\r\n     */\r\n    getAsCopyableKey() {\r\n        abstract;\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Returns if the item equals the other itme\r\n     * @param {BaseItem} other\r\n     * @returns {boolean}\r\n     */\r\n    equals(other) {\r\n        if (this.getItemType() !== other.getItemType()) {\r\n            return false;\r\n        }\r\n        return this.equalsImpl(other);\r\n    }\r\n\r\n    /**\r\n     * Override for custom comparison\r\n     * @abstract\r\n     * @param {BaseItem} other\r\n     * @returns {boolean}\r\n     */\r\n    equalsImpl(other) {\r\n        abstract;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Draws the item to a canvas\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} size\r\n     */\r\n    drawFullSizeOnCanvas(context, size) {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Draws the item at the given position\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {DrawParameters} parameters\r\n     * @param {number=} diameter\r\n     */\r\n    drawItemCenteredClipped(\r\n        x,\r\n        y,\r\n        parameters,\r\n        diameter = globalConfig.defaultItemDiameter,\r\n        background = true\r\n    ) {\r\n        if (parameters.visibleRect.containsCircle(x, y, diameter / 2)) {\r\n            this.drawItemCenteredImpl(x, y, parameters, diameter, background);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * INTERNAL\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {DrawParameters} parameters\r\n     * @param {number=} diameter\r\n     */\r\n    drawItemCenteredImpl(x, y, parameters, diameter = globalConfig.defaultItemDiameter, background = true) {\r\n        abstract;\r\n    }\r\n\r\n    getBackgroundColorAsResource() {\r\n        abstract;\r\n        return \"\";\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/base_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 907,
    "kind": "class",
    "name": "BaseItem",
    "memberof": "js/game/base_item.js",
    "static": true,
    "longname": "js/game/base_item.js~BaseItem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/base_item.js",
    "importStyle": "{BaseItem}",
    "description": "Class for items on belts etc. Not an entity for performance reasons",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "js/savegame/serialization.js~BasicSerializableObject"
    ]
  },
  {
    "__docId__": 908,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/base_item.js~BaseItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/base_item.js~BaseItem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 909,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/base_item.js~BaseItem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/base_item.js~BaseItem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 910,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/base_item.js~BaseItem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/base_item.js~BaseItem.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 911,
    "kind": "method",
    "name": "getItemType",
    "memberof": "js/game/base_item.js~BaseItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/base_item.js~BaseItem#getItemType",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ItemType} *"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ItemType"
      ],
      "spread": false,
      "description": "*"
    },
    "params": []
  },
  {
    "__docId__": 912,
    "kind": "method",
    "name": "getAsCopyableKey",
    "memberof": "js/game/base_item.js~BaseItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/base_item.js~BaseItem#getAsCopyableKey",
    "access": "public",
    "description": "Returns a string id of the item",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 913,
    "kind": "method",
    "name": "equals",
    "memberof": "js/game/base_item.js~BaseItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/base_item.js~BaseItem#equals",
    "access": "public",
    "description": "Returns if the item equals the other itme",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 914,
    "kind": "method",
    "name": "equalsImpl",
    "memberof": "js/game/base_item.js~BaseItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/base_item.js~BaseItem#equalsImpl",
    "access": "public",
    "description": "Override for custom comparison",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 915,
    "kind": "method",
    "name": "drawFullSizeOnCanvas",
    "memberof": "js/game/base_item.js~BaseItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/base_item.js~BaseItem#drawFullSizeOnCanvas",
    "access": "public",
    "description": "Draws the item to a canvas",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 916,
    "kind": "method",
    "name": "drawItemCenteredClipped",
    "memberof": "js/game/base_item.js~BaseItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/base_item.js~BaseItem#drawItemCenteredClipped",
    "access": "public",
    "description": "Draws the item at the given position",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "diameter",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 917,
    "kind": "method",
    "name": "drawItemCenteredImpl",
    "memberof": "js/game/base_item.js~BaseItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/base_item.js~BaseItem#drawItemCenteredImpl",
    "access": "public",
    "description": "INTERNAL",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "diameter",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 918,
    "kind": "method",
    "name": "getBackgroundColorAsResource",
    "memberof": "js/game/base_item.js~BaseItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/base_item.js~BaseItem#getBackgroundColorAsResource",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 919,
    "kind": "file",
    "name": "js/game/belt_path.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { Rectangle } from \"../core/rectangle\";\r\nimport { clamp, epsilonCompare, round4Digits } from \"../core/utils\";\r\nimport { enumDirection, enumDirectionToVector, enumInvertedDirections, Vector } from \"../core/vector\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\nimport { BaseItem } from \"./base_item\";\r\nimport { Entity } from \"./entity\";\r\nimport { typeItemSingleton } from \"./item_resolver\";\r\nimport { GameRoot } from \"./root\";\r\n\r\nconst logger = createLogger(\"belt_path\");\r\n\r\n// Helpers for more semantic access into interleaved arrays\r\nconst _nextDistance = 0;\r\nconst _item = 1;\r\n\r\nconst DEBUG = G_IS_DEV && false;\r\n\r\n/**\r\n * Stores a path of belts, used for optimizing performance\r\n */\r\nexport class BeltPath extends BasicSerializableObject {\r\n    static getId() {\r\n        return \"BeltPath\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            entityPath: types.array(types.entity),\r\n            items: types.array(types.pair(types.ufloat, typeItemSingleton)),\r\n            spacingToFirstItem: types.ufloat,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates a path from a serialized object\r\n     * @param {GameRoot} root\r\n     * @param {Object} data\r\n     * @returns {BeltPath|string}\r\n     */\r\n    static fromSerialized(root, data) {\r\n        // Create fake object which looks like a belt path but skips the constructor\r\n        const fakeObject = /** @type {BeltPath} */ (Object.create(BeltPath.prototype));\r\n        fakeObject.root = root;\r\n\r\n        // Deserialize the data\r\n        const errorCodeDeserialize = fakeObject.deserialize(data);\r\n        if (errorCodeDeserialize) {\r\n            return errorCodeDeserialize;\r\n        }\r\n\r\n        // Compute other properties\r\n        fakeObject.init(false);\r\n\r\n        return fakeObject;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {Array<Entity>} entityPath\r\n     */\r\n    constructor(root, entityPath) {\r\n        super();\r\n        this.root = root;\r\n\r\n        assert(entityPath.length > 0, \"invalid entity path\");\r\n        this.entityPath = entityPath;\r\n\r\n        /**\r\n         * Stores the items sorted, and their distance to the previous item (or start)\r\n         * Layout: [distanceToNext, item]\r\n         * @type {Array<[number, BaseItem]>}\r\n         */\r\n        this.items = [];\r\n\r\n        /**\r\n         * Stores the spacing to the first item\r\n         */\r\n\r\n        this.init();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"constructor\");\r\n        }\r\n    }\r\n    /**\r\n     * Initializes the path by computing the properties which are not saved\r\n     * @param {boolean} computeSpacing Whether to also compute the spacing\r\n     */\r\n    init(computeSpacing = true) {\r\n        this.onPathChanged();\r\n\r\n        this.totalLength = this.computeTotalLength();\r\n\r\n        if (computeSpacing) {\r\n            this.spacingToFirstItem = this.totalLength;\r\n        }\r\n\r\n        /**\r\n         * Current bounds of this path\r\n         * @type {Rectangle}\r\n         */\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        // Connect the belts\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            this.entityPath[i].components.Belt.assignedPath = this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether this path can accept a new item\r\n     * @returns {boolean}\r\n     */\r\n    canAcceptItem() {\r\n        return this.spacingToFirstItem >= globalConfig.itemSpacingOnBelts;\r\n    }\r\n\r\n    /**\r\n     * Tries to accept the item\r\n     * @param {BaseItem} item\r\n     */\r\n    tryAcceptItem(item) {\r\n        if (this.spacingToFirstItem >= globalConfig.itemSpacingOnBelts) {\r\n            // So, since we already need one tick to accept this item we will add this directly.\r\n            const beltProgressPerTick =\r\n                this.root.hubGoals.getBeltBaseSpeed() *\r\n                this.root.dynamicTickrate.deltaSeconds *\r\n                globalConfig.itemSpacingOnBelts;\r\n\r\n            // First, compute how much progress we can make *at max*\r\n            const maxProgress = Math.max(0, this.spacingToFirstItem - globalConfig.itemSpacingOnBelts);\r\n            const initialProgress = Math.min(maxProgress, beltProgressPerTick);\r\n\r\n            this.items.unshift([this.spacingToFirstItem - initialProgress, item]);\r\n            this.spacingToFirstItem = initialProgress;\r\n\r\n            if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n                this.debug_checkIntegrity(\"accept-item\");\r\n            }\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * SLOW / Tries to find the item closest to the given tile\r\n     * @param {Vector} tile\r\n     * @returns {BaseItem|null}\r\n     */\r\n    findItemAtTile(tile) {\r\n        // @TODO: This breaks color blind mode otherwise\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Computes the tile bounds of the path\r\n     * @returns {Rectangle}\r\n     */\r\n    computeBounds() {\r\n        let bounds = this.entityPath[0].components.StaticMapEntity.getTileSpaceBounds();\r\n        for (let i = 1; i < this.entityPath.length; ++i) {\r\n            const staticComp = this.entityPath[i].components.StaticMapEntity;\r\n            const otherBounds = staticComp.getTileSpaceBounds();\r\n            bounds = bounds.getUnion(otherBounds);\r\n        }\r\n        return bounds.allScaled(globalConfig.tileSize);\r\n    }\r\n\r\n    /**\r\n     * Recomputes cache variables once the path was changed\r\n     */\r\n    onPathChanged() {\r\n        this.acceptorTarget = this.computeAcceptingEntityAndSlot();\r\n\r\n        /**\r\n         * How many items past the first item are compressed\r\n         */\r\n        this.numCompressedItemsAfterFirstItem = 0;\r\n    }\r\n\r\n    /**\r\n     * Called by the belt system when the surroundings changed\r\n     */\r\n    onSurroundingsChanged() {\r\n        this.onPathChanged();\r\n    }\r\n\r\n    /**\r\n     * Finds the entity which accepts our items\r\n     * @param {boolean=} debug_Silent Whether debug output should be silent\r\n     * @return {{ entity: Entity, slot: number, direction?: enumDirection }}\r\n     */\r\n    computeAcceptingEntityAndSlot(debug_Silent = false) {\r\n        DEBUG && !debug_Silent && logger.log(\"Recomputing acceptor target\");\r\n\r\n        const lastEntity = this.entityPath[this.entityPath.length - 1];\r\n        const lastStatic = lastEntity.components.StaticMapEntity;\r\n        const lastBeltComp = lastEntity.components.Belt;\r\n\r\n        // Figure out where and into which direction we eject items\r\n        const ejectSlotWsTile = lastStatic.localTileToWorld(new Vector(0, 0));\r\n        const ejectSlotWsDirection = lastStatic.localDirectionToWorld(lastBeltComp.direction);\r\n        const ejectSlotWsDirectionVector = enumDirectionToVector[ejectSlotWsDirection];\r\n        const ejectSlotTargetWsTile = ejectSlotWsTile.add(ejectSlotWsDirectionVector);\r\n\r\n        // Try to find the given acceptor component to take the item\r\n        const targetEntity = this.root.map.getLayerContentXY(\r\n            ejectSlotTargetWsTile.x,\r\n            ejectSlotTargetWsTile.y,\r\n            \"regular\"\r\n        );\r\n\r\n        if (targetEntity) {\r\n            DEBUG && !debug_Silent && logger.log(\"  Found target entity\", targetEntity.uid);\r\n            const targetStaticComp = targetEntity.components.StaticMapEntity;\r\n            const targetBeltComp = targetEntity.components.Belt;\r\n\r\n            // Check for belts (special case)\r\n            if (targetBeltComp) {\r\n                const beltAcceptingDirection = targetStaticComp.localDirectionToWorld(enumDirection.top);\r\n                DEBUG &&\r\n                    !debug_Silent &&\r\n                    logger.log(\r\n                        \"  Entity is accepting items from\",\r\n                        ejectSlotWsDirection,\r\n                        \"vs\",\r\n                        beltAcceptingDirection,\r\n                        \"Rotation:\",\r\n                        targetStaticComp.rotation\r\n                    );\r\n                if (ejectSlotWsDirection === beltAcceptingDirection) {\r\n                    return {\r\n                        entity: targetEntity,\r\n                        direction: null,\r\n                        slot: 0,\r\n                    };\r\n                }\r\n            }\r\n\r\n            // Check for item acceptors\r\n            const targetAcceptorComp = targetEntity.components.ItemAcceptor;\r\n            if (!targetAcceptorComp) {\r\n                // Entity doesn't accept items\r\n                return;\r\n            }\r\n\r\n            const ejectingDirection = targetStaticComp.worldDirectionToLocal(ejectSlotWsDirection);\r\n            const matchingSlot = targetAcceptorComp.findMatchingSlot(\r\n                targetStaticComp.worldToLocalTile(ejectSlotTargetWsTile),\r\n                ejectingDirection\r\n            );\r\n\r\n            if (!matchingSlot) {\r\n                // No matching slot found\r\n                return;\r\n            }\r\n\r\n            return {\r\n                entity: targetEntity,\r\n                slot: matchingSlot.index,\r\n                direction: enumInvertedDirections[ejectingDirection],\r\n            };\r\n        }\r\n    }\r\n\r\n    // Following code will be compiled out outside of dev versions\r\n    /* dev:start */\r\n\r\n    /**\r\n     * Helper to throw an error on mismatch\r\n     * @param {string} change\r\n     * @param {Array<any>} reason\r\n     */\r\n    debug_failIntegrity(change, ...reason) {\r\n        throw new Error(\"belt path invalid (\" + change + \"): \" + reason.map(i => \"\" + i).join(\" \"));\r\n    }\r\n\r\n    /**\r\n     * Checks if this path is valid\r\n     */\r\n    debug_checkIntegrity(currentChange = \"change\") {\r\n        const fail = (...args) => this.debug_failIntegrity(currentChange, ...args);\r\n\r\n        // Check for empty path\r\n        if (this.entityPath.length === 0) {\r\n            return fail(\"Belt path is empty\");\r\n        }\r\n\r\n        // Check for mismatching length\r\n        const totalLength = this.computeTotalLength();\r\n        if (!epsilonCompare(this.totalLength, totalLength, 0.01)) {\r\n            return this.debug_failIntegrity(\r\n                currentChange,\r\n                \"Total length mismatch, stored =\",\r\n                this.totalLength,\r\n                \"but correct is\",\r\n                totalLength\r\n            );\r\n        }\r\n\r\n        // Check for misconnected entities\r\n        for (let i = 0; i < this.entityPath.length - 1; ++i) {\r\n            const entity = this.entityPath[i];\r\n            if (entity.destroyed) {\r\n                return fail(\"Reference to destroyed entity \" + entity.uid);\r\n            }\r\n\r\n            const followUp = this.root.systemMgr.systems.belt.findFollowUpEntity(entity);\r\n            if (!followUp) {\r\n                return fail(\r\n                    \"Follow up entity for the\",\r\n                    i,\r\n                    \"-th entity (total length\",\r\n                    this.entityPath.length,\r\n                    \") was null!\"\r\n                );\r\n            }\r\n            if (followUp !== this.entityPath[i + 1]) {\r\n                return fail(\r\n                    \"Follow up entity mismatch, stored is\",\r\n                    this.entityPath[i + 1].uid,\r\n                    \"but real one is\",\r\n                    followUp.uid\r\n                );\r\n            }\r\n            if (entity.components.Belt.assignedPath !== this) {\r\n                return fail(\r\n                    \"Entity with uid\",\r\n                    entity.uid,\r\n                    \"doesn't have this path assigned, but this path contains the entity.\"\r\n                );\r\n            }\r\n        }\r\n\r\n        // Check spacing\r\n        if (this.spacingToFirstItem > this.totalLength + 0.005) {\r\n            return fail(\r\n                currentChange,\r\n                \"spacing to first item (\",\r\n                this.spacingToFirstItem,\r\n                \") is greater than total length (\",\r\n                this.totalLength,\r\n                \")\"\r\n            );\r\n        }\r\n\r\n        // Check distance if empty\r\n        if (this.items.length === 0 && !epsilonCompare(this.spacingToFirstItem, this.totalLength, 0.01)) {\r\n            return fail(\r\n                currentChange,\r\n                \"Path is empty but spacing to first item (\",\r\n                this.spacingToFirstItem,\r\n                \") does not equal total length (\",\r\n                this.totalLength,\r\n                \")\"\r\n            );\r\n        }\r\n\r\n        // Check items etc\r\n        let currentPos = this.spacingToFirstItem;\r\n        for (let i = 0; i < this.items.length; ++i) {\r\n            const item = this.items[i];\r\n\r\n            if (item[_nextDistance] < 0 || item[_nextDistance] > this.totalLength + 0.02) {\r\n                return fail(\r\n                    \"Item has invalid offset to next item: \",\r\n                    item[_nextDistance],\r\n                    \"(total length:\",\r\n                    this.totalLength,\r\n                    \")\"\r\n                );\r\n            }\r\n\r\n            currentPos += item[_nextDistance];\r\n        }\r\n\r\n        // Check the total sum matches\r\n        if (!epsilonCompare(currentPos, this.totalLength, 0.01)) {\r\n            return fail(\r\n                \"total sum (\",\r\n                currentPos,\r\n                \") of first item spacing (\",\r\n                this.spacingToFirstItem,\r\n                \") and items does not match total length (\",\r\n                this.totalLength,\r\n                \") -> items: \" + this.items.map(i => i[_nextDistance]).join(\"|\")\r\n            );\r\n        }\r\n\r\n        // Check bounds\r\n        const actualBounds = this.computeBounds();\r\n        if (!actualBounds.equalsEpsilon(this.worldBounds, 0.01)) {\r\n            return fail(\"Bounds are stale\");\r\n        }\r\n\r\n        // Check acceptor\r\n        const acceptor = this.computeAcceptingEntityAndSlot(true);\r\n        if (!!acceptor !== !!this.acceptorTarget) {\r\n            return fail(\"Acceptor target mismatch, acceptor\", !!acceptor, \"vs stored\", !!this.acceptorTarget);\r\n        }\r\n\r\n        if (acceptor) {\r\n            if (this.acceptorTarget.entity !== acceptor.entity) {\r\n                return fail(\r\n                    \"Mismatching entity on acceptor target:\",\r\n                    acceptor.entity.uid,\r\n                    \"vs\",\r\n                    this.acceptorTarget.entity.uid\r\n                );\r\n            }\r\n\r\n            if (this.acceptorTarget.slot !== acceptor.slot) {\r\n                return fail(\r\n                    \"Mismatching entity on acceptor target:\",\r\n                    acceptor.slot,\r\n                    \"vs stored\",\r\n                    this.acceptorTarget.slot\r\n                );\r\n            }\r\n\r\n            if (this.acceptorTarget.direction !== acceptor.direction) {\r\n                return fail(\r\n                    \"Mismatching direction on acceptor target:\",\r\n                    acceptor.direction,\r\n                    \"vs stored\",\r\n                    this.acceptorTarget.direction\r\n                );\r\n            }\r\n        }\r\n\r\n        // Check first nonzero offset\r\n        let firstNonzero = 0;\r\n        for (let i = this.items.length - 2; i >= 0; --i) {\r\n            if (this.items[i][_nextDistance] < globalConfig.itemSpacingOnBelts + 1e-5) {\r\n                ++firstNonzero;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Should warn, but this check isn't actually accurate\r\n        // if (firstNonzero !== this.numCompressedItemsAfterFirstItem) {\r\n        //     console.warn(\r\n        //         \"First nonzero index is \" +\r\n        //             firstNonzero +\r\n        //             \" but stored is \" +\r\n        //             this.numCompressedItemsAfterFirstItem\r\n        //     );\r\n        // }\r\n    }\r\n\r\n    /* dev:end */\r\n\r\n    /**\r\n     * Extends the belt path by the given belt\r\n     * @param {Entity} entity\r\n     */\r\n    extendOnEnd(entity) {\r\n        DEBUG && logger.log(\"Extending belt path by entity at\", entity.components.StaticMapEntity.origin);\r\n\r\n        const beltComp = entity.components.Belt;\r\n\r\n        // Append the entity\r\n        this.entityPath.push(entity);\r\n        this.onPathChanged();\r\n\r\n        // Extend the path length\r\n        const additionalLength = beltComp.getEffectiveLengthTiles();\r\n        this.totalLength += additionalLength;\r\n        DEBUG && logger.log(\"  Extended total length by\", additionalLength, \"to\", this.totalLength);\r\n\r\n        // If we have no item, just update the distance to the first item\r\n        if (this.items.length === 0) {\r\n            this.spacingToFirstItem = this.totalLength;\r\n            DEBUG && logger.log(\"  Extended spacing to first to\", this.totalLength, \"(= total length)\");\r\n        } else {\r\n            // Otherwise, update the next-distance of the last item\r\n            const lastItem = this.items[this.items.length - 1];\r\n            DEBUG &&\r\n                logger.log(\r\n                    \"  Extended spacing of last item from\",\r\n                    lastItem[_nextDistance],\r\n                    \"to\",\r\n                    lastItem[_nextDistance] + additionalLength\r\n                );\r\n            lastItem[_nextDistance] += additionalLength;\r\n        }\r\n\r\n        // Assign reference\r\n        beltComp.assignedPath = this;\r\n\r\n        // Update bounds\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"extend-on-end\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Extends the path with the given entity on the beginning\r\n     * @param {Entity} entity\r\n     */\r\n    extendOnBeginning(entity) {\r\n        const beltComp = entity.components.Belt;\r\n\r\n        DEBUG && logger.log(\"Extending the path on the beginning\");\r\n\r\n        // All items on that belt are simply lost (for now)\r\n\r\n        const length = beltComp.getEffectiveLengthTiles();\r\n\r\n        // Extend the length of this path\r\n        this.totalLength += length;\r\n\r\n        // Simply adjust the first item spacing cuz we have no items contained\r\n        this.spacingToFirstItem += length;\r\n\r\n        // Set handles and append entity\r\n        beltComp.assignedPath = this;\r\n        this.entityPath.unshift(entity);\r\n        this.onPathChanged();\r\n\r\n        // Update bounds\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"extend-on-begin\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns if the given entity is the end entity of the path\r\n     * @param {Entity} entity\r\n     * @returns {boolean}\r\n     */\r\n    isEndEntity(entity) {\r\n        return this.entityPath[this.entityPath.length - 1] === entity;\r\n    }\r\n\r\n    /**\r\n     * Returns if the given entity is the start entity of the path\r\n     * @param {Entity} entity\r\n     * @returns {boolean}\r\n     */\r\n    isStartEntity(entity) {\r\n        return this.entityPath[0] === entity;\r\n    }\r\n\r\n    /**\r\n     * Splits this path at the given entity by removing it, and\r\n     * returning the new secondary paht\r\n     * @param {Entity} entity\r\n     * @returns {BeltPath}\r\n     */\r\n    deleteEntityOnPathSplitIntoTwo(entity) {\r\n        DEBUG && logger.log(\"Splitting path at entity\", entity.components.StaticMapEntity.origin);\r\n\r\n        // First, find where the current path ends\r\n        const beltComp = entity.components.Belt;\r\n        beltComp.assignedPath = null;\r\n\r\n        const entityLength = beltComp.getEffectiveLengthTiles();\r\n        assert(this.entityPath.indexOf(entity) >= 0, \"Entity not contained for split\");\r\n        assert(this.entityPath.indexOf(entity) !== 0, \"Entity is first\");\r\n        assert(this.entityPath.indexOf(entity) !== this.entityPath.length - 1, \"Entity is last\");\r\n\r\n        let firstPathEntityCount = 0;\r\n        let firstPathLength = 0;\r\n        let firstPathEndEntity = null;\r\n\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            const otherEntity = this.entityPath[i];\r\n            if (otherEntity === entity) {\r\n                DEBUG && logger.log(\"Found entity at\", i, \"of length\", firstPathLength);\r\n                break;\r\n            }\r\n\r\n            ++firstPathEntityCount;\r\n            firstPathEndEntity = otherEntity;\r\n            firstPathLength += otherEntity.components.Belt.getEffectiveLengthTiles();\r\n        }\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"First path ends at\",\r\n                firstPathLength,\r\n                \"and entity\",\r\n                firstPathEndEntity.components.StaticMapEntity.origin,\r\n                \"and has\",\r\n                firstPathEntityCount,\r\n                \"entities\"\r\n            );\r\n\r\n        // Compute length of second path\r\n        const secondPathLength = this.totalLength - firstPathLength - entityLength;\r\n        const secondPathStart = firstPathLength + entityLength;\r\n        const secondEntities = this.entityPath.splice(firstPathEntityCount + 1);\r\n        DEBUG &&\r\n            logger.log(\r\n                \"Second path starts at\",\r\n                secondPathStart,\r\n                \"and has a length of \",\r\n                secondPathLength,\r\n                \"with\",\r\n                secondEntities.length,\r\n                \"entities\"\r\n            );\r\n\r\n        // Remove the last item\r\n        this.entityPath.pop();\r\n\r\n        DEBUG && logger.log(\"Splitting\", this.items.length, \"items\");\r\n        DEBUG &&\r\n            logger.log(\r\n                \"Old items are\",\r\n                this.items.map(i => i[_nextDistance])\r\n            );\r\n\r\n        // Create second path\r\n        const secondPath = new BeltPath(this.root, secondEntities);\r\n\r\n        // Remove all items which are no longer relevant and transfer them to the second path\r\n        let itemPos = this.spacingToFirstItem;\r\n        for (let i = 0; i < this.items.length; ++i) {\r\n            const item = this.items[i];\r\n            const distanceToNext = item[_nextDistance];\r\n\r\n            DEBUG && logger.log(\"  Checking item at\", itemPos, \"with distance of\", distanceToNext, \"to next\");\r\n\r\n            // Check if this item is past the first path\r\n            if (itemPos >= firstPathLength) {\r\n                // Remove it from the first path\r\n                this.items.splice(i, 1);\r\n                i -= 1;\r\n                DEBUG &&\r\n                    logger.log(\"     Removed item from first path since its no longer contained @\", itemPos);\r\n\r\n                // Check if its on the second path (otherwise its on the removed belt and simply lost)\r\n                if (itemPos >= secondPathStart) {\r\n                    // Put item on second path\r\n                    secondPath.items.push([distanceToNext, item[_item]]);\r\n                    DEBUG &&\r\n                        logger.log(\r\n                            \"     Put item to second path @\",\r\n                            itemPos,\r\n                            \"with distance to next =\",\r\n                            distanceToNext\r\n                        );\r\n\r\n                    // If it was the first item, adjust the distance to the first item\r\n                    if (secondPath.items.length === 1) {\r\n                        DEBUG && logger.log(\"       Sinc it was the first, set sapcing of first to\", itemPos);\r\n                        secondPath.spacingToFirstItem = itemPos - secondPathStart;\r\n                    }\r\n                } else {\r\n                    DEBUG && logger.log(\"    Item was on the removed belt, so its gone - forever!\");\r\n                }\r\n            } else {\r\n                // Seems this item is on the first path (so all good), so just make sure it doesn't\r\n                // have a nextDistance which is bigger than the total path length\r\n                const clampedDistanceToNext = Math.min(itemPos + distanceToNext, firstPathLength) - itemPos;\r\n                if (clampedDistanceToNext < distanceToNext) {\r\n                    DEBUG &&\r\n                        logger.log(\r\n                            \"Correcting next distance (first path) from\",\r\n                            distanceToNext,\r\n                            \"to\",\r\n                            clampedDistanceToNext\r\n                        );\r\n                    item[_nextDistance] = clampedDistanceToNext;\r\n                }\r\n            }\r\n\r\n            // Advance items\r\n            itemPos += distanceToNext;\r\n        }\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"New items are\",\r\n                this.items.map(i => i[_nextDistance])\r\n            );\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"And second path items are\",\r\n                secondPath.items.map(i => i[_nextDistance])\r\n            );\r\n\r\n        // Adjust our total length\r\n        this.totalLength = firstPathLength;\r\n\r\n        // Make sure that if we are empty, we set our first distance properly\r\n        if (this.items.length === 0) {\r\n            this.spacingToFirstItem = this.totalLength;\r\n        }\r\n\r\n        this.onPathChanged();\r\n        secondPath.onPathChanged();\r\n\r\n        // Update bounds\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"split-two-first\");\r\n            secondPath.debug_checkIntegrity(\"split-two-second\");\r\n        }\r\n\r\n        return secondPath;\r\n    }\r\n\r\n    /**\r\n     * Deletes the last entity\r\n     * @param {Entity} entity\r\n     */\r\n    deleteEntityOnEnd(entity) {\r\n        assert(\r\n            this.entityPath[this.entityPath.length - 1] === entity,\r\n            \"Not actually the last entity (instead \" + this.entityPath.indexOf(entity) + \")\"\r\n        );\r\n\r\n        // Ok, first remove the entity\r\n        const beltComp = entity.components.Belt;\r\n        const beltLength = beltComp.getEffectiveLengthTiles();\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"Deleting last entity on path with length\",\r\n                this.entityPath.length,\r\n                \"(reducing\",\r\n                this.totalLength,\r\n                \" by\",\r\n                beltLength,\r\n                \")\"\r\n            );\r\n        this.totalLength -= beltLength;\r\n        this.entityPath.pop();\r\n        this.onPathChanged();\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"  New path has length of\",\r\n                this.totalLength,\r\n                \"with\",\r\n                this.entityPath.length,\r\n                \"entities\"\r\n            );\r\n\r\n        // This is just for sanity\r\n        beltComp.assignedPath = null;\r\n\r\n        // Clean up items\r\n        if (this.items.length === 0) {\r\n            // Simple case with no items, just update the first item spacing\r\n            this.spacingToFirstItem = this.totalLength;\r\n        } else {\r\n            // Ok, make sure we simply drop all items which are no longer contained\r\n            let itemOffset = this.spacingToFirstItem;\r\n            let lastItemOffset = itemOffset;\r\n\r\n            DEBUG && logger.log(\"  Adjusting\", this.items.length, \"items\");\r\n\r\n            for (let i = 0; i < this.items.length; ++i) {\r\n                const item = this.items[i];\r\n\r\n                // Get rid of items past this path\r\n                if (itemOffset >= this.totalLength) {\r\n                    DEBUG && logger.log(\"Dropping item (current index=\", i, \")\");\r\n                    this.items.splice(i, 1);\r\n                    i -= 1;\r\n                    continue;\r\n                }\r\n\r\n                DEBUG && logger.log(\"Item\", i, \"is at\", itemOffset, \"with next offset\", item[_nextDistance]);\r\n                lastItemOffset = itemOffset;\r\n                itemOffset += item[_nextDistance];\r\n            }\r\n\r\n            // If we still have an item, make sure the last item matches\r\n            if (this.items.length > 0) {\r\n                // We can easily compute the next distance since we know where the last item is now\r\n                const lastDistance = this.totalLength - lastItemOffset;\r\n                assert(\r\n                    lastDistance >= 0.0,\r\n                    \"Last item distance mismatch: \" +\r\n                        lastDistance +\r\n                        \" -> Total length was \" +\r\n                        this.totalLength +\r\n                        \" and lastItemOffset was \" +\r\n                        lastItemOffset\r\n                );\r\n\r\n                DEBUG &&\r\n                    logger.log(\r\n                        \"Adjusted distance of last item: it is at\",\r\n                        lastItemOffset,\r\n                        \"so it has a distance of\",\r\n                        lastDistance,\r\n                        \"to the end (\",\r\n                        this.totalLength,\r\n                        \")\"\r\n                    );\r\n                this.items[this.items.length - 1][_nextDistance] = lastDistance;\r\n            } else {\r\n                DEBUG && logger.log(\"  Removed all items so we'll update spacing to total length\");\r\n\r\n                // We removed all items so update our spacing\r\n                this.spacingToFirstItem = this.totalLength;\r\n            }\r\n        }\r\n\r\n        // Update bounds\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"delete-on-end\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes the entity of the start of the path\r\n     * @see deleteEntityOnEnd\r\n     * @param {Entity} entity\r\n     */\r\n    deleteEntityOnStart(entity) {\r\n        assert(\r\n            entity === this.entityPath[0],\r\n            \"Not actually the start entity (instead \" + this.entityPath.indexOf(entity) + \")\"\r\n        );\r\n\r\n        // Ok, first remove the entity\r\n        const beltComp = entity.components.Belt;\r\n        const beltLength = beltComp.getEffectiveLengthTiles();\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"Deleting first entity on path with length\",\r\n                this.entityPath.length,\r\n                \"(reducing\",\r\n                this.totalLength,\r\n                \" by\",\r\n                beltLength,\r\n                \")\"\r\n            );\r\n        this.totalLength -= beltLength;\r\n        this.entityPath.shift();\r\n        this.onPathChanged();\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"  New path has length of\",\r\n                this.totalLength,\r\n                \"with\",\r\n                this.entityPath.length,\r\n                \"entities\"\r\n            );\r\n\r\n        // This is just for sanity\r\n        beltComp.assignedPath = null;\r\n\r\n        // Clean up items\r\n        if (this.items.length === 0) {\r\n            // Simple case with no items, just update the first item spacing\r\n            this.spacingToFirstItem = this.totalLength;\r\n        } else {\r\n            // Simple case, we had no item on the beginning -> all good\r\n            if (this.spacingToFirstItem >= beltLength) {\r\n                DEBUG &&\r\n                    logger.log(\r\n                        \"  No item on the first place, so we can just adjust the spacing (spacing=\",\r\n                        this.spacingToFirstItem,\r\n                        \") removed =\",\r\n                        beltLength\r\n                    );\r\n                this.spacingToFirstItem -= beltLength;\r\n            } else {\r\n                // Welp, okay we need to drop all items which are < beltLength and adjust\r\n                // the other item offsets as well\r\n\r\n                DEBUG &&\r\n                    logger.log(\r\n                        \"  We have at least one item in the beginning, drop those and adjust spacing (first item @\",\r\n                        this.spacingToFirstItem,\r\n                        \") since we removed\",\r\n                        beltLength,\r\n                        \"length from path\"\r\n                    );\r\n                DEBUG &&\r\n                    logger.log(\r\n                        \"    Items:\",\r\n                        this.items.map(i => i[_nextDistance])\r\n                    );\r\n\r\n                // Find offset to first item\r\n                let itemOffset = this.spacingToFirstItem;\r\n                for (let i = 0; i < this.items.length; ++i) {\r\n                    const item = this.items[i];\r\n                    if (itemOffset <= beltLength) {\r\n                        DEBUG &&\r\n                            logger.log(\r\n                                \"  -> Dropping item with index\",\r\n                                i,\r\n                                \"at\",\r\n                                itemOffset,\r\n                                \"since it was on the removed belt\"\r\n                            );\r\n                        // This item must be dropped\r\n                        this.items.splice(i, 1);\r\n                        i -= 1;\r\n                        itemOffset += item[_nextDistance];\r\n                        continue;\r\n                    } else {\r\n                        // This item can be kept, thus its the first we know\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (this.items.length > 0) {\r\n                    DEBUG &&\r\n                        logger.log(\r\n                            \"  Offset of first non-dropped item was at:\",\r\n                            itemOffset,\r\n                            \"-> setting spacing to it (total length=\",\r\n                            this.totalLength,\r\n                            \")\"\r\n                        );\r\n\r\n                    this.spacingToFirstItem = itemOffset - beltLength;\r\n                    assert(\r\n                        this.spacingToFirstItem >= 0.0,\r\n                        \"Invalid spacing after delete on start: \" + this.spacingToFirstItem\r\n                    );\r\n                } else {\r\n                    DEBUG && logger.log(\"  We dropped all items, simply set spacing to total length\");\r\n                    // We dropped all items, simple one\r\n                    this.spacingToFirstItem = this.totalLength;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Update bounds\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"delete-on-start\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Extends the path by the given other path\r\n     * @param {BeltPath} otherPath\r\n     */\r\n    extendByPath(otherPath) {\r\n        assert(otherPath !== this, \"Circular path dependency\");\r\n\r\n        const entities = otherPath.entityPath;\r\n        DEBUG && logger.log(\"Extending path by other path, starting to add entities\");\r\n\r\n        const oldLength = this.totalLength;\r\n\r\n        DEBUG && logger.log(\"  Adding\", entities.length, \"new entities, current length =\", this.totalLength);\r\n\r\n        // First, append entities\r\n        for (let i = 0; i < entities.length; ++i) {\r\n            const entity = entities[i];\r\n            const beltComp = entity.components.Belt;\r\n\r\n            // Add to path and update references\r\n            this.entityPath.push(entity);\r\n            beltComp.assignedPath = this;\r\n\r\n            // Update our length\r\n            const additionalLength = beltComp.getEffectiveLengthTiles();\r\n            this.totalLength += additionalLength;\r\n        }\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"  Path is now\",\r\n                this.entityPath.length,\r\n                \"entities and has a length of\",\r\n                this.totalLength\r\n            );\r\n\r\n        // Now, update the distance of our last item\r\n        if (this.items.length !== 0) {\r\n            const lastItem = this.items[this.items.length - 1];\r\n            lastItem[_nextDistance] += otherPath.spacingToFirstItem;\r\n            DEBUG &&\r\n                logger.log(\"  Add distance to last item, effectively being\", lastItem[_nextDistance], \"now\");\r\n        } else {\r\n            // Seems we have no items, update our first item distance\r\n            this.spacingToFirstItem = oldLength + otherPath.spacingToFirstItem;\r\n            DEBUG &&\r\n                logger.log(\r\n                    \"  We had no items, so our new spacing to first is old length (\",\r\n                    oldLength,\r\n                    \") plus others spacing to first (\",\r\n                    otherPath.spacingToFirstItem,\r\n                    \") =\",\r\n                    this.spacingToFirstItem\r\n                );\r\n        }\r\n\r\n        DEBUG && logger.log(\"  Pushing\", otherPath.items.length, \"items from other path\");\r\n\r\n        // Aaand push the other paths items\r\n        for (let i = 0; i < otherPath.items.length; ++i) {\r\n            const item = otherPath.items[i];\r\n            this.items.push([item[_nextDistance], item[_item]]);\r\n        }\r\n\r\n        // Update bounds\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        this.onPathChanged();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"extend-by-path\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Computes the total length of the path\r\n     * @returns {number}\r\n     */\r\n    computeTotalLength() {\r\n        let length = 0;\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            const entity = this.entityPath[i];\r\n            length += entity.components.Belt.getEffectiveLengthTiles();\r\n        }\r\n        return length;\r\n    }\r\n\r\n    /**\r\n     * Performs one tick\r\n     */\r\n    update() {\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"pre-update\");\r\n        }\r\n\r\n        // Divide by item spacing on belts since we use throughput and not speed\r\n        let beltSpeed =\r\n            this.root.hubGoals.getBeltBaseSpeed() *\r\n            this.root.dynamicTickrate.deltaSeconds *\r\n            globalConfig.itemSpacingOnBelts;\r\n\r\n        if (G_IS_DEV && globalConfig.debug.instantBelts) {\r\n            beltSpeed *= 100;\r\n        }\r\n\r\n        // Store whether this is the first item we processed, so premature\r\n        // item ejection is available\r\n        let isFirstItemProcessed = true;\r\n\r\n        // Store how much velocity (strictly its distance, not velocity) we have to distribute over all items\r\n        let remainingVelocity = beltSpeed;\r\n\r\n        // Store the last item we processed, so we can skip clashed ones\r\n        let lastItemProcessed;\r\n\r\n        for (lastItemProcessed = this.items.length - 1; lastItemProcessed >= 0; --lastItemProcessed) {\r\n            const nextDistanceAndItem = this.items[lastItemProcessed];\r\n\r\n            // Compute how much spacing we need at least\r\n            const minimumSpacing =\r\n                lastItemProcessed === this.items.length - 1 ? 0 : globalConfig.itemSpacingOnBelts;\r\n\r\n            // Compute how much we can advance\r\n            const clampedProgress = Math.max(\r\n                0,\r\n                Math.min(remainingVelocity, nextDistanceAndItem[_nextDistance] - minimumSpacing)\r\n            );\r\n\r\n            // Reduce our velocity by the amount we consumed\r\n            remainingVelocity -= clampedProgress;\r\n\r\n            // Reduce the spacing\r\n            nextDistanceAndItem[_nextDistance] -= clampedProgress;\r\n\r\n            // Advance all items behind by the progress we made\r\n            this.spacingToFirstItem += clampedProgress;\r\n\r\n            // If the last item can be ejected, eject it and reduce the spacing, because otherwise\r\n            // we lose velocity\r\n            if (isFirstItemProcessed && nextDistanceAndItem[_nextDistance] < 1e-7) {\r\n                // Store how much velocity we \"lost\" because we bumped the item to the end of the\r\n                // belt but couldn't move it any farther. We need this to tell the item acceptor\r\n                // animation to start a tad later, so everything matches up. Yes I'm a perfectionist.\r\n                const excessVelocity = beltSpeed - clampedProgress;\r\n\r\n                // Try to directly get rid of the item\r\n                if (this.tryHandOverItem(nextDistanceAndItem[_item], excessVelocity)) {\r\n                    this.items.pop();\r\n\r\n                    const itemBehind = this.items[lastItemProcessed - 1];\r\n                    if (itemBehind && this.numCompressedItemsAfterFirstItem > 0) {\r\n                        // So, with the next tick we will skip this item, but it actually has the potential\r\n                        // to process farther -> If we don't advance here, we loose a tiny bit of progress\r\n                        // every tick which causes the belt to be slower than it actually is.\r\n                        // Also see #999\r\n                        const fixupProgress = Math.max(\r\n                            0,\r\n                            Math.min(remainingVelocity, itemBehind[_nextDistance])\r\n                        );\r\n\r\n                        // See above\r\n                        itemBehind[_nextDistance] -= fixupProgress;\r\n                        remainingVelocity -= fixupProgress;\r\n                        this.spacingToFirstItem += fixupProgress;\r\n                    }\r\n\r\n                    // Reduce the number of compressed items since the first item no longer exists\r\n                    this.numCompressedItemsAfterFirstItem = Math.max(\r\n                        0,\r\n                        this.numCompressedItemsAfterFirstItem - 1\r\n                    );\r\n                }\r\n            }\r\n\r\n            if (isFirstItemProcessed) {\r\n                // Skip N null items after first items\r\n                lastItemProcessed -= this.numCompressedItemsAfterFirstItem;\r\n            }\r\n\r\n            isFirstItemProcessed = false;\r\n            if (remainingVelocity < 1e-7) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Compute compressed item count\r\n        this.numCompressedItemsAfterFirstItem = Math.max(\r\n            0,\r\n            this.numCompressedItemsAfterFirstItem,\r\n            this.items.length - 2 - lastItemProcessed\r\n        );\r\n\r\n        // Check if we have an item which is ready to be emitted\r\n        const lastItem = this.items[this.items.length - 1];\r\n        if (lastItem && lastItem[_nextDistance] === 0 && this.acceptorTarget) {\r\n            if (this.tryHandOverItem(lastItem[_item])) {\r\n                this.items.pop();\r\n                this.numCompressedItemsAfterFirstItem = Math.max(\r\n                    0,\r\n                    this.numCompressedItemsAfterFirstItem - 1\r\n                );\r\n            }\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"post-update\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tries to hand over the item to the end entity\r\n     * @param {BaseItem} item\r\n     */\r\n    tryHandOverItem(item, remainingProgress = 0.0) {\r\n        if (!this.acceptorTarget) {\r\n            return;\r\n        }\r\n\r\n        const targetAcceptorComp = this.acceptorTarget.entity.components.ItemAcceptor;\r\n\r\n        // Check if the acceptor has a filter for example\r\n        if (targetAcceptorComp && !targetAcceptorComp.canAcceptItem(this.acceptorTarget.slot, item)) {\r\n            // Well, this item is not accepted\r\n            return false;\r\n        }\r\n\r\n        // Try to pass over\r\n        if (\r\n            this.root.systemMgr.systems.itemEjector.tryPassOverItem(\r\n                item,\r\n                this.acceptorTarget.entity,\r\n                this.acceptorTarget.slot\r\n            )\r\n        ) {\r\n            // Trigger animation on the acceptor comp\r\n            const targetAcceptorComp = this.acceptorTarget.entity.components.ItemAcceptor;\r\n            if (targetAcceptorComp) {\r\n                if (!this.root.app.settings.getAllSettings().simplifiedBelts) {\r\n                    targetAcceptorComp.onItemAccepted(\r\n                        this.acceptorTarget.slot,\r\n                        this.acceptorTarget.direction,\r\n                        item,\r\n                        remainingProgress\r\n                    );\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Computes a world space position from the given progress\r\n     * @param {number} progress\r\n     * @returns {Vector}\r\n     */\r\n    computePositionFromProgress(progress) {\r\n        let currentLength = 0;\r\n\r\n        // floating point issues ..\r\n        assert(progress <= this.totalLength + 0.02, \"Progress too big: \" + progress);\r\n\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            const beltComp = this.entityPath[i].components.Belt;\r\n            const localLength = beltComp.getEffectiveLengthTiles();\r\n\r\n            if (currentLength + localLength >= progress || i === this.entityPath.length - 1) {\r\n                // Min required here due to floating point issues\r\n                const localProgress = Math.min(1.0, progress - currentLength);\r\n\r\n                assert(localProgress >= 0.0, \"Invalid local progress: \" + localProgress);\r\n                const localSpace = beltComp.transformBeltToLocalSpace(localProgress);\r\n                return this.entityPath[i].components.StaticMapEntity.localTileToWorld(localSpace);\r\n            }\r\n            currentLength += localLength;\r\n        }\r\n\r\n        assert(false, \"invalid progress: \" + progress + \" (max: \" + this.totalLength + \")\");\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawDebug(parameters) {\r\n        if (!parameters.visibleRect.containsRect(this.worldBounds)) {\r\n            return;\r\n        }\r\n\r\n        parameters.context.fillStyle = \"#d79a25\";\r\n        parameters.context.strokeStyle = \"#d79a25\";\r\n        parameters.context.beginPath();\r\n\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            const entity = this.entityPath[i];\r\n            const pos = entity.components.StaticMapEntity;\r\n            const worldPos = pos.origin.toWorldSpaceCenterOfTile();\r\n\r\n            if (i === 0) {\r\n                parameters.context.moveTo(worldPos.x, worldPos.y);\r\n            } else {\r\n                parameters.context.lineTo(worldPos.x, worldPos.y);\r\n            }\r\n        }\r\n        parameters.context.stroke();\r\n\r\n        // Items\r\n        let progress = this.spacingToFirstItem;\r\n        for (let i = 0; i < this.items.length; ++i) {\r\n            const nextDistanceAndItem = this.items[i];\r\n            const worldPos = this.computePositionFromProgress(progress).toWorldSpaceCenterOfTile();\r\n            parameters.context.fillStyle = \"#268e4d\";\r\n            parameters.context.beginRoundedRect(worldPos.x - 5, worldPos.y - 5, 10, 10, 3);\r\n            parameters.context.fill();\r\n            parameters.context.font = \"6px GameFont\";\r\n            parameters.context.fillStyle = \"#111\";\r\n            parameters.context.fillText(\r\n                \"\" + round4Digits(nextDistanceAndItem[_nextDistance]),\r\n                worldPos.x + 5,\r\n                worldPos.y + 2\r\n            );\r\n            progress += nextDistanceAndItem[_nextDistance];\r\n\r\n            if (this.items.length - 1 - this.numCompressedItemsAfterFirstItem === i) {\r\n                parameters.context.fillStyle = \"red\";\r\n                parameters.context.fillRect(worldPos.x + 5, worldPos.y, 20, 3);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            const entity = this.entityPath[i];\r\n            parameters.context.fillStyle = \"#d79a25\";\r\n            const pos = entity.components.StaticMapEntity;\r\n            const worldPos = pos.origin.toWorldSpaceCenterOfTile();\r\n            parameters.context.beginCircle(worldPos.x, worldPos.y, i === 0 ? 5 : 3);\r\n            parameters.context.fill();\r\n        }\r\n\r\n        for (let progress = 0; progress <= this.totalLength + 0.01; progress += 0.2) {\r\n            const worldPos = this.computePositionFromProgress(progress).toWorldSpaceCenterOfTile();\r\n            parameters.context.fillStyle = \"red\";\r\n            parameters.context.beginCircle(worldPos.x, worldPos.y, 1);\r\n            parameters.context.fill();\r\n        }\r\n\r\n        const firstItemIndicator = this.computePositionFromProgress(\r\n            this.spacingToFirstItem\r\n        ).toWorldSpaceCenterOfTile();\r\n        parameters.context.fillStyle = \"purple\";\r\n        parameters.context.fillRect(firstItemIndicator.x - 3, firstItemIndicator.y - 1, 6, 2);\r\n    }\r\n\r\n    /**\r\n     * Checks if this belt path should render simplified\r\n     */\r\n    checkIsPotatoMode() {\r\n        // POTATO Mode: Only show items when belt is hovered\r\n        if (!this.root.app.settings.getAllSettings().simplifiedBelts) {\r\n            return false;\r\n        }\r\n\r\n        if (this.root.currentLayer !== \"regular\") {\r\n            // Not in regular layer\r\n            return true;\r\n        }\r\n\r\n        const mousePos = this.root.app.mousePosition;\r\n        if (!mousePos) {\r\n            // Mouse not registered\r\n            return true;\r\n        }\r\n\r\n        const tile = this.root.camera.screenToWorld(mousePos).toTileSpace();\r\n        const contents = this.root.map.getLayerContentXY(tile.x, tile.y, \"regular\");\r\n        if (!contents || !contents.components.Belt) {\r\n            // Nothing below\r\n            return true;\r\n        }\r\n\r\n        if (contents.components.Belt.assignedPath !== this) {\r\n            // Not this path\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Draws the path\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        if (!parameters.visibleRect.containsRect(this.worldBounds)) {\r\n            return;\r\n        }\r\n\r\n        if (this.items.length === 0) {\r\n            // Early out\r\n            return;\r\n        }\r\n\r\n        if (this.checkIsPotatoMode()) {\r\n            const firstItem = this.items[0];\r\n            if (this.entityPath.length > 1 && firstItem) {\r\n                const medianBeltIndex = clamp(\r\n                    Math.round(this.entityPath.length / 2 - 1),\r\n                    0,\r\n                    this.entityPath.length - 1\r\n                );\r\n                const medianBelt = this.entityPath[medianBeltIndex];\r\n                const beltComp = medianBelt.components.Belt;\r\n                const staticComp = medianBelt.components.StaticMapEntity;\r\n                const centerPosLocal = beltComp.transformBeltToLocalSpace(\r\n                    this.entityPath.length % 2 === 0 ? beltComp.getEffectiveLengthTiles() : 0.5\r\n                );\r\n                const centerPos = staticComp.localTileToWorld(centerPosLocal).toWorldSpaceCenterOfTile();\r\n\r\n                parameters.context.globalAlpha = 0.5;\r\n                firstItem[_item].drawItemCenteredClipped(centerPos.x, centerPos.y, parameters);\r\n                parameters.context.globalAlpha = 1;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        let currentItemPos = this.spacingToFirstItem;\r\n        let currentItemIndex = 0;\r\n\r\n        let trackPos = 0.0;\r\n\r\n        // Iterate whole track and check items\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            const entity = this.entityPath[i];\r\n            const beltComp = entity.components.Belt;\r\n            const beltLength = beltComp.getEffectiveLengthTiles();\r\n\r\n            // Check if the current items are on the belt\r\n            while (trackPos + beltLength >= currentItemPos - 1e-5) {\r\n                // It's on the belt, render it now\r\n                const staticComp = entity.components.StaticMapEntity;\r\n                assert(\r\n                    currentItemPos - trackPos >= 0,\r\n                    \"invalid track pos: \" + currentItemPos + \" vs \" + trackPos + \" (l  =\" + beltLength + \")\"\r\n                );\r\n\r\n                const localPos = beltComp.transformBeltToLocalSpace(currentItemPos - trackPos);\r\n                const worldPos = staticComp.localTileToWorld(localPos).toWorldSpaceCenterOfTile();\r\n\r\n                const distanceAndItem = this.items[currentItemIndex];\r\n\r\n                distanceAndItem[_item].drawItemCenteredClipped(\r\n                    worldPos.x,\r\n                    worldPos.y,\r\n                    parameters,\r\n                    globalConfig.defaultItemDiameter\r\n                );\r\n\r\n                // Check for the next item\r\n                currentItemPos += distanceAndItem[_nextDistance];\r\n                ++currentItemIndex;\r\n\r\n                if (currentItemIndex >= this.items.length) {\r\n                    // We rendered all items\r\n                    return;\r\n                }\r\n            }\r\n\r\n            trackPos += beltLength;\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/belt_path.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 920,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/belt_path.js",
    "static": true,
    "longname": "js/game/belt_path.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/belt_path.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 921,
    "kind": "variable",
    "name": "_nextDistance",
    "memberof": "js/game/belt_path.js",
    "static": true,
    "longname": "js/game/belt_path.js~_nextDistance",
    "access": "private",
    "export": false,
    "importPath": "shapez.io/js/game/belt_path.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 922,
    "kind": "variable",
    "name": "_item",
    "memberof": "js/game/belt_path.js",
    "static": true,
    "longname": "js/game/belt_path.js~_item",
    "access": "private",
    "export": false,
    "importPath": "shapez.io/js/game/belt_path.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 923,
    "kind": "variable",
    "name": "DEBUG",
    "memberof": "js/game/belt_path.js",
    "static": true,
    "longname": "js/game/belt_path.js~DEBUG",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/belt_path.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 924,
    "kind": "class",
    "name": "BeltPath",
    "memberof": "js/game/belt_path.js",
    "static": true,
    "longname": "js/game/belt_path.js~BeltPath",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/belt_path.js",
    "importStyle": "{BeltPath}",
    "description": "Stores a path of belts, used for optimizing performance",
    "lineNumber": 24,
    "interface": false,
    "extends": [
      "js/savegame/serialization.js~BasicSerializableObject"
    ]
  },
  {
    "__docId__": 925,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/belt_path.js~BeltPath.getId",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 926,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/belt_path.js~BeltPath.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"entityPath\": *, \"items\": *, \"spacingToFirstItem\": *}"
      ]
    }
  },
  {
    "__docId__": 927,
    "kind": "method",
    "name": "fromSerialized",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/belt_path.js~BeltPath.fromSerialized",
    "access": "public",
    "description": "Creates a path from a serialized object",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BeltPath|string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BeltPath",
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 928,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<Entity>"
        ],
        "spread": false,
        "optional": false,
        "name": "entityPath",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 929,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/belt_path.js~BeltPath",
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#root",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 930,
    "kind": "member",
    "name": "entityPath",
    "memberof": "js/game/belt_path.js~BeltPath",
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#entityPath",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 931,
    "kind": "member",
    "name": "items",
    "memberof": "js/game/belt_path.js~BeltPath",
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#items",
    "access": "public",
    "description": "Stores the items sorted, and their distance to the previous item (or start)\nLayout: [distanceToNext, item]",
    "lineNumber": 76,
    "type": {
      "nullable": null,
      "types": [
        "Array<[number, BaseItem]>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 932,
    "kind": "method",
    "name": "init",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#init",
    "access": "public",
    "description": "Initializes the path by computing the properties which are not saved",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "computeSpacing",
        "description": "Whether to also compute the spacing"
      }
    ],
    "return": null
  },
  {
    "__docId__": 933,
    "kind": "member",
    "name": "totalLength",
    "memberof": "js/game/belt_path.js~BeltPath",
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#totalLength",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 934,
    "kind": "member",
    "name": "spacingToFirstItem",
    "memberof": "js/game/belt_path.js~BeltPath",
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#spacingToFirstItem",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 935,
    "kind": "member",
    "name": "worldBounds",
    "memberof": "js/game/belt_path.js~BeltPath",
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#worldBounds",
    "access": "public",
    "description": "Current bounds of this path",
    "lineNumber": 105,
    "type": {
      "nullable": null,
      "types": [
        "Rectangle"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 936,
    "kind": "method",
    "name": "canAcceptItem",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#canAcceptItem",
    "access": "public",
    "description": "Returns whether this path can accept a new item",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 937,
    "kind": "method",
    "name": "tryAcceptItem",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#tryAcceptItem",
    "access": "public",
    "description": "Tries to accept the item",
    "lineNumber": 125,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 939,
    "kind": "method",
    "name": "findItemAtTile",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#findItemAtTile",
    "access": "public",
    "description": "SLOW / Tries to find the item closest to the given tile",
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "tile",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 940,
    "kind": "method",
    "name": "computeBounds",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#computeBounds",
    "access": "public",
    "description": "Computes the tile bounds of the path",
    "lineNumber": 163,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Rectangle}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Rectangle"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 941,
    "kind": "method",
    "name": "onPathChanged",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#onPathChanged",
    "access": "public",
    "description": "Recomputes cache variables once the path was changed",
    "lineNumber": 176,
    "params": [],
    "return": null
  },
  {
    "__docId__": 942,
    "kind": "member",
    "name": "acceptorTarget",
    "memberof": "js/game/belt_path.js~BeltPath",
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#acceptorTarget",
    "access": "public",
    "description": null,
    "lineNumber": 177,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 943,
    "kind": "member",
    "name": "numCompressedItemsAfterFirstItem",
    "memberof": "js/game/belt_path.js~BeltPath",
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#numCompressedItemsAfterFirstItem",
    "access": "public",
    "description": "How many items past the first item are compressed",
    "lineNumber": 182,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 944,
    "kind": "method",
    "name": "onSurroundingsChanged",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#onSurroundingsChanged",
    "access": "public",
    "description": "Called by the belt system when the surroundings changed",
    "lineNumber": 188,
    "params": [],
    "return": null
  },
  {
    "__docId__": 945,
    "kind": "method",
    "name": "computeAcceptingEntityAndSlot",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#computeAcceptingEntityAndSlot",
    "access": "public",
    "description": "Finds the entity which accepts our items",
    "lineNumber": 197,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "debug_Silent",
        "description": "Whether debug output should be silent"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{ entity: Entity, slot: number, direction?: enumDirection }"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 946,
    "kind": "method",
    "name": "debug_failIntegrity",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#debug_failIntegrity",
    "access": "public",
    "description": "Helper to throw an error on mismatch",
    "lineNumber": 278,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "change",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "reason",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 947,
    "kind": "method",
    "name": "debug_checkIntegrity",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#debug_checkIntegrity",
    "access": "public",
    "description": "Checks if this path is valid",
    "lineNumber": 285,
    "params": [
      {
        "name": "currentChange",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "change",
        "defaultValue": "change"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 948,
    "kind": "method",
    "name": "extendOnEnd",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#extendOnEnd",
    "access": "public",
    "description": "Extends the belt path by the given belt",
    "lineNumber": 462,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 952,
    "kind": "method",
    "name": "extendOnBeginning",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#extendOnBeginning",
    "access": "public",
    "description": "Extends the path with the given entity on the beginning",
    "lineNumber": 508,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 956,
    "kind": "method",
    "name": "isEndEntity",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#isEndEntity",
    "access": "public",
    "description": "Returns if the given entity is the end entity of the path",
    "lineNumber": 541,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 957,
    "kind": "method",
    "name": "isStartEntity",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#isStartEntity",
    "access": "public",
    "description": "Returns if the given entity is the start entity of the path",
    "lineNumber": 550,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 958,
    "kind": "method",
    "name": "deleteEntityOnPathSplitIntoTwo",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#deleteEntityOnPathSplitIntoTwo",
    "access": "public",
    "description": "Splits this path at the given entity by removing it, and\nreturning the new secondary paht",
    "lineNumber": 560,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BeltPath}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BeltPath"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 962,
    "kind": "method",
    "name": "deleteEntityOnEnd",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#deleteEntityOnEnd",
    "access": "public",
    "description": "Deletes the last entity",
    "lineNumber": 721,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 967,
    "kind": "method",
    "name": "deleteEntityOnStart",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#deleteEntityOnStart",
    "access": "public",
    "description": "Deletes the entity of the start of the path",
    "see": [
      "deleteEntityOnEnd"
    ],
    "lineNumber": 830,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 974,
    "kind": "method",
    "name": "extendByPath",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#extendByPath",
    "access": "public",
    "description": "Extends the path by the given other path",
    "lineNumber": 958,
    "params": [
      {
        "nullable": null,
        "types": [
          "BeltPath"
        ],
        "spread": false,
        "optional": false,
        "name": "otherPath",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 978,
    "kind": "method",
    "name": "computeTotalLength",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#computeTotalLength",
    "access": "public",
    "description": "Computes the total length of the path",
    "lineNumber": 1032,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 979,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#update",
    "access": "public",
    "description": "Performs one tick",
    "lineNumber": 1044,
    "params": [],
    "return": null
  },
  {
    "__docId__": 985,
    "kind": "method",
    "name": "tryHandOverItem",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#tryHandOverItem",
    "access": "public",
    "description": "Tries to hand over the item to the end entity",
    "lineNumber": 1167,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 986,
    "kind": "method",
    "name": "computePositionFromProgress",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#computePositionFromProgress",
    "access": "public",
    "description": "Computes a world space position from the given progress",
    "lineNumber": 1212,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "progress",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 987,
    "kind": "method",
    "name": "drawDebug",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#drawDebug",
    "access": "public",
    "description": "",
    "lineNumber": 1240,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 988,
    "kind": "method",
    "name": "checkIsPotatoMode",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#checkIsPotatoMode",
    "access": "public",
    "description": "Checks if this belt path should render simplified",
    "lineNumber": 1311,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 989,
    "kind": "method",
    "name": "draw",
    "memberof": "js/game/belt_path.js~BeltPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/belt_path.js~BeltPath#draw",
    "access": "public",
    "description": "Draws the path",
    "lineNumber": 1346,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 990,
    "kind": "file",
    "name": "js/game/blueprint.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { findNiceIntegerValue } from \"../core/utils\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { Entity } from \"./entity\";\r\nimport { GameRoot } from \"./root\";\r\n\r\nexport class Blueprint {\r\n    /**\r\n     * @param {Array<Entity>} entities\r\n     */\r\n    constructor(entities) {\r\n        this.entities = entities;\r\n    }\r\n\r\n    /**\r\n     * Returns the layer of this blueprint\r\n     * @returns {Layer}\r\n     */\r\n    get layer() {\r\n        if (this.entities.length === 0) {\r\n            return \"regular\";\r\n        }\r\n        return this.entities[0].layer;\r\n    }\r\n\r\n    /**\r\n     * Creates a new blueprint from the given entity uids\r\n     * @param {GameRoot} root\r\n     * @param {Array<number>} uids\r\n     */\r\n    static fromUids(root, uids) {\r\n        const newEntities = [];\r\n\r\n        let averagePosition = new Vector();\r\n\r\n        // First, create a copy\r\n        for (let i = 0; i < uids.length; ++i) {\r\n            const entity = root.entityMgr.findByUid(uids[i]);\r\n            assert(entity, \"Entity for blueprint not found:\" + uids[i]);\r\n\r\n            const clone = entity.clone();\r\n            newEntities.push(clone);\r\n\r\n            const pos = entity.components.StaticMapEntity.getTileSpaceBounds().getCenter();\r\n            averagePosition.addInplace(pos);\r\n        }\r\n\r\n        averagePosition.divideScalarInplace(uids.length);\r\n        const blueprintOrigin = averagePosition.subScalars(0.5, 0.5).floor();\r\n\r\n        for (let i = 0; i < uids.length; ++i) {\r\n            newEntities[i].components.StaticMapEntity.origin.subInplace(blueprintOrigin);\r\n        }\r\n\r\n        // Now, make sure the origin is 0,0\r\n        return new Blueprint(newEntities);\r\n    }\r\n\r\n    /**\r\n     * Returns the cost of this blueprint in shapes\r\n     */\r\n    getCost() {\r\n        if (G_IS_DEV && globalConfig.debug.blueprintsNoCost) {\r\n            return 0;\r\n        }\r\n        return findNiceIntegerValue(4 * Math.pow(this.entities.length, 1.1));\r\n    }\r\n\r\n    /**\r\n     * Draws the blueprint at the given origin\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters, tile) {\r\n        parameters.context.globalAlpha = 0.8;\r\n        for (let i = 0; i < this.entities.length; ++i) {\r\n            const entity = this.entities[i];\r\n            const staticComp = entity.components.StaticMapEntity;\r\n            const newPos = staticComp.origin.add(tile);\r\n\r\n            const rect = staticComp.getTileSpaceBounds();\r\n            rect.moveBy(tile.x, tile.y);\r\n\r\n            if (!parameters.root.logic.checkCanPlaceEntity(entity, tile)) {\r\n                parameters.context.globalAlpha = 0.3;\r\n            } else {\r\n                parameters.context.globalAlpha = 1;\r\n            }\r\n\r\n            staticComp.drawSpriteOnBoundsClipped(parameters, staticComp.getBlueprintSprite(), 0, newPos);\r\n        }\r\n        parameters.context.globalAlpha = 1;\r\n    }\r\n\r\n    /**\r\n     * Rotates the blueprint clockwise\r\n     */\r\n    rotateCw() {\r\n        for (let i = 0; i < this.entities.length; ++i) {\r\n            const entity = this.entities[i];\r\n            const staticComp = entity.components.StaticMapEntity;\r\n\r\n            staticComp.rotation = (staticComp.rotation + 90) % 360;\r\n            staticComp.originalRotation = (staticComp.originalRotation + 90) % 360;\r\n            staticComp.origin = staticComp.origin.rotateFastMultipleOf90(90);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Rotates the blueprint counter clock wise\r\n     */\r\n    rotateCcw() {\r\n        // Well ...\r\n        for (let i = 0; i < 3; ++i) {\r\n            this.rotateCw();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the blueprint can be placed at the given tile\r\n     * @param {GameRoot} root\r\n     * @param {Vector} tile\r\n     */\r\n    canPlace(root, tile) {\r\n        let anyPlaceable = false;\r\n\r\n        for (let i = 0; i < this.entities.length; ++i) {\r\n            const entity = this.entities[i];\r\n            if (root.logic.checkCanPlaceEntity(entity, tile)) {\r\n                anyPlaceable = true;\r\n            }\r\n        }\r\n\r\n        return anyPlaceable;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    canAfford(root) {\r\n        return root.hubGoals.getShapesStoredByKey(root.gameMode.getBlueprintShapeKey()) >= this.getCost();\r\n    }\r\n\r\n    /**\r\n     * Attempts to place the blueprint at the given tile\r\n     * @param {GameRoot} root\r\n     * @param {Vector} tile\r\n     */\r\n    tryPlace(root, tile) {\r\n        return root.logic.performBulkOperation(() => {\r\n            let anyPlaced = false;\r\n            for (let i = 0; i < this.entities.length; ++i) {\r\n                const entity = this.entities[i];\r\n                if (!root.logic.checkCanPlaceEntity(entity, tile, true)) {\r\n                    continue;\r\n                }\r\n\r\n                const clone = entity.clone();\r\n                clone.components.StaticMapEntity.origin.addInplace(tile);\r\n                root.logic.freeEntityAreaBeforeBuild(clone);\r\n                root.map.placeStaticEntity(clone);\r\n                root.entityMgr.registerEntity(clone, null, true);\r\n                anyPlaced = true;\r\n            }\r\n            return anyPlaced;\r\n        });\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/blueprint.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 991,
    "kind": "class",
    "name": "Blueprint",
    "memberof": "js/game/blueprint.js",
    "static": true,
    "longname": "js/game/blueprint.js~Blueprint",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/blueprint.js",
    "importStyle": "{Blueprint}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 992,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/blueprint.js~Blueprint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/blueprint.js~Blueprint#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Entity>"
        ],
        "spread": false,
        "optional": false,
        "name": "entities",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 993,
    "kind": "member",
    "name": "entities",
    "memberof": "js/game/blueprint.js~Blueprint",
    "static": false,
    "longname": "js/game/blueprint.js~Blueprint#entities",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 994,
    "kind": "get",
    "name": "layer",
    "memberof": "js/game/blueprint.js~Blueprint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/blueprint.js~Blueprint#layer",
    "access": "public",
    "description": "Returns the layer of this blueprint",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 995,
    "kind": "method",
    "name": "fromUids",
    "memberof": "js/game/blueprint.js~Blueprint",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/blueprint.js~Blueprint.fromUids",
    "access": "public",
    "description": "Creates a new blueprint from the given entity uids",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<number>"
        ],
        "spread": false,
        "optional": false,
        "name": "uids",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 996,
    "kind": "method",
    "name": "getCost",
    "memberof": "js/game/blueprint.js~Blueprint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/blueprint.js~Blueprint#getCost",
    "access": "public",
    "description": "Returns the cost of this blueprint in shapes",
    "lineNumber": 63,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 997,
    "kind": "method",
    "name": "draw",
    "memberof": "js/game/blueprint.js~Blueprint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/blueprint.js~Blueprint#draw",
    "access": "public",
    "description": "Draws the blueprint at the given origin",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 998,
    "kind": "method",
    "name": "rotateCw",
    "memberof": "js/game/blueprint.js~Blueprint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/blueprint.js~Blueprint#rotateCw",
    "access": "public",
    "description": "Rotates the blueprint clockwise",
    "lineNumber": 98,
    "params": [],
    "return": null
  },
  {
    "__docId__": 999,
    "kind": "method",
    "name": "rotateCcw",
    "memberof": "js/game/blueprint.js~Blueprint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/blueprint.js~Blueprint#rotateCcw",
    "access": "public",
    "description": "Rotates the blueprint counter clock wise",
    "lineNumber": 112,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1000,
    "kind": "method",
    "name": "canPlace",
    "memberof": "js/game/blueprint.js~Blueprint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/blueprint.js~Blueprint#canPlace",
    "access": "public",
    "description": "Checks if the blueprint can be placed at the given tile",
    "lineNumber": 124,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "tile",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1001,
    "kind": "method",
    "name": "canAfford",
    "memberof": "js/game/blueprint.js~Blueprint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/blueprint.js~Blueprint#canAfford",
    "access": "public",
    "description": "",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1002,
    "kind": "method",
    "name": "tryPlace",
    "memberof": "js/game/blueprint.js~Blueprint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/blueprint.js~Blueprint#tryPlace",
    "access": "public",
    "description": "Attempts to place the blueprint at the given tile",
    "lineNumber": 149,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "tile",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1003,
    "kind": "file",
    "name": "js/game/buildings/analyzer.js",
    "content": "import { generateMatrixRotations } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { enumLogicGateType, LogicGateComponent } from \"../components/logic_gate\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaAnalyzerBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"analyzer\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaAnalyzerBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaAnalyzerBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaAnalyzerBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaAnalyzerBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        return MetaAnalyzerBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaAnalyzerBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaAnalyzerBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaAnalyzerBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaAnalyzerBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaAnalyzerBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaAnalyzerBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaAnalyzerBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new WiredPinsComponent({\r\n            slots: [{\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.left,\r\n                    type: enumPinSlotType.logicalEjector,\r\n                },\r\n                {\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.right,\r\n                    type: enumPinSlotType.logicalEjector,\r\n                },\r\n                {\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.bottom,\r\n                    type: enumPinSlotType.logicalAcceptor,\r\n                },\r\n            ],\r\n        })\r\n    ),\r\n\r\n    entity =>\r\n    entity.addComponent(\r\n        new LogicGateComponent({\r\n            type: enumLogicGateType.analyzer,\r\n        })\r\n    ),\r\n];\r\n\r\nMetaAnalyzerBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#555759\",\r\n};\r\n\r\nMetaAnalyzerBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_virtual_processing),\r\n};\r\n\r\nMetaAnalyzerBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([1, 1, 0, 1, 1, 1, 0, 1, 0]),\r\n};\r\n\r\nMetaAnalyzerBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaAnalyzerBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => false,\r\n};\r\n\r\nMetaAnalyzerBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"wires\",\r\n};\r\n\r\nMetaAnalyzerBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaAnalyzerBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaAnalyzerBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n};\r\n\r\nMetaAnalyzerBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.left,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.right,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.bottom,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n        ]);\r\n\r\n        entity.components.LogicGate.type = enumLogicGateType.analyzer;\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/analyzer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1004,
    "kind": "class",
    "name": "MetaAnalyzerBuilding",
    "memberof": "js/game/buildings/analyzer.js",
    "static": true,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/analyzer.js",
    "importStyle": "{MetaAnalyzerBuilding}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1005,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1006,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1007,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1008,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1009,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1010,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1011,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1012,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1013,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1014,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1015,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1016,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1017,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/analyzer.js~MetaAnalyzerBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1018,
    "kind": "file",
    "name": "js/game/buildings/balancer.js",
    "content": "import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding, defaultBuildingVariant } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { T } from \"../../translations\";\r\nimport { formatItemsPerSecond, generateMatrixRotations } from \"../../core/utils\";\r\nimport { BeltUnderlaysComponent } from \"../components/belt_underlays\";\r\n\r\nexport class MetaBalancerBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"balancer\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaBalancerBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaBalancerBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaBalancerBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaBalancerBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaBalancerBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaBalancerBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaBalancerBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaBalancerBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaBalancerBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        return MetaBalancerBuilding.additionalStatistics[variant](root);\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaBalancerBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaBalancerBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaBalancerBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemAcceptorComponent({\r\n            slots: [], // set later\r\n        })\r\n    ),\r\n\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemProcessorComponent({\r\n            inputsPerCharge: 1,\r\n            processorType: enumItemProcessorTypes.balancer,\r\n        })\r\n    ),\r\n\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemEjectorComponent({\r\n            slots: [], // set later\r\n            renderFloatingItems: false,\r\n        })\r\n    ),\r\n\r\n    entity => entity.addComponent(new BeltUnderlaysComponent({ underlays: [] })),\r\n];\r\n\r\nMetaBalancerBuilding.variants = {\r\n    merger: \"merger\",\r\n    mergerInverse: \"merger-inverse\",\r\n    splitter: \"splitter\",\r\n    splitterInverse: \"splitter-inverse\",\r\n};\r\n\r\nMetaBalancerBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => null,\r\n    [MetaBalancerBuilding.variants.merger]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 0, 1, 1, 0, 1, 0]),\r\n    [MetaBalancerBuilding.variants.mergerInverse]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 1, 1, 0, 0, 1, 0]),\r\n    [MetaBalancerBuilding.variants.splitter]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 0, 1, 1, 0, 1, 0]),\r\n    [MetaBalancerBuilding.variants.splitterInverse]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 1, 1, 0, 0, 1, 0]),\r\n};\r\n\r\nMetaBalancerBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_balancer),\r\n    [MetaBalancerBuilding.variants.merger]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_merger),\r\n    [MetaBalancerBuilding.variants.mergerInverse]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_merger),\r\n    [MetaBalancerBuilding.variants.splitter]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_splitter),\r\n    [MetaBalancerBuilding.variants.splitterInverse]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_splitter),\r\n};\r\n\r\nMetaBalancerBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(2, 1),\r\n    [MetaBalancerBuilding.variants.merger]: () => new Vector(1, 1),\r\n    [MetaBalancerBuilding.variants.mergerInverse]: () => new Vector(1, 1),\r\n    [MetaBalancerBuilding.variants.splitter]: () => new Vector(1, 1),\r\n    [MetaBalancerBuilding.variants.splitterInverse]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaBalancerBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaBalancerBuilding.variants.merger]: () => true,\r\n    [MetaBalancerBuilding.variants.mergerInverse]: () => true,\r\n    [MetaBalancerBuilding.variants.splitter]: () => true,\r\n    [MetaBalancerBuilding.variants.splitterInverse]: () => true,\r\n};\r\n\r\nMetaBalancerBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaBalancerBuilding.variants.merger]: () => true,\r\n    [MetaBalancerBuilding.variants.mergerInverse]: () => true,\r\n    [MetaBalancerBuilding.variants.splitter]: () => true,\r\n    [MetaBalancerBuilding.variants.splitterInverse]: () => true,\r\n};\r\n\r\nMetaBalancerBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => null,\r\n    [MetaBalancerBuilding.variants.merger]: () => null,\r\n    [MetaBalancerBuilding.variants.mergerInverse]: () => null,\r\n    [MetaBalancerBuilding.variants.splitter]: () => null,\r\n    [MetaBalancerBuilding.variants.splitterInverse]: () => null,\r\n};\r\n\r\nMetaBalancerBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => null,\r\n    [MetaBalancerBuilding.variants.merger]: () => null,\r\n    [MetaBalancerBuilding.variants.mergerInverse]: () => null,\r\n    [MetaBalancerBuilding.variants.splitter]: () => null,\r\n    [MetaBalancerBuilding.variants.splitterInverse]: () => null,\r\n};\r\n\r\nMetaBalancerBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n    [MetaBalancerBuilding.variants.merger]: root => \"regular\",\r\n    [MetaBalancerBuilding.variants.mergerInverse]: root => \"regular\",\r\n    [MetaBalancerBuilding.variants.splitter]: root => \"regular\",\r\n    [MetaBalancerBuilding.variants.splitterInverse]: root => \"regular\",\r\n};\r\n\r\nMetaBalancerBuilding.additionalStatistics = {\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [defaultBuildingVariant]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.balancer)),\r\n        ],\r\n    ],\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [MetaBalancerBuilding.variants.merger]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.balancer) / 2),\r\n        ],\r\n    ],\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [MetaBalancerBuilding.variants.mergerInverse]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.balancer) / 2),\r\n        ],\r\n    ],\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [MetaBalancerBuilding.variants.splitter]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.balancer) / 2),\r\n        ],\r\n    ],\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [MetaBalancerBuilding.variants.splitterInverse]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.balancer) / 2),\r\n        ],\r\n    ],\r\n};\r\n\r\nMetaBalancerBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#555759\",\r\n    [MetaBalancerBuilding.variants.merger]: () => \"#555759\",\r\n    [MetaBalancerBuilding.variants.mergerInverse]: () => \"#555759\",\r\n    [MetaBalancerBuilding.variants.splitter]: () => \"#555759\",\r\n    [MetaBalancerBuilding.variants.splitterInverse]: () => \"#555759\",\r\n};\r\n\r\nMetaBalancerBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.ItemAcceptor.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.bottom],\r\n            },\r\n            {\r\n                pos: new Vector(1, 0),\r\n                directions: [enumDirection.bottom],\r\n            },\r\n        ]);\r\n\r\n        entity.components.ItemEjector.setSlots([\r\n            { pos: new Vector(0, 0), direction: enumDirection.top },\r\n            { pos: new Vector(1, 0), direction: enumDirection.top },\r\n        ]);\r\n\r\n        entity.components.BeltUnderlays.underlays = [\r\n            { pos: new Vector(0, 0), direction: enumDirection.top },\r\n            { pos: new Vector(1, 0), direction: enumDirection.top },\r\n        ];\r\n    },\r\n\r\n    [MetaBalancerBuilding.variants.merger]: (entity, rotationVariant) => {\r\n        entity.components.ItemAcceptor.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.bottom],\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.right],\r\n            },\r\n        ]);\r\n\r\n        entity.components.ItemEjector.setSlots([{ pos: new Vector(0, 0), direction: enumDirection.top }]);\r\n\r\n        entity.components.BeltUnderlays.underlays = [{ pos: new Vector(0, 0), direction: enumDirection.top }];\r\n    },\r\n\r\n    [MetaBalancerBuilding.variants.mergerInverse]: (entity, rotationVariant) => {\r\n        entity.components.ItemAcceptor.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.bottom],\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.left],\r\n            },\r\n        ]);\r\n\r\n        entity.components.ItemEjector.setSlots([{ pos: new Vector(0, 0), direction: enumDirection.top }]);\r\n\r\n        entity.components.BeltUnderlays.underlays = [{ pos: new Vector(0, 0), direction: enumDirection.top }];\r\n    },\r\n\r\n    [MetaBalancerBuilding.variants.splitter]: (entity, rotationVariant) => {\r\n        {\r\n            entity.components.ItemAcceptor.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.bottom],\r\n            }, ]);\r\n\r\n            entity.components.ItemEjector.setSlots([{\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.top,\r\n                },\r\n                {\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.right,\r\n                },\r\n            ]);\r\n\r\n            entity.components.BeltUnderlays.underlays = [\r\n                { pos: new Vector(0, 0), direction: enumDirection.top },\r\n            ];\r\n        }\r\n    },\r\n\r\n    [MetaBalancerBuilding.variants.splitterInverse]: (entity, rotationVariant) => {\r\n        {\r\n            entity.components.ItemAcceptor.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.bottom],\r\n            }, ]);\r\n\r\n            entity.components.ItemEjector.setSlots([{\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.top,\r\n                },\r\n                {\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.left,\r\n                },\r\n            ]);\r\n\r\n            entity.components.BeltUnderlays.underlays = [\r\n                { pos: new Vector(0, 0), direction: enumDirection.top },\r\n            ];\r\n        }\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/balancer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1019,
    "kind": "class",
    "name": "MetaBalancerBuilding",
    "memberof": "js/game/buildings/balancer.js",
    "static": true,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/balancer.js",
    "importStyle": "{MetaBalancerBuilding}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1020,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1021,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1022,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1023,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1024,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1025,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1026,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1027,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1028,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1029,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1030,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1031,
    "kind": "method",
    "name": "getAdditionalStatistics",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#getAdditionalStatistics",
    "access": "public",
    "description": "",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<[string, string]>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<[string, string]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1032,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1033,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/balancer.js~MetaBalancerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/balancer.js~MetaBalancerBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1034,
    "kind": "file",
    "name": "js/game/buildings/belt.js",
    "content": "import { Loader } from \"../../core/loader\";\r\nimport { formatItemsPerSecond, generateMatrixRotations } from \"../../core/utils\";\r\nimport { enumAngleToDirection, enumDirection, Vector } from \"../../core/vector\";\r\nimport { SOUNDS } from \"../../platform/sound\";\r\nimport { T } from \"../../translations\";\r\nimport { BeltComponent } from \"../components/belt\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { THEME } from \"../theme\";\r\n\r\nexport class MetaBeltBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"belt\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaBeltBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaBeltBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaBeltBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaBeltBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaBeltBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaBeltBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        return MetaBeltBuilding.additionalStatistics[variant](root);\r\n    }\r\n\r\n    getIsReplaceable(variant) {\r\n        return MetaBeltBuilding.isReplaceable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaBeltBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaBeltBuilding.overlayMatrices[MetaBeltBuilding.variantToRotation[rotationVariant]](\r\n            entity,\r\n            rotationVariant\r\n        );\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaBeltBuilding.renderPins[variant]();\r\n    }\r\n\r\n    getPlacementSound(variant) {\r\n        return MetaBeltBuilding.placementSounds[variant]();\r\n    }\r\n\r\n    getHasDirectionLockAvailable() {\r\n        return true;\r\n    }\r\n\r\n    getStayInPlacementMode() {\r\n        return true;\r\n    }\r\n\r\n    getRotateAutomaticallyWhilePlacing() {\r\n        return true;\r\n    }\r\n\r\n    getSprite() {\r\n        return null;\r\n    }\r\n\r\n    getPreviewSprite(rotationVariant) {\r\n        switch (MetaBeltBuilding.variantToRotation[rotationVariant]) {\r\n            case enumDirection.top:\r\n                {\r\n                    return Loader.getSprite(\"sprites/buildings/belt_top.png\");\r\n                }\r\n            case enumDirection.left:\r\n                {\r\n                    return Loader.getSprite(\"sprites/buildings/belt_left.png\");\r\n                }\r\n            case enumDirection.right:\r\n                {\r\n                    return Loader.getSprite(\"sprites/buildings/belt_right.png\");\r\n                }\r\n            default:\r\n                {\r\n                    assertAlways(false, \"Invalid belt rotation variant\");\r\n                }\r\n        }\r\n    }\r\n\r\n    getBlueprintSprite(rotationVariant) {\r\n        switch (MetaBeltBuilding.variantToRotation[rotationVariant]) {\r\n            case enumDirection.top:\r\n                {\r\n                    return Loader.getSprite(\"sprites/blueprints/belt_top.png\");\r\n                }\r\n            case enumDirection.left:\r\n                {\r\n                    return Loader.getSprite(\"sprites/blueprints/belt_left.png\");\r\n                }\r\n            case enumDirection.right:\r\n                {\r\n                    return Loader.getSprite(\"sprites/blueprints/belt_right.png\");\r\n                }\r\n            default:\r\n                {\r\n                    assertAlways(false, \"Invalid belt rotation variant\");\r\n                }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaBeltBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaBeltBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n\r\n    /**\r\n     * Should compute the optimal rotation variant on the given tile\r\n     * @param {object} param0\r\n     * @param {GameRoot} param0.root\r\n     * @param {Vector} param0.tile\r\n     * @param {number} param0.rotation\r\n     * @param {string} param0.variant\r\n     * @param {Layer} param0.layer\r\n     * @return {{ rotation: number, rotationVariant: number, connectedEntities?: Array<Entity> }}\r\n     */\r\n    computeOptimalDirectionAndRotationVariantAtTile({ root, tile, rotation, variant, layer }) {\r\n        const topDirection = enumAngleToDirection[rotation];\r\n        const rightDirection = enumAngleToDirection[(rotation + 90) % 360];\r\n        const bottomDirection = enumAngleToDirection[(rotation + 180) % 360];\r\n        const leftDirection = enumAngleToDirection[(rotation + 270) % 360];\r\n\r\n        const { ejectors, acceptors } = root.logic.getEjectorsAndAcceptorsAtTile(tile);\r\n\r\n        let hasBottomEjector = false;\r\n        let hasRightEjector = false;\r\n        let hasLeftEjector = false;\r\n\r\n        let hasTopAcceptor = false;\r\n        let hasLeftAcceptor = false;\r\n        let hasRightAcceptor = false;\r\n\r\n        // Check all ejectors\r\n        for (let i = 0; i < ejectors.length; ++i) {\r\n            const ejector = ejectors[i];\r\n\r\n            if (ejector.toDirection === topDirection) {\r\n                hasBottomEjector = true;\r\n            } else if (ejector.toDirection === leftDirection) {\r\n                hasRightEjector = true;\r\n            } else if (ejector.toDirection === rightDirection) {\r\n                hasLeftEjector = true;\r\n            }\r\n        }\r\n\r\n        // Check all acceptors\r\n        for (let i = 0; i < acceptors.length; ++i) {\r\n            const acceptor = acceptors[i];\r\n            if (acceptor.fromDirection === bottomDirection) {\r\n                hasTopAcceptor = true;\r\n            } else if (acceptor.fromDirection === rightDirection) {\r\n                hasLeftAcceptor = true;\r\n            } else if (acceptor.fromDirection === leftDirection) {\r\n                hasRightAcceptor = true;\r\n            }\r\n        }\r\n\r\n        // Soo .. if there is any ejector below us we always prioritize\r\n        // this ejector\r\n        if (!hasBottomEjector) {\r\n            // When something ejects to us from the left and nothing from the right,\r\n            // do a curve from the left to the top\r\n\r\n            if (hasRightEjector && !hasLeftEjector) {\r\n                return {\r\n                    rotation: (rotation + 270) % 360,\r\n                    rotationVariant: 2,\r\n                };\r\n            }\r\n\r\n            // When something ejects to us from the right and nothing from the left,\r\n            // do a curve from the right to the top\r\n            if (hasLeftEjector && !hasRightEjector) {\r\n                return {\r\n                    rotation: (rotation + 90) % 360,\r\n                    rotationVariant: 1,\r\n                };\r\n            }\r\n        }\r\n\r\n        // When there is a top acceptor, ignore sides\r\n        // NOTICE: This makes the belt prefer side turns *way* too much!\r\n        if (!hasTopAcceptor) {\r\n            // When there is an acceptor to the right but no acceptor to the left,\r\n            // do a turn to the right\r\n            if (hasRightAcceptor && !hasLeftAcceptor) {\r\n                return {\r\n                    rotation,\r\n                    rotationVariant: 2,\r\n                };\r\n            }\r\n\r\n            // When there is an acceptor to the left but no acceptor to the right,\r\n            // do a turn to the left\r\n            if (hasLeftAcceptor && !hasRightAcceptor) {\r\n                return {\r\n                    rotation,\r\n                    rotationVariant: 1,\r\n                };\r\n            }\r\n        }\r\n\r\n        return {\r\n            rotation,\r\n            rotationVariant: 0,\r\n        };\r\n    }\r\n}\r\n\r\nMetaBeltBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new BeltComponent({\r\n            direction: enumDirection.top, // updated later\r\n        })\r\n    ),\r\n];\r\n\r\nMetaBeltBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => THEME.map.chunkOverview.beltColor,\r\n};\r\n\r\nMetaBeltBuilding.variantToRotation = [enumDirection.top, enumDirection.left, enumDirection.right];\r\n\r\nMetaBeltBuilding.overlayMatrices = {\r\n    [enumDirection.top]: (entity, rotationVariant) => generateMatrixRotations([0, 1, 0, 0, 1, 0, 0, 1, 0]),\r\n    [enumDirection.left]: (entity, rotationVariant) => generateMatrixRotations([0, 0, 0, 1, 1, 0, 0, 1, 0]),\r\n    [enumDirection.right]: (entity, rotationVariant) => generateMatrixRotations([0, 0, 0, 0, 1, 1, 0, 1, 0]),\r\n};\r\n\r\nMetaBeltBuilding.placementSounds = {\r\n    [defaultBuildingVariant]: () => SOUNDS.placeBelt,\r\n};\r\n\r\nMetaBeltBuilding.rotationVariants = [0, 1, 2];\r\n\r\nMetaBeltBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => true,\r\n};\r\n\r\nMetaBeltBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaBeltBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaBeltBuilding.isReplaceable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaBeltBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaBeltBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => null,\r\n};\r\n\r\nMetaBeltBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => null,\r\n};\r\n\r\nMetaBeltBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n};\r\n\r\nMetaBeltBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.Belt.direction = MetaBeltBuilding.variantToRotation[rotationVariant];\r\n    },\r\n};\r\n\r\nMetaBeltBuilding.additionalStatistics = {\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [defaultBuildingVariant]: root => [\r\n        [T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(root.hubGoals.getBeltBaseSpeed())],\r\n    ],\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/belt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1035,
    "kind": "class",
    "name": "MetaBeltBuilding",
    "memberof": "js/game/buildings/belt.js",
    "static": true,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/belt.js",
    "importStyle": "{MetaBeltBuilding}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1036,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1037,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1038,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1039,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1040,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1041,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1042,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1043,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1044,
    "kind": "method",
    "name": "getAdditionalStatistics",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getAdditionalStatistics",
    "access": "public",
    "description": "",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<[string, string]>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<[string, string]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1045,
    "kind": "method",
    "name": "getIsReplaceable",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getIsReplaceable",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [
      {
        "name": "variant",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1046,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1047,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1048,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1049,
    "kind": "method",
    "name": "getPlacementSound",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getPlacementSound",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "params": [
      {
        "name": "variant",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1050,
    "kind": "method",
    "name": "getHasDirectionLockAvailable",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getHasDirectionLockAvailable",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1051,
    "kind": "method",
    "name": "getStayInPlacementMode",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getStayInPlacementMode",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1052,
    "kind": "method",
    "name": "getRotateAutomaticallyWhilePlacing",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getRotateAutomaticallyWhilePlacing",
    "access": "public",
    "description": null,
    "lineNumber": 131,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1053,
    "kind": "method",
    "name": "getSprite",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getSprite",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1054,
    "kind": "method",
    "name": "getPreviewSprite",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getPreviewSprite",
    "access": "public",
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "params": [
      {
        "name": "rotationVariant",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1055,
    "kind": "method",
    "name": "getBlueprintSprite",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#getBlueprintSprite",
    "access": "public",
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "params": [
      {
        "name": "rotationVariant",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1056,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 185,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1057,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 194,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1058,
    "kind": "method",
    "name": "computeOptimalDirectionAndRotationVariantAtTile",
    "memberof": "js/game/buildings/belt.js~MetaBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/belt.js~MetaBeltBuilding#computeOptimalDirectionAndRotationVariantAtTile",
    "access": "public",
    "description": "Should compute the optimal rotation variant on the given tile",
    "lineNumber": 208,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.tile",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.layer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{ rotation: number, rotationVariant: number, connectedEntities?: Array<Entity> }"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1059,
    "kind": "file",
    "name": "js/game/buildings/comparator.js",
    "content": "import { root } from \"postcss\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { enumLogicGateType, LogicGateComponent } from \"../components/logic_gate\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaComparatorBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"comparator\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaComparatorBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaComparatorBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaComparatorBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaComparatorBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaComparatorBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaComparatorBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaComparatorBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaComparatorBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaComparatorBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaComparatorBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaComparatorBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaComparatorBuilding.setupEntityComponents = [\r\n    (entity, rotationVariant) =>\r\n    entity.addComponent(\r\n        new WiredPinsComponent({\r\n            slots: [{\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.top,\r\n                    type: enumPinSlotType.logicalEjector,\r\n                },\r\n                {\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.left,\r\n                    type: enumPinSlotType.logicalAcceptor,\r\n                },\r\n                {\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.right,\r\n                    type: enumPinSlotType.logicalAcceptor,\r\n                },\r\n            ],\r\n        })\r\n    ),\r\n    (entity, rotationVariant) =>\r\n    entity.addComponent(\r\n        new LogicGateComponent({\r\n            type: enumLogicGateType.compare,\r\n        })\r\n    ),\r\n];\r\n\r\nMetaComparatorBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: () => null,\r\n};\r\n\r\nMetaComparatorBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaComparatorBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#823cab\",\r\n};\r\n\r\nMetaComparatorBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaComparatorBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaComparatorBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => false,\r\n};\r\n\r\nMetaComparatorBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n};\r\n\r\nMetaComparatorBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_virtual_processing),\r\n};\r\n\r\nMetaComparatorBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n};\r\n\r\nMetaComparatorBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.left,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.right,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n        ]);\r\n\r\n        entity.components.LogicGate.type = enumLogicGateType.compare;\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/comparator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1060,
    "kind": "class",
    "name": "MetaComparatorBuilding",
    "memberof": "js/game/buildings/comparator.js",
    "static": true,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/comparator.js",
    "importStyle": "{MetaComparatorBuilding}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1061,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1062,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1063,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1064,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1065,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1066,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1067,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1068,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1069,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1070,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1071,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1072,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1073,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/comparator.js~MetaComparatorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/comparator.js~MetaComparatorBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1074,
    "kind": "file",
    "name": "js/game/buildings/constant_signal.js",
    "content": "import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { ConstantSignalComponent } from \"../components/constant_signal\";\r\nimport { generateMatrixRotations } from \"../../core/utils\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaConstantSignalBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"constant_signal\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaConstantSignalBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaConstantSignalBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaConstantSignalBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaConstantSignalBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaConstantSignalBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaConstantSignalBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaConstantSignalBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaConstantSignalBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaConstantSignalBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaConstantSignalBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaConstantSignalBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaConstantSignalBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new WiredPinsComponent({\r\n            slots: [{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n                type: enumPinSlotType.logicalEjector,\r\n            }, ],\r\n        })\r\n    ),\r\n    entity => entity.addComponent(new ConstantSignalComponent({})),\r\n];\r\n\r\nMetaConstantSignalBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 1, 1, 1, 1, 1, 1]),\r\n};\r\n\r\nMetaConstantSignalBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaConstantSignalBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#2b84fd\",\r\n};\r\n\r\nMetaConstantSignalBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaConstantSignalBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaConstantSignalBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => false,\r\n};\r\n\r\nMetaConstantSignalBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_constant_signal),\r\n};\r\n\r\nMetaConstantSignalBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"wires\",\r\n};\r\n\r\nMetaConstantSignalBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n};\r\n\r\nMetaConstantSignalBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n            pos: new Vector(0, 0),\r\n            direction: enumDirection.top,\r\n            type: enumPinSlotType.logicalEjector,\r\n        }, ]);\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/constant_signal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1075,
    "kind": "class",
    "name": "MetaConstantSignalBuilding",
    "memberof": "js/game/buildings/constant_signal.js",
    "static": true,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/constant_signal.js",
    "importStyle": "{MetaConstantSignalBuilding}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1076,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1077,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1078,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1079,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1080,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1081,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1082,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1083,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1084,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1085,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1086,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1087,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1088,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/constant_signal.js~MetaConstantSignalBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1089,
    "kind": "file",
    "name": "js/game/buildings/cutter.js",
    "content": "import { formatBigNumber, formatItemsPerSecond } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { T } from \"../../translations\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaCutterBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"cutter\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaCutterBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaCutterBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaCutterBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        // @ts-ignore\r\n        return MetaCutterBuilding.additionalStatistics[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaCutterBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaCutterBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaCutterBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\nMetaCutterBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemProcessorComponent({\r\n            inputsPerCharge: 1,\r\n            processorType: enumItemProcessorTypes.cutter,\r\n        })\r\n    ),\r\n    entity => entity.addComponent(new ItemEjectorComponent({})),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemAcceptorComponent({\r\n            slots: [{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.bottom],\r\n                filter: \"shape\",\r\n            }, ],\r\n        })\r\n    ),\r\n];\r\n\r\nMetaCutterBuilding.variants = {\r\n    quad: \"quad\",\r\n};\r\n\r\nMetaCutterBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => null,\r\n    [MetaCutterBuilding.variants.quad]: (entity, rotationVariant) => null,\r\n};\r\n\r\nMetaCutterBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(2, 1),\r\n    [MetaCutterBuilding.variants.quad]: () => new Vector(4, 1),\r\n};\r\n\r\nMetaCutterBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#7dcda2\",\r\n    [MetaCutterBuilding.variants.quad]: () => \"#7dcda2\",\r\n};\r\n\r\nMetaCutterBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_cutter_and_trash),\r\n    [MetaCutterBuilding.variants.quad]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_cutter_quad),\r\n};\r\n\r\nMetaCutterBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n    [MetaCutterBuilding.variants.quad]: root => \"regular\",\r\n};\r\n\r\nMetaCutterBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => null,\r\n    [MetaCutterBuilding.variants.quad]: () => null,\r\n};\r\n\r\nMetaCutterBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaCutterBuilding.variants.quad]: () => true,\r\n};\r\n\r\nMetaCutterBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaCutterBuilding.variants.quad]: () => true,\r\n};\r\n\r\nMetaCutterBuilding.additionalStatistics = {\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [defaultBuildingVariant]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.cutter) / 2),\r\n        ],\r\n    ],\r\n\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [MetaCutterBuilding.variants.quad]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.cutterQuad) / 2),\r\n        ],\r\n    ],\r\n};\r\n\r\nMetaCutterBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.ItemEjector.setSlots([\r\n            { pos: new Vector(0, 0), direction: enumDirection.top },\r\n            { pos: new Vector(1, 0), direction: enumDirection.top },\r\n        ]);\r\n\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.cutter;\r\n    },\r\n\r\n    [MetaCutterBuilding.variants.quad]: (entity, rotationVariant) => {\r\n        entity.components.ItemEjector.setSlots([\r\n            { pos: new Vector(0, 0), direction: enumDirection.top },\r\n            { pos: new Vector(1, 0), direction: enumDirection.top },\r\n            { pos: new Vector(2, 0), direction: enumDirection.top },\r\n            { pos: new Vector(3, 0), direction: enumDirection.top },\r\n        ]);\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.cutterQuad;\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/cutter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1090,
    "kind": "class",
    "name": "MetaCutterBuilding",
    "memberof": "js/game/buildings/cutter.js",
    "static": true,
    "longname": "js/game/buildings/cutter.js~MetaCutterBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/cutter.js",
    "importStyle": "{MetaCutterBuilding}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1091,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/cutter.js~MetaCutterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/cutter.js~MetaCutterBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1092,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/cutter.js~MetaCutterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/cutter.js~MetaCutterBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1093,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/cutter.js~MetaCutterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/cutter.js~MetaCutterBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1094,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/cutter.js~MetaCutterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/cutter.js~MetaCutterBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1095,
    "kind": "method",
    "name": "getAdditionalStatistics",
    "memberof": "js/game/buildings/cutter.js~MetaCutterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/cutter.js~MetaCutterBuilding#getAdditionalStatistics",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<[string, string]>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<[string, string]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1096,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/cutter.js~MetaCutterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/cutter.js~MetaCutterBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1097,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/cutter.js~MetaCutterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/cutter.js~MetaCutterBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1098,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/cutter.js~MetaCutterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/cutter.js~MetaCutterBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1099,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/cutter.js~MetaCutterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/cutter.js~MetaCutterBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1100,
    "kind": "file",
    "name": "js/game/buildings/display.js",
    "content": "import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { DisplayComponent } from \"../components/display\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaDisplayBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"display\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaDisplayBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaDisplayBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaDisplayBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaDisplayBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaDisplayBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaDisplayBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaDisplayBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaDisplayBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaDisplayBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaDisplayBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaDisplayBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new WiredPinsComponent({\r\n            slots: [{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.bottom,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            }, ],\r\n        })\r\n    ),\r\n    entity => entity.addComponent(new DisplayComponent()),\r\n];\r\n\r\nMetaDisplayBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => null,\r\n};\r\n\r\nMetaDisplayBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaDisplayBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#aaaaaa\",\r\n};\r\n\r\nMetaDisplayBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaDisplayBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaDisplayBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_display),\r\n};\r\n\r\nMetaDisplayBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n};\r\n\r\nMetaDisplayBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n};\r\n\r\nMetaDisplayBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaDisplayBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n            pos: new Vector(0, 0),\r\n            direction: enumDirection.bottom,\r\n            type: enumPinSlotType.logicalAcceptor,\r\n        }, ]);\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/display.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1101,
    "kind": "class",
    "name": "MetaDisplayBuilding",
    "memberof": "js/game/buildings/display.js",
    "static": true,
    "longname": "js/game/buildings/display.js~MetaDisplayBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/display.js",
    "importStyle": "{MetaDisplayBuilding}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1102,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/display.js~MetaDisplayBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/display.js~MetaDisplayBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 1103,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/display.js~MetaDisplayBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/display.js~MetaDisplayBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1104,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/display.js~MetaDisplayBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/display.js~MetaDisplayBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1105,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/display.js~MetaDisplayBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/display.js~MetaDisplayBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1106,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/display.js~MetaDisplayBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/display.js~MetaDisplayBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1107,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/display.js~MetaDisplayBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/display.js~MetaDisplayBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1108,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/display.js~MetaDisplayBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/display.js~MetaDisplayBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1109,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/display.js~MetaDisplayBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/display.js~MetaDisplayBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1110,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/display.js~MetaDisplayBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/display.js~MetaDisplayBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1111,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/display.js~MetaDisplayBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/display.js~MetaDisplayBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1112,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/display.js~MetaDisplayBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/display.js~MetaDisplayBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1113,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/display.js~MetaDisplayBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/display.js~MetaDisplayBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1114,
    "kind": "file",
    "name": "js/game/buildings/filter.js",
    "content": "import { formatItemsPerSecond } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { T } from \"../../translations\";\r\nimport { FilterComponent } from \"../components/filter\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaFilterBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"filter\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaFilterBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaFilterBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaFilterBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaFilterBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        //@ts-ignore\r\n        return MetaFilterBuilding.layerByVariant[defaultBuildingVariant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaFilterBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaFilterBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        return MetaFilterBuilding.additionalStatistics[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaFilterBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaFilterBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaFilterBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaFilterBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaFilterBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new WiredPinsComponent({\r\n            slots: [{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.left,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            }, ],\r\n        })\r\n    ),\r\n\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemAcceptorComponent({\r\n            slots: [{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.bottom],\r\n            }, ],\r\n        })\r\n    ),\r\n\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemEjectorComponent({\r\n            slots: [{\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.top,\r\n                },\r\n                {\r\n                    pos: new Vector(1, 0),\r\n                    direction: enumDirection.right,\r\n                },\r\n            ],\r\n        })\r\n    ),\r\n\r\n    entity => entity.addComponent(new FilterComponent()),\r\n];\r\n\r\nMetaFilterBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: () => null,\r\n};\r\n\r\nMetaFilterBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(2, 1),\r\n};\r\n\r\nMetaFilterBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#c45c2e\",\r\n};\r\n\r\nMetaFilterBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaFilterBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaFilterBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_filter),\r\n};\r\n\r\nMetaFilterBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n};\r\n\r\nMetaFilterBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n};\r\n\r\nMetaFilterBuilding.additionalStatistics = {\r\n    [defaultBuildingVariant]: root => [\r\n        [T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(root.hubGoals.getBeltBaseSpeed())],\r\n    ],\r\n};\r\n\r\nMetaFilterBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaFilterBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n            pos: new Vector(0, 0),\r\n            direction: enumDirection.left,\r\n            type: enumPinSlotType.logicalAcceptor,\r\n        }, ]);\r\n\r\n        entity.components.ItemAcceptor.setSlots([{\r\n            pos: new Vector(0, 0),\r\n            directions: [enumDirection.bottom],\r\n        }, ]);\r\n\r\n        entity.components.ItemEjector.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n            },\r\n            {\r\n                pos: new Vector(1, 0),\r\n                direction: enumDirection.right,\r\n            },\r\n        ]);\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/filter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1115,
    "kind": "class",
    "name": "MetaFilterBuilding",
    "memberof": "js/game/buildings/filter.js",
    "static": true,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/filter.js",
    "importStyle": "{MetaFilterBuilding}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1116,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1117,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1118,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1119,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1120,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1121,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1122,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1123,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1124,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1125,
    "kind": "method",
    "name": "getAdditionalStatistics",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#getAdditionalStatistics",
    "access": "public",
    "description": "",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<[string, string]>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<[string, string]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1126,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1127,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1128,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1129,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/filter.js~MetaFilterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/filter.js~MetaFilterBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1130,
    "kind": "file",
    "name": "js/game/buildings/hub.js",
    "content": "import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { HubComponent } from \"../components/hub\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { WiredPinsComponent, enumPinSlotType } from \"../components/wired_pins\";\r\nimport { GameRoot } from \"../root\";\r\n\r\nexport class MetaHubBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"hub\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaHubBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaHubBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaHubBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    getBlueprintSprite() {\r\n        return null;\r\n    }\r\n\r\n    getSprite() {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaHubBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaHubBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaHubBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaHubBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaHubBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaHubBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaHubBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaHubBuilding.canPipet = () => false;\r\n\r\nMetaHubBuilding.setupEntityComponents = [\r\n    entity => entity.addComponent(new HubComponent()),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemProcessorComponent({\r\n            inputsPerCharge: 1,\r\n            processorType: enumItemProcessorTypes.hub,\r\n        })\r\n    ),\r\n\r\n    entity =>\r\n    entity.addComponent(\r\n        new WiredPinsComponent({\r\n            slots: [{\r\n                pos: new Vector(0, 2),\r\n                type: enumPinSlotType.logicalEjector,\r\n                direction: enumDirection.left,\r\n            }, ],\r\n        })\r\n    ),\r\n\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemAcceptorComponent({\r\n            slots: [{\r\n                    pos: new Vector(0, 0),\r\n                    directions: [enumDirection.top, enumDirection.left],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(1, 0),\r\n                    directions: [enumDirection.top],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(2, 0),\r\n                    directions: [enumDirection.top],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(3, 0),\r\n                    directions: [enumDirection.top, enumDirection.right],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(0, 3),\r\n                    directions: [enumDirection.bottom, enumDirection.left],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(1, 3),\r\n                    directions: [enumDirection.bottom],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(2, 3),\r\n                    directions: [enumDirection.bottom],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(3, 3),\r\n                    directions: [enumDirection.bottom, enumDirection.right],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(0, 1),\r\n                    directions: [enumDirection.left],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(0, 2),\r\n                    directions: [enumDirection.left],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(0, 3),\r\n                    directions: [enumDirection.left],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(3, 1),\r\n                    directions: [enumDirection.right],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(3, 2),\r\n                    directions: [enumDirection.right],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(3, 3),\r\n                    directions: [enumDirection.right],\r\n                    filter: \"shape\",\r\n                },\r\n            ],\r\n        })\r\n    ),\r\n];\r\n\r\nMetaHubBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#eb5555\",\r\n};\r\n\r\nMetaHubBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(4, 4),\r\n};\r\n\r\nMetaHubBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => false,\r\n};\r\n\r\nMetaHubBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => false,\r\n};\r\n\r\nMetaHubBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => null,\r\n};\r\n\r\nMetaHubBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => false,\r\n};\r\n\r\nMetaHubBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n};\r\n\r\nMetaHubBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => false,\r\n};\r\n\r\nMetaHubBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.ItemProcessor.inputsPerCharge = 1;\r\n\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.hub;\r\n\r\n        entity.components.WiredPins.setSlots([{\r\n            pos: new Vector(0, 2),\r\n            type: enumPinSlotType.logicalEjector,\r\n            direction: enumDirection.left,\r\n        }, ]);\r\n\r\n        entity.components.ItemAcceptor.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.top, enumDirection.left],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(1, 0),\r\n                directions: [enumDirection.top],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(2, 0),\r\n                directions: [enumDirection.top],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(3, 0),\r\n                directions: [enumDirection.top, enumDirection.right],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(0, 3),\r\n                directions: [enumDirection.bottom, enumDirection.left],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(1, 3),\r\n                directions: [enumDirection.bottom],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(2, 3),\r\n                directions: [enumDirection.bottom],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(3, 3),\r\n                directions: [enumDirection.bottom, enumDirection.right],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(0, 1),\r\n                directions: [enumDirection.left],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(0, 2),\r\n                directions: [enumDirection.left],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(0, 3),\r\n                directions: [enumDirection.left],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(3, 1),\r\n                directions: [enumDirection.right],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(3, 2),\r\n                directions: [enumDirection.right],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(3, 3),\r\n                directions: [enumDirection.right],\r\n                filter: \"shape\",\r\n            },\r\n        ]);\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/hub.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1131,
    "kind": "class",
    "name": "MetaHubBuilding",
    "memberof": "js/game/buildings/hub.js",
    "static": true,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/hub.js",
    "importStyle": "{MetaHubBuilding}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1132,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1133,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1134,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1135,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1136,
    "kind": "method",
    "name": "getBlueprintSprite",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#getBlueprintSprite",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1137,
    "kind": "method",
    "name": "getSprite",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#getSprite",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1138,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1139,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1140,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1141,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1142,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1143,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1144,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1145,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/hub.js~MetaHubBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/hub.js~MetaHubBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1146,
    "kind": "file",
    "name": "js/game/buildings/item_producer.js",
    "content": "import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { ItemProducerComponent } from \"../components/item_producer\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\n\r\nexport class MetaItemProducerBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"item_producer\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaItemProducerBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaItemProducerBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaItemProducerBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaItemProducerBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaItemProducerBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaItemProducerBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaItemProducerBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaItemProducerBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaItemProducerBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaItemProducerBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemEjectorComponent({\r\n            slots: [{ pos: new Vector(0, 0), direction: enumDirection.top }],\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new WiredPinsComponent({\r\n            slots: [{\r\n                pos: new Vector(0, 0),\r\n                type: enumPinSlotType.logicalAcceptor,\r\n                direction: enumDirection.bottom,\r\n            }, ],\r\n        })\r\n    ),\r\n\r\n    entity => entity.addComponent(new ItemProducerComponent()),\r\n];\r\n\r\nMetaItemProducerBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => null,\r\n};\r\n\r\nMetaItemProducerBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaItemProducerBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#b37dcd\",\r\n};\r\n\r\nMetaItemProducerBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaItemProducerBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaItemProducerBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => true,\r\n};\r\n\r\nMetaItemProducerBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n};\r\n\r\nMetaItemProducerBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n};\r\n\r\nMetaItemProducerBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.ItemEjector.setSlots([{ pos: new Vector(0, 0), direction: enumDirection.top }]);\r\n\r\n        entity.components.WiredPins.setSlots([{\r\n            pos: new Vector(0, 0),\r\n            type: enumPinSlotType.logicalAcceptor,\r\n            direction: enumDirection.bottom,\r\n        }, ]);\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/item_producer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1147,
    "kind": "class",
    "name": "MetaItemProducerBuilding",
    "memberof": "js/game/buildings/item_producer.js",
    "static": true,
    "longname": "js/game/buildings/item_producer.js~MetaItemProducerBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/item_producer.js",
    "importStyle": "{MetaItemProducerBuilding}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1148,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/item_producer.js~MetaItemProducerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/item_producer.js~MetaItemProducerBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 1149,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/item_producer.js~MetaItemProducerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/item_producer.js~MetaItemProducerBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1150,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/item_producer.js~MetaItemProducerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/item_producer.js~MetaItemProducerBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1151,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/item_producer.js~MetaItemProducerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/item_producer.js~MetaItemProducerBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1152,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/item_producer.js~MetaItemProducerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/item_producer.js~MetaItemProducerBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1153,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/item_producer.js~MetaItemProducerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/item_producer.js~MetaItemProducerBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1154,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/item_producer.js~MetaItemProducerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/item_producer.js~MetaItemProducerBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1155,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/item_producer.js~MetaItemProducerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/item_producer.js~MetaItemProducerBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1156,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/item_producer.js~MetaItemProducerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/item_producer.js~MetaItemProducerBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1157,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/item_producer.js~MetaItemProducerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/item_producer.js~MetaItemProducerBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1158,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/item_producer.js~MetaItemProducerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/item_producer.js~MetaItemProducerBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1159,
    "kind": "file",
    "name": "js/game/buildings/lever.js",
    "content": "import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { LeverComponent } from \"../components/lever\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaLeverBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"lever\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaLeverBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaLeverBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaLeverBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaLeverBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaLeverBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaLeverBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaLeverBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaLeverBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    getSprite() {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaLeverBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaLeverBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaLeverBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaLeverBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new WiredPinsComponent({\r\n            slots: [{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n                type: enumPinSlotType.logicalEjector,\r\n            }, ],\r\n        })\r\n    ),\r\n    entity => entity.addComponent(new LeverComponent({})),\r\n];\r\n\r\nMetaLeverBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => null,\r\n};\r\n\r\nMetaLeverBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaLeverBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#1a678b\",\r\n};\r\n\r\nMetaLeverBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaLeverBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaLeverBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_wires_painter_and_levers),\r\n};\r\n\r\nMetaLeverBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n};\r\n\r\nMetaLeverBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n};\r\n\r\nMetaLeverBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaLeverBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n            pos: new Vector(0, 0),\r\n            direction: enumDirection.top,\r\n            type: enumPinSlotType.logicalEjector,\r\n        }, ]);\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/lever.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1160,
    "kind": "class",
    "name": "MetaLeverBuilding",
    "memberof": "js/game/buildings/lever.js",
    "static": true,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/lever.js",
    "importStyle": "{MetaLeverBuilding}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1161,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 1162,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1163,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1164,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1165,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1166,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1167,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1168,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1169,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1170,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1171,
    "kind": "method",
    "name": "getSprite",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#getSprite",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1172,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1173,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1174,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/lever.js~MetaLeverBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/lever.js~MetaLeverBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1175,
    "kind": "file",
    "name": "js/game/buildings/logic_gate.js",
    "content": "import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding, defaultBuildingVariant } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumLogicGateType, LogicGateComponent } from \"../components/logic_gate\";\r\nimport { generateMatrixRotations } from \"../../core/utils\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaLogicGateBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"logic_gate\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaLogicGateBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaLogicGateBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaLogicGateBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaLogicGateBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaLogicGateBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaLogicGateBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaLogicGateBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaLogicGateBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaLogicGateBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaLogicGateBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaLogicGateBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\nMetaLogicGateBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new WiredPinsComponent({\r\n            slots: [],\r\n        })\r\n    ),\r\n    entity => entity.addComponent(new LogicGateComponent({})),\r\n];\r\n\r\nMetaLogicGateBuilding.variants = {\r\n    not: \"not\",\r\n    xor: \"xor\",\r\n    or: \"or\",\r\n};\r\n\r\nMetaLogicGateBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 1, 1, 1, 0, 1, 1]),\r\n    [MetaLogicGateBuilding.variants.xor]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 1, 1, 1, 0, 1, 1]),\r\n    [MetaLogicGateBuilding.variants.or]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 1, 1, 1, 0, 1, 1]),\r\n    [MetaLogicGateBuilding.variants.not]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 0, 1, 0, 0, 1, 0]),\r\n};\r\nMetaLogicGateBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n    [MetaLogicGateBuilding.variants.xor]: () => new Vector(1, 1),\r\n    [MetaLogicGateBuilding.variants.or]: () => new Vector(1, 1),\r\n    [MetaLogicGateBuilding.variants.not]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaLogicGateBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#f48d41\",\r\n    [MetaLogicGateBuilding.variants.xor]: () => \"#f4a241\",\r\n    [MetaLogicGateBuilding.variants.or]: () => \"#f4d041\",\r\n    [MetaLogicGateBuilding.variants.not]: () => \"#f44184\",\r\n};\r\n\r\nMetaLogicGateBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaLogicGateBuilding.variants.xor]: () => true,\r\n    [MetaLogicGateBuilding.variants.or]: () => true,\r\n    [MetaLogicGateBuilding.variants.not]: () => true,\r\n};\r\n\r\nMetaLogicGateBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaLogicGateBuilding.variants.xor]: () => true,\r\n    [MetaLogicGateBuilding.variants.or]: () => true,\r\n    [MetaLogicGateBuilding.variants.not]: () => true,\r\n};\r\n\r\nMetaLogicGateBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_logic_gates),\r\n    [MetaLogicGateBuilding.variants.xor]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_logic_gates),\r\n    [MetaLogicGateBuilding.variants.or]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_logic_gates),\r\n    [MetaLogicGateBuilding.variants.not]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_logic_gates),\r\n};\r\n\r\nMetaLogicGateBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"wires\",\r\n    [MetaLogicGateBuilding.variants.xor]: root => \"wires\",\r\n    [MetaLogicGateBuilding.variants.or]: root => \"wires\",\r\n    [MetaLogicGateBuilding.variants.not]: root => \"wires\",\r\n};\r\n\r\nMetaLogicGateBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => false,\r\n    [MetaLogicGateBuilding.variants.xor]: () => false,\r\n    [MetaLogicGateBuilding.variants.or]: () => false,\r\n    [MetaLogicGateBuilding.variants.not]: () => false,\r\n};\r\n\r\nMetaLogicGateBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n    [MetaLogicGateBuilding.variants.xor]: () => \"wires\",\r\n    [MetaLogicGateBuilding.variants.or]: () => \"wires\",\r\n    [MetaLogicGateBuilding.variants.not]: () => \"wires\",\r\n};\r\n\r\nMetaLogicGateBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.left,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.right,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n        ]);\r\n\r\n        entity.components.LogicGate.type = enumLogicGateType.and;\r\n    },\r\n\r\n    [MetaLogicGateBuilding.variants.xor]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.left,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.right,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n        ]);\r\n\r\n        entity.components.LogicGate.type = enumLogicGateType.xor;\r\n    },\r\n\r\n    [MetaLogicGateBuilding.variants.or]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.left,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.right,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n        ]);\r\n\r\n        entity.components.LogicGate.type = enumLogicGateType.or;\r\n    },\r\n    [MetaLogicGateBuilding.variants.not]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.bottom,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n        ]);\r\n\r\n        entity.components.LogicGate.type = enumLogicGateType.not;\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/logic_gate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1176,
    "kind": "class",
    "name": "MetaLogicGateBuilding",
    "memberof": "js/game/buildings/logic_gate.js",
    "static": true,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/logic_gate.js",
    "importStyle": "{MetaLogicGateBuilding}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1177,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1178,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1179,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1180,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1181,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1182,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1183,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1184,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1185,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1186,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1187,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1188,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1189,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/logic_gate.js~MetaLogicGateBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1190,
    "kind": "file",
    "name": "js/game/buildings/miner.js",
    "content": "import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { MinerComponent } from \"../components/miner\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding, defaultBuildingVariant } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { T } from \"../../translations\";\r\nimport { formatItemsPerSecond, generateMatrixRotations } from \"../../core/utils\";\r\n\r\nexport class MetaMinerBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"miner\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaMinerBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaMinerBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaMinerBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaMinerBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaMinerBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaMinerBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        return MetaMinerBuilding.additionalStatistics[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaMinerBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaMinerBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaMinerBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaMinerBuilding.setupEntityComponents = [\r\n    entity => entity.addComponent(new MinerComponent({})),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemEjectorComponent({\r\n            slots: [{ pos: new Vector(0, 0), direction: enumDirection.top }],\r\n        })\r\n    ),\r\n];\r\nMetaMinerBuilding.variants = {\r\n    chainable: \"chainable\",\r\n};\r\n\r\nMetaMinerBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#b37dcd\",\r\n    [MetaMinerBuilding.variants.chainable]: () => \"#b37dcd\",\r\n};\r\n\r\nMetaMinerBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n    [MetaMinerBuilding.variants.chainable]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaMinerBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaMinerBuilding.variants.chainable]: () => true,\r\n};\r\n\r\nMetaMinerBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaMinerBuilding.variants.chainable]: () => true,\r\n};\r\n\r\nMetaMinerBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n    [MetaMinerBuilding.variants.chainable]: root => \"regular\",\r\n};\r\n\r\nMetaMinerBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([1, 1, 1, 1, 0, 1, 1, 1, 1]),\r\n    [MetaMinerBuilding.variants.chainable]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 1, 1, 1, 1, 1, 1]),\r\n};\r\n\r\nMetaMinerBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root =>\r\n        !root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_miner_chainable),\r\n    [MetaMinerBuilding.variants.chainable]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_miner_chainable),\r\n};\r\n\r\nMetaMinerBuilding.additionalStatistics = {\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [defaultBuildingVariant]: root => [\r\n        [T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(root.hubGoals.getMinerBaseSpeed())],\r\n    ],\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [MetaMinerBuilding.variants.chainable]: root => [\r\n        [T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(root.hubGoals.getMinerBaseSpeed())],\r\n    ],\r\n};\r\n\r\nMetaMinerBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.Miner.chainable = false;\r\n    },\r\n\r\n    [MetaMinerBuilding.variants.chainable]: (entity, rotationVariant) => {\r\n        entity.components.Miner.chainable = true;\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/miner.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1191,
    "kind": "class",
    "name": "MetaMinerBuilding",
    "memberof": "js/game/buildings/miner.js",
    "static": true,
    "longname": "js/game/buildings/miner.js~MetaMinerBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/miner.js",
    "importStyle": "{MetaMinerBuilding}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1192,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/miner.js~MetaMinerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/miner.js~MetaMinerBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 1193,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/miner.js~MetaMinerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/miner.js~MetaMinerBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1194,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/miner.js~MetaMinerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/miner.js~MetaMinerBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1195,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/miner.js~MetaMinerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/miner.js~MetaMinerBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1196,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/miner.js~MetaMinerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/miner.js~MetaMinerBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1197,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/miner.js~MetaMinerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/miner.js~MetaMinerBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1198,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/miner.js~MetaMinerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/miner.js~MetaMinerBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1199,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/miner.js~MetaMinerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/miner.js~MetaMinerBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1200,
    "kind": "method",
    "name": "getAdditionalStatistics",
    "memberof": "js/game/buildings/miner.js~MetaMinerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/miner.js~MetaMinerBuilding#getAdditionalStatistics",
    "access": "public",
    "description": "",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<[string, string]>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<[string, string]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1201,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/miner.js~MetaMinerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/miner.js~MetaMinerBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1202,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/miner.js~MetaMinerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/miner.js~MetaMinerBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1203,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/miner.js~MetaMinerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/miner.js~MetaMinerBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1204,
    "kind": "file",
    "name": "js/game/buildings/mixer.js",
    "content": "import { formatItemsPerSecond } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { T } from \"../../translations\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaMixerBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"mixer\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaMixerBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaMixerBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaMixerBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaMixerBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaMixerBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaMixerBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        return MetaMixerBuilding.additionalStatistics[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaMixerBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaMixerBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaMixerBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaMixerBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemProcessorComponent({\r\n            inputsPerCharge: 2,\r\n            processorType: enumItemProcessorTypes.mixer,\r\n        })\r\n    ),\r\n\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemEjectorComponent({\r\n            slots: [{ pos: new Vector(0, 0), direction: enumDirection.top }],\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemAcceptorComponent({\r\n            slots: [{\r\n                    pos: new Vector(0, 0),\r\n                    directions: [enumDirection.bottom],\r\n                    filter: \"color\",\r\n                },\r\n                {\r\n                    pos: new Vector(1, 0),\r\n                    directions: [enumDirection.bottom],\r\n                    filter: \"color\",\r\n                },\r\n            ],\r\n        })\r\n    ),\r\n];\r\n\r\nMetaMixerBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#cdbb7d\",\r\n};\r\n\r\nMetaMixerBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(2, 1),\r\n};\r\n\r\nMetaMixerBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaMixerBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaMixerBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n};\r\n\r\nMetaMixerBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => null,\r\n};\r\n\r\nMetaMixerBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_mixer),\r\n};\r\n\r\nMetaMixerBuilding.additionalStatistics = {\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [defaultBuildingVariant]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.mixer)),\r\n        ],\r\n    ],\r\n};\r\n\r\nMetaMixerBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.ItemProcessor.inputsPerCharge = 2;\r\n\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.mixer;\r\n\r\n        entity.components.ItemEjector.setSlots([{ pos: new Vector(0, 0), direction: enumDirection.top }]);\r\n\r\n        entity.components.ItemAcceptor.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.bottom],\r\n                filter: \"color\",\r\n            },\r\n            {\r\n                pos: new Vector(1, 0),\r\n                directions: [enumDirection.bottom],\r\n                filter: \"color\",\r\n            },\r\n        ]);\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/mixer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1205,
    "kind": "class",
    "name": "MetaMixerBuilding",
    "memberof": "js/game/buildings/mixer.js",
    "static": true,
    "longname": "js/game/buildings/mixer.js~MetaMixerBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/mixer.js",
    "importStyle": "{MetaMixerBuilding}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1206,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/mixer.js~MetaMixerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/mixer.js~MetaMixerBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1207,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/mixer.js~MetaMixerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/mixer.js~MetaMixerBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1208,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/mixer.js~MetaMixerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/mixer.js~MetaMixerBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1209,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/mixer.js~MetaMixerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/mixer.js~MetaMixerBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1210,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/mixer.js~MetaMixerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/mixer.js~MetaMixerBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1211,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/mixer.js~MetaMixerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/mixer.js~MetaMixerBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1212,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/mixer.js~MetaMixerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/mixer.js~MetaMixerBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1213,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/mixer.js~MetaMixerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/mixer.js~MetaMixerBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1214,
    "kind": "method",
    "name": "getAdditionalStatistics",
    "memberof": "js/game/buildings/mixer.js~MetaMixerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/mixer.js~MetaMixerBuilding#getAdditionalStatistics",
    "access": "public",
    "description": "",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<[string, string]>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<[string, string]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1215,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/mixer.js~MetaMixerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/mixer.js~MetaMixerBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1216,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/mixer.js~MetaMixerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/mixer.js~MetaMixerBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1217,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/mixer.js~MetaMixerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/mixer.js~MetaMixerBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1218,
    "kind": "file",
    "name": "js/game/buildings/painter.js",
    "content": "import { formatItemsPerSecond } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { T } from \"../../translations\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport {\r\n    enumItemProcessorTypes,\r\n    ItemProcessorComponent,\r\n    enumItemProcessorRequirements,\r\n} from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { WiredPinsComponent, enumPinSlotType } from \"../components/wired_pins\";\r\n\r\nexport class MetaPainterBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"painter\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaPainterBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaPainterBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaPainterBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaPainterBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaPainterBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaPainterBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        return MetaPainterBuilding.additionalStatistics[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaPainterBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaPainterBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaPainterBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaPainterBuilding.setupEntityComponents = [\r\n    entity => entity.addComponent(new ItemProcessorComponent({})),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemEjectorComponent({\r\n            slots: [{ pos: new Vector(1, 0), direction: enumDirection.right }],\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemAcceptorComponent({\r\n            slots: [{\r\n                    pos: new Vector(0, 0),\r\n                    directions: [enumDirection.left],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(1, 0),\r\n                    directions: [enumDirection.top],\r\n                    filter: \"color\",\r\n                },\r\n            ],\r\n        })\r\n    ),\r\n];\r\n\r\nMetaPainterBuilding.variants = {\r\n    mirrored: \"mirrored\",\r\n    double: \"double\",\r\n    quad: \"quad\",\r\n};\r\n\r\nMetaPainterBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#cd9b7d\",\r\n    [MetaPainterBuilding.variants.mirrored]: () => \"#cd9b7d\",\r\n    [MetaPainterBuilding.variants.double]: () => \"#cd9b7d\",\r\n    [MetaPainterBuilding.variants.quad]: () => \"#cd9b7d\",\r\n};\r\n\r\nMetaPainterBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(2, 1),\r\n    [MetaPainterBuilding.variants.mirrored]: () => new Vector(2, 1),\r\n    [MetaPainterBuilding.variants.double]: () => new Vector(2, 2),\r\n    [MetaPainterBuilding.variants.quad]: () => new Vector(4, 1),\r\n};\r\n\r\nMetaPainterBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaPainterBuilding.variants.mirrored]: () => true,\r\n    [MetaPainterBuilding.variants.double]: () => true,\r\n    [MetaPainterBuilding.variants.quad]: () => true,\r\n};\r\n\r\nMetaPainterBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaPainterBuilding.variants.mirrored]: () => true,\r\n    [MetaPainterBuilding.variants.double]: () => true,\r\n    [MetaPainterBuilding.variants.quad]: () => true,\r\n};\r\n\r\nMetaPainterBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n    [MetaPainterBuilding.variants.mirrored]: root => \"regular\",\r\n    [MetaPainterBuilding.variants.double]: root => \"regular\",\r\n    [MetaPainterBuilding.variants.quad]: root => \"regular\",\r\n};\r\n\r\nMetaPainterBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => null,\r\n    [MetaPainterBuilding.variants.mirrored]: (entity, rotationVariant) => null,\r\n    [MetaPainterBuilding.variants.double]: (entity, rotationVariant) => null,\r\n    [MetaPainterBuilding.variants.quad]: (entity, rotationVariant) => null,\r\n};\r\n\r\nMetaPainterBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_painter),\r\n    [MetaPainterBuilding.variants.mirrored]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_painter),\r\n    [MetaPainterBuilding.variants.double]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_painter_double),\r\n    [MetaPainterBuilding.variants.quad]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_wires_painter_and_levers),\r\n};\r\n\r\nMetaPainterBuilding.additionalStatistics = {\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [defaultBuildingVariant]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.painter)),\r\n        ],\r\n    ],\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [MetaPainterBuilding.variants.mirrored]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.painter)),\r\n        ],\r\n    ],\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [MetaPainterBuilding.variants.double]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.painterDouble)),\r\n        ],\r\n    ],\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [MetaPainterBuilding.variants.quad]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.painterQuad)),\r\n        ],\r\n    ],\r\n};\r\n\r\nMetaPainterBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        if (entity.components.WiredPins) {\r\n            entity.removeComponent(WiredPinsComponent);\r\n        }\r\n\r\n        entity.components.ItemAcceptor.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.left],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(1, 0),\r\n                directions: [enumDirection.top],\r\n                filter: \"color\",\r\n            },\r\n        ]);\r\n\r\n        entity.components.ItemEjector.setSlots([{ pos: new Vector(1, 0), direction: enumDirection.right }]);\r\n\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.painter;\r\n        entity.components.ItemProcessor.processingRequirement = null;\r\n        entity.components.ItemProcessor.inputsPerCharge = 2;\r\n    },\r\n\r\n    [MetaPainterBuilding.variants.mirrored]: (entity, rotationVariant) => {\r\n        if (entity.components.WiredPins) {\r\n            entity.removeComponent(WiredPinsComponent);\r\n        }\r\n\r\n        entity.components.ItemAcceptor.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.left],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(1, 0),\r\n                directions: [enumDirection.bottom],\r\n                filter: \"color\",\r\n            },\r\n        ]);\r\n\r\n        entity.components.ItemEjector.setSlots([{ pos: new Vector(1, 0), direction: enumDirection.right }]);\r\n\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.painter;\r\n        entity.components.ItemProcessor.processingRequirement = null;\r\n        entity.components.ItemProcessor.inputsPerCharge = 2;\r\n    },\r\n\r\n    [MetaPainterBuilding.variants.double]: (entity, rotationVariant) => {\r\n        if (entity.components.WiredPins) {\r\n            entity.removeComponent(WiredPinsComponent);\r\n        }\r\n\r\n        entity.components.ItemAcceptor.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.left],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(0, 1),\r\n                directions: [enumDirection.left],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(1, 0),\r\n                directions: [enumDirection.top],\r\n                filter: \"color\",\r\n            },\r\n        ]);\r\n\r\n        entity.components.ItemEjector.setSlots([{ pos: new Vector(1, 0), direction: enumDirection.right }]);\r\n\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.painterDouble;\r\n        entity.components.ItemProcessor.processingRequirement = null;\r\n        entity.components.ItemProcessor.inputsPerCharge = 3;\r\n    },\r\n\r\n    [MetaPainterBuilding.variants.quad]: (entity, rotationVariant) => {\r\n        if (!entity.components.WiredPins) {\r\n            entity.addComponent(new WiredPinsComponent({ slots: [] }));\r\n        }\r\n\r\n        entity.components.WiredPins.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.bottom,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n            {\r\n                pos: new Vector(1, 0),\r\n                direction: enumDirection.bottom,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n            {\r\n                pos: new Vector(2, 0),\r\n                direction: enumDirection.bottom,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n            {\r\n                pos: new Vector(3, 0),\r\n                direction: enumDirection.bottom,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n        ]);\r\n\r\n        entity.components.ItemAcceptor.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.left],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.bottom],\r\n                filter: \"color\",\r\n            },\r\n            {\r\n                pos: new Vector(1, 0),\r\n                directions: [enumDirection.bottom],\r\n                filter: \"color\",\r\n            },\r\n            {\r\n                pos: new Vector(2, 0),\r\n                directions: [enumDirection.bottom],\r\n                filter: \"color\",\r\n            },\r\n            {\r\n                pos: new Vector(3, 0),\r\n                directions: [enumDirection.bottom],\r\n                filter: \"color\",\r\n            },\r\n        ]);\r\n\r\n        entity.components.ItemEjector.setSlots([{ pos: new Vector(0, 0), direction: enumDirection.top }]);\r\n\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.painterQuad;\r\n        entity.components.ItemProcessor.processingRequirement = enumItemProcessorRequirements.painterQuad;\r\n        entity.components.ItemProcessor.inputsPerCharge = 5;\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/painter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1219,
    "kind": "class",
    "name": "MetaPainterBuilding",
    "memberof": "js/game/buildings/painter.js",
    "static": true,
    "longname": "js/game/buildings/painter.js~MetaPainterBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/painter.js",
    "importStyle": "{MetaPainterBuilding}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1220,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/painter.js~MetaPainterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/painter.js~MetaPainterBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 1221,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/painter.js~MetaPainterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/painter.js~MetaPainterBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1222,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/painter.js~MetaPainterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/painter.js~MetaPainterBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1223,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/painter.js~MetaPainterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/painter.js~MetaPainterBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1224,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/painter.js~MetaPainterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/painter.js~MetaPainterBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1225,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/painter.js~MetaPainterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/painter.js~MetaPainterBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1226,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/painter.js~MetaPainterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/painter.js~MetaPainterBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1227,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/painter.js~MetaPainterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/painter.js~MetaPainterBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1228,
    "kind": "method",
    "name": "getAdditionalStatistics",
    "memberof": "js/game/buildings/painter.js~MetaPainterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/painter.js~MetaPainterBuilding#getAdditionalStatistics",
    "access": "public",
    "description": "",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<[string, string]>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<[string, string]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1229,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/painter.js~MetaPainterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/painter.js~MetaPainterBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1230,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/painter.js~MetaPainterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/painter.js~MetaPainterBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1231,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/painter.js~MetaPainterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/painter.js~MetaPainterBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1232,
    "kind": "file",
    "name": "js/game/buildings/reader.js",
    "content": "import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { BeltUnderlaysComponent } from \"../components/belt_underlays\";\r\nimport { BeltReaderComponent } from \"../components/belt_reader\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { generateMatrixRotations, formatItemsPerSecond } from \"../../core/utils\";\r\nimport { T } from \"../../translations\";\r\n\r\nexport class MetaReaderBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"reader\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaReaderBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaReaderBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaReaderBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaReaderBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaReaderBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaReaderBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaReaderBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        return MetaReaderBuilding.additionalStatistics[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaReaderBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaReaderBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaReaderBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaReaderBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaReaderBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new WiredPinsComponent({\r\n            slots: [{\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.right,\r\n                    type: enumPinSlotType.logicalEjector,\r\n                },\r\n                {\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.left,\r\n                    type: enumPinSlotType.logicalEjector,\r\n                },\r\n            ],\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemAcceptorComponent({\r\n            slots: [{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.bottom],\r\n            }, ],\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemEjectorComponent({\r\n            slots: [{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n            }, ],\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemProcessorComponent({\r\n            processorType: enumItemProcessorTypes.reader,\r\n            inputsPerCharge: 1,\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new BeltUnderlaysComponent({\r\n            underlays: [{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n            }, ],\r\n        })\r\n    ),\r\n    entity => entity.addComponent(new BeltReaderComponent()),\r\n];\r\n\r\nMetaReaderBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaReaderBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#25fff2\",\r\n};\r\n\r\nMetaReaderBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaReaderBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaReaderBuilding.additionalStatistics = {\r\n    [defaultBuildingVariant]: root => [\r\n        [T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(root.hubGoals.getBeltBaseSpeed())],\r\n    ],\r\n};\r\n\r\nMetaReaderBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 0, 1, 0, 0, 1, 0]),\r\n};\r\n\r\nMetaReaderBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_belt_reader),\r\n};\r\n\r\nMetaReaderBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n};\r\n\r\nMetaReaderBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n};\r\n\r\nMetaReaderBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaReaderBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.ItemAcceptor.setSlots([{\r\n            pos: new Vector(0, 0),\r\n            directions: [enumDirection.bottom],\r\n        }, ]);\r\n\r\n        entity.components.ItemEjector.setSlots([{\r\n            pos: new Vector(0, 0),\r\n            direction: enumDirection.top,\r\n        }, ]);\r\n\r\n        entity.components.ItemProcessor.inputsPerCharge = 1;\r\n\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.reader;\r\n\r\n        entity.components.BeltUnderlays.underlays = [{\r\n            pos: new Vector(0, 0),\r\n            direction: enumDirection.top,\r\n        }, ];\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/reader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1233,
    "kind": "class",
    "name": "MetaReaderBuilding",
    "memberof": "js/game/buildings/reader.js",
    "static": true,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/reader.js",
    "importStyle": "{MetaReaderBuilding}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1234,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 1235,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1236,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1237,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1238,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1239,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1240,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1241,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1242,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1243,
    "kind": "method",
    "name": "getAdditionalStatistics",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#getAdditionalStatistics",
    "access": "public",
    "description": "",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<[string, string]>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<[string, string]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1244,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1245,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1246,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1247,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/reader.js~MetaReaderBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/reader.js~MetaReaderBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1248,
    "kind": "file",
    "name": "js/game/buildings/rotater.js",
    "content": "import { formatItemsPerSecond, generateMatrixRotations } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { T } from \"../../translations\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaRotaterBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"rotater\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaRotaterBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaRotaterBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaRotaterBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaRotaterBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaRotaterBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaRotaterBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaRotaterBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        return MetaRotaterBuilding.additionalStatistics[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaRotaterBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaRotaterBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaRotaterBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaRotaterBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaRotaterBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemProcessorComponent({\r\n            inputsPerCharge: 1,\r\n            processorType: enumItemProcessorTypes.rotater,\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemEjectorComponent({\r\n            slots: [{ pos: new Vector(0, 0), direction: enumDirection.top }],\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemAcceptorComponent({\r\n            slots: [{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.bottom],\r\n                filter: \"shape\",\r\n            }, ],\r\n        })\r\n    ),\r\n];\r\n\r\nMetaRotaterBuilding.variants = {\r\n    ccw: \"ccw\",\r\n    rotate180: \"rotate180\",\r\n};\r\n\r\nMetaRotaterBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n    [MetaRotaterBuilding.variants.ccw]: () => new Vector(1, 1),\r\n    [MetaRotaterBuilding.variants.rotate180]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaRotaterBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#7dc6cd\",\r\n    [MetaRotaterBuilding.variants.ccw]: () => \"#7dc6cd\",\r\n    [MetaRotaterBuilding.variants.rotate180]: () => \"#7dc6cd\",\r\n};\r\n\r\nMetaRotaterBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 1, 1, 1, 0, 0, 1, 1]),\r\n    [MetaRotaterBuilding.variants.ccw]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([1, 1, 0, 0, 1, 1, 1, 1, 0]),\r\n    [MetaRotaterBuilding.variants.rotate180]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([1, 1, 0, 1, 1, 1, 0, 1, 1]),\r\n};\r\n\r\nMetaRotaterBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_rotater),\r\n    [MetaRotaterBuilding.variants.ccw]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_rotater_ccw),\r\n    [MetaRotaterBuilding.variants.rotate180]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_rotater_180),\r\n};\r\n\r\nMetaRotaterBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaRotaterBuilding.variants.ccw]: () => true,\r\n    [MetaRotaterBuilding.variants.rotate180]: () => true,\r\n};\r\n\r\nMetaRotaterBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaRotaterBuilding.variants.ccw]: () => true,\r\n    [MetaRotaterBuilding.variants.rotate180]: () => true,\r\n};\r\n\r\nMetaRotaterBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n    [MetaRotaterBuilding.variants.ccw]: root => \"regular\",\r\n    [MetaRotaterBuilding.variants.rotate180]: root => \"regular\",\r\n};\r\n\r\nMetaRotaterBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => null,\r\n    [MetaRotaterBuilding.variants.ccw]: () => null,\r\n    [MetaRotaterBuilding.variants.rotate180]: () => null,\r\n};\r\n\r\nMetaRotaterBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => null,\r\n    [MetaRotaterBuilding.variants.ccw]: () => null,\r\n    [MetaRotaterBuilding.variants.rotate180]: () => null,\r\n};\r\n\r\nMetaRotaterBuilding.additionalStatistics = {\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [defaultBuildingVariant]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.rotater)),\r\n        ],\r\n    ],\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [MetaRotaterBuilding.variants.ccw]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.rotaterCCW)),\r\n        ],\r\n    ],\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [MetaRotaterBuilding.variants.rotate180]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.rotater180)),\r\n        ],\r\n    ],\r\n};\r\n\r\nMetaRotaterBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.rotater;\r\n    },\r\n\r\n    [MetaRotaterBuilding.variants.ccw]: (entity, rotationVariant) => {\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.rotaterCCW;\r\n    },\r\n\r\n    [MetaRotaterBuilding.variants.rotate180]: (entity, rotationVariant) => {\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.rotater180;\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/rotater.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1249,
    "kind": "class",
    "name": "MetaRotaterBuilding",
    "memberof": "js/game/buildings/rotater.js",
    "static": true,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/rotater.js",
    "importStyle": "{MetaRotaterBuilding}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1250,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1251,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1252,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1253,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1254,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1255,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1256,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1257,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1258,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1259,
    "kind": "method",
    "name": "getAdditionalStatistics",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#getAdditionalStatistics",
    "access": "public",
    "description": "",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<[string, string]>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<[string, string]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1260,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1261,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1262,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1263,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/rotater.js~MetaRotaterBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/rotater.js~MetaRotaterBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 125,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1264,
    "kind": "file",
    "name": "js/game/buildings/stacker.js",
    "content": "import { formatItemsPerSecond } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { T } from \"../../translations\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaStackerBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"stacker\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaStackerBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaStackerBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaStackerBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaStackerBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaStackerBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaStackerBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaStackerBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        return MetaStackerBuilding.additionalStatistics[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaStackerBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaStackerBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaStackerBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaStackerBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaStackerBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemProcessorComponent({\r\n            inputsPerCharge: 2,\r\n            processorType: enumItemProcessorTypes.stacker,\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemEjectorComponent({\r\n            slots: [{ pos: new Vector(0, 0), direction: enumDirection.top }],\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemAcceptorComponent({\r\n            slots: [{\r\n                    pos: new Vector(0, 0),\r\n                    directions: [enumDirection.bottom],\r\n                    filter: \"shape\",\r\n                },\r\n                {\r\n                    pos: new Vector(1, 0),\r\n                    directions: [enumDirection.bottom],\r\n                    filter: \"shape\",\r\n                },\r\n            ],\r\n        })\r\n    ),\r\n];\r\n\r\nMetaStackerBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(2, 1),\r\n};\r\n\r\nMetaStackerBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#9fcd7d\",\r\n};\r\n\r\nMetaStackerBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => null,\r\n};\r\n\r\nMetaStackerBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_stacker),\r\n};\r\n\r\nMetaStackerBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaStackerBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaStackerBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n};\r\n\r\nMetaStackerBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => null,\r\n};\r\n\r\nMetaStackerBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => null,\r\n};\r\n\r\nMetaStackerBuilding.additionalStatistics = {\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [defaultBuildingVariant]: root => [\r\n        [\r\n            T.ingame.buildingPlacement.infoTexts.speed,\r\n            formatItemsPerSecond(root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.stacker)),\r\n        ],\r\n    ],\r\n};\r\n\r\nMetaStackerBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.ItemProcessor.inputsPerCharge = 2;\r\n\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.stacker;\r\n\r\n        entity.components.ItemEjector.setSlots([{ pos: new Vector(0, 0), direction: enumDirection.top }]);\r\n\r\n        entity.components.ItemAcceptor.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                directions: [enumDirection.bottom],\r\n                filter: \"shape\",\r\n            },\r\n            {\r\n                pos: new Vector(1, 0),\r\n                directions: [enumDirection.bottom],\r\n                filter: \"shape\",\r\n            },\r\n        ]);\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/stacker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1265,
    "kind": "class",
    "name": "MetaStackerBuilding",
    "memberof": "js/game/buildings/stacker.js",
    "static": true,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/stacker.js",
    "importStyle": "{MetaStackerBuilding}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1266,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1267,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1268,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1269,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1270,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1271,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1272,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1273,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1274,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1275,
    "kind": "method",
    "name": "getAdditionalStatistics",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#getAdditionalStatistics",
    "access": "public",
    "description": "",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<[string, string]>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<[string, string]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1276,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1277,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1278,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1279,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/stacker.js~MetaStackerBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/stacker.js~MetaStackerBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 125,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1280,
    "kind": "file",
    "name": "js/game/buildings/storage.js",
    "content": "import { formatBigNumber } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { T } from \"../../translations\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { StorageComponent } from \"../components/storage\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nconst storageSize = 5000;\r\n\r\nexport class MetaStorageBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"storage\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaStorageBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaStorageBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaStorageBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaStorageBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaStorageBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaStorageBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaStorageBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        return MetaStorageBuilding.additionalStatistics[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaStorageBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaStorageBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaStorageBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaStorageBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaStorageBuilding.setupEntityComponents = [\r\n    entity =>\r\n    // Required, since the item processor needs this.\r\n    entity.addComponent(\r\n        new ItemEjectorComponent({\r\n            slots: [{\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.top,\r\n                },\r\n                {\r\n                    pos: new Vector(1, 0),\r\n                    direction: enumDirection.top,\r\n                },\r\n            ],\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemAcceptorComponent({\r\n            slots: [{\r\n                    pos: new Vector(0, 1),\r\n                    directions: [enumDirection.bottom],\r\n                },\r\n                {\r\n                    pos: new Vector(1, 1),\r\n                    directions: [enumDirection.bottom],\r\n                },\r\n            ],\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new StorageComponent({\r\n            maximumStorage: storageSize,\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new WiredPinsComponent({\r\n            slots: [{\r\n                    pos: new Vector(1, 1),\r\n                    direction: enumDirection.right,\r\n                    type: enumPinSlotType.logicalEjector,\r\n                },\r\n                {\r\n                    pos: new Vector(0, 1),\r\n                    direction: enumDirection.left,\r\n                    type: enumPinSlotType.logicalEjector,\r\n                },\r\n            ],\r\n        })\r\n    ),\r\n];\r\n\r\nMetaStorageBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(2, 2),\r\n};\r\n\r\nMetaStorageBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#bbdf6d\",\r\n};\r\n\r\nMetaStorageBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaStorageBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaStorageBuilding.additionalStatistics = {\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [defaultBuildingVariant]: root => [\r\n        [T.ingame.buildingPlacement.infoTexts.storage, formatBigNumber(storageSize)],\r\n    ],\r\n};\r\n\r\nMetaStorageBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => null,\r\n};\r\n\r\nMetaStorageBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_storage),\r\n};\r\n\r\nMetaStorageBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n};\r\n\r\nMetaStorageBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n};\r\n\r\nMetaStorageBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaStorageBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.ItemEjector.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n            },\r\n            {\r\n                pos: new Vector(1, 0),\r\n                direction: enumDirection.top,\r\n            },\r\n        ]);\r\n        entity.components.ItemAcceptor.setSlots([{\r\n                pos: new Vector(0, 1),\r\n                directions: [enumDirection.bottom],\r\n            },\r\n            {\r\n                pos: new Vector(1, 1),\r\n                directions: [enumDirection.bottom],\r\n            },\r\n        ]);\r\n        entity.components.Storage.maximumStorage = storageSize;\r\n        entity.components.WiredPins.setSlots([{\r\n                pos: new Vector(1, 1),\r\n                direction: enumDirection.right,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 1),\r\n                direction: enumDirection.left,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n        ]);\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/storage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1281,
    "kind": "variable",
    "name": "storageSize",
    "memberof": "js/game/buildings/storage.js",
    "static": true,
    "longname": "js/game/buildings/storage.js~storageSize",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/buildings/storage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1282,
    "kind": "class",
    "name": "MetaStorageBuilding",
    "memberof": "js/game/buildings/storage.js",
    "static": true,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/storage.js",
    "importStyle": "{MetaStorageBuilding}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1283,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 1284,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1285,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1286,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1287,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1288,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1289,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1290,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1291,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1292,
    "kind": "method",
    "name": "getAdditionalStatistics",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#getAdditionalStatistics",
    "access": "public",
    "description": "",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<[string, string]>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<[string, string]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1293,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1294,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1295,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1296,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/storage.js~MetaStorageBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/storage.js~MetaStorageBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1297,
    "kind": "file",
    "name": "js/game/buildings/transistor.js",
    "content": "import { generateMatrixRotations } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { enumLogicGateType, LogicGateComponent } from \"../components/logic_gate\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaTransistorBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"transistor\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaTransistorBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaTransistorBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaTransistorBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaTransistorBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaTransistorBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaTransistorBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaTransistorBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaTransistorBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaTransistorBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaTransistorBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaTransistorBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaTransistorBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new WiredPinsComponent({\r\n            slots: [{\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.top,\r\n                    type: enumPinSlotType.logicalEjector,\r\n                },\r\n                {\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.left,\r\n                    type: enumPinSlotType.logicalAcceptor,\r\n                },\r\n                {\r\n                    pos: new Vector(0, 0),\r\n                    direction: enumDirection.bottom,\r\n                    type: enumPinSlotType.logicalAcceptor,\r\n                },\r\n            ],\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new LogicGateComponent({\r\n            type: enumLogicGateType.transistor,\r\n        })\r\n    ),\r\n];\r\n\r\nMetaTransistorBuilding.variants = {\r\n    mirrored: \"mirrored\",\r\n};\r\n\r\nMetaTransistorBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 1, 1, 0, 0, 1, 0]),\r\n    [MetaTransistorBuilding.variants.mirrored]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 0, 1, 1, 0, 1, 0]),\r\n};\r\n\r\nMetaTransistorBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n    [MetaTransistorBuilding.variants.mirrored]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaTransistorBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#823cab\",\r\n    [MetaTransistorBuilding.variants.mirrored]: () => \"#823cab\",\r\n};\r\n\r\nMetaTransistorBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaTransistorBuilding.variants.mirrored]: () => true,\r\n};\r\n\r\nMetaTransistorBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaTransistorBuilding.variants.mirrored]: () => true,\r\n};\r\n\r\nMetaTransistorBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => false,\r\n    [MetaTransistorBuilding.variants.mirrored]: () => false,\r\n};\r\n\r\nMetaTransistorBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n    [MetaTransistorBuilding.variants.mirrored]: () => \"wires\",\r\n};\r\n\r\nMetaTransistorBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_logic_gates),\r\n    [MetaTransistorBuilding.variants.mirrored]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_logic_gates),\r\n};\r\n\r\nMetaTransistorBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"wires\",\r\n    [MetaTransistorBuilding.variants.mirrored]: root => \"wires\",\r\n};\r\n\r\nMetaTransistorBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.slots[1].direction = enumDirection.left;\r\n    },\r\n\r\n    [MetaTransistorBuilding.variants.mirrored]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.slots[1].direction = enumDirection.right;\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/transistor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1298,
    "kind": "class",
    "name": "MetaTransistorBuilding",
    "memberof": "js/game/buildings/transistor.js",
    "static": true,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/transistor.js",
    "importStyle": "{MetaTransistorBuilding}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1299,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1300,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1301,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1302,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1303,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1304,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1305,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1306,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1307,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1308,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1309,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1310,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1311,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/transistor.js~MetaTransistorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/transistor.js~MetaTransistorBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1312,
    "kind": "file",
    "name": "js/game/buildings/trash.js",
    "content": "import { generateMatrixRotations } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nconst overlayMatrix = generateMatrixRotations([1, 1, 0, 1, 1, 1, 0, 1, 1]);\r\n\r\nexport class MetaTrashBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"trash\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaTrashBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaTrashBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaTrashBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaTrashBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaTrashBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaTrashBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaTrashBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaTrashBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaTrashBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaTrashBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaTrashBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaTrashBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemAcceptorComponent({\r\n            slots: [{\r\n                pos: new Vector(0, 0),\r\n                directions: [\r\n                    enumDirection.top,\r\n                    enumDirection.right,\r\n                    enumDirection.bottom,\r\n                    enumDirection.left,\r\n                ],\r\n            }, ],\r\n        })\r\n    ),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemProcessorComponent({\r\n            inputsPerCharge: 1,\r\n            processorType: enumItemProcessorTypes.trash,\r\n        })\r\n    ),\r\n];\r\n\r\nMetaTrashBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([1, 1, 0, 1, 1, 1, 0, 1, 1]),\r\n};\r\n\r\nMetaTrashBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaTrashBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#ed1d5d\",\r\n};\r\n\r\nMetaTrashBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaTrashBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaTrashBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => false,\r\n};\r\n\r\nMetaTrashBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n};\r\n\r\nMetaTrashBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => null,\r\n};\r\n\r\nMetaTrashBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_cutter_and_trash),\r\n};\r\n\r\nMetaTrashBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.ItemAcceptor.setSlots([{\r\n            pos: new Vector(0, 0),\r\n            directions: [\r\n                enumDirection.top,\r\n                enumDirection.right,\r\n                enumDirection.bottom,\r\n                enumDirection.left,\r\n            ],\r\n        }, ]);\r\n\r\n        entity.components.ItemProcessor.inputsPerCharge = 1;\r\n\r\n        entity.components.ItemProcessor.type = enumItemProcessorTypes.trash;\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/trash.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1313,
    "kind": "variable",
    "name": "overlayMatrix",
    "memberof": "js/game/buildings/trash.js",
    "static": true,
    "longname": "js/game/buildings/trash.js~overlayMatrix",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/buildings/trash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1314,
    "kind": "class",
    "name": "MetaTrashBuilding",
    "memberof": "js/game/buildings/trash.js",
    "static": true,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/trash.js",
    "importStyle": "{MetaTrashBuilding}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1315,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/trash.js~MetaTrashBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1316,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/trash.js~MetaTrashBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1317,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/trash.js~MetaTrashBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1318,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/trash.js~MetaTrashBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1319,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/trash.js~MetaTrashBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1320,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/trash.js~MetaTrashBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1321,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/trash.js~MetaTrashBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1322,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/trash.js~MetaTrashBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1323,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/trash.js~MetaTrashBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1324,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/trash.js~MetaTrashBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1325,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/trash.js~MetaTrashBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1326,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/trash.js~MetaTrashBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1327,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/trash.js~MetaTrashBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/trash.js~MetaTrashBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1328,
    "kind": "file",
    "name": "js/game/buildings/underground_belt.js",
    "content": "import { Loader } from \"../../core/loader\";\r\nimport { enumDirection, Vector, enumAngleToDirection, enumDirectionToVector } from \"../../core/vector\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumUndergroundBeltMode, UndergroundBeltComponent } from \"../components/underground_belt\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding, defaultBuildingVariant } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { globalConfig } from \"../../core/config\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { formatItemsPerSecond, generateMatrixRotations } from \"../../core/utils\";\r\nimport { T } from \"../../translations\";\r\n\r\nexport class MetaUndergroundBeltBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"underground_belt\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant, rotationVariant) {\r\n        return MetaUndergroundBeltBuilding.silhouetteColorsByRotation[rotationVariant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaUndergroundBeltBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaUndergroundBeltBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaUndergroundBeltBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaUndergroundBeltBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaUndergroundBeltBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaUndergroundBeltBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaUndergroundBeltBuilding.overlayMatricesByRotation[rotationVariant](\r\n            entity,\r\n            rotationVariant\r\n        );\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaUndergroundBeltBuilding.renderPins[variant]();\r\n    }\r\n\r\n    getFlipOrientationAfterPlacement() {\r\n        return true;\r\n    }\r\n\r\n    getStayInPlacementMode() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    getPreviewSprite(rotationVariant, variant) {\r\n        let suffix = \"\";\r\n        if (variant !== defaultBuildingVariant) {\r\n            suffix = \"-\" + variant;\r\n        }\r\n\r\n        switch (MetaUndergroundBeltBuilding.rotationVariantToMode[rotationVariant]) {\r\n            case enumUndergroundBeltMode.sender:\r\n                return Loader.getSprite(\"sprites/buildings/underground_belt_entry\" + suffix + \".png\");\r\n            case enumUndergroundBeltMode.receiver:\r\n                return Loader.getSprite(\"sprites/buildings/underground_belt_exit\" + suffix + \".png\");\r\n            default:\r\n                assertAlways(false, \"Invalid rotation variant\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    getBlueprintSprite(rotationVariant, variant) {\r\n        let suffix = \"\";\r\n        if (variant !== defaultBuildingVariant) {\r\n            suffix = \"-\" + variant;\r\n        }\r\n\r\n        switch (MetaUndergroundBeltBuilding.rotationVariantToMode[rotationVariant]) {\r\n            case enumUndergroundBeltMode.sender:\r\n                return Loader.getSprite(\"sprites/blueprints/underground_belt_entry\" + suffix + \".png\");\r\n            case enumUndergroundBeltMode.receiver:\r\n                return Loader.getSprite(\"sprites/blueprints/underground_belt_exit\" + suffix + \".png\");\r\n            default:\r\n                assertAlways(false, \"Invalid rotation variant\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    getSprite(rotationVariant, variant) {\r\n        return this.getPreviewSprite(rotationVariant, variant);\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaUndergroundBeltBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * Should compute the optimal rotation variant on the given tile\r\n     * @param {object} param0\r\n     * @param {GameRoot} param0.root\r\n     * @param {Vector} param0.tile\r\n     * @param {number} param0.rotation\r\n     * @param {string} param0.variant\r\n     * @param {Layer} param0.layer\r\n     * @return {{ rotation: number, rotationVariant: number, connectedEntities?: Array<Entity> }}\r\n     */\r\n    computeOptimalDirectionAndRotationVariantAtTile({ root, tile, rotation, variant, layer }) {\r\n        const searchDirection = enumAngleToDirection[rotation];\r\n        const searchVector = enumDirectionToVector[searchDirection];\r\n        const tier = MetaUndergroundBeltBuilding.variantToTier[variant];\r\n\r\n        const targetRotation = (rotation + 180) % 360;\r\n        const targetSenderRotation = rotation;\r\n\r\n        for (\r\n            let searchOffset = 1; searchOffset <= globalConfig.undergroundBeltMaxTilesByTier[tier];\r\n            ++searchOffset\r\n        ) {\r\n            tile = tile.addScalars(searchVector.x, searchVector.y);\r\n\r\n            const contents = root.map.getTileContent(tile, \"regular\");\r\n            if (contents) {\r\n                const undergroundComp = contents.components.UndergroundBelt;\r\n                if (undergroundComp && undergroundComp.tier === tier) {\r\n                    const staticComp = contents.components.StaticMapEntity;\r\n                    if (staticComp.rotation === targetRotation) {\r\n                        if (undergroundComp.mode !== enumUndergroundBeltMode.sender) {\r\n                            // If we encounter an underground receiver on our way which is also faced in our direction, we don't accept that\r\n                            break;\r\n                        }\r\n                        return {\r\n                            rotation: targetRotation,\r\n                            rotationVariant: 1,\r\n                            connectedEntities: [contents],\r\n                        };\r\n                    } else if (staticComp.rotation === targetSenderRotation) {\r\n                        // Draw connections to receivers\r\n                        if (undergroundComp.mode === enumUndergroundBeltMode.receiver) {\r\n                            return {\r\n                                rotation: rotation,\r\n                                rotationVariant: 0,\r\n                                connectedEntities: [contents],\r\n                            };\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            rotation,\r\n            rotationVariant: 0,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        const mode = MetaUndergroundBeltBuilding.rotationVariantToMode[rotationVariant];\r\n        entity.components.UndergroundBelt.tier = MetaUndergroundBeltBuilding.variantToTier[variant];\r\n        MetaUndergroundBeltBuilding.componentVariationsByRotation[mode](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaUndergroundBeltBuilding.setupEntityComponents = [\r\n    // Required, since the item processor needs this.\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemEjectorComponent({\r\n            slots: [],\r\n        })\r\n    ),\r\n    entity => entity.addComponent(new UndergroundBeltComponent({})),\r\n    entity =>\r\n    entity.addComponent(\r\n        new ItemAcceptorComponent({\r\n            slots: [],\r\n        })\r\n    ),\r\n];\r\n\r\nMetaUndergroundBeltBuilding.rotationVariants = [0, 1];\r\n\r\nMetaUndergroundBeltBuilding.variants = {\r\n    tier2: \"tier2\",\r\n};\r\n\r\nMetaUndergroundBeltBuilding.overlayMatricesByRotation = [\r\n    // Sender\r\n    (entity, rotationVariant) => generateMatrixRotations([1, 1, 1, 0, 1, 0, 0, 1, 0]),\r\n    // Receiver\r\n    (entity, rotationVariant) => generateMatrixRotations([0, 1, 0, 0, 1, 0, 1, 1, 1]),\r\n];\r\n\r\nMetaUndergroundBeltBuilding.rotationVariantToMode = [\r\n    enumUndergroundBeltMode.sender,\r\n    enumUndergroundBeltMode.receiver,\r\n];\r\n\r\nMetaUndergroundBeltBuilding.variantToTier = {\r\n    [defaultBuildingVariant]: 0,\r\n    [MetaUndergroundBeltBuilding.variants.tier2]: 1,\r\n};\r\n\r\nMetaUndergroundBeltBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n    [MetaUndergroundBeltBuilding.variants.tier2]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaUndergroundBeltBuilding.silhouetteColorsByRotation = [() => \"#6d9dff\", () => \"#71ff9c\"];\r\n\r\nMetaUndergroundBeltBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaUndergroundBeltBuilding.variants.tier2]: () => true,\r\n};\r\n\r\nMetaUndergroundBeltBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaUndergroundBeltBuilding.variants.tier2]: () => true,\r\n};\r\n\r\nMetaUndergroundBeltBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => null,\r\n    [MetaUndergroundBeltBuilding.variants.tier2]: () => null,\r\n};\r\n\r\nMetaUndergroundBeltBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => null,\r\n    [MetaUndergroundBeltBuilding.variants.tier2]: () => null,\r\n};\r\n\r\nMetaUndergroundBeltBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root => root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_tunnel),\r\n    [MetaUndergroundBeltBuilding.variants.tier2]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_underground_belt_tier_2),\r\n};\r\n\r\nMetaUndergroundBeltBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"regular\",\r\n    [MetaUndergroundBeltBuilding.variants.tier2]: root => \"regular\",\r\n};\r\n\r\nMetaUndergroundBeltBuilding.additionalStatistics = {\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [defaultBuildingVariant]: root => {\r\n        const rangeTiles = globalConfig.undergroundBeltMaxTilesByTier[0];\r\n\r\n        const beltSpeed = root.hubGoals.getUndergroundBeltBaseSpeed();\r\n        return [\r\n            [\r\n                T.ingame.buildingPlacement.infoTexts.range,\r\n                T.ingame.buildingPlacement.infoTexts.tiles.replace(\"<x>\", \"\" + rangeTiles),\r\n            ],\r\n            [T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(beltSpeed)],\r\n        ];\r\n    },\r\n\r\n    /**\r\n     * @param {*} root\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    [MetaUndergroundBeltBuilding.variants.tier2]: root => {\r\n        const rangeTiles = globalConfig.undergroundBeltMaxTilesByTier[1];\r\n\r\n        const beltSpeed = root.hubGoals.getUndergroundBeltBaseSpeed();\r\n        return [\r\n            [\r\n                T.ingame.buildingPlacement.infoTexts.range,\r\n                T.ingame.buildingPlacement.infoTexts.tiles.replace(\"<x>\", \"\" + rangeTiles),\r\n            ],\r\n            [T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(beltSpeed)],\r\n        ];\r\n    },\r\n};\r\n\r\nMetaUndergroundBeltBuilding.componentVariationsByRotation = {\r\n    [enumUndergroundBeltMode.sender]: (entity, rotationVariant) => {\r\n        entity.components.UndergroundBelt.mode = enumUndergroundBeltMode.sender;\r\n        entity.components.ItemEjector.setSlots([]);\r\n        entity.components.ItemAcceptor.setSlots([{\r\n            pos: new Vector(0, 0),\r\n            directions: [enumDirection.bottom],\r\n        }, ]);\r\n    },\r\n\r\n    [enumUndergroundBeltMode.receiver]: (entity, rotationVariant) => {\r\n        entity.components.UndergroundBelt.mode = enumUndergroundBeltMode.receiver;\r\n        entity.components.ItemAcceptor.setSlots([]);\r\n        entity.components.ItemEjector.setSlots([{\r\n            pos: new Vector(0, 0),\r\n            direction: enumDirection.top,\r\n        }, ]);\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/underground_belt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1329,
    "kind": "class",
    "name": "MetaUndergroundBeltBuilding",
    "memberof": "js/game/buildings/underground_belt.js",
    "static": true,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/underground_belt.js",
    "importStyle": "{MetaUndergroundBeltBuilding}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1330,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1331,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1332,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1333,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1334,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1335,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1336,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1337,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1338,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1339,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1340,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1341,
    "kind": "method",
    "name": "getFlipOrientationAfterPlacement",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getFlipOrientationAfterPlacement",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1342,
    "kind": "method",
    "name": "getStayInPlacementMode",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getStayInPlacementMode",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1343,
    "kind": "method",
    "name": "getPreviewSprite",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getPreviewSprite",
    "access": "public",
    "description": "",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1344,
    "kind": "method",
    "name": "getBlueprintSprite",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getBlueprintSprite",
    "access": "public",
    "description": "",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1345,
    "kind": "method",
    "name": "getSprite",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#getSprite",
    "access": "public",
    "description": "",
    "lineNumber": 160,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1346,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 168,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1347,
    "kind": "method",
    "name": "computeOptimalDirectionAndRotationVariantAtTile",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#computeOptimalDirectionAndRotationVariantAtTile",
    "access": "public",
    "description": "Should compute the optimal rotation variant on the given tile",
    "lineNumber": 182,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.tile",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.layer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{ rotation: number, rotationVariant: number, connectedEntities?: Array<Entity> }"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1348,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/underground_belt.js~MetaUndergroundBeltBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 238,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1349,
    "kind": "file",
    "name": "js/game/buildings/virtual_processor.js",
    "content": "import { Vector, enumDirection } from \"../../core/vector\";\r\nimport { LogicGateComponent, enumLogicGateType } from \"../components/logic_gate\";\r\nimport { WiredPinsComponent, enumPinSlotType } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { MetaCutterBuilding } from \"./cutter\";\r\nimport { MetaPainterBuilding } from \"./painter\";\r\nimport { MetaRotaterBuilding } from \"./rotater\";\r\nimport { MetaStackerBuilding } from \"./stacker\";\r\n\r\nexport class MetaVirtualProcessorBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"virtual_processor\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaVirtualProcessorBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaVirtualProcessorBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaVirtualProcessorBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaVirtualProcessorBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaVirtualProcessorBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaVirtualProcessorBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaVirtualProcessorBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaVirtualProcessorBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaVirtualProcessorBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaVirtualProcessorBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaVirtualProcessorBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaVirtualProcessorBuilding.setupEntityComponents = [\r\n    entity =>\r\n    entity.addComponent(\r\n        new WiredPinsComponent({\r\n            slots: [],\r\n        })\r\n    ),\r\n    entity => entity.addComponent(new LogicGateComponent({})),\r\n];\r\n\r\nMetaVirtualProcessorBuilding.variants = {\r\n    rotater: \"rotater\",\r\n    unstacker: \"unstacker\",\r\n    stacker: \"stacker\",\r\n    painter: \"painter\",\r\n};\r\n\r\nMetaVirtualProcessorBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => null,\r\n    [MetaVirtualProcessorBuilding.variants.rotater]: (entity, rotationVariant) => null,\r\n    [MetaVirtualProcessorBuilding.variants.unstacker]: (entity, rotationVariant) => null,\r\n    [MetaVirtualProcessorBuilding.variants.stacker]: (entity, rotationVariant) => null,\r\n    [MetaVirtualProcessorBuilding.variants.painter]: (entity, rotationVariant) => null,\r\n};\r\n\r\nMetaVirtualProcessorBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_virtual_processing),\r\n    [MetaVirtualProcessorBuilding.variants.rotater]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_virtual_processing),\r\n    [MetaVirtualProcessorBuilding.variants.unstacker]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_virtual_processing),\r\n    [MetaVirtualProcessorBuilding.variants.stacker]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_virtual_processing),\r\n    [MetaVirtualProcessorBuilding.variants.painter]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_virtual_processing),\r\n};\r\n\r\nMetaVirtualProcessorBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n    [MetaVirtualProcessorBuilding.variants.rotater]: () => new Vector(1, 1),\r\n    [MetaVirtualProcessorBuilding.variants.unstacker]: () => new Vector(1, 1),\r\n    [MetaVirtualProcessorBuilding.variants.stacker]: () => new Vector(1, 1),\r\n    [MetaVirtualProcessorBuilding.variants.painter]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaVirtualProcessorBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaVirtualProcessorBuilding.variants.rotater]: () => true,\r\n    [MetaVirtualProcessorBuilding.variants.unstacker]: () => true,\r\n    [MetaVirtualProcessorBuilding.variants.stacker]: () => true,\r\n    [MetaVirtualProcessorBuilding.variants.painter]: () => true,\r\n};\r\n\r\nMetaVirtualProcessorBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaVirtualProcessorBuilding.variants.rotater]: () => true,\r\n    [MetaVirtualProcessorBuilding.variants.unstacker]: () => true,\r\n    [MetaVirtualProcessorBuilding.variants.stacker]: () => true,\r\n    [MetaVirtualProcessorBuilding.variants.painter]: () => true,\r\n};\r\n\r\nMetaVirtualProcessorBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => false,\r\n    [MetaVirtualProcessorBuilding.variants.rotater]: () => false,\r\n    [MetaVirtualProcessorBuilding.variants.unstacker]: () => false,\r\n    [MetaVirtualProcessorBuilding.variants.stacker]: () => false,\r\n    [MetaVirtualProcessorBuilding.variants.painter]: () => false,\r\n};\r\n\r\nMetaVirtualProcessorBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n    [MetaVirtualProcessorBuilding.variants.rotater]: () => \"wires\",\r\n    [MetaVirtualProcessorBuilding.variants.unstacker]: () => \"wires\",\r\n    [MetaVirtualProcessorBuilding.variants.stacker]: () => \"wires\",\r\n    [MetaVirtualProcessorBuilding.variants.painter]: () => \"wires\",\r\n};\r\n\r\nMetaVirtualProcessorBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"wires\",\r\n    [MetaVirtualProcessorBuilding.variants.rotater]: root => \"wires\",\r\n    [MetaVirtualProcessorBuilding.variants.unstacker]: root => \"wires\",\r\n    [MetaVirtualProcessorBuilding.variants.stacker]: root => \"wires\",\r\n    [MetaVirtualProcessorBuilding.variants.painter]: root => \"wires\",\r\n};\r\n\r\nMetaVirtualProcessorBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => MetaCutterBuilding.silhouetteColors[defaultBuildingVariant],\r\n    [MetaVirtualProcessorBuilding.variants.rotater]: () =>\r\n        MetaRotaterBuilding.silhouetteColors[defaultBuildingVariant],\r\n    [MetaVirtualProcessorBuilding.variants.unstacker]: () =>\r\n        MetaStackerBuilding.silhouetteColors[defaultBuildingVariant],\r\n    [MetaVirtualProcessorBuilding.variants.stacker]: () =>\r\n        MetaStackerBuilding.silhouetteColors[defaultBuildingVariant],\r\n    [MetaVirtualProcessorBuilding.variants.painter]: () =>\r\n        MetaPainterBuilding.silhouetteColors[defaultBuildingVariant],\r\n};\r\n\r\nMetaVirtualProcessorBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.left,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.right,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.bottom,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n        ]);\r\n\r\n        entity.components.LogicGate.type = enumLogicGateType.cutter;\r\n    },\r\n\r\n    [MetaVirtualProcessorBuilding.variants.rotater]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.bottom,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n        ]);\r\n\r\n        entity.components.LogicGate.type = enumLogicGateType.rotater;\r\n    },\r\n\r\n    [MetaVirtualProcessorBuilding.variants.unstacker]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.left,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.right,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.bottom,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n        ]);\r\n\r\n        entity.components.LogicGate.type = enumLogicGateType.unstacker;\r\n    },\r\n\r\n    [MetaVirtualProcessorBuilding.variants.stacker]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.bottom,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.right,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n        ]);\r\n\r\n        entity.components.LogicGate.type = enumLogicGateType.stacker;\r\n    },\r\n\r\n    [MetaVirtualProcessorBuilding.variants.painter]: (entity, rotationVariant) => {\r\n        entity.components.WiredPins.setSlots([{\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.top,\r\n                type: enumPinSlotType.logicalEjector,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.bottom,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n            {\r\n                pos: new Vector(0, 0),\r\n                direction: enumDirection.right,\r\n                type: enumPinSlotType.logicalAcceptor,\r\n            },\r\n        ]);\r\n\r\n        entity.components.LogicGate.type = enumLogicGateType.painter;\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/virtual_processor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1350,
    "kind": "class",
    "name": "MetaVirtualProcessorBuilding",
    "memberof": "js/game/buildings/virtual_processor.js",
    "static": true,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/virtual_processor.js",
    "importStyle": "{MetaVirtualProcessorBuilding}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1351,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1352,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1353,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1354,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1355,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1356,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1357,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1358,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1359,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1360,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1361,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1362,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1363,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/virtual_processor.js~MetaVirtualProcessorBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1364,
    "kind": "file",
    "name": "js/game/buildings/wire.js",
    "content": "import { Loader } from \"../../core/loader\";\r\nimport { generateMatrixRotations } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { SOUNDS } from \"../../platform/sound\";\r\nimport { enumWireType, WireComponent } from \"../components/wire\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaWireBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"wire\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaWireBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaWireBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaWireBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaWireBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaWireBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaWireBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaWireBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaWireBuilding.overlayMatrices[\r\n            MetaWireBuilding.rotationVariantToType[rotationVariant]\r\n        ](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaWireBuilding.renderPins[variant]();\r\n    }\r\n\r\n    getHasDirectionLockAvailable() {\r\n        return true;\r\n    }\r\n\r\n    getStayInPlacementMode(variant) {\r\n        return true;\r\n    }\r\n\r\n    getPlacementSound(variant) {\r\n        return MetaWireBuilding.placementSounds[variant];\r\n    }\r\n\r\n    getRotateAutomaticallyWhilePlacing(variant) {\r\n        return true;\r\n    }\r\n\r\n    getSprite(variant) {\r\n        return null;\r\n    }\r\n\r\n    getIsReplaceable(variant) {\r\n        return MetaWireBuilding.isReplaceable[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaWireBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaWireBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @returns {import(\"../../core/draw_utils\").AtlasSprite}\r\n     */\r\n    getPreviewSprite(rotationVariant, variant) {\r\n        const wireVariant = MetaWireBuilding.wireVariantToVariant[variant];\r\n        switch (MetaWireBuilding.rotationVariantToType[rotationVariant]) {\r\n            case enumWireType.forward:\r\n                {\r\n                    return Loader.getSprite(\"sprites/wires/sets/\" + wireVariant + \"_forward.png\");\r\n                }\r\n            case enumWireType.turn:\r\n                {\r\n                    return Loader.getSprite(\"sprites/wires/sets/\" + wireVariant + \"_turn.png\");\r\n                }\r\n            case enumWireType.split:\r\n                {\r\n                    return Loader.getSprite(\"sprites/wires/sets/\" + wireVariant + \"_split.png\");\r\n                }\r\n            case enumWireType.cross:\r\n                {\r\n                    return Loader.getSprite(\"sprites/wires/sets/\" + wireVariant + \"_cross.png\");\r\n                }\r\n            default:\r\n                {\r\n                    assertAlways(false, \"Invalid wire rotation variant\");\r\n                }\r\n        }\r\n    }\r\n\r\n    getBlueprintSprite(rotationVariant, variant) {\r\n        return this.getPreviewSprite(rotationVariant, variant);\r\n    }\r\n\r\n    /**\r\n     * Should compute the optimal rotation variant on the given tile\r\n     * @param {object} param0\r\n     * @param {GameRoot} param0.root\r\n     * @param {Vector} param0.tile\r\n     * @param {number} param0.rotation\r\n     * @param {string} param0.variant\r\n     * @param {string} param0.layer\r\n     * @return {{ rotation: number, rotationVariant: number, connectedEntities?: Array<Entity> }}\r\n     */\r\n    computeOptimalDirectionAndRotationVariantAtTile({ root, tile, rotation, variant, layer }) {\r\n        const wireVariant = MetaWireBuilding.wireVariantToVariant[variant];\r\n        const connections = {\r\n            // @ts-ignore\r\n            top: root.logic.computeWireEdgeStatus({ tile, wireVariant, edge: enumDirection.top }),\r\n            // @ts-ignore\r\n            right: root.logic.computeWireEdgeStatus({ tile, wireVariant, edge: enumDirection.right }),\r\n            // @ts-ignore\r\n            bottom: root.logic.computeWireEdgeStatus({ tile, wireVariant, edge: enumDirection.bottom }),\r\n            // @ts-ignore\r\n            left: root.logic.computeWireEdgeStatus({ tile, wireVariant, edge: enumDirection.left }),\r\n        };\r\n\r\n        let flag = 0;\r\n        flag |= connections.top ? 0x1000 : 0;\r\n        flag |= connections.right ? 0x100 : 0;\r\n        flag |= connections.bottom ? 0x10 : 0;\r\n        flag |= connections.left ? 0x1 : 0;\r\n\r\n        let targetType = enumWireType.forward;\r\n\r\n        // First, reset rotation\r\n        rotation = 0;\r\n\r\n        switch (flag) {\r\n            case 0x0000:\r\n                // Nothing\r\n                break;\r\n\r\n            case 0x0001:\r\n                // Left\r\n                rotation += 90;\r\n                break;\r\n\r\n            case 0x0010:\r\n                // Bottom\r\n                // END\r\n                break;\r\n\r\n            case 0x0011:\r\n                // Bottom | Left\r\n                targetType = enumWireType.turn;\r\n                rotation += 90;\r\n                break;\r\n\r\n            case 0x0100:\r\n                // Right\r\n                rotation += 90;\r\n                break;\r\n\r\n            case 0x0101:\r\n                // Right | Left\r\n                rotation += 90;\r\n                break;\r\n\r\n            case 0x0110:\r\n                // Right | Bottom\r\n                targetType = enumWireType.turn;\r\n                break;\r\n\r\n            case 0x0111:\r\n                // Right | Bottom | Left\r\n                targetType = enumWireType.split;\r\n                break;\r\n\r\n            case 0x1000:\r\n                // Top\r\n                break;\r\n\r\n            case 0x1001:\r\n                // Top | Left\r\n                targetType = enumWireType.turn;\r\n                rotation += 180;\r\n                break;\r\n\r\n            case 0x1010:\r\n                // Top | Bottom\r\n                break;\r\n\r\n            case 0x1011:\r\n                // Top | Bottom | Left\r\n                targetType = enumWireType.split;\r\n                rotation += 90;\r\n                break;\r\n\r\n            case 0x1100:\r\n                // Top | Right\r\n                targetType = enumWireType.turn;\r\n                rotation -= 90;\r\n                break;\r\n\r\n            case 0x1101:\r\n                // Top | Right | Left\r\n                targetType = enumWireType.split;\r\n                rotation += 180;\r\n                break;\r\n\r\n            case 0x1110:\r\n                // Top | Right | Bottom\r\n                targetType = enumWireType.split;\r\n                rotation -= 90;\r\n                break;\r\n\r\n            case 0x1111:\r\n                // Top | Right | Bottom | Left\r\n                targetType = enumWireType.cross;\r\n                break;\r\n        }\r\n\r\n        return {\r\n            // Clamp rotation\r\n            rotation: (rotation + 360 * 10) % 360,\r\n            rotationVariant: MetaWireBuilding.rotationVariantToType.indexOf(targetType),\r\n        };\r\n    }\r\n}\r\n\r\nMetaWireBuilding.setupEntityComponents = [entity => entity.addComponent(new WireComponent({}))];\r\n\r\nMetaWireBuilding.variants = {\r\n    second: \"second\",\r\n};\r\nMetaWireBuilding.wireVariants = {\r\n    first: \"first\",\r\n    [MetaWireBuilding.variants.second]: \"second\",\r\n};\r\n\r\nMetaWireBuilding.rotationVariants = [0, 1, 2, 3];\r\n\r\nMetaWireBuilding.placementSounds = {\r\n    [defaultBuildingVariant]: SOUNDS.placeBelt,\r\n    [MetaWireBuilding.variants.second]: SOUNDS.placeBelt,\r\n};\r\n\r\nMetaWireBuilding.wireVariantToVariant = {\r\n    [defaultBuildingVariant]: \"first\",\r\n    [MetaWireBuilding.variants.second]: \"second\",\r\n};\r\n\r\nMetaWireBuilding.rotationVariantToType = [\r\n    enumWireType.forward,\r\n    enumWireType.turn,\r\n    enumWireType.split,\r\n    enumWireType.cross,\r\n];\r\n\r\nMetaWireBuilding.overlayMatrices = {\r\n    [enumWireType.forward]: (entity, rotationVariant) => generateMatrixRotations([0, 1, 0, 0, 1, 0, 0, 1, 0]),\r\n    [enumWireType.split]: (entity, rotationVariant) => generateMatrixRotations([0, 0, 0, 1, 1, 1, 0, 1, 0]),\r\n    [enumWireType.turn]: (entity, rotationVariant) => generateMatrixRotations([0, 0, 0, 0, 1, 1, 0, 1, 0]),\r\n    [enumWireType.cross]: (entity, rotationVariant) => generateMatrixRotations([0, 1, 0, 1, 1, 1, 0, 1, 0]),\r\n};\r\n\r\nMetaWireBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_wires_painter_and_levers),\r\n    [MetaWireBuilding.variants.second]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_wires_painter_and_levers),\r\n};\r\n\r\nMetaWireBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n    [MetaWireBuilding.variants.second]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaWireBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaWireBuilding.variants.second]: () => true,\r\n};\r\n\r\nMetaWireBuilding.isReplaceable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaWireBuilding.variants.second]: () => true,\r\n};\r\n\r\nMetaWireBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => true,\r\n    [MetaWireBuilding.variants.second]: () => true,\r\n};\r\n\r\nMetaWireBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => null,\r\n    [MetaWireBuilding.variants.second]: () => null,\r\n};\r\n\r\nMetaWireBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n    [MetaWireBuilding.variants.second]: () => \"wires\",\r\n};\r\n\r\nMetaWireBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"wires\",\r\n    [MetaWireBuilding.variants.second]: root => \"wires\",\r\n};\r\n\r\nMetaWireBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#61ef6f\",\r\n    [MetaWireBuilding.variants.second]: () => \"#61ef6f\",\r\n};\r\n\r\nMetaWireBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {\r\n        entity.components.Wire.type = MetaWireBuilding.rotationVariantToType[rotationVariant];\r\n        entity.components.Wire.variant = \"first\";\r\n    },\r\n\r\n    [MetaWireBuilding.variants.second]: (entity, rotationVariant) => {\r\n        entity.components.Wire.type = MetaWireBuilding.rotationVariantToType[rotationVariant];\r\n        entity.components.Wire.variant = \"second\";\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/wire.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1365,
    "kind": "class",
    "name": "MetaWireBuilding",
    "memberof": "js/game/buildings/wire.js",
    "static": true,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/wire.js",
    "importStyle": "{MetaWireBuilding}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1366,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 1367,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1368,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1369,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1370,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1371,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1372,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1373,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1374,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1375,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1376,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1377,
    "kind": "method",
    "name": "getHasDirectionLockAvailable",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getHasDirectionLockAvailable",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1378,
    "kind": "method",
    "name": "getStayInPlacementMode",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getStayInPlacementMode",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [
      {
        "name": "variant",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1379,
    "kind": "method",
    "name": "getPlacementSound",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getPlacementSound",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [
      {
        "name": "variant",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1380,
    "kind": "method",
    "name": "getRotateAutomaticallyWhilePlacing",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getRotateAutomaticallyWhilePlacing",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [
      {
        "name": "variant",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1381,
    "kind": "method",
    "name": "getSprite",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getSprite",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "params": [
      {
        "name": "variant",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1382,
    "kind": "method",
    "name": "getIsReplaceable",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getIsReplaceable",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [
      {
        "name": "variant",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1383,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 132,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1384,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1385,
    "kind": "method",
    "name": "getPreviewSprite",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getPreviewSprite",
    "access": "public",
    "description": "",
    "lineNumber": 151,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{import(\"../../core/draw_utils\").AtlasSprite}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "import(\"../../core/draw_utils\").AtlasSprite"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1386,
    "kind": "method",
    "name": "getBlueprintSprite",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#getBlueprintSprite",
    "access": "public",
    "description": null,
    "lineNumber": 177,
    "undocument": true,
    "params": [
      {
        "name": "rotationVariant",
        "types": [
          "*"
        ]
      },
      {
        "name": "variant",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1387,
    "kind": "method",
    "name": "computeOptimalDirectionAndRotationVariantAtTile",
    "memberof": "js/game/buildings/wire.js~MetaWireBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire.js~MetaWireBuilding#computeOptimalDirectionAndRotationVariantAtTile",
    "access": "public",
    "description": "Should compute the optimal rotation variant on the given tile",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.tile",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.layer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{ rotation: number, rotationVariant: number, connectedEntities?: Array<Entity> }"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1388,
    "kind": "file",
    "name": "js/game/buildings/wire_tunnel.js",
    "content": "import { generateMatrixRotations } from \"../../core/utils\";\r\nimport { Vector } from \"../../core/vector\";\r\nimport { WireTunnelComponent } from \"../components/wire_tunnel\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaWireTunnelBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"wire_tunnel\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getSilhouetteColor(variant) {\r\n        return MetaWireTunnelBuilding.silhouetteColors[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return this.getAvailableVariants(root).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRemovable(variant) {\r\n        return MetaWireTunnelBuilding.isRemovable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getIsRotateable(variant) {\r\n        return MetaWireTunnelBuilding.isRotateable[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        const variants = MetaWireTunnelBuilding.avaibleVariants;\r\n\r\n        let available = [];\r\n        for (const variant in variants) {\r\n            if (variants[variant](root)) available.push(variant);\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant) {\r\n        // @ts-ignore\r\n        return MetaWireTunnelBuilding.layerByVariant[variant](root);\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant) {\r\n        return MetaWireTunnelBuilding.dimensions[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return MetaWireTunnelBuilding.layerPreview[variant]();\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        let matrices = MetaWireTunnelBuilding.overlayMatrices[variant](entity, rotationVariant);\r\n        return matrices ? matrices[rotation] : null;\r\n    }\r\n\r\n    /**\r\n     * @param {string} variant\r\n     */\r\n    getRenderPins(variant) {\r\n        return MetaWireTunnelBuilding.renderPins[variant]();\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        MetaWireTunnelBuilding.setupEntityComponents.forEach(func => func(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        MetaWireTunnelBuilding.componentVariations[variant](entity, rotationVariant);\r\n    }\r\n}\r\n\r\nMetaWireTunnelBuilding.setupEntityComponents = [entity => entity.addComponent(new WireTunnelComponent())];\r\n\r\nMetaWireTunnelBuilding.overlayMatrices = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) =>\r\n        generateMatrixRotations([0, 1, 0, 1, 1, 1, 0, 1, 0]),\r\n};\r\n\r\nMetaWireTunnelBuilding.dimensions = {\r\n    [defaultBuildingVariant]: () => new Vector(1, 1),\r\n};\r\n\r\nMetaWireTunnelBuilding.silhouetteColors = {\r\n    [defaultBuildingVariant]: () => \"#777a86\",\r\n};\r\n\r\nMetaWireTunnelBuilding.isRemovable = {\r\n    [defaultBuildingVariant]: () => true,\r\n};\r\n\r\nMetaWireTunnelBuilding.isRotateable = {\r\n    [defaultBuildingVariant]: () => false,\r\n};\r\n\r\nMetaWireTunnelBuilding.renderPins = {\r\n    [defaultBuildingVariant]: () => false,\r\n};\r\n\r\nMetaWireTunnelBuilding.layerPreview = {\r\n    [defaultBuildingVariant]: () => \"wires\",\r\n};\r\n\r\nMetaWireTunnelBuilding.avaibleVariants = {\r\n    [defaultBuildingVariant]: root =>\r\n        root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_wires_painter_and_levers),\r\n};\r\n\r\nMetaWireTunnelBuilding.layerByVariant = {\r\n    [defaultBuildingVariant]: root => \"wires\",\r\n};\r\n\r\nMetaWireTunnelBuilding.componentVariations = {\r\n    [defaultBuildingVariant]: (entity, rotationVariant) => {},\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/buildings/wire_tunnel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1389,
    "kind": "class",
    "name": "MetaWireTunnelBuilding",
    "memberof": "js/game/buildings/wire_tunnel.js",
    "static": true,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/buildings/wire_tunnel.js",
    "importStyle": "{MetaWireTunnelBuilding}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/meta_building.js~MetaBuilding"
    ]
  },
  {
    "__docId__": 1390,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 1391,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding#getSilhouetteColor",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1392,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding#getIsUnlocked",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1393,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding#getIsRemovable",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1394,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding#getIsRotateable",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1395,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1396,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1397,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding#getDimensions",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1398,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding#getShowLayerPreview",
    "access": "public",
    "description": "",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1399,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1400,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding#getRenderPins",
    "access": "public",
    "description": "",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1401,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding#setupEntityComponents",
    "access": "public",
    "description": "Creates the entity at the given location",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1402,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/buildings/wire_tunnel.js~MetaWireTunnelBuilding#updateVariants",
    "access": "public",
    "description": "",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1403,
    "kind": "file",
    "name": "js/game/building_codes.js",
    "content": "/* typehints:start */\r\nimport { MetaBuilding } from \"./meta_building\";\r\nimport { AtlasSprite } from \"../core/sprites\";\r\nimport { Vector } from \"../core/vector\";\r\n/* typehints:end */\r\n\r\n/**\r\n * @typedef {{\r\n *   metaClass: typeof MetaBuilding,\r\n *   metaInstance?: MetaBuilding,\r\n *   variant?: string,\r\n *   rotationVariant?: number,\r\n *   tileSize?: Vector,\r\n *   sprite?: AtlasSprite,\r\n *   blueprintSprite?: AtlasSprite,\r\n *   silhouetteColor?: string\r\n * }} BuildingVariantIdentifier\r\n */\r\n\r\n/**\r\n * Stores a lookup table for all building variants (for better performance)\r\n * @type {Object<number, BuildingVariantIdentifier>}\r\n */\r\nexport const gBuildingVariants = {\r\n    // Set later\r\n};\r\n\r\n/**\r\n * Registers a new variant\r\n * @param {typeof MetaBuilding} meta\r\n * @param {string} variant\r\n * @param {number} rotationVariant\r\n */\r\nexport function registerBuildingVariant(\r\n    meta,\r\n    variant = \"default\" /* @TODO: Circular dependency, actually its defaultBuildingVariant */ ,\r\n    rotationVariant = 0\r\n) {\r\n    // @ts-ignore\r\n    let code = getCodeFromBuildingData(new meta(), variant, rotationVariant);\r\n    assert(!gBuildingVariants[code], \"Duplicate id: \" + code);\r\n    gBuildingVariants[code] = {\r\n        metaClass: meta,\r\n        variant,\r\n        rotationVariant,\r\n        // @ts-ignore\r\n        tileSize: new meta().getDimensions(variant),\r\n    };\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} code\r\n * @returns {BuildingVariantIdentifier}\r\n */\r\nexport function getBuildingDataFromCode(code) {\r\n    assert(gBuildingVariants[code], \"Invalid building code: \" + code);\r\n    return gBuildingVariants[code];\r\n}\r\n\r\n/**\r\n * Finds the code for a given variant\r\n * @param {MetaBuilding} metaBuilding\r\n * @param {string} variant\r\n * @param {number} rotationVariant\r\n * @returns {String}\r\n */\r\nexport function getCodeFromBuildingData(metaBuilding, variant, rotationVariant = 0) {\r\n    return metaBuilding.getId() + \"/\" + variant + \"/\" + rotationVariant;\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/building_codes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1404,
    "kind": "typedef",
    "name": "BuildingVariantIdentifier",
    "memberof": "js/game/building_codes.js",
    "static": true,
    "longname": "js/game/building_codes.js~BuildingVariantIdentifier",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "{\n  metaClass: typeof MetaBuilding,\n  metaInstance?: MetaBuilding,\n  variant?: string,\n  rotationVariant?: number,\n  tileSize?: Vector,\n  sprite?: AtlasSprite,\n  blueprintSprite?: AtlasSprite,\n  silhouetteColor?: string\n}"
      ],
      "optional": false,
      "name": "BuildingVariantIdentifier"
    }
  },
  {
    "__docId__": 1405,
    "kind": "variable",
    "name": "gBuildingVariants",
    "memberof": "js/game/building_codes.js",
    "static": true,
    "longname": "js/game/building_codes.js~gBuildingVariants",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/building_codes.js",
    "importStyle": "{gBuildingVariants}",
    "description": "Stores a lookup table for all building variants (for better performance)",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Object<number, BuildingVariantIdentifier>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1406,
    "kind": "function",
    "name": "registerBuildingVariant",
    "memberof": "js/game/building_codes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/building_codes.js~registerBuildingVariant",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/building_codes.js",
    "importStyle": "{registerBuildingVariant}",
    "description": "Registers a new variant",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "typeof MetaBuilding"
        ],
        "spread": false,
        "optional": false,
        "name": "meta",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1407,
    "kind": "function",
    "name": "getBuildingDataFromCode",
    "memberof": "js/game/building_codes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/building_codes.js~getBuildingDataFromCode",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/building_codes.js",
    "importStyle": "{getBuildingDataFromCode}",
    "description": "",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BuildingVariantIdentifier}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BuildingVariantIdentifier"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1408,
    "kind": "function",
    "name": "getCodeFromBuildingData",
    "memberof": "js/game/building_codes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/building_codes.js~getCodeFromBuildingData",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/building_codes.js",
    "importStyle": "{getCodeFromBuildingData}",
    "description": "Finds the code for a given variant",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "MetaBuilding"
        ],
        "spread": false,
        "optional": false,
        "name": "metaBuilding",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1409,
    "kind": "file",
    "name": "js/game/camera.js",
    "content": "import { clickDetectorGlobals } from \"../core/click_detector\";\r\nimport { globalConfig, SUPPORT_TOUCH } from \"../core/config\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { Rectangle } from \"../core/rectangle\";\r\nimport { Signal, STOP_PROPAGATION } from \"../core/signal\";\r\nimport { clamp } from \"../core/utils\";\r\nimport { mixVector, Vector } from \"../core/vector\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\nimport { KEYMAPPINGS } from \"./key_action_mapper\";\r\nimport { GameRoot } from \"./root\";\r\n\r\nconst logger = createLogger(\"camera\");\r\n\r\nexport const USER_INTERACT_MOVE = \"move\";\r\nexport const USER_INTERACT_ZOOM = \"zoom\";\r\nexport const USER_INTERACT_TOUCHEND = \"touchend\";\r\n\r\nconst velocitySmoothing = 0.5;\r\nconst velocityFade = 0.98;\r\nconst velocityStrength = 0.4;\r\nconst velocityMax = 20;\r\nconst ticksBeforeErasingVelocity = 10;\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport const enumMouseButton = {\r\n    left: \"left\",\r\n    middle: \"middle\",\r\n    right: \"right\",\r\n};\r\n\r\nexport class Camera extends BasicSerializableObject {\r\n    constructor(root) {\r\n        super();\r\n\r\n        /** @type {GameRoot} */\r\n        this.root = root;\r\n\r\n        // Zoom level, 2 means double size\r\n\r\n        // Find optimal initial zoom\r\n\r\n        this.zoomLevel = this.findInitialZoom();\r\n        this.clampZoomLevel();\r\n\r\n        /** @type {Vector} */\r\n        this.center = new Vector(0, 0);\r\n\r\n        // Input handling\r\n        this.currentlyMoving = false;\r\n        this.lastMovingPosition = null;\r\n        this.lastMovingPositionLastTick = null;\r\n        this.numTicksStandingStill = null;\r\n        this.cameraUpdateTimeBucket = 0.0;\r\n        this.didMoveSinceTouchStart = false;\r\n        this.currentlyPinching = false;\r\n        this.lastPinchPositions = null;\r\n\r\n        this.keyboardForce = new Vector();\r\n\r\n        // Signal which gets emitted once the user changed something\r\n        this.userInteraction = new Signal();\r\n\r\n        /** @type {Vector} */\r\n        this.currentShake = new Vector(0, 0);\r\n\r\n        /** @type {Vector} */\r\n        this.currentPan = new Vector(0, 0);\r\n\r\n        // Set desired pan (camera movement)\r\n        /** @type {Vector} */\r\n        this.desiredPan = new Vector(0, 0);\r\n\r\n        // Set desired camera center\r\n        /** @type {Vector} */\r\n        this.desiredCenter = null;\r\n\r\n        // Set desired camera zoom\r\n        /** @type {number} */\r\n        this.desiredZoom = null;\r\n\r\n        /** @type {Vector} */\r\n        this.touchPostMoveVelocity = new Vector(0, 0);\r\n\r\n        // Handlers\r\n        this.downPreHandler = /** @type {TypedSignal<[Vector, enumMouseButton]>} */ (new Signal());\r\n        this.movePreHandler = /** @type {TypedSignal<[Vector]>} */ (new Signal());\r\n        // this.pinchPreHandler = /** @type {TypedSignal<[Vector]>} */ (new Signal());\r\n        this.upPostHandler = /** @type {TypedSignal<[Vector]>} */ (new Signal());\r\n\r\n        this.internalInitEvents();\r\n        this.clampZoomLevel();\r\n        this.bindKeys();\r\n        if (G_IS_DEV) {\r\n            window.addEventListener(\"keydown\", ev => {\r\n                if (ev.key === \"i\") {\r\n                    this.zoomLevel = 3;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // Serialization\r\n    static getId() {\r\n        return \"Camera\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            zoomLevel: types.float,\r\n            center: types.vector,\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        const errorCode = super.deserialize(data);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n\r\n        // Safety\r\n        this.clampZoomLevel();\r\n    }\r\n\r\n    // Simple getters & setters\r\n\r\n    addScreenShake(amount) {\r\n        const currentShakeAmount = this.currentShake.length();\r\n        const scale = 1 / (1 + 3 * currentShakeAmount);\r\n        this.currentShake.x = this.currentShake.x + 2 * (Math.random() - 0.5) * scale * amount;\r\n        this.currentShake.y = this.currentShake.y + 2 * (Math.random() - 0.5) * scale * amount;\r\n    }\r\n\r\n    /**\r\n     * Sets a point in world space to focus on\r\n     * @param {Vector} center\r\n     */\r\n    setDesiredCenter(center) {\r\n        this.desiredCenter = center.copy();\r\n        this.currentlyMoving = false;\r\n    }\r\n\r\n    /**\r\n     * Sets a desired zoom level\r\n     * @param {number} zoom\r\n     */\r\n    setDesiredZoom(zoom) {\r\n        this.desiredZoom = zoom;\r\n    }\r\n\r\n    /**\r\n     * Returns if this camera is currently moving by a non-user interaction\r\n     */\r\n    isCurrentlyMovingToDesiredCenter() {\r\n        return this.desiredCenter !== null;\r\n    }\r\n\r\n    /**\r\n     * Sets the camera pan, every frame the camera will move by this amount\r\n     * @param {Vector} pan\r\n     */\r\n    setPan(pan) {\r\n        this.desiredPan = pan.copy();\r\n    }\r\n\r\n    /**\r\n     * Finds a good initial zoom level\r\n     */\r\n    findInitialZoom() {\r\n        const desiredWorldSpaceWidth = 15 * globalConfig.tileSize;\r\n        const zoomLevelX = this.root.gameWidth / desiredWorldSpaceWidth;\r\n        const zoomLevelY = this.root.gameHeight / desiredWorldSpaceWidth;\r\n\r\n        const finalLevel = Math.min(zoomLevelX, zoomLevelY);\r\n        assert(\r\n            Number.isFinite(finalLevel) && finalLevel > 0,\r\n            \"Invalid zoom level computed for initial zoom: \" + finalLevel\r\n        );\r\n        return finalLevel;\r\n    }\r\n\r\n    /**\r\n     * Clears all animations\r\n     */\r\n    clearAnimations() {\r\n        this.touchPostMoveVelocity.x = 0;\r\n        this.touchPostMoveVelocity.y = 0;\r\n        this.desiredCenter = null;\r\n        this.desiredPan.x = 0;\r\n        this.desiredPan.y = 0;\r\n        this.currentPan.x = 0;\r\n        this.currentPan.y = 0;\r\n        this.currentlyPinching = false;\r\n        this.currentlyMoving = false;\r\n        this.lastMovingPosition = null;\r\n        this.didMoveSinceTouchStart = false;\r\n        this.desiredZoom = null;\r\n    }\r\n\r\n    /**\r\n     * Returns if the user is currently interacting with the camera\r\n     * @returns {boolean} true if the user interacts\r\n     */\r\n    isCurrentlyInteracting() {\r\n        if (this.currentlyPinching) {\r\n            return true;\r\n        }\r\n        if (this.currentlyMoving) {\r\n            // Only interacting if moved at least once\r\n            return this.didMoveSinceTouchStart;\r\n        }\r\n        if (this.touchPostMoveVelocity.lengthSquare() > 1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns if in the next frame the viewport will change\r\n     * @returns {boolean} true if it willchange\r\n     */\r\n    viewportWillChange() {\r\n        return this.desiredCenter !== null || this.desiredZoom !== null || this.isCurrentlyInteracting();\r\n    }\r\n\r\n    /**\r\n     * Cancels all interactions, that is user interaction and non user interaction\r\n     */\r\n    cancelAllInteractions() {\r\n        this.touchPostMoveVelocity = new Vector(0, 0);\r\n        this.desiredCenter = null;\r\n        this.currentlyMoving = false;\r\n        this.currentlyPinching = false;\r\n        this.desiredZoom = null;\r\n    }\r\n\r\n    /**\r\n     * Returns effective viewport width\r\n     */\r\n    getViewportWidth() {\r\n        return this.root.gameWidth / this.zoomLevel;\r\n    }\r\n\r\n    /**\r\n     * Returns effective viewport height\r\n     */\r\n    getViewportHeight() {\r\n        return this.root.gameHeight / this.zoomLevel;\r\n    }\r\n\r\n    /**\r\n     * Returns effective world space viewport left\r\n     */\r\n    getViewportLeft() {\r\n        return this.center.x - this.getViewportWidth() / 2 + (this.currentShake.x * 10) / this.zoomLevel;\r\n    }\r\n\r\n    /**\r\n     * Returns effective world space viewport right\r\n     */\r\n    getViewportRight() {\r\n        return this.center.x + this.getViewportWidth() / 2 + (this.currentShake.x * 10) / this.zoomLevel;\r\n    }\r\n\r\n    /**\r\n     * Returns effective world space viewport top\r\n     */\r\n    getViewportTop() {\r\n        return this.center.y - this.getViewportHeight() / 2 + (this.currentShake.x * 10) / this.zoomLevel;\r\n    }\r\n\r\n    /**\r\n     * Returns effective world space viewport bottom\r\n     */\r\n    getViewportBottom() {\r\n        return this.center.y + this.getViewportHeight() / 2 + (this.currentShake.x * 10) / this.zoomLevel;\r\n    }\r\n\r\n    /**\r\n     * Returns the visible world space rect\r\n     * @returns {Rectangle}\r\n     */\r\n    getVisibleRect() {\r\n        return Rectangle.fromTRBL(\r\n            Math.floor(this.getViewportTop()),\r\n            Math.ceil(this.getViewportRight()),\r\n            Math.ceil(this.getViewportBottom()),\r\n            Math.floor(this.getViewportLeft())\r\n        );\r\n    }\r\n\r\n    getIsMapOverlayActive() {\r\n        return this.zoomLevel < globalConfig.mapChunkOverviewMinZoom;\r\n    }\r\n\r\n    /**\r\n     * Attaches all event listeners\r\n     */\r\n    internalInitEvents() {\r\n        this.eventListenerTouchStart = this.onTouchStart.bind(this);\r\n        this.eventListenerTouchEnd = this.onTouchEnd.bind(this);\r\n        this.eventListenerTouchMove = this.onTouchMove.bind(this);\r\n        this.eventListenerMousewheel = this.onMouseWheel.bind(this);\r\n        this.eventListenerMouseDown = this.onMouseDown.bind(this);\r\n        this.eventListenerMouseMove = this.onMouseMove.bind(this);\r\n        this.eventListenerMouseUp = this.onMouseUp.bind(this);\r\n\r\n        if (SUPPORT_TOUCH) {\r\n            this.root.canvas.addEventListener(\"touchstart\", this.eventListenerTouchStart);\r\n            this.root.canvas.addEventListener(\"touchend\", this.eventListenerTouchEnd);\r\n            this.root.canvas.addEventListener(\"touchcancel\", this.eventListenerTouchEnd);\r\n            this.root.canvas.addEventListener(\"touchmove\", this.eventListenerTouchMove);\r\n        }\r\n\r\n        this.root.canvas.addEventListener(\"wheel\", this.eventListenerMousewheel);\r\n        this.root.canvas.addEventListener(\"mousedown\", this.eventListenerMouseDown);\r\n        this.root.canvas.addEventListener(\"mousemove\", this.eventListenerMouseMove);\r\n        window.addEventListener(\"mouseup\", this.eventListenerMouseUp);\r\n        // this.root.canvas.addEventListener(\"mouseout\", this.eventListenerMouseUp);\r\n    }\r\n\r\n    /**\r\n     * Cleans up all event listeners\r\n     */\r\n    cleanup() {\r\n        if (SUPPORT_TOUCH) {\r\n            this.root.canvas.removeEventListener(\"touchstart\", this.eventListenerTouchStart);\r\n            this.root.canvas.removeEventListener(\"touchend\", this.eventListenerTouchEnd);\r\n            this.root.canvas.removeEventListener(\"touchcancel\", this.eventListenerTouchEnd);\r\n            this.root.canvas.removeEventListener(\"touchmove\", this.eventListenerTouchMove);\r\n        }\r\n\r\n        this.root.canvas.removeEventListener(\"wheel\", this.eventListenerMousewheel);\r\n        this.root.canvas.removeEventListener(\"mousedown\", this.eventListenerMouseDown);\r\n        this.root.canvas.removeEventListener(\"mousemove\", this.eventListenerMouseMove);\r\n        window.removeEventListener(\"mouseup\", this.eventListenerMouseUp);\r\n        // this.root.canvas.removeEventListener(\"mouseout\", this.eventListenerMouseUp);\r\n    }\r\n\r\n    /**\r\n     * Binds the arrow keys\r\n     */\r\n    bindKeys() {\r\n        const mapper = this.root.keyMapper;\r\n        mapper.getBinding(KEYMAPPINGS.navigation.mapMoveUp).add(() => (this.keyboardForce.y = -1));\r\n        mapper.getBinding(KEYMAPPINGS.navigation.mapMoveDown).add(() => (this.keyboardForce.y = 1));\r\n        mapper.getBinding(KEYMAPPINGS.navigation.mapMoveRight).add(() => (this.keyboardForce.x = 1));\r\n        mapper.getBinding(KEYMAPPINGS.navigation.mapMoveLeft).add(() => (this.keyboardForce.x = -1));\r\n\r\n        mapper\r\n            .getBinding(KEYMAPPINGS.navigation.mapZoomIn)\r\n            .add(() => (this.desiredZoom = this.zoomLevel * 1.2));\r\n        mapper\r\n            .getBinding(KEYMAPPINGS.navigation.mapZoomOut)\r\n            .add(() => (this.desiredZoom = this.zoomLevel / 1.2));\r\n\r\n        mapper.getBinding(KEYMAPPINGS.navigation.centerMap).add(() => this.centerOnMap());\r\n    }\r\n\r\n    centerOnMap() {\r\n        this.desiredCenter = new Vector(0, 0);\r\n    }\r\n\r\n    /**\r\n     * Converts from screen to world space\r\n     * @param {Vector} screen\r\n     * @returns {Vector} world space\r\n     */\r\n    screenToWorld(screen) {\r\n        const centerSpace = screen.subScalars(this.root.gameWidth / 2, this.root.gameHeight / 2);\r\n        return centerSpace.divideScalar(this.zoomLevel).add(this.center);\r\n    }\r\n\r\n    /**\r\n     * Converts from world to screen space\r\n     * @param {Vector} world\r\n     * @returns {Vector} screen space\r\n     */\r\n    worldToScreen(world) {\r\n        const screenSpace = world.sub(this.center).multiplyScalar(this.zoomLevel);\r\n        return screenSpace.addScalars(this.root.gameWidth / 2, this.root.gameHeight / 2);\r\n    }\r\n\r\n    /**\r\n     * Returns if a point is on screen\r\n     * @param {Vector} point\r\n     * @returns {boolean} true if its on screen\r\n     */\r\n    isWorldPointOnScreen(point) {\r\n        const rect = this.getVisibleRect();\r\n        return rect.containsPoint(point.x, point.y);\r\n    }\r\n\r\n    /**\r\n     * Returns if we can further zoom in\r\n     * @returns {boolean}\r\n     */\r\n    canZoomIn() {\r\n        const maxLevel = this.root.app.platformWrapper.getMaximumZoom();\r\n        return this.zoomLevel <= maxLevel - 0.01;\r\n    }\r\n\r\n    /**\r\n     * Returns if we can further zoom out\r\n     * @returns {boolean}\r\n     */\r\n    canZoomOut() {\r\n        const minLevel = this.root.app.platformWrapper.getMinimumZoom();\r\n        return this.zoomLevel >= minLevel + 0.01;\r\n    }\r\n\r\n    // EVENTS\r\n\r\n    /**\r\n     * Checks if the mouse event is too close after a touch event and thus\r\n     * should get ignored\r\n     */\r\n    checkPreventDoubleMouse() {\r\n        if (performance.now() - clickDetectorGlobals.lastTouchTime < 1000.0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Mousedown handler\r\n     * @param {MouseEvent} event\r\n     */\r\n    onMouseDown(event) {\r\n        if (event.cancelable) {\r\n            event.preventDefault();\r\n            // event.stopPropagation();\r\n        }\r\n\r\n        if (!this.checkPreventDoubleMouse()) {\r\n            return;\r\n        }\r\n\r\n        this.touchPostMoveVelocity = new Vector(0, 0);\r\n        if (event.button === 0) {\r\n            this.combinedSingleTouchStartHandler(event.clientX, event.clientY);\r\n        } else if (event.button === 1) {\r\n            this.downPreHandler.dispatch(new Vector(event.clientX, event.clientY), enumMouseButton.middle);\r\n        } else if (event.button === 2) {\r\n            this.downPreHandler.dispatch(new Vector(event.clientX, event.clientY), enumMouseButton.right);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Mousemove handler\r\n     * @param {MouseEvent} event\r\n     */\r\n    onMouseMove(event) {\r\n        if (event.cancelable) {\r\n            event.preventDefault();\r\n            // event.stopPropagation();\r\n        }\r\n\r\n        if (!this.checkPreventDoubleMouse()) {\r\n            return;\r\n        }\r\n\r\n        if (event.button === 0) {\r\n            this.combinedSingleTouchMoveHandler(event.clientX, event.clientY);\r\n        }\r\n\r\n        // Clamp everything afterwards\r\n        this.clampZoomLevel();\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Mouseup handler\r\n     * @param {MouseEvent=} event\r\n     */\r\n    onMouseUp(event) {\r\n        if (event) {\r\n            if (event.cancelable) {\r\n                event.preventDefault();\r\n                // event.stopPropagation();\r\n            }\r\n        }\r\n\r\n        if (!this.checkPreventDoubleMouse()) {\r\n            return;\r\n        }\r\n\r\n        this.combinedSingleTouchStopHandler(event.clientX, event.clientY);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Mousewheel event\r\n     * @param {WheelEvent} event\r\n     */\r\n    onMouseWheel(event) {\r\n        if (event.cancelable) {\r\n            event.preventDefault();\r\n            // event.stopPropagation();\r\n        }\r\n        const prevZoom = this.zoomLevel;\r\n\r\n        const scale = 1 + 0.15 * this.root.app.settings.getScrollWheelSensitivity();\r\n        assert(Number.isFinite(scale), \"Got invalid scale in mouse wheel event: \" + event.deltaY);\r\n        assert(Number.isFinite(this.zoomLevel), \"Got invalid zoom level *before* wheel: \" + this.zoomLevel);\r\n        this.zoomLevel *= event.deltaY < 0 ? scale : 1 / scale;\r\n        assert(Number.isFinite(this.zoomLevel), \"Got invalid zoom level *after* wheel: \" + this.zoomLevel);\r\n\r\n        this.clampZoomLevel();\r\n        this.desiredZoom = null;\r\n\r\n        let mousePosition = this.root.app.mousePosition;\r\n        if (!this.root.app.settings.getAllSettings().zoomToCursor) {\r\n            mousePosition = new Vector(this.root.gameWidth / 2, this.root.gameHeight / 2);\r\n        }\r\n\r\n        if (mousePosition) {\r\n            const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n            const worldDelta = worldPos.sub(this.center);\r\n            const actualDelta = this.zoomLevel / prevZoom - 1;\r\n            this.center = this.center.add(worldDelta.multiplyScalar(actualDelta));\r\n            this.desiredCenter = null;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Touch start handler\r\n     * @param {TouchEvent} event\r\n     */\r\n    onTouchStart(event) {\r\n        if (event.cancelable) {\r\n            event.preventDefault();\r\n            // event.stopPropagation();\r\n        }\r\n\r\n        clickDetectorGlobals.lastTouchTime = performance.now();\r\n        this.touchPostMoveVelocity = new Vector(0, 0);\r\n\r\n        if (event.touches.length === 1) {\r\n            const touch = event.touches[0];\r\n            this.combinedSingleTouchStartHandler(touch.clientX, touch.clientY);\r\n        } else if (event.touches.length === 2) {\r\n            // if (this.pinchPreHandler.dispatch() === STOP_PROPAGATION) {\r\n            //     // Something prevented pinching\r\n            //     return false;\r\n            // }\r\n\r\n            const touch1 = event.touches[0];\r\n            const touch2 = event.touches[1];\r\n            this.currentlyMoving = false;\r\n            this.currentlyPinching = true;\r\n            this.lastPinchPositions = [\r\n                new Vector(touch1.clientX, touch1.clientY),\r\n                new Vector(touch2.clientX, touch2.clientY),\r\n            ];\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Touch move handler\r\n     * @param {TouchEvent} event\r\n     */\r\n    onTouchMove(event) {\r\n        if (event.cancelable) {\r\n            event.preventDefault();\r\n            // event.stopPropagation();\r\n        }\r\n\r\n        clickDetectorGlobals.lastTouchTime = performance.now();\r\n\r\n        if (event.touches.length === 1) {\r\n            const touch = event.touches[0];\r\n            this.combinedSingleTouchMoveHandler(touch.clientX, touch.clientY);\r\n        } else if (event.touches.length === 2) {\r\n            if (this.currentlyPinching) {\r\n                const touch1 = event.touches[0];\r\n                const touch2 = event.touches[1];\r\n\r\n                const newPinchPositions = [\r\n                    new Vector(touch1.clientX, touch1.clientY),\r\n                    new Vector(touch2.clientX, touch2.clientY),\r\n                ];\r\n\r\n                // Get distance of taps last time and now\r\n                const lastDistance = this.lastPinchPositions[0].distance(this.lastPinchPositions[1]);\r\n                const thisDistance = newPinchPositions[0].distance(newPinchPositions[1]);\r\n\r\n                // IMPORTANT to do math max here to avoid NaN and causing an invalid zoom level\r\n                const difference = thisDistance / Math.max(0.001, lastDistance);\r\n\r\n                // Find old center of zoom\r\n                let oldCenter = this.lastPinchPositions[0].centerPoint(this.lastPinchPositions[1]);\r\n\r\n                // Find new center of zoom\r\n                let center = newPinchPositions[0].centerPoint(newPinchPositions[1]);\r\n\r\n                // Compute movement\r\n                let movement = oldCenter.sub(center);\r\n                this.center.x += movement.x / this.zoomLevel;\r\n                this.center.y += movement.y / this.zoomLevel;\r\n\r\n                // Compute zoom\r\n                center = center.sub(new Vector(this.root.gameWidth / 2, this.root.gameHeight / 2));\r\n\r\n                // Apply zoom\r\n                assert(\r\n                    Number.isFinite(difference),\r\n                    \"Invalid pinch difference: \" +\r\n                        difference +\r\n                        \"(last=\" +\r\n                        lastDistance +\r\n                        \", new = \" +\r\n                        thisDistance +\r\n                        \")\"\r\n                );\r\n                this.zoomLevel *= difference;\r\n\r\n                // Stick to pivot point\r\n                const correcture = center.multiplyScalar(difference - 1).divideScalar(this.zoomLevel);\r\n\r\n                this.center = this.center.add(correcture);\r\n                this.lastPinchPositions = newPinchPositions;\r\n                this.userInteraction.dispatch(USER_INTERACT_MOVE);\r\n\r\n                // Since we zoomed, abort any programmed zooming\r\n                if (this.desiredZoom) {\r\n                    this.desiredZoom = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Clamp everything afterwards\r\n        this.clampZoomLevel();\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Touch end and cancel handler\r\n     * @param {TouchEvent=} event\r\n     */\r\n    onTouchEnd(event) {\r\n        if (event) {\r\n            if (event.cancelable) {\r\n                event.preventDefault();\r\n                // event.stopPropagation();\r\n            }\r\n        }\r\n\r\n        clickDetectorGlobals.lastTouchTime = performance.now();\r\n        if (event.changedTouches.length === 0) {\r\n            logger.warn(\"Touch end without changed touches\");\r\n        }\r\n\r\n        const touch = event.changedTouches[0];\r\n        this.combinedSingleTouchStopHandler(touch.clientX, touch.clientY);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Internal touch start handler\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    combinedSingleTouchStartHandler(x, y) {\r\n        const pos = new Vector(x, y);\r\n        if (this.downPreHandler.dispatch(pos, enumMouseButton.left) === STOP_PROPAGATION) {\r\n            // Somebody else captured it\r\n            return;\r\n        }\r\n\r\n        this.touchPostMoveVelocity = new Vector(0, 0);\r\n        this.currentlyMoving = true;\r\n        this.lastMovingPosition = pos;\r\n        this.lastMovingPositionLastTick = null;\r\n        this.numTicksStandingStill = 0;\r\n        this.didMoveSinceTouchStart = false;\r\n    }\r\n\r\n    /**\r\n     * Internal touch move handler\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    combinedSingleTouchMoveHandler(x, y) {\r\n        const pos = new Vector(x, y);\r\n        if (this.movePreHandler.dispatch(pos) === STOP_PROPAGATION) {\r\n            // Somebody else captured it\r\n            return;\r\n        }\r\n\r\n        if (!this.currentlyMoving) {\r\n            return false;\r\n        }\r\n\r\n        let delta = this.lastMovingPosition.sub(pos).divideScalar(this.zoomLevel);\r\n        if (G_IS_DEV && globalConfig.debug.testCulling) {\r\n            // When testing culling, we see everything from the same distance\r\n            delta = delta.multiplyScalar(this.zoomLevel * -2);\r\n        }\r\n\r\n        this.didMoveSinceTouchStart = this.didMoveSinceTouchStart || delta.length() > 0;\r\n        this.center = this.center.add(delta);\r\n\r\n        this.touchPostMoveVelocity = this.touchPostMoveVelocity\r\n            .multiplyScalar(velocitySmoothing)\r\n            .add(delta.multiplyScalar(1 - velocitySmoothing));\r\n\r\n        this.lastMovingPosition = pos;\r\n        this.userInteraction.dispatch(USER_INTERACT_MOVE);\r\n\r\n        // Since we moved, abort any programmed moving\r\n        if (this.desiredCenter) {\r\n            this.desiredCenter = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal touch stop handler\r\n     */\r\n    combinedSingleTouchStopHandler(x, y) {\r\n        if (this.currentlyMoving || this.currentlyPinching) {\r\n            this.currentlyMoving = false;\r\n            this.currentlyPinching = false;\r\n            this.lastMovingPosition = null;\r\n            this.lastMovingPositionLastTick = null;\r\n            this.numTicksStandingStill = 0;\r\n            this.lastPinchPositions = null;\r\n            this.userInteraction.dispatch(USER_INTERACT_TOUCHEND);\r\n            this.didMoveSinceTouchStart = false;\r\n        }\r\n        this.upPostHandler.dispatch(new Vector(x, y));\r\n    }\r\n\r\n    /**\r\n     * Clamps the camera zoom level within the allowed range\r\n     */\r\n    clampZoomLevel() {\r\n        if (G_IS_DEV && globalConfig.debug.disableZoomLimits) {\r\n            return;\r\n        }\r\n        const wrapper = this.root.app.platformWrapper;\r\n\r\n        assert(Number.isFinite(this.zoomLevel), \"Invalid zoom level *before* clamp: \" + this.zoomLevel);\r\n        this.zoomLevel = clamp(this.zoomLevel, wrapper.getMinimumZoom(), wrapper.getMaximumZoom());\r\n        assert(Number.isFinite(this.zoomLevel), \"Invalid zoom level *after* clamp: \" + this.zoomLevel);\r\n\r\n        if (this.desiredZoom) {\r\n            this.desiredZoom = clamp(this.desiredZoom, wrapper.getMinimumZoom(), wrapper.getMaximumZoom());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the camera\r\n     * @param {number} dt Delta time in milliseconds\r\n     */\r\n    update(dt) {\r\n        dt = Math.min(dt, 33);\r\n        this.cameraUpdateTimeBucket += dt;\r\n\r\n        // Simulate movement of N FPS\r\n        const updatesPerFrame = 4;\r\n        const physicsStepSizeMs = 1000.0 / (60.0 * updatesPerFrame);\r\n\r\n        let now = this.root.time.systemNow() - 3 * physicsStepSizeMs;\r\n\r\n        while (this.cameraUpdateTimeBucket > physicsStepSizeMs) {\r\n            now += physicsStepSizeMs;\r\n            this.cameraUpdateTimeBucket -= physicsStepSizeMs;\r\n\r\n            this.internalUpdatePanning(now, physicsStepSizeMs);\r\n            this.internalUpdateMousePanning(now, physicsStepSizeMs);\r\n            this.internalUpdateZooming(now, physicsStepSizeMs);\r\n            this.internalUpdateCentering(now, physicsStepSizeMs);\r\n            this.internalUpdateShake(now, physicsStepSizeMs);\r\n            this.internalUpdateKeyboardForce(now, physicsStepSizeMs);\r\n        }\r\n        this.clampZoomLevel();\r\n    }\r\n\r\n    /**\r\n     * Prepares a context to transform it\r\n     * @param {CanvasRenderingContext2D} context\r\n     */\r\n    transform(context) {\r\n        if (G_IS_DEV && globalConfig.debug.testCulling) {\r\n            context.transform(1, 0, 0, 1, 100, 100);\r\n            return;\r\n        }\r\n\r\n        this.clampZoomLevel();\r\n        const zoom = this.zoomLevel;\r\n\r\n        context.transform(\r\n            // Scale, skew, rotate\r\n            zoom,\r\n            0,\r\n            0,\r\n            zoom,\r\n\r\n            // Translate\r\n            -zoom * this.getViewportLeft(),\r\n            -zoom * this.getViewportTop()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Internal shake handler\r\n     * @param {number} now Time now in seconds\r\n     * @param {number} dt Delta time\r\n     */\r\n    internalUpdateShake(now, dt) {\r\n        this.currentShake = this.currentShake.multiplyScalar(0.92);\r\n    }\r\n\r\n    /**\r\n     * Internal pan handler\r\n     * @param {number} now Time now in seconds\r\n     * @param {number} dt Delta time\r\n     */\r\n    internalUpdatePanning(now, dt) {\r\n        const baseStrength = velocityStrength * this.root.app.platformWrapper.getTouchPanStrength();\r\n\r\n        this.touchPostMoveVelocity = this.touchPostMoveVelocity.multiplyScalar(velocityFade);\r\n\r\n        // Check if the camera is being dragged but standing still: if not, zero out `touchPostMoveVelocity`.\r\n        if (this.currentlyMoving && this.desiredCenter === null) {\r\n            if (\r\n                this.lastMovingPositionLastTick !== null &&\r\n                this.lastMovingPositionLastTick.equalsEpsilon(this.lastMovingPosition)\r\n            ) {\r\n                this.numTicksStandingStill++;\r\n            } else {\r\n                this.numTicksStandingStill = 0;\r\n            }\r\n            this.lastMovingPositionLastTick = this.lastMovingPosition.copy();\r\n\r\n            if (this.numTicksStandingStill >= ticksBeforeErasingVelocity) {\r\n                this.touchPostMoveVelocity.x = 0;\r\n                this.touchPostMoveVelocity.y = 0;\r\n            }\r\n        }\r\n        // Check influence of past points\r\n        if (!this.currentlyMoving && !this.currentlyPinching) {\r\n            const len = this.touchPostMoveVelocity.length();\r\n            if (len >= velocityMax) {\r\n                this.touchPostMoveVelocity.x = (this.touchPostMoveVelocity.x * velocityMax) / len;\r\n                this.touchPostMoveVelocity.y = (this.touchPostMoveVelocity.y * velocityMax) / len;\r\n            }\r\n\r\n            this.center = this.center.add(this.touchPostMoveVelocity.multiplyScalar(baseStrength));\r\n\r\n            // Panning\r\n            this.currentPan = mixVector(this.currentPan, this.desiredPan, 0.06);\r\n            this.center = this.center.add(this.currentPan.multiplyScalar((0.5 * dt) / this.zoomLevel));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal screen panning handler\r\n     * @param {number} now\r\n     * @param {number} dt\r\n     */\r\n    internalUpdateMousePanning(now, dt) {\r\n        if (!this.root.app.focused) {\r\n            return;\r\n        }\r\n\r\n        if (!this.root.app.settings.getAllSettings().enableMousePan) {\r\n            // Not enabled\r\n            return;\r\n        }\r\n\r\n        const mousePos = this.root.app.mousePosition;\r\n        if (!mousePos) {\r\n            return;\r\n        }\r\n\r\n        if (this.root.hud.shouldPauseGame() || this.root.hud.hasBlockingOverlayOpen()) {\r\n            return;\r\n        }\r\n\r\n        if (this.desiredCenter || this.desiredZoom || this.currentlyMoving || this.currentlyPinching) {\r\n            // Performing another method of movement right now\r\n            return;\r\n        }\r\n\r\n        if (\r\n            mousePos.x < 0 ||\r\n            mousePos.y < 0 ||\r\n            mousePos.x > this.root.gameWidth ||\r\n            mousePos.y > this.root.gameHeight\r\n        ) {\r\n            // Out of screen\r\n            return;\r\n        }\r\n\r\n        const panAreaPixels = 2;\r\n\r\n        const panVelocity = new Vector();\r\n        if (mousePos.x < panAreaPixels) {\r\n            panVelocity.x -= 1;\r\n        }\r\n        if (mousePos.x > this.root.gameWidth - panAreaPixels) {\r\n            panVelocity.x += 1;\r\n        }\r\n\r\n        if (mousePos.y < panAreaPixels) {\r\n            panVelocity.y -= 1;\r\n        }\r\n        if (mousePos.y > this.root.gameHeight - panAreaPixels) {\r\n            panVelocity.y += 1;\r\n        }\r\n\r\n        this.center = this.center.add(\r\n            panVelocity.multiplyScalar(\r\n                ((0.5 * dt) / this.zoomLevel) * this.root.app.settings.getMovementSpeed()\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Updates the non user interaction zooming\r\n     * @param {number} now Time now in seconds\r\n     * @param {number} dt Delta time\r\n     */\r\n    internalUpdateZooming(now, dt) {\r\n        if (!this.currentlyPinching && this.desiredZoom !== null) {\r\n            const diff = this.zoomLevel - this.desiredZoom;\r\n            if (Math.abs(diff) > 0.0001) {\r\n                let fade = 0.94;\r\n                if (diff > 0) {\r\n                    // Zoom out faster than in\r\n                    fade = 0.9;\r\n                }\r\n\r\n                assert(Number.isFinite(this.desiredZoom), \"Desired zoom is NaN: \" + this.desiredZoom);\r\n                assert(Number.isFinite(fade), \"Zoom fade is NaN: \" + fade);\r\n                this.zoomLevel = this.zoomLevel * fade + this.desiredZoom * (1 - fade);\r\n                assert(Number.isFinite(this.zoomLevel), \"Zoom level is NaN after fade: \" + this.zoomLevel);\r\n            } else {\r\n                this.zoomLevel = this.desiredZoom;\r\n                this.desiredZoom = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the non user interaction centering\r\n     * @param {number} now Time now in seconds\r\n     * @param {number} dt Delta time\r\n     */\r\n    internalUpdateCentering(now, dt) {\r\n        if (!this.currentlyMoving && this.desiredCenter !== null) {\r\n            const diff = this.center.direction(this.desiredCenter);\r\n            const length = diff.length();\r\n            const tolerance = 1 / this.zoomLevel;\r\n            if (length > tolerance) {\r\n                const movement = diff.multiplyScalar(Math.min(1, dt * 0.008));\r\n                this.center.x += movement.x;\r\n                this.center.y += movement.y;\r\n            } else {\r\n                this.desiredCenter = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the keyboard forces\r\n     * @param {number} now\r\n     * @param {number} dt Delta time\r\n     */\r\n    internalUpdateKeyboardForce(now, dt) {\r\n        if (!this.currentlyMoving && this.desiredCenter == null) {\r\n            const limitingDimension = Math.min(this.root.gameWidth, this.root.gameHeight);\r\n\r\n            const moveAmount = ((limitingDimension / 2048) * dt) / this.zoomLevel;\r\n\r\n            let forceX = 0;\r\n            let forceY = 0;\r\n\r\n            const actionMapper = this.root.keyMapper;\r\n            if (actionMapper.getBinding(KEYMAPPINGS.navigation.mapMoveUp).pressed) {\r\n                forceY -= 1;\r\n            }\r\n\r\n            if (actionMapper.getBinding(KEYMAPPINGS.navigation.mapMoveDown).pressed) {\r\n                forceY += 1;\r\n            }\r\n\r\n            if (actionMapper.getBinding(KEYMAPPINGS.navigation.mapMoveLeft).pressed) {\r\n                forceX -= 1;\r\n            }\r\n\r\n            if (actionMapper.getBinding(KEYMAPPINGS.navigation.mapMoveRight).pressed) {\r\n                forceX += 1;\r\n            }\r\n\r\n            let movementSpeed =\r\n                this.root.app.settings.getMovementSpeed() *\r\n                (actionMapper.getBinding(KEYMAPPINGS.navigation.mapMoveFaster).pressed ? 4 : 1);\r\n\r\n            this.center.x += moveAmount * forceX * movementSpeed;\r\n            this.center.y += moveAmount * forceY * movementSpeed;\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/camera.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1410,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/camera.js",
    "static": true,
    "longname": "js/game/camera.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/camera.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1411,
    "kind": "variable",
    "name": "USER_INTERACT_MOVE",
    "memberof": "js/game/camera.js",
    "static": true,
    "longname": "js/game/camera.js~USER_INTERACT_MOVE",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/camera.js",
    "importStyle": "{USER_INTERACT_MOVE}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1412,
    "kind": "variable",
    "name": "USER_INTERACT_ZOOM",
    "memberof": "js/game/camera.js",
    "static": true,
    "longname": "js/game/camera.js~USER_INTERACT_ZOOM",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/camera.js",
    "importStyle": "{USER_INTERACT_ZOOM}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1413,
    "kind": "variable",
    "name": "USER_INTERACT_TOUCHEND",
    "memberof": "js/game/camera.js",
    "static": true,
    "longname": "js/game/camera.js~USER_INTERACT_TOUCHEND",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/camera.js",
    "importStyle": "{USER_INTERACT_TOUCHEND}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1414,
    "kind": "variable",
    "name": "velocitySmoothing",
    "memberof": "js/game/camera.js",
    "static": true,
    "longname": "js/game/camera.js~velocitySmoothing",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/camera.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1415,
    "kind": "variable",
    "name": "velocityFade",
    "memberof": "js/game/camera.js",
    "static": true,
    "longname": "js/game/camera.js~velocityFade",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/camera.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1416,
    "kind": "variable",
    "name": "velocityStrength",
    "memberof": "js/game/camera.js",
    "static": true,
    "longname": "js/game/camera.js~velocityStrength",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/camera.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1417,
    "kind": "variable",
    "name": "velocityMax",
    "memberof": "js/game/camera.js",
    "static": true,
    "longname": "js/game/camera.js~velocityMax",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/camera.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1418,
    "kind": "variable",
    "name": "ticksBeforeErasingVelocity",
    "memberof": "js/game/camera.js",
    "static": true,
    "longname": "js/game/camera.js~ticksBeforeErasingVelocity",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/camera.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1419,
    "kind": "variable",
    "name": "enumMouseButton",
    "memberof": "js/game/camera.js",
    "static": true,
    "longname": "js/game/camera.js~enumMouseButton",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/camera.js",
    "importStyle": "{enumMouseButton}",
    "description": "",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"left\": string, \"middle\": string, \"right\": string}"
      ]
    }
  },
  {
    "__docId__": 1420,
    "kind": "class",
    "name": "Camera",
    "memberof": "js/game/camera.js",
    "static": true,
    "longname": "js/game/camera.js~Camera",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/camera.js",
    "importStyle": "{Camera}",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/serialization.js~BasicSerializableObject"
    ]
  },
  {
    "__docId__": 1421,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 1422,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#root",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "GameRoot"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1423,
    "kind": "member",
    "name": "zoomLevel",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#zoomLevel",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1424,
    "kind": "member",
    "name": "center",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#center",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1425,
    "kind": "member",
    "name": "currentlyMoving",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#currentlyMoving",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1426,
    "kind": "member",
    "name": "lastMovingPosition",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#lastMovingPosition",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1427,
    "kind": "member",
    "name": "lastMovingPositionLastTick",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#lastMovingPositionLastTick",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1428,
    "kind": "member",
    "name": "numTicksStandingStill",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#numTicksStandingStill",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1429,
    "kind": "member",
    "name": "cameraUpdateTimeBucket",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#cameraUpdateTimeBucket",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1430,
    "kind": "member",
    "name": "didMoveSinceTouchStart",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#didMoveSinceTouchStart",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1431,
    "kind": "member",
    "name": "currentlyPinching",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#currentlyPinching",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1432,
    "kind": "member",
    "name": "lastPinchPositions",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#lastPinchPositions",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1433,
    "kind": "member",
    "name": "keyboardForce",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#keyboardForce",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1434,
    "kind": "member",
    "name": "userInteraction",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#userInteraction",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1435,
    "kind": "member",
    "name": "currentShake",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#currentShake",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1436,
    "kind": "member",
    "name": "currentPan",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#currentPan",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1437,
    "kind": "member",
    "name": "desiredPan",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#desiredPan",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1438,
    "kind": "member",
    "name": "desiredCenter",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#desiredCenter",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1439,
    "kind": "member",
    "name": "desiredZoom",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#desiredZoom",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1440,
    "kind": "member",
    "name": "touchPostMoveVelocity",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#touchPostMoveVelocity",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1441,
    "kind": "member",
    "name": "downPreHandler",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#downPreHandler",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1442,
    "kind": "member",
    "name": "movePreHandler",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#movePreHandler",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1443,
    "kind": "member",
    "name": "upPostHandler",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#upPostHandler",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1445,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/camera.js~Camera.getId",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1446,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/camera.js~Camera.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"zoomLevel\": *, \"center\": *}"
      ]
    }
  },
  {
    "__docId__": 1447,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#deserialize",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1448,
    "kind": "method",
    "name": "addScreenShake",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#addScreenShake",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "params": [
      {
        "name": "amount",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1449,
    "kind": "method",
    "name": "setDesiredCenter",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#setDesiredCenter",
    "access": "public",
    "description": "Sets a point in world space to focus on",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "center",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1452,
    "kind": "method",
    "name": "setDesiredZoom",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#setDesiredZoom",
    "access": "public",
    "description": "Sets a desired zoom level",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "zoom",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1454,
    "kind": "method",
    "name": "isCurrentlyMovingToDesiredCenter",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#isCurrentlyMovingToDesiredCenter",
    "access": "public",
    "description": "Returns if this camera is currently moving by a non-user interaction",
    "lineNumber": 155,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1455,
    "kind": "method",
    "name": "setPan",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#setPan",
    "access": "public",
    "description": "Sets the camera pan, every frame the camera will move by this amount",
    "lineNumber": 163,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "pan",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1457,
    "kind": "method",
    "name": "findInitialZoom",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#findInitialZoom",
    "access": "public",
    "description": "Finds a good initial zoom level",
    "lineNumber": 170,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1458,
    "kind": "method",
    "name": "clearAnimations",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#clearAnimations",
    "access": "public",
    "description": "Clears all animations",
    "lineNumber": 186,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1465,
    "kind": "method",
    "name": "isCurrentlyInteracting",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#isCurrentlyInteracting",
    "access": "public",
    "description": "Returns if the user is currently interacting with the camera",
    "lineNumber": 205,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true if the user interacts"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if the user interacts"
    },
    "params": []
  },
  {
    "__docId__": 1466,
    "kind": "method",
    "name": "viewportWillChange",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#viewportWillChange",
    "access": "public",
    "description": "Returns if in the next frame the viewport will change",
    "lineNumber": 223,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true if it willchange"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if it willchange"
    },
    "params": []
  },
  {
    "__docId__": 1467,
    "kind": "method",
    "name": "cancelAllInteractions",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#cancelAllInteractions",
    "access": "public",
    "description": "Cancels all interactions, that is user interaction and non user interaction",
    "lineNumber": 230,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1473,
    "kind": "method",
    "name": "getViewportWidth",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#getViewportWidth",
    "access": "public",
    "description": "Returns effective viewport width",
    "lineNumber": 241,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1474,
    "kind": "method",
    "name": "getViewportHeight",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#getViewportHeight",
    "access": "public",
    "description": "Returns effective viewport height",
    "lineNumber": 248,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1475,
    "kind": "method",
    "name": "getViewportLeft",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#getViewportLeft",
    "access": "public",
    "description": "Returns effective world space viewport left",
    "lineNumber": 255,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1476,
    "kind": "method",
    "name": "getViewportRight",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#getViewportRight",
    "access": "public",
    "description": "Returns effective world space viewport right",
    "lineNumber": 262,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1477,
    "kind": "method",
    "name": "getViewportTop",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#getViewportTop",
    "access": "public",
    "description": "Returns effective world space viewport top",
    "lineNumber": 269,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1478,
    "kind": "method",
    "name": "getViewportBottom",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#getViewportBottom",
    "access": "public",
    "description": "Returns effective world space viewport bottom",
    "lineNumber": 276,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1479,
    "kind": "method",
    "name": "getVisibleRect",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#getVisibleRect",
    "access": "public",
    "description": "Returns the visible world space rect",
    "lineNumber": 284,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Rectangle}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Rectangle"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1480,
    "kind": "method",
    "name": "getIsMapOverlayActive",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#getIsMapOverlayActive",
    "access": "public",
    "description": null,
    "lineNumber": 293,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1481,
    "kind": "method",
    "name": "internalInitEvents",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#internalInitEvents",
    "access": "public",
    "description": "Attaches all event listeners",
    "lineNumber": 300,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1482,
    "kind": "member",
    "name": "eventListenerTouchStart",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#eventListenerTouchStart",
    "access": "public",
    "description": null,
    "lineNumber": 301,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1483,
    "kind": "member",
    "name": "eventListenerTouchEnd",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#eventListenerTouchEnd",
    "access": "public",
    "description": null,
    "lineNumber": 302,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1484,
    "kind": "member",
    "name": "eventListenerTouchMove",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#eventListenerTouchMove",
    "access": "public",
    "description": null,
    "lineNumber": 303,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1485,
    "kind": "member",
    "name": "eventListenerMousewheel",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#eventListenerMousewheel",
    "access": "public",
    "description": null,
    "lineNumber": 304,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1486,
    "kind": "member",
    "name": "eventListenerMouseDown",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#eventListenerMouseDown",
    "access": "public",
    "description": null,
    "lineNumber": 305,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1487,
    "kind": "member",
    "name": "eventListenerMouseMove",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#eventListenerMouseMove",
    "access": "public",
    "description": null,
    "lineNumber": 306,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1488,
    "kind": "member",
    "name": "eventListenerMouseUp",
    "memberof": "js/game/camera.js~Camera",
    "static": false,
    "longname": "js/game/camera.js~Camera#eventListenerMouseUp",
    "access": "public",
    "description": null,
    "lineNumber": 307,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1489,
    "kind": "method",
    "name": "cleanup",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#cleanup",
    "access": "public",
    "description": "Cleans up all event listeners",
    "lineNumber": 326,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1490,
    "kind": "method",
    "name": "bindKeys",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#bindKeys",
    "access": "public",
    "description": "Binds the arrow keys",
    "lineNumber": 344,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1491,
    "kind": "method",
    "name": "centerOnMap",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#centerOnMap",
    "access": "public",
    "description": null,
    "lineNumber": 361,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1493,
    "kind": "method",
    "name": "screenToWorld",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#screenToWorld",
    "access": "public",
    "description": "Converts from screen to world space",
    "lineNumber": 370,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector} world space"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "screen",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": "world space"
    }
  },
  {
    "__docId__": 1494,
    "kind": "method",
    "name": "worldToScreen",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#worldToScreen",
    "access": "public",
    "description": "Converts from world to screen space",
    "lineNumber": 380,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector} screen space"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "world",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": "screen space"
    }
  },
  {
    "__docId__": 1495,
    "kind": "method",
    "name": "isWorldPointOnScreen",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#isWorldPointOnScreen",
    "access": "public",
    "description": "Returns if a point is on screen",
    "lineNumber": 390,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true if its on screen"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if its on screen"
    }
  },
  {
    "__docId__": 1496,
    "kind": "method",
    "name": "canZoomIn",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#canZoomIn",
    "access": "public",
    "description": "Returns if we can further zoom in",
    "lineNumber": 399,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1497,
    "kind": "method",
    "name": "canZoomOut",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#canZoomOut",
    "access": "public",
    "description": "Returns if we can further zoom out",
    "lineNumber": 408,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1498,
    "kind": "method",
    "name": "checkPreventDoubleMouse",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#checkPreventDoubleMouse",
    "access": "public",
    "description": "Checks if the mouse event is too close after a touch event and thus\nshould get ignored",
    "lineNumber": 419,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1499,
    "kind": "method",
    "name": "onMouseDown",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#onMouseDown",
    "access": "public",
    "description": "Mousedown handler",
    "lineNumber": 430,
    "params": [
      {
        "nullable": null,
        "types": [
          "MouseEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1501,
    "kind": "method",
    "name": "onMouseMove",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#onMouseMove",
    "access": "public",
    "description": "Mousemove handler",
    "lineNumber": 455,
    "params": [
      {
        "nullable": null,
        "types": [
          "MouseEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1502,
    "kind": "method",
    "name": "onMouseUp",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#onMouseUp",
    "access": "public",
    "description": "Mouseup handler",
    "lineNumber": 478,
    "params": [
      {
        "nullable": null,
        "types": [
          "MouseEvent="
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1503,
    "kind": "method",
    "name": "onMouseWheel",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#onMouseWheel",
    "access": "public",
    "description": "Mousewheel event",
    "lineNumber": 498,
    "params": [
      {
        "nullable": null,
        "types": [
          "WheelEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1508,
    "kind": "method",
    "name": "onTouchStart",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#onTouchStart",
    "access": "public",
    "description": "Touch start handler",
    "lineNumber": 534,
    "params": [
      {
        "nullable": null,
        "types": [
          "TouchEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1513,
    "kind": "method",
    "name": "onTouchMove",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#onTouchMove",
    "access": "public",
    "description": "Touch move handler",
    "lineNumber": 568,
    "params": [
      {
        "nullable": null,
        "types": [
          "TouchEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1518,
    "kind": "method",
    "name": "onTouchEnd",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#onTouchEnd",
    "access": "public",
    "description": "Touch end and cancel handler",
    "lineNumber": 646,
    "params": [
      {
        "nullable": null,
        "types": [
          "TouchEvent="
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1519,
    "kind": "method",
    "name": "combinedSingleTouchStartHandler",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#combinedSingleTouchStartHandler",
    "access": "public",
    "description": "Internal touch start handler",
    "lineNumber": 669,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1526,
    "kind": "method",
    "name": "combinedSingleTouchMoveHandler",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#combinedSingleTouchMoveHandler",
    "access": "public",
    "description": "Internal touch move handler",
    "lineNumber": 689,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1532,
    "kind": "method",
    "name": "combinedSingleTouchStopHandler",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#combinedSingleTouchStopHandler",
    "access": "public",
    "description": "Internal touch stop handler",
    "lineNumber": 725,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1540,
    "kind": "method",
    "name": "clampZoomLevel",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#clampZoomLevel",
    "access": "public",
    "description": "Clamps the camera zoom level within the allowed range",
    "lineNumber": 742,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1543,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#update",
    "access": "public",
    "description": "Updates the camera",
    "lineNumber": 761,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": "Delta time in milliseconds"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1546,
    "kind": "method",
    "name": "transform",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#transform",
    "access": "public",
    "description": "Prepares a context to transform it",
    "lineNumber": 789,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1547,
    "kind": "method",
    "name": "internalUpdateShake",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#internalUpdateShake",
    "access": "public",
    "description": "Internal shake handler",
    "lineNumber": 816,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "now",
        "description": "Time now in seconds"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": "Delta time"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1549,
    "kind": "method",
    "name": "internalUpdatePanning",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#internalUpdatePanning",
    "access": "public",
    "description": "Internal pan handler",
    "lineNumber": 825,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "now",
        "description": "Time now in seconds"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": "Delta time"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1556,
    "kind": "method",
    "name": "internalUpdateMousePanning",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#internalUpdateMousePanning",
    "access": "public",
    "description": "Internal screen panning handler",
    "lineNumber": 868,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "now",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1558,
    "kind": "method",
    "name": "internalUpdateZooming",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#internalUpdateZooming",
    "access": "public",
    "description": "Updates the non user interaction zooming",
    "lineNumber": 931,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "now",
        "description": "Time now in seconds"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": "Delta time"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1562,
    "kind": "method",
    "name": "internalUpdateCentering",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#internalUpdateCentering",
    "access": "public",
    "description": "Updates the non user interaction centering",
    "lineNumber": 957,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "now",
        "description": "Time now in seconds"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": "Delta time"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1564,
    "kind": "method",
    "name": "internalUpdateKeyboardForce",
    "memberof": "js/game/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/camera.js~Camera#internalUpdateKeyboardForce",
    "access": "public",
    "description": "Updates the keyboard forces",
    "lineNumber": 977,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "now",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": "Delta time"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1565,
    "kind": "file",
    "name": "js/game/colors.js",
    "content": "/** @enum {string} */\r\nexport const enumColors = {\r\n    red: \"red\",\r\n    green: \"green\",\r\n    blue: \"blue\",\r\n\r\n    yellow: \"yellow\",\r\n    purple: \"purple\",\r\n    cyan: \"cyan\",\r\n\r\n    white: \"white\",\r\n    uncolored: \"uncolored\",\r\n};\r\n\r\n/** @enum {string} */\r\nexport const enumColorToShortcode = {\r\n    [enumColors.red]: \"r\",\r\n    [enumColors.green]: \"g\",\r\n    [enumColors.blue]: \"b\",\r\n\r\n    [enumColors.yellow]: \"y\",\r\n    [enumColors.purple]: \"p\",\r\n    [enumColors.cyan]: \"c\",\r\n\r\n    [enumColors.white]: \"w\",\r\n    [enumColors.uncolored]: \"u\",\r\n};\r\n\r\n/** @enum {enumColors} */\r\nexport const enumShortcodeToColor = {};\r\nfor (const key in enumColorToShortcode) {\r\n    enumShortcodeToColor[enumColorToShortcode[key]] = key;\r\n}\r\n\r\n/** @enum {string} */\r\nexport const enumColorsToHexCode = {\r\n    [enumColors.red]: \"#ff666a\",\r\n    [enumColors.green]: \"#78ff66\",\r\n    [enumColors.blue]: \"#66a7ff\",\r\n\r\n    // red + green\r\n    [enumColors.yellow]: \"#fcf52a\",\r\n\r\n    // red + blue\r\n    [enumColors.purple]: \"#dd66ff\",\r\n\r\n    // blue + green\r\n    [enumColors.cyan]: \"#00fcff\",\r\n\r\n    // blue + green + red\r\n    [enumColors.white]: \"#ffffff\",\r\n\r\n    [enumColors.uncolored]: \"#aaaaaa\",\r\n};\r\n\r\nconst c = enumColors;\r\n/** @enum {Object.<string, string>} */\r\nexport const enumColorMixingResults = {\r\n    // 255, 0, 0\r\n    [c.red]: {\r\n        [c.green]: c.yellow,\r\n        [c.blue]: c.purple,\r\n\r\n        [c.yellow]: c.yellow,\r\n        [c.purple]: c.purple,\r\n        [c.cyan]: c.white,\r\n\r\n        [c.white]: c.white,\r\n    },\r\n\r\n    // 0, 255, 0\r\n    [c.green]: {\r\n        [c.blue]: c.cyan,\r\n\r\n        [c.yellow]: c.yellow,\r\n        [c.purple]: c.white,\r\n        [c.cyan]: c.cyan,\r\n\r\n        [c.white]: c.white,\r\n    },\r\n\r\n    // 0, 255, 0\r\n    [c.blue]: {\r\n        [c.yellow]: c.white,\r\n        [c.purple]: c.purple,\r\n        [c.cyan]: c.cyan,\r\n\r\n        [c.white]: c.white,\r\n    },\r\n\r\n    // 255, 255, 0\r\n    [c.yellow]: {\r\n        [c.purple]: c.white,\r\n        [c.cyan]: c.white,\r\n    },\r\n\r\n    // 255, 0, 255\r\n    [c.purple]: {\r\n        [c.cyan]: c.white,\r\n    },\r\n\r\n    // 0, 255, 255\r\n    [c.cyan]: {},\r\n\r\n    //// SPECIAL COLORS\r\n\r\n    // 255, 255, 255\r\n    [c.white]: {\r\n        // auto\r\n    },\r\n\r\n    // X, X, X\r\n    [c.uncolored]: {\r\n        // auto\r\n    },\r\n};\r\n\r\n// Create same color lookups\r\nfor (const color in enumColors) {\r\n    enumColorMixingResults[color][color] = color;\r\n    enumColorMixingResults[color][c.white] = c.white;\r\n    // Anything with uncolored is the same color\r\n    enumColorMixingResults[color][c.uncolored] = color;\r\n}\r\n\r\n// Create reverse lookup and check color mixing lookups\r\nfor (const colorA in enumColorMixingResults) {\r\n    for (const colorB in enumColorMixingResults[colorA]) {\r\n        const resultColor = enumColorMixingResults[colorA][colorB];\r\n        if (!enumColorMixingResults[colorB]) {\r\n            enumColorMixingResults[colorB] = {\r\n                [colorA]: resultColor,\r\n            };\r\n        } else {\r\n            const existingResult = enumColorMixingResults[colorB][colorA];\r\n            if (existingResult && existingResult !== resultColor) {\r\n                assertAlways(\r\n                    false,\r\n                    \"invalid color mixing configuration, \" +\r\n                        colorA +\r\n                        \" + \" +\r\n                        colorB +\r\n                        \" is \" +\r\n                        resultColor +\r\n                        \" but \" +\r\n                        colorB +\r\n                        \" + \" +\r\n                        colorA +\r\n                        \" is \" +\r\n                        existingResult\r\n                );\r\n            }\r\n            enumColorMixingResults[colorB][colorA] = resultColor;\r\n        }\r\n    }\r\n}\r\n\r\nfor (const colorA in enumColorMixingResults) {\r\n    for (const colorB in enumColorMixingResults) {\r\n        if (!enumColorMixingResults[colorA][colorB]) {\r\n            assertAlways(false, \"Color mixing of\", colorA, \"with\", colorB, \"is not defined\");\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/colors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1566,
    "kind": "variable",
    "name": "enumColors",
    "memberof": "js/game/colors.js",
    "static": true,
    "longname": "js/game/colors.js~enumColors",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/colors.js",
    "importStyle": "{enumColors}",
    "description": null,
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"red\": string, \"green\": string, \"blue\": string, \"yellow\": string, \"purple\": string, \"cyan\": string, \"white\": string, \"uncolored\": string}"
      ]
    }
  },
  {
    "__docId__": 1567,
    "kind": "variable",
    "name": "enumColorToShortcode",
    "memberof": "js/game/colors.js",
    "static": true,
    "longname": "js/game/colors.js~enumColorToShortcode",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/colors.js",
    "importStyle": "{enumColorToShortcode}",
    "description": null,
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"undefined\": string}"
      ]
    }
  },
  {
    "__docId__": 1568,
    "kind": "variable",
    "name": "enumShortcodeToColor",
    "memberof": "js/game/colors.js",
    "static": true,
    "longname": "js/game/colors.js~enumShortcodeToColor",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/colors.js",
    "importStyle": "{enumShortcodeToColor}",
    "description": null,
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{enumColors}"
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 1569,
    "kind": "variable",
    "name": "enumColorsToHexCode",
    "memberof": "js/game/colors.js",
    "static": true,
    "longname": "js/game/colors.js~enumColorsToHexCode",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/colors.js",
    "importStyle": "{enumColorsToHexCode}",
    "description": null,
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"undefined\": string}"
      ]
    }
  },
  {
    "__docId__": 1570,
    "kind": "variable",
    "name": "c",
    "memberof": "js/game/colors.js",
    "static": true,
    "longname": "js/game/colors.js~c",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/colors.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1571,
    "kind": "variable",
    "name": "enumColorMixingResults",
    "memberof": "js/game/colors.js",
    "static": true,
    "longname": "js/game/colors.js~enumColorMixingResults",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/colors.js",
    "importStyle": "{enumColorMixingResults}",
    "description": null,
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{Object.<string, string>}"
      }
    ],
    "type": {
      "types": [
        "{\"undefined\": *}"
      ]
    }
  },
  {
    "__docId__": 1572,
    "kind": "file",
    "name": "js/game/component.js",
    "content": "import { BasicSerializableObject } from \"../savegame/serialization\";\r\n\r\nexport class Component extends BasicSerializableObject {\r\n    /**\r\n     * Returns the components unique id\r\n     * @returns {string}\r\n     */\r\n    static getId() {\r\n        abstract;\r\n        return \"unknown-component\";\r\n    }\r\n\r\n    /**\r\n     * Should return the schema used for serialization\r\n     */\r\n    static getSchema() {\r\n        return {};\r\n    }\r\n\r\n    /**\r\n     * Copy the current state to another component\r\n     * @param {Component} otherComponent\r\n     */\r\n    copyAdditionalStateTo(otherComponent) {}\r\n\r\n    /* dev:start */\r\n\r\n    /**\r\n     * Fixes typeof DerivedComponent is not assignable to typeof Component, compiled out\r\n     * in non-dev builds\r\n     */\r\n    constructor(...args) {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Returns a string representing the components data, only in dev builds\r\n     * @returns {string}\r\n     */\r\n    getDebugString() {\r\n        return null;\r\n    }\r\n    /* dev:end */\r\n}\r\n\r\n/**\r\n * TypeScript does not support Abstract Static methods (https://github.com/microsoft/TypeScript/issues/34516)\r\n * One workaround is to declare the type of the component and reference that for static methods\r\n * @typedef {typeof Component} StaticComponent\r\n */\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1573,
    "kind": "class",
    "name": "Component",
    "memberof": "js/game/component.js",
    "static": true,
    "longname": "js/game/component.js~Component",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/component.js",
    "importStyle": "{Component}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/serialization.js~BasicSerializableObject"
    ]
  },
  {
    "__docId__": 1574,
    "kind": "typedef",
    "name": "StaticComponent",
    "memberof": "js/game/component.js",
    "static": true,
    "longname": "js/game/component.js~StaticComponent",
    "access": "public",
    "description": "TypeScript does not support Abstract Static methods (https://github.com/microsoft/TypeScript/issues/34516)\nOne workaround is to declare the type of the component and reference that for static methods",
    "type": {
      "types": [
        "typeof Component"
      ],
      "optional": false,
      "name": "StaticComponent"
    }
  },
  {
    "__docId__": 1575,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/component.js~Component",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/component.js~Component.getId",
    "access": "public",
    "description": "Returns the components unique id",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1576,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/component.js~Component",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/component.js~Component.getSchema",
    "access": "public",
    "description": "Should return the schema used for serialization",
    "lineNumber": 16,
    "params": [],
    "return": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 1577,
    "kind": "method",
    "name": "copyAdditionalStateTo",
    "memberof": "js/game/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/component.js~Component#copyAdditionalStateTo",
    "access": "public",
    "description": "Copy the current state to another component",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "otherComponent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1578,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/component.js~Component#constructor",
    "access": "public",
    "description": "Fixes typeof DerivedComponent is not assignable to typeof Component, compiled out\nin non-dev builds",
    "lineNumber": 32
  },
  {
    "__docId__": 1579,
    "kind": "method",
    "name": "getDebugString",
    "memberof": "js/game/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/component.js~Component#getDebugString",
    "access": "public",
    "description": "Returns a string representing the components data, only in dev builds",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1580,
    "kind": "file",
    "name": "js/game/components/belt.js",
    "content": "import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { BeltPath } from \"../belt_path\";\r\nimport { Component } from \"../component\";\r\n\r\nexport class BeltComponent extends Component {\r\n    static getId() {\r\n        return \"Belt\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {enumDirection=} param0.direction The direction of the belt\r\n     */\r\n    constructor({ direction = enumDirection.top }) {\r\n        super();\r\n\r\n        this.direction = direction;\r\n\r\n        /**\r\n         * The path this belt is contained in, not serialized\r\n         * @type {BeltPath}\r\n         */\r\n        this.assignedPath = null;\r\n    }\r\n\r\n    /**\r\n     * Returns the effective length of this belt in tile space\r\n     * @returns {number}\r\n     */\r\n    getEffectiveLengthTiles() {\r\n        return this.direction === enumDirection.top ? 1.0 : BeltComponent.curvedBeltLength;\r\n    }\r\n\r\n    /**\r\n     * Returns fake acceptor slot used for matching\r\n     * @returns {import(\"./item_acceptor\").ItemAcceptorSlot}\r\n     */\r\n    getFakeAcceptorSlot() {\r\n        return BeltComponent.fake_belt_acceptor_slot;\r\n    }\r\n\r\n    /**\r\n     * Returns fake acceptor slot used for matching\r\n     * @returns {import(\"./item_ejector\").ItemEjectorSlot}\r\n     */\r\n    getFakeEjectorSlot() {\r\n        assert(\r\n            BeltComponent.fake_belt_ejector_slot_by_direction[this.direction],\r\n            \"Invalid belt direction: \",\r\n            this.direction\r\n        );\r\n        return BeltComponent.fake_belt_ejector_slot_by_direction[this.direction];\r\n    }\r\n\r\n    /**\r\n     * Converts from belt space (0 = start of belt ... 1 = end of belt) to the local\r\n     * belt coordinates (-0.5|-0.5 to 0.5|0.5)\r\n     * @param {number} progress\r\n     * @returns {Vector}\r\n     */\r\n    transformBeltToLocalSpace(progress) {\r\n        assert(progress >= 0.0, \"Invalid progress ( < 0): \" + progress);\r\n        switch (this.direction) {\r\n            case enumDirection.top:\r\n                assert(progress <= 1.02, \"Invalid progress: \" + progress);\r\n                return new Vector(0, 0.5 - progress);\r\n\r\n            case enumDirection.right:\r\n                {\r\n                    assert(progress <= BeltComponent.curvedBeltLength + 0.02, \"Invalid progress 2: \" + progress);\r\n                    const arcProgress = (progress / BeltComponent.curvedBeltLength) * 0.5 * Math.PI;\r\n                    return new Vector(0.5 - 0.5 * Math.cos(arcProgress), 0.5 - 0.5 * Math.sin(arcProgress));\r\n                }\r\n            case enumDirection.left:\r\n                {\r\n                    assert(progress <= BeltComponent.curvedBeltLength + 0.02, \"Invalid progress 3: \" + progress);\r\n                    const arcProgress = (progress / BeltComponent.curvedBeltLength) * 0.5 * Math.PI;\r\n                    return new Vector(-0.5 + 0.5 * Math.cos(arcProgress), 0.5 - 0.5 * Math.sin(arcProgress));\r\n                }\r\n            default:\r\n                assertAlways(false, \"Invalid belt direction: \" + this.direction);\r\n                return new Vector(0, 0);\r\n        }\r\n    }\r\n}\r\n\r\nBeltComponent.curvedBeltLength = /* Math.PI / 4 */ 0.78;\r\n\r\n/** @type {import(\"./item_acceptor\").ItemAcceptorSlot} */\r\nBeltComponent.fake_belt_acceptor_slot = {\r\n    pos: new Vector(0, 0),\r\n    directions: [enumDirection.bottom],\r\n};\r\n\r\n/** @type {Object<enumDirection, import(\"./item_ejector\").ItemEjectorSlot>} */\r\nBeltComponent.fake_belt_ejector_slot_by_direction = {\r\n    [enumDirection.top]: {\r\n        pos: new Vector(0, 0),\r\n        direction: enumDirection.top,\r\n        item: null,\r\n        progress: 0,\r\n    },\r\n\r\n    [enumDirection.right]: {\r\n        pos: new Vector(0, 0),\r\n        direction: enumDirection.right,\r\n        item: null,\r\n        progress: 0,\r\n    },\r\n\r\n    [enumDirection.left]: {\r\n        pos: new Vector(0, 0),\r\n        direction: enumDirection.left,\r\n        item: null,\r\n        progress: 0,\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/belt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1581,
    "kind": "class",
    "name": "BeltComponent",
    "memberof": "js/game/components/belt.js",
    "static": true,
    "longname": "js/game/components/belt.js~BeltComponent",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/belt.js",
    "importStyle": "{BeltComponent}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/component.js~Component"
    ]
  },
  {
    "__docId__": 1582,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/components/belt.js~BeltComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/belt.js~BeltComponent.getId",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1583,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/components/belt.js~BeltComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/belt.js~BeltComponent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumDirection="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.direction",
        "description": "The direction of the belt"
      }
    ]
  },
  {
    "__docId__": 1584,
    "kind": "member",
    "name": "direction",
    "memberof": "js/game/components/belt.js~BeltComponent",
    "static": false,
    "longname": "js/game/components/belt.js~BeltComponent#direction",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1585,
    "kind": "member",
    "name": "assignedPath",
    "memberof": "js/game/components/belt.js~BeltComponent",
    "static": false,
    "longname": "js/game/components/belt.js~BeltComponent#assignedPath",
    "access": "public",
    "description": "The path this belt is contained in, not serialized",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "BeltPath"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1586,
    "kind": "method",
    "name": "getEffectiveLengthTiles",
    "memberof": "js/game/components/belt.js~BeltComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/belt.js~BeltComponent#getEffectiveLengthTiles",
    "access": "public",
    "description": "Returns the effective length of this belt in tile space",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1587,
    "kind": "method",
    "name": "getFakeAcceptorSlot",
    "memberof": "js/game/components/belt.js~BeltComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/belt.js~BeltComponent#getFakeAcceptorSlot",
    "access": "public",
    "description": "Returns fake acceptor slot used for matching",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{import(\"./item_acceptor\").ItemAcceptorSlot}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "import(\"./item_acceptor\").ItemAcceptorSlot"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1588,
    "kind": "method",
    "name": "getFakeEjectorSlot",
    "memberof": "js/game/components/belt.js~BeltComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/belt.js~BeltComponent#getFakeEjectorSlot",
    "access": "public",
    "description": "Returns fake acceptor slot used for matching",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{import(\"./item_ejector\").ItemEjectorSlot}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "import(\"./item_ejector\").ItemEjectorSlot"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1589,
    "kind": "method",
    "name": "transformBeltToLocalSpace",
    "memberof": "js/game/components/belt.js~BeltComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/belt.js~BeltComponent#transformBeltToLocalSpace",
    "access": "public",
    "description": "Converts from belt space (0 = start of belt ... 1 = end of belt) to the local\nbelt coordinates (-0.5|-0.5 to 0.5|0.5)",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "progress",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1590,
    "kind": "file",
    "name": "js/game/components/belt_reader.js",
    "content": "import { Component } from \"../component\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { typeItemSingleton } from \"../item_resolver\";\r\nimport { types } from \"../../savegame/serialization\";\r\n\r\nexport class BeltReaderComponent extends Component {\r\n    static getId() {\r\n        return \"BeltReader\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            lastItem: types.nullable(typeItemSingleton),\r\n        };\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * Which items went through the reader, we only store the time\r\n         * @type {Array<number>}\r\n         */\r\n        this.lastItemTimes = [];\r\n\r\n        /**\r\n         * Which item passed the reader last\r\n         * @type {BaseItem}\r\n         */\r\n        this.lastItem = null;\r\n\r\n        /**\r\n         * Stores the last throughput we computed\r\n         * @type {number}\r\n         */\r\n        this.lastThroughput = 0;\r\n\r\n        /**\r\n         * Stores when we last computed the throughput\r\n         * @type {number}\r\n         */\r\n        this.lastThroughputComputation = 0;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/belt_reader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1591,
    "kind": "class",
    "name": "BeltReaderComponent",
    "memberof": "js/game/components/belt_reader.js",
    "static": true,
    "longname": "js/game/components/belt_reader.js~BeltReaderComponent",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/belt_reader.js",
    "importStyle": "{BeltReaderComponent}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/component.js~Component"
    ]
  },
  {
    "__docId__": 1592,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/components/belt_reader.js~BeltReaderComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/belt_reader.js~BeltReaderComponent.getId",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1593,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/components/belt_reader.js~BeltReaderComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/belt_reader.js~BeltReaderComponent.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"lastItem\": *}"
      ]
    }
  },
  {
    "__docId__": 1594,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/components/belt_reader.js~BeltReaderComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/belt_reader.js~BeltReaderComponent#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 1595,
    "kind": "member",
    "name": "lastItemTimes",
    "memberof": "js/game/components/belt_reader.js~BeltReaderComponent",
    "static": false,
    "longname": "js/game/components/belt_reader.js~BeltReaderComponent#lastItemTimes",
    "access": "public",
    "description": "Which items went through the reader, we only store the time",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Array<number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1596,
    "kind": "member",
    "name": "lastItem",
    "memberof": "js/game/components/belt_reader.js~BeltReaderComponent",
    "static": false,
    "longname": "js/game/components/belt_reader.js~BeltReaderComponent#lastItem",
    "access": "public",
    "description": "Which item passed the reader last",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1597,
    "kind": "member",
    "name": "lastThroughput",
    "memberof": "js/game/components/belt_reader.js~BeltReaderComponent",
    "static": false,
    "longname": "js/game/components/belt_reader.js~BeltReaderComponent#lastThroughput",
    "access": "public",
    "description": "Stores the last throughput we computed",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1598,
    "kind": "member",
    "name": "lastThroughputComputation",
    "memberof": "js/game/components/belt_reader.js~BeltReaderComponent",
    "static": false,
    "longname": "js/game/components/belt_reader.js~BeltReaderComponent#lastThroughputComputation",
    "access": "public",
    "description": "Stores when we last computed the throughput",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1599,
    "kind": "file",
    "name": "js/game/components/belt_underlays.js",
    "content": "import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { Component } from \"../component\";\r\n\r\n/**\r\n * Store which type an underlay is, this is cached so we can easily\r\n * render it.\r\n *\r\n * Full: Render underlay at top and bottom of tile\r\n * Bottom Only: Only render underlay at the bottom half\r\n * Top Only:\r\n * @enum {string}\r\n */\r\nexport const enumClippedBeltUnderlayType = {\r\n    full: \"full\",\r\n    bottomOnly: \"bottomOnly\",\r\n    topOnly: \"topOnly\",\r\n    none: \"none\",\r\n};\r\n\r\n/**\r\n * @typedef {{\r\n *   pos: Vector,\r\n *   direction: enumDirection,\r\n *   cachedType?: enumClippedBeltUnderlayType\r\n * }} BeltUnderlayTile\r\n */\r\n\r\nexport class BeltUnderlaysComponent extends Component {\r\n    static getId() {\r\n        return \"BeltUnderlays\";\r\n    }\r\n\r\n    /**\r\n     * @param {object} param0\r\n     * @param {Array<BeltUnderlayTile>=} param0.underlays Where to render belt underlays\r\n     */\r\n    constructor({ underlays = [] }) {\r\n        super();\r\n        this.underlays = underlays;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/belt_underlays.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1600,
    "kind": "variable",
    "name": "enumClippedBeltUnderlayType",
    "memberof": "js/game/components/belt_underlays.js",
    "static": true,
    "longname": "js/game/components/belt_underlays.js~enumClippedBeltUnderlayType",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/belt_underlays.js",
    "importStyle": "{enumClippedBeltUnderlayType}",
    "description": "Store which type an underlay is, this is cached so we can easily\nrender it.\n\nFull: Render underlay at top and bottom of tile\nBottom Only: Only render underlay at the bottom half\nTop Only:",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"full\": string, \"bottomOnly\": string, \"topOnly\": string, \"none\": string}"
      ]
    }
  },
  {
    "__docId__": 1601,
    "kind": "typedef",
    "name": "BeltUnderlayTile",
    "memberof": "js/game/components/belt_underlays.js",
    "static": true,
    "longname": "js/game/components/belt_underlays.js~BeltUnderlayTile",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "type": {
      "types": [
        "{\n  pos: Vector,\n  direction: enumDirection,\n  cachedType?: enumClippedBeltUnderlayType\n}"
      ],
      "optional": false,
      "name": "BeltUnderlayTile"
    }
  },
  {
    "__docId__": 1602,
    "kind": "file",
    "name": "js/game/components/constant_signal.js",
    "content": "import { gItemRegistry } from \"../../core/global_registries\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { Component } from \"../component\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { typeItemSingleton } from \"../item_resolver\";\r\n\r\nexport class ConstantSignalComponent extends Component {\r\n    static getId() {\r\n        return \"ConstantSignal\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            signal: types.nullable(typeItemSingleton),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Copy the current state to another component\r\n     * @param {ConstantSignalComponent} otherComponent\r\n     */\r\n    copyAdditionalStateTo(otherComponent) {\r\n        otherComponent.signal = this.signal;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {BaseItem=} param0.signal The signal to store\r\n     */\r\n    constructor({ signal = null }) {\r\n        super();\r\n        this.signal = signal;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/constant_signal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1603,
    "kind": "class",
    "name": "ConstantSignalComponent",
    "memberof": "js/game/components/constant_signal.js",
    "static": true,
    "longname": "js/game/components/constant_signal.js~ConstantSignalComponent",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/constant_signal.js",
    "importStyle": "{ConstantSignalComponent}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/component.js~Component"
    ]
  },
  {
    "__docId__": 1604,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/components/constant_signal.js~ConstantSignalComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/constant_signal.js~ConstantSignalComponent.getId",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1605,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/components/constant_signal.js~ConstantSignalComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/constant_signal.js~ConstantSignalComponent.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"signal\": *}"
      ]
    }
  },
  {
    "__docId__": 1606,
    "kind": "method",
    "name": "copyAdditionalStateTo",
    "memberof": "js/game/components/constant_signal.js~ConstantSignalComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/constant_signal.js~ConstantSignalComponent#copyAdditionalStateTo",
    "access": "public",
    "description": "Copy the current state to another component",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "ConstantSignalComponent"
        ],
        "spread": false,
        "optional": false,
        "name": "otherComponent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1607,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/components/constant_signal.js~ConstantSignalComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/constant_signal.js~ConstantSignalComponent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BaseItem="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.signal",
        "description": "The signal to store"
      }
    ]
  },
  {
    "__docId__": 1608,
    "kind": "member",
    "name": "signal",
    "memberof": "js/game/components/constant_signal.js~ConstantSignalComponent",
    "static": false,
    "longname": "js/game/components/constant_signal.js~ConstantSignalComponent#signal",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1609,
    "kind": "file",
    "name": "js/game/components/display.js",
    "content": "import { Component } from \"../component\";\r\n\r\nexport class DisplayComponent extends Component {\r\n    static getId() {\r\n        return \"Display\";\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/display.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1610,
    "kind": "class",
    "name": "DisplayComponent",
    "memberof": "js/game/components/display.js",
    "static": true,
    "longname": "js/game/components/display.js~DisplayComponent",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/display.js",
    "importStyle": "{DisplayComponent}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/component.js~Component"
    ]
  },
  {
    "__docId__": 1611,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/components/display.js~DisplayComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/display.js~DisplayComponent.getId",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1612,
    "kind": "file",
    "name": "js/game/components/filter.js",
    "content": "import { types } from \"../../savegame/serialization\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { Component } from \"../component\";\r\nimport { typeItemSingleton } from \"../item_resolver\";\r\n\r\n/**\r\n * @typedef {{\r\n *   item: BaseItem,\r\n *   progress: number\r\n * }} PendingFilterItem\r\n */\r\n\r\nexport class FilterComponent extends Component {\r\n    static getId() {\r\n        return \"Filter\";\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        return new FilterComponent();\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            pendingItemsToLeaveThrough: types.array(\r\n                types.structured({\r\n                    item: typeItemSingleton,\r\n                    progress: types.ufloat,\r\n                })\r\n            ),\r\n\r\n            pendingItemsToReject: types.array(\r\n                types.structured({\r\n                    item: typeItemSingleton,\r\n                    progress: types.ufloat,\r\n                })\r\n            ),\r\n        };\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * Items in queue to leave through\r\n         * @type {Array<PendingFilterItem>}\r\n         */\r\n        this.pendingItemsToLeaveThrough = [];\r\n\r\n        /**\r\n         * Items in queue to reject\r\n         * @type {Array<PendingFilterItem>}\r\n         */\r\n        this.pendingItemsToReject = [];\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/filter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1613,
    "kind": "typedef",
    "name": "PendingFilterItem",
    "memberof": "js/game/components/filter.js",
    "static": true,
    "longname": "js/game/components/filter.js~PendingFilterItem",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "type": {
      "types": [
        "{\n  item: BaseItem,\n  progress: number\n}"
      ],
      "optional": false,
      "name": "PendingFilterItem"
    }
  },
  {
    "__docId__": 1614,
    "kind": "file",
    "name": "js/game/components/hub.js",
    "content": "import { Component } from \"../component\";\r\n\r\nexport class HubComponent extends Component {\r\n    static getId() {\r\n        return \"Hub\";\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/hub.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1615,
    "kind": "class",
    "name": "HubComponent",
    "memberof": "js/game/components/hub.js",
    "static": true,
    "longname": "js/game/components/hub.js~HubComponent",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/hub.js",
    "importStyle": "{HubComponent}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/component.js~Component"
    ]
  },
  {
    "__docId__": 1616,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/components/hub.js~HubComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/hub.js~HubComponent.getId",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1617,
    "kind": "file",
    "name": "js/game/components/item_acceptor.js",
    "content": "import { enumDirection, enumInvertedDirections, Vector } from \"../../core/vector\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { Component } from \"../component\";\r\n\r\n/** @typedef {{\r\n * pos: Vector,\r\n * directions: enumDirection[],\r\n * filter?: ItemType\r\n * }} ItemAcceptorSlot */\r\n\r\n/**\r\n * Contains information about a slot plus its location\r\n * @typedef {{\r\n *  slot: ItemAcceptorSlot,\r\n *  index: number,\r\n *  acceptedDirection: enumDirection\r\n * }} ItemAcceptorLocatedSlot */\r\n\r\n/** @typedef {{\r\n * pos: Vector,\r\n * directions: enumDirection[],\r\n * filter?: ItemType\r\n * }} ItemAcceptorSlotConfig */\r\n\r\nexport class ItemAcceptorComponent extends Component {\r\n    static getId() {\r\n        return \"ItemAcceptor\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {Array<ItemAcceptorSlotConfig>} param0.slots The slots from which we accept items\r\n     */\r\n    constructor({ slots = [] }) {\r\n        super();\r\n\r\n        /**\r\n         * Fixes belt animations\r\n         * @type {Array<{\r\n         *  item: BaseItem,\r\n         * slotIndex: number,\r\n         * animProgress: number,\r\n         * direction: enumDirection\r\n         * }>}\r\n         */\r\n        this.itemConsumptionAnimations = [];\r\n\r\n        this.setSlots(slots);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Array<ItemAcceptorSlotConfig>} slots\r\n     */\r\n    setSlots(slots) {\r\n        /** @type {Array<ItemAcceptorSlot>} */\r\n        this.slots = [];\r\n        for (let i = 0; i < slots.length; ++i) {\r\n            const slot = slots[i];\r\n            this.slots.push({\r\n                pos: slot.pos,\r\n                directions: slot.directions,\r\n\r\n                // Which type of item to accept (shape | color | all) @see ItemType\r\n                filter: slot.filter,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns if this acceptor can accept a new item at slot N\r\n     * @param {number} slotIndex\r\n     * @param {BaseItem=} item\r\n     */\r\n    canAcceptItem(slotIndex, item) {\r\n        const slot = this.slots[slotIndex];\r\n        return !slot.filter || slot.filter === item.getItemType();\r\n    }\r\n\r\n    /**\r\n     * Called when an item has been accepted so that\r\n     * @param {number} slotIndex\r\n     * @param {enumDirection} direction\r\n     * @param {BaseItem} item\r\n     * @param {number} remainingProgress World space remaining progress, can be set to set the start position of the item\r\n     */\r\n    onItemAccepted(slotIndex, direction, item, remainingProgress = 0.0) {\r\n        this.itemConsumptionAnimations.push({\r\n            item,\r\n            slotIndex,\r\n            direction,\r\n            animProgress: Math.min(1, remainingProgress * 2),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Tries to find a slot which accepts the current item\r\n     * @param {Vector} targetLocalTile\r\n     * @param {enumDirection} fromLocalDirection\r\n     * @returns {ItemAcceptorLocatedSlot|null}\r\n     */\r\n    findMatchingSlot(targetLocalTile, fromLocalDirection) {\r\n        // We need to invert our direction since the acceptor specifies *from* which direction\r\n        // it accepts items, but the ejector specifies *into* which direction it ejects items.\r\n        // E.g.: Ejector ejects into \"right\" direction but acceptor accepts from \"left\" direction.\r\n        const desiredDirection = enumInvertedDirections[fromLocalDirection];\r\n\r\n        // Go over all slots and try to find a target slot\r\n        for (let slotIndex = 0; slotIndex < this.slots.length; ++slotIndex) {\r\n            const slot = this.slots[slotIndex];\r\n\r\n            // Make sure the acceptor slot is on the right position\r\n            if (!slot.pos.equals(targetLocalTile)) {\r\n                continue;\r\n            }\r\n\r\n            // Check if the acceptor slot accepts items from our direction\r\n            for (let i = 0; i < slot.directions.length; ++i) {\r\n                // const localDirection = targetStaticComp.localDirectionToWorld(slot.directions[l]);\r\n                if (desiredDirection === slot.directions[i]) {\r\n                    return {\r\n                        slot,\r\n                        index: slotIndex,\r\n                        acceptedDirection: desiredDirection,\r\n                    };\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/item_acceptor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1618,
    "kind": "typedef",
    "name": "ItemAcceptorSlot",
    "memberof": "js/game/components/item_acceptor.js",
    "static": true,
    "longname": "js/game/components/item_acceptor.js~ItemAcceptorSlot",
    "access": "public",
    "description": null,
    "type": {
      "types": [
        "{\npos: Vector,\ndirections: enumDirection[],\nfilter?: ItemType\n}"
      ],
      "optional": false,
      "name": "ItemAcceptorSlot"
    }
  },
  {
    "__docId__": 1619,
    "kind": "typedef",
    "name": "ItemAcceptorLocatedSlot",
    "memberof": "js/game/components/item_acceptor.js",
    "static": true,
    "longname": "js/game/components/item_acceptor.js~ItemAcceptorLocatedSlot",
    "access": "public",
    "description": "Contains information about a slot plus its location",
    "type": {
      "types": [
        "{\n slot: ItemAcceptorSlot,\n index: number,\n acceptedDirection: enumDirection\n}"
      ],
      "optional": false,
      "name": "ItemAcceptorLocatedSlot"
    }
  },
  {
    "__docId__": 1620,
    "kind": "typedef",
    "name": "ItemAcceptorSlotConfig",
    "memberof": "js/game/components/item_acceptor.js",
    "static": true,
    "longname": "js/game/components/item_acceptor.js~ItemAcceptorSlotConfig",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "type": {
      "types": [
        "{\npos: Vector,\ndirections: enumDirection[],\nfilter?: ItemType\n}"
      ],
      "optional": false,
      "name": "ItemAcceptorSlotConfig"
    }
  },
  {
    "__docId__": 1621,
    "kind": "file",
    "name": "js/game/components/item_ejector.js",
    "content": "import { enumDirection, enumDirectionToVector, Vector } from \"../../core/vector\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { BeltPath } from \"../belt_path\";\r\nimport { Component } from \"../component\";\r\nimport { Entity } from \"../entity\";\r\nimport { typeItemSingleton } from \"../item_resolver\";\r\n\r\n/**\r\n * @typedef {{\r\n *    pos: Vector,\r\n *    direction: enumDirection,\r\n *    item: BaseItem,\r\n *    progress: number?,\r\n *    cachedDestSlot?: import(\"./item_acceptor\").ItemAcceptorLocatedSlot,\r\n *    cachedBeltPath?: BeltPath,\r\n *    cachedTargetEntity?: Entity\r\n * }} ItemEjectorSlot\r\n */\r\n\r\nexport class ItemEjectorComponent extends Component {\r\n    static getId() {\r\n        return \"ItemEjector\";\r\n    }\r\n\r\n    static getSchema() {\r\n        // The cachedDestSlot, cachedTargetEntity fields are not serialized.\r\n        return {\r\n            slots: types.fixedSizeArray(\r\n                types.structured({\r\n                    item: types.nullable(typeItemSingleton),\r\n                    progress: types.float,\r\n                })\r\n            ),\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {Array<{pos: Vector, direction: enumDirection }>=} param0.slots The slots to eject on\r\n     * @param {boolean=} param0.renderFloatingItems Whether to render items even if they are not connected\r\n     */\r\n    constructor({ slots = [], renderFloatingItems = true }) {\r\n        super();\r\n\r\n        this.setSlots(slots);\r\n        this.renderFloatingItems = renderFloatingItems;\r\n    }\r\n\r\n    /**\r\n     * @param {Array<{pos: Vector, direction: enumDirection }>} slots The slots to eject on\r\n     */\r\n    setSlots(slots) {\r\n        /** @type {Array<ItemEjectorSlot>} */\r\n        this.slots = [];\r\n        for (let i = 0; i < slots.length; ++i) {\r\n            const slot = slots[i];\r\n            this.slots.push({\r\n                pos: slot.pos,\r\n                direction: slot.direction,\r\n                item: null,\r\n                progress: 0,\r\n                cachedDestSlot: null,\r\n                cachedTargetEntity: null,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns where this slot ejects to\r\n     * @param {ItemEjectorSlot} slot\r\n     * @returns {Vector}\r\n     */\r\n    getSlotTargetLocalTile(slot) {\r\n        const directionVector = enumDirectionToVector[slot.direction];\r\n        return slot.pos.add(directionVector);\r\n    }\r\n\r\n    /**\r\n     * Returns whether any slot ejects to the given local tile\r\n     * @param {Vector} tile\r\n     */\r\n    anySlotEjectsToLocalTile(tile) {\r\n        for (let i = 0; i < this.slots.length; ++i) {\r\n            if (this.getSlotTargetLocalTile(this.slots[i]).equals(tile)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns if we can eject on a given slot\r\n     * @param {number} slotIndex\r\n     * @returns {boolean}\r\n     */\r\n    canEjectOnSlot(slotIndex) {\r\n        assert(slotIndex >= 0 && slotIndex < this.slots.length, \"Invalid ejector slot: \" + slotIndex);\r\n        return !this.slots[slotIndex].item;\r\n    }\r\n\r\n    /**\r\n     * Returns the first free slot on this ejector or null if there is none\r\n     * @returns {number?}\r\n     */\r\n    getFirstFreeSlot() {\r\n        for (let i = 0; i < this.slots.length; ++i) {\r\n            if (this.canEjectOnSlot(i)) {\r\n                return i;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Tries to eject a given item\r\n     * @param {number} slotIndex\r\n     * @param {BaseItem} item\r\n     * @returns {boolean}\r\n     */\r\n    tryEject(slotIndex, item) {\r\n        if (!this.canEjectOnSlot(slotIndex)) {\r\n            return false;\r\n        }\r\n        this.slots[slotIndex].item = item;\r\n        this.slots[slotIndex].progress = 0;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Clears the given slot and returns the item it had\r\n     * @param {number} slotIndex\r\n     * @returns {BaseItem|null}\r\n     */\r\n    takeSlotItem(slotIndex) {\r\n        const slot = this.slots[slotIndex];\r\n        const item = slot.item;\r\n        slot.item = null;\r\n        slot.progress = 0.0;\r\n        return item;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/item_ejector.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1622,
    "kind": "typedef",
    "name": "ItemEjectorSlot",
    "memberof": "js/game/components/item_ejector.js",
    "static": true,
    "longname": "js/game/components/item_ejector.js~ItemEjectorSlot",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "type": {
      "types": [
        "{\n   pos: Vector,\n   direction: enumDirection,\n   item: BaseItem,\n   progress: number?,\n   cachedDestSlot?: import(\"./item_acceptor\").ItemAcceptorLocatedSlot,\n   cachedBeltPath?: BeltPath,\n   cachedTargetEntity?: Entity\n}"
      ],
      "optional": false,
      "name": "ItemEjectorSlot"
    }
  },
  {
    "__docId__": 1623,
    "kind": "file",
    "name": "js/game/components/item_processor.js",
    "content": "import { types } from \"../../savegame/serialization\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { Component } from \"../component\";\r\n\r\n/** @enum {string} */\r\nexport const enumItemProcessorTypes = {\r\n    balancer: \"balancer\",\r\n    cutter: \"cutter\",\r\n    cutterQuad: \"cutterQuad\",\r\n    rotater: \"rotater\",\r\n    rotaterCCW: \"rotaterCCW\",\r\n    rotater180: \"rotater180\",\r\n    stacker: \"stacker\",\r\n    trash: \"trash\",\r\n    mixer: \"mixer\",\r\n    painter: \"painter\",\r\n    painterDouble: \"painterDouble\",\r\n    painterQuad: \"painterQuad\",\r\n    hub: \"hub\",\r\n    filter: \"filter\",\r\n    reader: \"reader\",\r\n};\r\n\r\n/** @enum {string} */\r\nexport const enumItemProcessorRequirements = {\r\n    painterQuad: \"painterQuad\",\r\n};\r\n\r\n/** @typedef {{\r\n *  item: BaseItem,\r\n *  requiredSlot?: number,\r\n *  preferredSlot?: number\r\n * }} EjectorItemToEject */\r\n\r\n/** @typedef {{\r\n *  remainingTime: number,\r\n *  items: Array<EjectorItemToEject>,\r\n * }} EjectorCharge */\r\n\r\nexport class ItemProcessorComponent extends Component {\r\n    static getId() {\r\n        return \"ItemProcessor\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            nextOutputSlot: types.uint,\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {enumItemProcessorTypes=} param0.processorType Which type of processor this is\r\n     * @param {enumItemProcessorRequirements=} param0.processingRequirement Applied processing requirement\r\n     * @param {number=} param0.inputsPerCharge How many items this machine needs until it can start working\r\n     *\r\n     */\r\n    constructor({\r\n        processorType = enumItemProcessorTypes.balancer,\r\n        processingRequirement = null,\r\n        inputsPerCharge = 1,\r\n    }) {\r\n        super();\r\n\r\n        // Which slot to emit next, this is only a preference and if it can't emit\r\n        // it will take the other one. Some machines ignore this (e.g. the balancer) to make\r\n        // sure the outputs always match\r\n        this.nextOutputSlot = 0;\r\n\r\n        // Type of the processor\r\n        this.type = processorType;\r\n\r\n        // Type of processing requirement\r\n        this.processingRequirement = processingRequirement;\r\n\r\n        // How many inputs we need for one charge\r\n        this.inputsPerCharge = inputsPerCharge;\r\n\r\n        /**\r\n         * Our current inputs\r\n         * @type {Array<{ item: BaseItem, sourceSlot: number }>}\r\n         */\r\n        this.inputSlots = [];\r\n\r\n        /**\r\n         * What we are currently processing, empty if we don't produce anything rn\r\n         * requiredSlot: Item *must* be ejected on this slot\r\n         * preferredSlot: Item *can* be ejected on this slot, but others are fine too if the one is not usable\r\n         * @type {Array<EjectorCharge>}\r\n         */\r\n        this.ongoingCharges = [];\r\n\r\n        /**\r\n         * How much processing time we have left from the last tick\r\n         * @type {number}\r\n         */\r\n        this.bonusTime = 0;\r\n    }\r\n\r\n    /**\r\n     * Tries to take the item\r\n     * @param {BaseItem} item\r\n     * @param {number} sourceSlot\r\n     */\r\n    tryTakeItem(item, sourceSlot) {\r\n        if (this.type === enumItemProcessorTypes.hub || this.type === enumItemProcessorTypes.trash) {\r\n            // Hub has special logic .. not really nice but efficient.\r\n            this.inputSlots.push({ item, sourceSlot });\r\n            return true;\r\n        }\r\n\r\n        // Check that we only take one item per slot\r\n        for (let i = 0; i < this.inputSlots.length; ++i) {\r\n            const slot = this.inputSlots[i];\r\n            if (slot.sourceSlot === sourceSlot) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        this.inputSlots.push({ item, sourceSlot });\r\n        return true;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/item_processor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1624,
    "kind": "variable",
    "name": "enumItemProcessorTypes",
    "memberof": "js/game/components/item_processor.js",
    "static": true,
    "longname": "js/game/components/item_processor.js~enumItemProcessorTypes",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/item_processor.js",
    "importStyle": "{enumItemProcessorTypes}",
    "description": null,
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"balancer\": string, \"cutter\": string, \"cutterQuad\": string, \"rotater\": string, \"rotaterCCW\": string, \"rotater180\": string, \"stacker\": string, \"trash\": string, \"mixer\": string, \"painter\": string, \"painterDouble\": string, \"painterQuad\": string, \"hub\": string, \"filter\": string, \"reader\": string}"
      ]
    }
  },
  {
    "__docId__": 1625,
    "kind": "variable",
    "name": "enumItemProcessorRequirements",
    "memberof": "js/game/components/item_processor.js",
    "static": true,
    "longname": "js/game/components/item_processor.js~enumItemProcessorRequirements",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/item_processor.js",
    "importStyle": "{enumItemProcessorRequirements}",
    "description": null,
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"painterQuad\": string}"
      ]
    }
  },
  {
    "__docId__": 1626,
    "kind": "typedef",
    "name": "EjectorItemToEject",
    "memberof": "js/game/components/item_processor.js",
    "static": true,
    "longname": "js/game/components/item_processor.js~EjectorItemToEject",
    "access": "public",
    "description": null,
    "type": {
      "types": [
        "{\n item: BaseItem,\n requiredSlot?: number,\n preferredSlot?: number\n}"
      ],
      "optional": false,
      "name": "EjectorItemToEject"
    }
  },
  {
    "__docId__": 1627,
    "kind": "typedef",
    "name": "EjectorCharge",
    "memberof": "js/game/components/item_processor.js",
    "static": true,
    "longname": "js/game/components/item_processor.js~EjectorCharge",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "type": {
      "types": [
        "{\n remainingTime: number,\n items: Array<EjectorItemToEject>,\n}"
      ],
      "optional": false,
      "name": "EjectorCharge"
    }
  },
  {
    "__docId__": 1628,
    "kind": "file",
    "name": "js/game/components/item_producer.js",
    "content": "import { Component } from \"../component\";\r\n\r\nexport class ItemProducerComponent extends Component {\r\n    static getId() {\r\n        return \"ItemProducer\";\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/item_producer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1629,
    "kind": "class",
    "name": "ItemProducerComponent",
    "memberof": "js/game/components/item_producer.js",
    "static": true,
    "longname": "js/game/components/item_producer.js~ItemProducerComponent",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/item_producer.js",
    "importStyle": "{ItemProducerComponent}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/component.js~Component"
    ]
  },
  {
    "__docId__": 1630,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/components/item_producer.js~ItemProducerComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/item_producer.js~ItemProducerComponent.getId",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1631,
    "kind": "file",
    "name": "js/game/components/lever.js",
    "content": "import { Component } from \"../component\";\r\nimport { types } from \"../../savegame/serialization\";\r\n\r\nexport class LeverComponent extends Component {\r\n    static getId() {\r\n        return \"Lever\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            toggled: types.bool,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Copy the current state to another component\r\n     * @param {LeverComponent} otherComponent\r\n     */\r\n    copyAdditionalStateTo(otherComponent) {\r\n        otherComponent.toggled = this.toggled;\r\n    }\r\n\r\n    /**\r\n     * @param {object} param0\r\n     * @param {boolean=} param0.toggled\r\n     */\r\n    constructor({ toggled = false }) {\r\n        super();\r\n        this.toggled = toggled;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/lever.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1632,
    "kind": "class",
    "name": "LeverComponent",
    "memberof": "js/game/components/lever.js",
    "static": true,
    "longname": "js/game/components/lever.js~LeverComponent",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/lever.js",
    "importStyle": "{LeverComponent}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/component.js~Component"
    ]
  },
  {
    "__docId__": 1633,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/components/lever.js~LeverComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/lever.js~LeverComponent.getId",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1634,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/components/lever.js~LeverComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/lever.js~LeverComponent.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"toggled\": *}"
      ]
    }
  },
  {
    "__docId__": 1635,
    "kind": "method",
    "name": "copyAdditionalStateTo",
    "memberof": "js/game/components/lever.js~LeverComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/lever.js~LeverComponent#copyAdditionalStateTo",
    "access": "public",
    "description": "Copy the current state to another component",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "LeverComponent"
        ],
        "spread": false,
        "optional": false,
        "name": "otherComponent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1636,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/components/lever.js~LeverComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/lever.js~LeverComponent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.toggled",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1637,
    "kind": "member",
    "name": "toggled",
    "memberof": "js/game/components/lever.js~LeverComponent",
    "static": false,
    "longname": "js/game/components/lever.js~LeverComponent#toggled",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1638,
    "kind": "file",
    "name": "js/game/components/logic_gate.js",
    "content": "import { Component } from \"../component\";\r\n\r\n/** @enum {string} */\r\nexport const enumLogicGateType = {\r\n    and: \"and\",\r\n    not: \"not\",\r\n    xor: \"xor\",\r\n    or: \"or\",\r\n    transistor: \"transistor\",\r\n\r\n    analyzer: \"analyzer\",\r\n    rotater: \"rotater\",\r\n    unstacker: \"unstacker\",\r\n    cutter: \"cutter\",\r\n    compare: \"compare\",\r\n    stacker: \"stacker\",\r\n    painter: \"painter\",\r\n};\r\n\r\nexport class LogicGateComponent extends Component {\r\n    static getId() {\r\n        return \"LogicGate\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {enumLogicGateType=} param0.type\r\n     */\r\n    constructor({ type = enumLogicGateType.and }) {\r\n        super();\r\n        this.type = type;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/logic_gate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1639,
    "kind": "variable",
    "name": "enumLogicGateType",
    "memberof": "js/game/components/logic_gate.js",
    "static": true,
    "longname": "js/game/components/logic_gate.js~enumLogicGateType",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/logic_gate.js",
    "importStyle": "{enumLogicGateType}",
    "description": null,
    "lineNumber": 4,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"and\": string, \"not\": string, \"xor\": string, \"or\": string, \"transistor\": string, \"analyzer\": string, \"rotater\": string, \"unstacker\": string, \"cutter\": string, \"compare\": string, \"stacker\": string, \"painter\": string}"
      ]
    }
  },
  {
    "__docId__": 1640,
    "kind": "class",
    "name": "LogicGateComponent",
    "memberof": "js/game/components/logic_gate.js",
    "static": true,
    "longname": "js/game/components/logic_gate.js~LogicGateComponent",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/logic_gate.js",
    "importStyle": "{LogicGateComponent}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/component.js~Component"
    ]
  },
  {
    "__docId__": 1641,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/components/logic_gate.js~LogicGateComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/logic_gate.js~LogicGateComponent.getId",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1642,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/components/logic_gate.js~LogicGateComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/logic_gate.js~LogicGateComponent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumLogicGateType="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.type",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1643,
    "kind": "member",
    "name": "type",
    "memberof": "js/game/components/logic_gate.js~LogicGateComponent",
    "static": false,
    "longname": "js/game/components/logic_gate.js~LogicGateComponent#type",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1644,
    "kind": "file",
    "name": "js/game/components/miner.js",
    "content": "import { types } from \"../../savegame/serialization\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { Component } from \"../component\";\r\nimport { Entity } from \"../entity\";\r\nimport { typeItemSingleton } from \"../item_resolver\";\r\n\r\nconst chainBufferSize = 6;\r\n\r\nexport class MinerComponent extends Component {\r\n    static getId() {\r\n        return \"Miner\";\r\n    }\r\n\r\n    static getSchema() {\r\n        // cachedMinedItem is not serialized.\r\n        return {\r\n            lastMiningTime: types.ufloat,\r\n            itemChainBuffer: types.array(typeItemSingleton),\r\n        };\r\n    }\r\n\r\n    constructor({ chainable = false }) {\r\n        super();\r\n        this.lastMiningTime = 0;\r\n        this.chainable = chainable;\r\n\r\n        /**\r\n         * Stores items from other miners which were chained to this\r\n         * miner.\r\n         * @type {Array<BaseItem>}\r\n         */\r\n        this.itemChainBuffer = [];\r\n\r\n        /**\r\n         * @type {BaseItem}\r\n         */\r\n        this.cachedMinedItem = null;\r\n\r\n        /**\r\n         * Which miner this miner ejects to, in case its a chainable one.\r\n         * If the value is false, it means there is no entity, and we don't have to re-check\r\n         * @type {Entity|null|false}\r\n         */\r\n        this.cachedChainedMiner = null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {BaseItem} item\r\n     */\r\n    tryAcceptChainedItem(item) {\r\n        if (this.itemChainBuffer.length > chainBufferSize) {\r\n            // Well, this one is full\r\n            return false;\r\n        }\r\n\r\n        this.itemChainBuffer.push(item);\r\n        return true;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/miner.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1645,
    "kind": "variable",
    "name": "chainBufferSize",
    "memberof": "js/game/components/miner.js",
    "static": true,
    "longname": "js/game/components/miner.js~chainBufferSize",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/components/miner.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1646,
    "kind": "class",
    "name": "MinerComponent",
    "memberof": "js/game/components/miner.js",
    "static": true,
    "longname": "js/game/components/miner.js~MinerComponent",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/miner.js",
    "importStyle": "{MinerComponent}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/component.js~Component"
    ]
  },
  {
    "__docId__": 1647,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/components/miner.js~MinerComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/miner.js~MinerComponent.getId",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1648,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/components/miner.js~MinerComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/miner.js~MinerComponent.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"lastMiningTime\": *, \"itemChainBuffer\": *}"
      ]
    }
  },
  {
    "__docId__": 1649,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/components/miner.js~MinerComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/miner.js~MinerComponent#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 1650,
    "kind": "member",
    "name": "lastMiningTime",
    "memberof": "js/game/components/miner.js~MinerComponent",
    "static": false,
    "longname": "js/game/components/miner.js~MinerComponent#lastMiningTime",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1651,
    "kind": "member",
    "name": "chainable",
    "memberof": "js/game/components/miner.js~MinerComponent",
    "static": false,
    "longname": "js/game/components/miner.js~MinerComponent#chainable",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1652,
    "kind": "member",
    "name": "itemChainBuffer",
    "memberof": "js/game/components/miner.js~MinerComponent",
    "static": false,
    "longname": "js/game/components/miner.js~MinerComponent#itemChainBuffer",
    "access": "public",
    "description": "Stores items from other miners which were chained to this\nminer.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "Array<BaseItem>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1653,
    "kind": "member",
    "name": "cachedMinedItem",
    "memberof": "js/game/components/miner.js~MinerComponent",
    "static": false,
    "longname": "js/game/components/miner.js~MinerComponent#cachedMinedItem",
    "access": "public",
    "description": "",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1654,
    "kind": "member",
    "name": "cachedChainedMiner",
    "memberof": "js/game/components/miner.js~MinerComponent",
    "static": false,
    "longname": "js/game/components/miner.js~MinerComponent#cachedChainedMiner",
    "access": "public",
    "description": "Which miner this miner ejects to, in case its a chainable one.\nIf the value is false, it means there is no entity, and we don't have to re-check",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "Entity",
        "null",
        "false"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1655,
    "kind": "method",
    "name": "tryAcceptChainedItem",
    "memberof": "js/game/components/miner.js~MinerComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/miner.js~MinerComponent#tryAcceptChainedItem",
    "access": "public",
    "description": "",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1656,
    "kind": "file",
    "name": "js/game/components/static_map_entity.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { Rectangle } from \"../../core/rectangle\";\r\nimport { AtlasSprite } from \"../../core/sprites\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { getBuildingDataFromCode } from \"../building_codes\";\r\nimport { Component } from \"../component\";\r\n\r\nexport class StaticMapEntityComponent extends Component {\r\n    static getId() {\r\n        return \"StaticMapEntity\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            origin: types.tileVector,\r\n            rotation: types.float,\r\n            originalRotation: types.float,\r\n\r\n            // See building_codes.js\r\n            code: types.string,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns the effective tile size\r\n     * @returns {Vector}\r\n     */\r\n    getTileSize() {\r\n        return getBuildingDataFromCode(this.code).tileSize;\r\n    }\r\n\r\n    /**\r\n     * Returns the sprite\r\n     * @returns {AtlasSprite}\r\n     */\r\n    getSprite() {\r\n        return getBuildingDataFromCode(this.code).sprite;\r\n    }\r\n\r\n    /**\r\n     * Returns the blueprint sprite\r\n     * @returns {AtlasSprite}\r\n     */\r\n    getBlueprintSprite() {\r\n        return getBuildingDataFromCode(this.code).blueprintSprite;\r\n    }\r\n\r\n    /**\r\n     * Returns the silhouette color\r\n     * @returns {string}\r\n     */\r\n    getSilhouetteColor() {\r\n        return getBuildingDataFromCode(this.code).silhouetteColor;\r\n    }\r\n\r\n    /**\r\n     * Returns the meta building\r\n     * @returns {import(\"../meta_building\").MetaBuilding}\r\n     */\r\n    getMetaBuilding() {\r\n        return getBuildingDataFromCode(this.code).metaInstance;\r\n    }\r\n\r\n    /**\r\n     * Returns the buildings variant\r\n     * @returns {string}\r\n     */\r\n    getVariant() {\r\n        return getBuildingDataFromCode(this.code).variant;\r\n    }\r\n\r\n    /**\r\n     * Copy the current state to another component\r\n     * @param {Component} otherComponent\r\n     */\r\n    copyAdditionalStateTo(otherComponent) {\r\n        return new StaticMapEntityComponent({\r\n            origin: this.origin.copy(),\r\n            rotation: this.rotation,\r\n            originalRotation: this.originalRotation,\r\n            code: this.code,\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {Vector=} param0.origin Origin (Top Left corner) of the entity\r\n     * @param {Vector=} param0.tileSize Size of the entity in tiles\r\n     * @param {number=} param0.rotation Rotation in degrees. Must be multiple of 90\r\n     * @param {number=} param0.originalRotation Original Rotation in degrees. Must be multiple of 90\r\n     * @param {String=} param0.code Building code\r\n     */\r\n    constructor({\r\n        origin = new Vector(),\r\n        tileSize = new Vector(1, 1),\r\n        rotation = 0,\r\n        originalRotation = 0,\r\n        code = \"\",\r\n    }) {\r\n        super();\r\n        assert(\r\n            rotation % 90 === 0,\r\n            \"Rotation of static map entity must be multiple of 90 (was \" + rotation + \")\"\r\n        );\r\n\r\n        this.origin = origin;\r\n        this.rotation = rotation;\r\n        this.code = code;\r\n        this.originalRotation = originalRotation;\r\n    }\r\n\r\n    /**\r\n     * Returns the effective rectangle of this entity in tile space\r\n     * @returns {Rectangle}\r\n     */\r\n    getTileSpaceBounds() {\r\n        const size = this.getTileSize();\r\n        switch (this.rotation) {\r\n            case 0:\r\n                return new Rectangle(this.origin.x, this.origin.y, size.x, size.y);\r\n            case 90:\r\n                return new Rectangle(this.origin.x - size.y + 1, this.origin.y, size.y, size.x);\r\n            case 180:\r\n                return new Rectangle(this.origin.x - size.x + 1, this.origin.y - size.y + 1, size.x, size.y);\r\n            case 270:\r\n                return new Rectangle(this.origin.x, this.origin.y - size.x + 1, size.y, size.x);\r\n            default:\r\n                assert(false, \"Invalid rotation\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Transforms the given vector/rotation from local space to world space\r\n     * @param {Vector} vector\r\n     * @returns {Vector}\r\n     */\r\n    applyRotationToVector(vector) {\r\n        return vector.rotateFastMultipleOf90(this.rotation);\r\n    }\r\n\r\n    /**\r\n     * Transforms the given vector/rotation from world space to local space\r\n     * @param {Vector} vector\r\n     * @returns {Vector}\r\n     */\r\n    unapplyRotationToVector(vector) {\r\n        return vector.rotateFastMultipleOf90(360 - this.rotation);\r\n    }\r\n\r\n    /**\r\n     * Transforms the given direction from local space\r\n     * @param {enumDirection} direction\r\n     * @returns {enumDirection}\r\n     */\r\n    localDirectionToWorld(direction) {\r\n        return Vector.transformDirectionFromMultipleOf90(direction, this.rotation);\r\n    }\r\n\r\n    /**\r\n     * Transforms the given direction from world to local space\r\n     * @param {enumDirection} direction\r\n     * @returns {enumDirection}\r\n     */\r\n    worldDirectionToLocal(direction) {\r\n        return Vector.transformDirectionFromMultipleOf90(direction, 360 - this.rotation);\r\n    }\r\n\r\n    /**\r\n     * Transforms from local tile space to global tile space\r\n     * @param {Vector} localTile\r\n     * @returns {Vector}\r\n     */\r\n    localTileToWorld(localTile) {\r\n        const result = localTile.rotateFastMultipleOf90(this.rotation);\r\n        result.x += this.origin.x;\r\n        result.y += this.origin.y;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Transforms from world space to local space\r\n     * @param {Vector} worldTile\r\n     */\r\n    worldToLocalTile(worldTile) {\r\n        const localUnrotated = worldTile.sub(this.origin);\r\n        return this.unapplyRotationToVector(localUnrotated);\r\n    }\r\n\r\n    /**\r\n     * Returns whether the entity should be drawn for the given parameters\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    shouldBeDrawn(parameters) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let w = 0;\r\n        let h = 0;\r\n        const size = this.getTileSize();\r\n\r\n        switch (this.rotation) {\r\n            case 0:\r\n                {\r\n                    x = this.origin.x;\r\n                    y = this.origin.y;\r\n                    w = size.x;\r\n                    h = size.y;\r\n                    break;\r\n                }\r\n            case 90:\r\n                {\r\n                    x = this.origin.x - size.y + 1;\r\n                    y = this.origin.y;\r\n                    w = size.y;\r\n                    h = size.x;\r\n                    break;\r\n                }\r\n            case 180:\r\n                {\r\n                    x = this.origin.x - size.x + 1;\r\n                    y = this.origin.y - size.y + 1;\r\n                    w = size.x;\r\n                    h = size.y;\r\n                    break;\r\n                }\r\n            case 270:\r\n                {\r\n                    x = this.origin.x;\r\n                    y = this.origin.y - size.x + 1;\r\n                    w = size.y;\r\n                    h = size.x;\r\n                    break;\r\n                }\r\n            default:\r\n                assert(false, \"Invalid rotation\");\r\n        }\r\n\r\n        return parameters.visibleRect.containsRect4Params(\r\n            x * globalConfig.tileSize,\r\n            y * globalConfig.tileSize,\r\n            w * globalConfig.tileSize,\r\n            h * globalConfig.tileSize\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Draws a sprite over the whole space of the entity\r\n     * @param {DrawParameters} parameters\r\n     * @param {AtlasSprite} sprite\r\n     * @param {number=} extrudePixels How many pixels to extrude the sprite\r\n     * @param {Vector=} overridePosition Whether to drwa the entity at a different location\r\n     */\r\n    drawSpriteOnBoundsClipped(parameters, sprite, extrudePixels = 0, overridePosition = null) {\r\n        if (!this.shouldBeDrawn(parameters) && !overridePosition) {\r\n            return;\r\n        }\r\n        const size = this.getTileSize();\r\n        let worldX = this.origin.x * globalConfig.tileSize;\r\n        let worldY = this.origin.y * globalConfig.tileSize;\r\n\r\n        if (overridePosition) {\r\n            worldX = overridePosition.x * globalConfig.tileSize;\r\n            worldY = overridePosition.y * globalConfig.tileSize;\r\n        }\r\n\r\n        if (this.rotation === 0) {\r\n            // Early out, is faster\r\n            sprite.drawCached(\r\n                parameters,\r\n                worldX - extrudePixels * size.x,\r\n                worldY - extrudePixels * size.y,\r\n                globalConfig.tileSize * size.x + 2 * extrudePixels * size.x,\r\n                globalConfig.tileSize * size.y + 2 * extrudePixels * size.y\r\n            );\r\n        } else {\r\n            const rotationCenterX = worldX + globalConfig.halfTileSize;\r\n            const rotationCenterY = worldY + globalConfig.halfTileSize;\r\n\r\n            parameters.context.translate(rotationCenterX, rotationCenterY);\r\n            parameters.context.rotate(Math.radians(this.rotation));\r\n            sprite.drawCached(\r\n                parameters, -globalConfig.halfTileSize - extrudePixels * size.x, -globalConfig.halfTileSize - extrudePixels * size.y,\r\n                globalConfig.tileSize * size.x + 2 * extrudePixels * size.x,\r\n                globalConfig.tileSize * size.y + 2 * extrudePixels * size.y,\r\n                false // no clipping possible here\r\n            );\r\n            parameters.context.rotate(-Math.radians(this.rotation));\r\n            parameters.context.translate(-rotationCenterX, -rotationCenterY);\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/static_map_entity.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1657,
    "kind": "class",
    "name": "StaticMapEntityComponent",
    "memberof": "js/game/components/static_map_entity.js",
    "static": true,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/static_map_entity.js",
    "importStyle": "{StaticMapEntityComponent}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/component.js~Component"
    ]
  },
  {
    "__docId__": 1658,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent.getId",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1659,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"origin\": *, \"rotation\": *, \"originalRotation\": *, \"code\": *}"
      ]
    }
  },
  {
    "__docId__": 1660,
    "kind": "method",
    "name": "getTileSize",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#getTileSize",
    "access": "public",
    "description": "Returns the effective tile size",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1661,
    "kind": "method",
    "name": "getSprite",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#getSprite",
    "access": "public",
    "description": "Returns the sprite",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AtlasSprite}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AtlasSprite"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1662,
    "kind": "method",
    "name": "getBlueprintSprite",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#getBlueprintSprite",
    "access": "public",
    "description": "Returns the blueprint sprite",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AtlasSprite}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AtlasSprite"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1663,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#getSilhouetteColor",
    "access": "public",
    "description": "Returns the silhouette color",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1664,
    "kind": "method",
    "name": "getMetaBuilding",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#getMetaBuilding",
    "access": "public",
    "description": "Returns the meta building",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{import(\"../meta_building\").MetaBuilding}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "import(\"../meta_building\").MetaBuilding"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1665,
    "kind": "method",
    "name": "getVariant",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#getVariant",
    "access": "public",
    "description": "Returns the buildings variant",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1666,
    "kind": "method",
    "name": "copyAdditionalStateTo",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#copyAdditionalStateTo",
    "access": "public",
    "description": "Copy the current state to another component",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "otherComponent",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1667,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.origin",
        "description": "Origin (Top Left corner) of the entity"
      },
      {
        "nullable": null,
        "types": [
          "Vector="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.tileSize",
        "description": "Size of the entity in tiles"
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.rotation",
        "description": "Rotation in degrees. Must be multiple of 90"
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.originalRotation",
        "description": "Original Rotation in degrees. Must be multiple of 90"
      },
      {
        "nullable": null,
        "types": [
          "String="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.code",
        "description": "Building code"
      }
    ]
  },
  {
    "__docId__": 1668,
    "kind": "member",
    "name": "origin",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#origin",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1669,
    "kind": "member",
    "name": "rotation",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#rotation",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1670,
    "kind": "member",
    "name": "code",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#code",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1671,
    "kind": "member",
    "name": "originalRotation",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#originalRotation",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1672,
    "kind": "method",
    "name": "getTileSpaceBounds",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#getTileSpaceBounds",
    "access": "public",
    "description": "Returns the effective rectangle of this entity in tile space",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Rectangle}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Rectangle"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1673,
    "kind": "method",
    "name": "applyRotationToVector",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#applyRotationToVector",
    "access": "public",
    "description": "Transforms the given vector/rotation from local space to world space",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "vector",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1674,
    "kind": "method",
    "name": "unapplyRotationToVector",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#unapplyRotationToVector",
    "access": "public",
    "description": "Transforms the given vector/rotation from world space to local space",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "vector",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1675,
    "kind": "method",
    "name": "localDirectionToWorld",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#localDirectionToWorld",
    "access": "public",
    "description": "Transforms the given direction from local space",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{enumDirection}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "enumDirection"
        ],
        "spread": false,
        "optional": false,
        "name": "direction",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "enumDirection"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1676,
    "kind": "method",
    "name": "worldDirectionToLocal",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#worldDirectionToLocal",
    "access": "public",
    "description": "Transforms the given direction from world to local space",
    "lineNumber": 167,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{enumDirection}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "enumDirection"
        ],
        "spread": false,
        "optional": false,
        "name": "direction",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "enumDirection"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1677,
    "kind": "method",
    "name": "localTileToWorld",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#localTileToWorld",
    "access": "public",
    "description": "Transforms from local tile space to global tile space",
    "lineNumber": 176,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "localTile",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1678,
    "kind": "method",
    "name": "worldToLocalTile",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#worldToLocalTile",
    "access": "public",
    "description": "Transforms from world space to local space",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "worldTile",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1679,
    "kind": "method",
    "name": "shouldBeDrawn",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#shouldBeDrawn",
    "access": "public",
    "description": "Returns whether the entity should be drawn for the given parameters",
    "lineNumber": 196,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1680,
    "kind": "method",
    "name": "drawSpriteOnBoundsClipped",
    "memberof": "js/game/components/static_map_entity.js~StaticMapEntityComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/static_map_entity.js~StaticMapEntityComponent#drawSpriteOnBoundsClipped",
    "access": "public",
    "description": "Draws a sprite over the whole space of the entity",
    "lineNumber": 255,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "AtlasSprite"
        ],
        "spread": false,
        "optional": false,
        "name": "sprite",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "extrudePixels",
        "description": "How many pixels to extrude the sprite"
      },
      {
        "nullable": null,
        "types": [
          "Vector="
        ],
        "spread": false,
        "optional": false,
        "name": "overridePosition",
        "description": "Whether to drwa the entity at a different location"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1681,
    "kind": "file",
    "name": "js/game/components/storage.js",
    "content": "import { types } from \"../../savegame/serialization\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { Component } from \"../component\";\r\nimport { typeItemSingleton } from \"../item_resolver\";\r\nimport { ColorItem } from \"../items/color_item\";\r\nimport { ShapeItem } from \"../items/shape_item\";\r\n\r\nexport class StorageComponent extends Component {\r\n    static getId() {\r\n        return \"Storage\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            storedCount: types.uint,\r\n            storedItem: types.nullable(typeItemSingleton),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @param {object} param0\r\n     * @param {number=} param0.maximumStorage How much this storage can hold\r\n     */\r\n    constructor({ maximumStorage = 1e20 }) {\r\n        super();\r\n        this.maximumStorage = maximumStorage;\r\n\r\n        /**\r\n         * Currently stored item\r\n         * @type {BaseItem}\r\n         */\r\n        this.storedItem = null;\r\n\r\n        /**\r\n         * How many of this item we have stored\r\n         */\r\n        this.storedCount = 0;\r\n\r\n        /**\r\n         * We compute an opacity to make sure it doesn't flicker\r\n         */\r\n        this.overlayOpacity = 0;\r\n    }\r\n\r\n    /**\r\n     * Returns whether this storage can accept the item\r\n     * @param {BaseItem} item\r\n     */\r\n    canAcceptItem(item) {\r\n        if (this.storedCount >= this.maximumStorage) {\r\n            return false;\r\n        }\r\n        if (!this.storedItem || this.storedCount === 0) {\r\n            return true;\r\n        }\r\n\r\n        const itemType = item.getItemType();\r\n\r\n        // Check type matches\r\n        if (itemType !== this.storedItem.getItemType()) {\r\n            return false;\r\n        }\r\n\r\n        if (itemType === \"color\") {\r\n            return /** @type {ColorItem} */ (this.storedItem).color === /** @type {ColorItem} */ (item).color;\r\n        }\r\n\r\n        if (itemType === \"shape\") {\r\n            return (\r\n                /** @type {ShapeItem} */ (this.storedItem).definition.getHash() ===\r\n                /** @type {ShapeItem} */ (item).definition.getHash()\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns whether the storage is full\r\n     * @returns {boolean}\r\n     */\r\n    getIsFull() {\r\n        return this.storedCount >= this.maximumStorage;\r\n    }\r\n\r\n    /**\r\n     * @param {BaseItem} item\r\n     */\r\n    takeItem(item) {\r\n        this.storedItem = item;\r\n        this.storedCount++;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/storage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1682,
    "kind": "class",
    "name": "StorageComponent",
    "memberof": "js/game/components/storage.js",
    "static": true,
    "longname": "js/game/components/storage.js~StorageComponent",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/storage.js",
    "importStyle": "{StorageComponent}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/component.js~Component"
    ]
  },
  {
    "__docId__": 1683,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/components/storage.js~StorageComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/storage.js~StorageComponent.getId",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1684,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/components/storage.js~StorageComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/storage.js~StorageComponent.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"storedCount\": *, \"storedItem\": *}"
      ]
    }
  },
  {
    "__docId__": 1685,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/components/storage.js~StorageComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/storage.js~StorageComponent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.maximumStorage",
        "description": "How much this storage can hold"
      }
    ]
  },
  {
    "__docId__": 1686,
    "kind": "member",
    "name": "maximumStorage",
    "memberof": "js/game/components/storage.js~StorageComponent",
    "static": false,
    "longname": "js/game/components/storage.js~StorageComponent#maximumStorage",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1687,
    "kind": "member",
    "name": "storedItem",
    "memberof": "js/game/components/storage.js~StorageComponent",
    "static": false,
    "longname": "js/game/components/storage.js~StorageComponent#storedItem",
    "access": "public",
    "description": "Currently stored item",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1688,
    "kind": "member",
    "name": "storedCount",
    "memberof": "js/game/components/storage.js~StorageComponent",
    "static": false,
    "longname": "js/game/components/storage.js~StorageComponent#storedCount",
    "access": "public",
    "description": "How many of this item we have stored",
    "lineNumber": 37,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1689,
    "kind": "member",
    "name": "overlayOpacity",
    "memberof": "js/game/components/storage.js~StorageComponent",
    "static": false,
    "longname": "js/game/components/storage.js~StorageComponent#overlayOpacity",
    "access": "public",
    "description": "We compute an opacity to make sure it doesn't flicker",
    "lineNumber": 42,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1690,
    "kind": "method",
    "name": "canAcceptItem",
    "memberof": "js/game/components/storage.js~StorageComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/storage.js~StorageComponent#canAcceptItem",
    "access": "public",
    "description": "Returns whether this storage can accept the item",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1691,
    "kind": "method",
    "name": "getIsFull",
    "memberof": "js/game/components/storage.js~StorageComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/storage.js~StorageComponent#getIsFull",
    "access": "public",
    "description": "Returns whether the storage is full",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1692,
    "kind": "method",
    "name": "takeItem",
    "memberof": "js/game/components/storage.js~StorageComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/storage.js~StorageComponent#takeItem",
    "access": "public",
    "description": "",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1694,
    "kind": "file",
    "name": "js/game/components/underground_belt.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { Component } from \"../component\";\r\nimport { Entity } from \"../entity\";\r\nimport { typeItemSingleton } from \"../item_resolver\";\r\n\r\n/** @enum {string} */\r\nexport const enumUndergroundBeltMode = {\r\n    sender: \"sender\",\r\n    receiver: \"receiver\",\r\n};\r\n\r\n/**\r\n * @typedef {{\r\n *   entity: Entity,\r\n *   distance: number\r\n * }} LinkedUndergroundBelt\r\n */\r\n\r\nexport class UndergroundBeltComponent extends Component {\r\n    static getId() {\r\n        return \"UndergroundBelt\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            pendingItems: types.array(types.pair(typeItemSingleton, types.float)),\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {enumUndergroundBeltMode=} param0.mode As which type of belt the entity acts\r\n     * @param {number=} param0.tier\r\n     */\r\n    constructor({ mode = enumUndergroundBeltMode.sender, tier = 0 }) {\r\n        super();\r\n\r\n        this.mode = mode;\r\n        this.tier = tier;\r\n\r\n        /** @type {Array<{ item: BaseItem, progress: number }>} */\r\n        this.consumptionAnimations = [];\r\n\r\n        /**\r\n         * Used on both receiver and sender.\r\n         * Reciever: Used to store the next item to transfer, and to block input while doing this\r\n         * Sender: Used to store which items are currently \"travelling\"\r\n         * @type {Array<[BaseItem, number]>} Format is [Item, ingame time to eject the item]\r\n         */\r\n        this.pendingItems = [];\r\n\r\n        /**\r\n         * The linked entity, used to speed up performance. This contains either\r\n         * the entrance or exit depending on the tunnel type\r\n         * @type {LinkedUndergroundBelt}\r\n         */\r\n        this.cachedLinkedEntity = null;\r\n    }\r\n\r\n    /**\r\n     * Tries to accept an item from an external source like a regular belt or building\r\n     * @param {BaseItem} item\r\n     * @param {number} beltSpeed How fast this item travels\r\n     */\r\n    tryAcceptExternalItem(item, beltSpeed) {\r\n        if (this.mode !== enumUndergroundBeltMode.sender) {\r\n            // Only senders accept external items\r\n            return false;\r\n        }\r\n\r\n        if (this.pendingItems.length > 0) {\r\n            // We currently have a pending item\r\n            return false;\r\n        }\r\n\r\n        this.pendingItems.push([item, 0]);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Tries to accept a tunneled item\r\n     * @param {BaseItem} item\r\n     * @param {number} travelDistance How many tiles this item has to travel\r\n     * @param {number} beltSpeed How fast this item travels\r\n     * @param {number} now Current ingame time\r\n     */\r\n    tryAcceptTunneledItem(item, travelDistance, beltSpeed, now) {\r\n        if (this.mode !== enumUndergroundBeltMode.receiver) {\r\n            // Only receivers can accept tunneled items\r\n            return false;\r\n        }\r\n\r\n        // Notice: We assume that for all items the travel distance is the same\r\n        const maxItemsInTunnel = (2 + travelDistance) / globalConfig.itemSpacingOnBelts;\r\n        if (this.pendingItems.length >= maxItemsInTunnel) {\r\n            // Simulate a real belt which gets full at some point\r\n            return false;\r\n        }\r\n\r\n        // NOTICE:\r\n        // This corresponds to the item ejector - it needs 0.5 additional tiles to eject the item.\r\n        // So instead of adding 1 we add 0.5 only.\r\n        // Additionally it takes 1 tile for the acceptor which we just add on top.\r\n        const travelDuration = (travelDistance + 1.5) / beltSpeed / globalConfig.itemSpacingOnBelts;\r\n\r\n        this.pendingItems.push([item, now + travelDuration]);\r\n        return true;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/underground_belt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1695,
    "kind": "variable",
    "name": "enumUndergroundBeltMode",
    "memberof": "js/game/components/underground_belt.js",
    "static": true,
    "longname": "js/game/components/underground_belt.js~enumUndergroundBeltMode",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/underground_belt.js",
    "importStyle": "{enumUndergroundBeltMode}",
    "description": null,
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"sender\": string, \"receiver\": string}"
      ]
    }
  },
  {
    "__docId__": 1696,
    "kind": "typedef",
    "name": "LinkedUndergroundBelt",
    "memberof": "js/game/components/underground_belt.js",
    "static": true,
    "longname": "js/game/components/underground_belt.js~LinkedUndergroundBelt",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "type": {
      "types": [
        "{\n  entity: Entity,\n  distance: number\n}"
      ],
      "optional": false,
      "name": "LinkedUndergroundBelt"
    }
  },
  {
    "__docId__": 1697,
    "kind": "file",
    "name": "js/game/components/wire.js",
    "content": "import { Component } from \"../component\";\r\n\r\n/** @enum {string} */\r\nexport const enumWireType = {\r\n    forward: \"forward\",\r\n    turn: \"turn\",\r\n    split: \"split\",\r\n    cross: \"cross\",\r\n};\r\n\r\nexport class WireComponent extends Component {\r\n    static getId() {\r\n        return \"Wire\";\r\n    }\r\n\r\n    /**\r\n     * @param {object} param0\r\n     * @param {enumWireType=} param0.type\r\n     * @param {import(\"../buildings/wire\").MetaWireBuilding.wireVariants=} param0.variant\r\n     */\r\n    // @ts-ignore\r\n    constructor({ type = enumWireType.forward, variant = \"first\" /*MetaWireBuilding.wireVariants.first*/ }) {\r\n        super();\r\n        this.type = type;\r\n\r\n        /**\r\n         * The variant of the wire, different variants do not connect\r\n         * @type {import(\"../buildings/wire\").MetaWireBuilding.wireVariants}\r\n         */\r\n        this.variant = variant;\r\n\r\n        /**\r\n         * @type {import(\"../systems/wire\").WireNetwork}\r\n         */\r\n        this.linkedNetwork = null;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/wire.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1698,
    "kind": "variable",
    "name": "enumWireType",
    "memberof": "js/game/components/wire.js",
    "static": true,
    "longname": "js/game/components/wire.js~enumWireType",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/wire.js",
    "importStyle": "{enumWireType}",
    "description": null,
    "lineNumber": 4,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"forward\": string, \"turn\": string, \"split\": string, \"cross\": string}"
      ]
    }
  },
  {
    "__docId__": 1699,
    "kind": "class",
    "name": "WireComponent",
    "memberof": "js/game/components/wire.js",
    "static": true,
    "longname": "js/game/components/wire.js~WireComponent",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/wire.js",
    "importStyle": "{WireComponent}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/component.js~Component"
    ]
  },
  {
    "__docId__": 1700,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/components/wire.js~WireComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/wire.js~WireComponent.getId",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1701,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/components/wire.js~WireComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/wire.js~WireComponent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumWireType="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "import(\"../buildings/wire\").MetaWireBuilding.wireVariants="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.variant",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1702,
    "kind": "member",
    "name": "type",
    "memberof": "js/game/components/wire.js~WireComponent",
    "static": false,
    "longname": "js/game/components/wire.js~WireComponent#type",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1703,
    "kind": "member",
    "name": "variant",
    "memberof": "js/game/components/wire.js~WireComponent",
    "static": false,
    "longname": "js/game/components/wire.js~WireComponent#variant",
    "access": "public",
    "description": "The variant of the wire, different variants do not connect",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "import(\"../buildings/wire\").MetaWireBuilding.wireVariants"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1704,
    "kind": "member",
    "name": "linkedNetwork",
    "memberof": "js/game/components/wire.js~WireComponent",
    "static": false,
    "longname": "js/game/components/wire.js~WireComponent#linkedNetwork",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "import(\"../systems/wire\").WireNetwork"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1705,
    "kind": "file",
    "name": "js/game/components/wired_pins.js",
    "content": "import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { Component } from \"../component\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { typeItemSingleton } from \"../item_resolver\";\r\n\r\n/** @enum {string} */\r\nexport const enumPinSlotType = {\r\n    logicalEjector: \"logicalEjector\",\r\n    logicalAcceptor: \"logicalAcceptor\",\r\n};\r\n\r\n/** @typedef {{\r\n *   pos: Vector,\r\n *   type: enumPinSlotType,\r\n *   direction: enumDirection\r\n * }} WirePinSlotDefinition */\r\n\r\n/** @typedef {{\r\n *   pos: Vector,\r\n *   type: enumPinSlotType,\r\n *   direction: enumDirection,\r\n *   value: BaseItem,\r\n *   linkedNetwork: import(\"../systems/wire\").WireNetwork\r\n * }} WirePinSlot */\r\n\r\nexport class WiredPinsComponent extends Component {\r\n    static getId() {\r\n        return \"WiredPins\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            slots: types.fixedSizeArray(\r\n                types.structured({\r\n                    value: types.nullable(typeItemSingleton),\r\n                })\r\n            ),\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {Array<WirePinSlotDefinition>} param0.slots\r\n     */\r\n    constructor({ slots = [] }) {\r\n        super();\r\n        this.setSlots(slots);\r\n    }\r\n\r\n    /**\r\n     * Sets the slots of this building\r\n     * @param {Array<WirePinSlotDefinition>} slots\r\n     */\r\n    setSlots(slots) {\r\n        /** @type {Array<WirePinSlot>} */\r\n        this.slots = [];\r\n\r\n        for (let i = 0; i < slots.length; ++i) {\r\n            const slotData = slots[i];\r\n            this.slots.push({\r\n                pos: slotData.pos,\r\n                type: slotData.type,\r\n                direction: slotData.direction,\r\n                value: null,\r\n                linkedNetwork: null,\r\n            });\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/wired_pins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1706,
    "kind": "variable",
    "name": "enumPinSlotType",
    "memberof": "js/game/components/wired_pins.js",
    "static": true,
    "longname": "js/game/components/wired_pins.js~enumPinSlotType",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/wired_pins.js",
    "importStyle": "{enumPinSlotType}",
    "description": null,
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"logicalEjector\": string, \"logicalAcceptor\": string}"
      ]
    }
  },
  {
    "__docId__": 1707,
    "kind": "typedef",
    "name": "WirePinSlotDefinition",
    "memberof": "js/game/components/wired_pins.js",
    "static": true,
    "longname": "js/game/components/wired_pins.js~WirePinSlotDefinition",
    "access": "public",
    "description": null,
    "type": {
      "types": [
        "{\n  pos: Vector,\n  type: enumPinSlotType,\n  direction: enumDirection\n}"
      ],
      "optional": false,
      "name": "WirePinSlotDefinition"
    }
  },
  {
    "__docId__": 1708,
    "kind": "typedef",
    "name": "WirePinSlot",
    "memberof": "js/game/components/wired_pins.js",
    "static": true,
    "longname": "js/game/components/wired_pins.js~WirePinSlot",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "type": {
      "types": [
        "{\n  pos: Vector,\n  type: enumPinSlotType,\n  direction: enumDirection,\n  value: BaseItem,\n  linkedNetwork: import(\"../systems/wire\").WireNetwork\n}"
      ],
      "optional": false,
      "name": "WirePinSlot"
    }
  },
  {
    "__docId__": 1709,
    "kind": "file",
    "name": "js/game/components/wire_tunnel.js",
    "content": "import { Component } from \"../component\";\r\n\r\nexport class WireTunnelComponent extends Component {\r\n    static getId() {\r\n        return \"WireTunnel\";\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * Linked network, only if its not multiple directions\r\n         * @type {Array<import(\"../systems/wire\").WireNetwork>}\r\n         */\r\n        this.linkedNetworks = [];\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/components/wire_tunnel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1710,
    "kind": "class",
    "name": "WireTunnelComponent",
    "memberof": "js/game/components/wire_tunnel.js",
    "static": true,
    "longname": "js/game/components/wire_tunnel.js~WireTunnelComponent",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/components/wire_tunnel.js",
    "importStyle": "{WireTunnelComponent}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/component.js~Component"
    ]
  },
  {
    "__docId__": 1711,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/components/wire_tunnel.js~WireTunnelComponent",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/components/wire_tunnel.js~WireTunnelComponent.getId",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1712,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/components/wire_tunnel.js~WireTunnelComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/components/wire_tunnel.js~WireTunnelComponent#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 1713,
    "kind": "member",
    "name": "linkedNetworks",
    "memberof": "js/game/components/wire_tunnel.js~WireTunnelComponent",
    "static": false,
    "longname": "js/game/components/wire_tunnel.js~WireTunnelComponent#linkedNetworks",
    "access": "public",
    "description": "Linked network, only if its not multiple directions",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "Array<import(\"../systems/wire\").WireNetwork>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1714,
    "kind": "file",
    "name": "js/game/component_registry.js",
    "content": "import { gComponentRegistry } from \"../core/global_registries\";\r\nimport { StaticMapEntityComponent } from \"./components/static_map_entity\";\r\nimport { BeltComponent } from \"./components/belt\";\r\nimport { ItemEjectorComponent } from \"./components/item_ejector\";\r\nimport { ItemAcceptorComponent } from \"./components/item_acceptor\";\r\nimport { MinerComponent } from \"./components/miner\";\r\nimport { ItemProcessorComponent } from \"./components/item_processor\";\r\nimport { UndergroundBeltComponent } from \"./components/underground_belt\";\r\nimport { HubComponent } from \"./components/hub\";\r\nimport { StorageComponent } from \"./components/storage\";\r\nimport { WiredPinsComponent } from \"./components/wired_pins\";\r\nimport { BeltUnderlaysComponent } from \"./components/belt_underlays\";\r\nimport { WireComponent } from \"./components/wire\";\r\nimport { ConstantSignalComponent } from \"./components/constant_signal\";\r\nimport { LogicGateComponent } from \"./components/logic_gate\";\r\nimport { LeverComponent } from \"./components/lever\";\r\nimport { WireTunnelComponent } from \"./components/wire_tunnel\";\r\nimport { DisplayComponent } from \"./components/display\";\r\nimport { BeltReaderComponent } from \"./components/belt_reader\";\r\nimport { FilterComponent } from \"./components/filter\";\r\nimport { ItemProducerComponent } from \"./components/item_producer\";\r\nimport { Component } from \"./component\";\r\n\r\nexport function addVanillaComponentsToAPI() {\r\n    const components = shapezAPI.ingame[\"components\"];\r\n\r\n    /** @typedef {typeof Component[]}*/\r\n    const vanillaComponents = [\r\n        StaticMapEntityComponent,\r\n        BeltComponent,\r\n        ItemEjectorComponent,\r\n        ItemAcceptorComponent,\r\n        MinerComponent,\r\n        ItemProcessorComponent,\r\n        UndergroundBeltComponent,\r\n        HubComponent,\r\n        StorageComponent,\r\n        WiredPinsComponent,\r\n        BeltUnderlaysComponent,\r\n        WireComponent,\r\n        ConstantSignalComponent,\r\n        LogicGateComponent,\r\n        LeverComponent,\r\n        WireTunnelComponent,\r\n        DisplayComponent,\r\n        BeltReaderComponent,\r\n        FilterComponent,\r\n        ItemProducerComponent,\r\n    ];\r\n    // IMPORTANT ^^^^^ UPDATE ENTITY COMPONENT STORAGE AFTERWARDS\r\n\r\n    for (let i = 0; i < vanillaComponents.length; i++) {\r\n        components[vanillaComponents[i].getId()] = vanillaComponents[i];\r\n    }\r\n}\r\n\r\nexport function initComponentRegistry() {\r\n    const components = shapezAPI.ingame[\"components\"];\r\n    for (const componentId in components) {\r\n        if (!components.hasOwnProperty(componentId)) continue;\r\n        const component = components[componentId];\r\n        gComponentRegistry.register(component);\r\n    }\r\n\r\n    // Sanity check - If this is thrown, you (=me, lol) forgot to add a new component here\r\n\r\n    assert(\r\n        // @ts-ignore\r\n        require.context(\"./components\", false, /.*\\.js/i).keys().length <= gComponentRegistry.getNumEntries(),\r\n        \"Not all components are registered\"\r\n    );\r\n\r\n    console.log(\"📦 There are\", gComponentRegistry.getNumEntries(), \"components\");\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/component_registry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1715,
    "kind": "function",
    "name": "addVanillaComponentsToAPI",
    "memberof": "js/game/component_registry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/component_registry.js~addVanillaComponentsToAPI",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/component_registry.js",
    "importStyle": "{addVanillaComponentsToAPI}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1716,
    "kind": "typedef",
    "name": null,
    "memberof": "js/game/component_registry.js",
    "static": true,
    "longname": "js/game/component_registry.js~null",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "type": {
      "types": [
        "typeof Component[]"
      ]
    }
  },
  {
    "__docId__": 1717,
    "kind": "function",
    "name": "initComponentRegistry",
    "memberof": "js/game/component_registry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/component_registry.js~initComponentRegistry",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/component_registry.js",
    "importStyle": "{initComponentRegistry}",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1718,
    "kind": "file",
    "name": "js/game/core.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\nimport { BufferMaintainer } from \"../core/buffer_maintainer\";\r\nimport {\r\n    disableImageSmoothing,\r\n    enableImageSmoothing,\r\n    getBufferStats,\r\n    registerCanvas,\r\n} from \"../core/buffer_utils\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { getDeviceDPI, resizeHighDPICanvas } from \"../core/dpi_manager\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { ExplainedResult } from \"../core/explained_result\";\r\nimport { gMetaBuildingRegistry } from \"../core/global_registries\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { Rectangle } from \"../core/rectangle\";\r\nimport { ORIGINAL_SPRITE_SCALE } from \"../core/sprites\";\r\nimport { lerp, randomInt, round2Digits } from \"../core/utils\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { Savegame } from \"../savegame/savegame\";\r\nimport { SavegameSerializer } from \"../savegame/savegame_serializer\";\r\nimport { AutomaticSave } from \"./automatic_save\";\r\nimport { MetaHubBuilding } from \"./buildings/hub\";\r\nimport { Camera } from \"./camera\";\r\nimport { DynamicTickrate } from \"./dynamic_tickrate\";\r\nimport { EntityManager } from \"./entity_manager\";\r\nimport { GameSystemManager } from \"./game_system_manager\";\r\nimport { HubGoals } from \"./hub_goals\";\r\nimport { GameHUD } from \"./hud/hud\";\r\nimport { KeyActionMapper } from \"./key_action_mapper\";\r\nimport { GameLogic } from \"./logic\";\r\nimport { MapView } from \"./map_view\";\r\nimport { defaultBuildingVariant } from \"./meta_building\";\r\nimport { RegularGameMode } from \"./modes/regular\";\r\nimport { ProductionAnalytics } from \"./production_analytics\";\r\nimport { GameRoot } from \"./root\";\r\nimport { ShapeDefinitionManager } from \"./shape_definition_manager\";\r\nimport { SoundProxy } from \"./sound_proxy\";\r\nimport { GameTime } from \"./time/game_time\";\r\n\r\nconst logger = createLogger(\"ingame/core\");\r\n\r\n// Store the canvas so we can reuse it later\r\n/** @type {HTMLCanvasElement} */\r\nlet lastCanvas = null;\r\n/** @type {CanvasRenderingContext2D} */\r\nlet lastContext = null;\r\n\r\n/**\r\n * The core manages the root and represents the whole game. It wraps the root, since\r\n * the root class is just a data holder.\r\n */\r\nexport class GameCore {\r\n    /** @param {Application} app */\r\n    constructor(app) {\r\n        this.app = app;\r\n\r\n        /** @type {GameRoot} */\r\n        this.root = null;\r\n\r\n        /**\r\n         * Set to true at the beginning of a logic update and cleared when its finished.\r\n         * This is to prevent doing a recursive logic update which can lead to unexpected\r\n         * behaviour.\r\n         */\r\n        this.duringLogicUpdate = false;\r\n\r\n        // Cached\r\n        this.boundInternalTick = this.updateLogic.bind(this);\r\n\r\n        /**\r\n         * Opacity of the overview alpha\r\n         * @TODO Doesn't belong here\r\n         */\r\n        this.overlayAlpha = 0;\r\n    }\r\n\r\n    /**\r\n     * Initializes the root object which stores all game related data. The state\r\n     * is required as a back reference (used sometimes)\r\n     * @param {import(\"../states/ingame\").InGameState} parentState\r\n     * @param {Savegame} savegame\r\n     */\r\n    initializeRoot(parentState, savegame) {\r\n        // Construct the root element, this is the data representation of the game\r\n        this.root = new GameRoot(this.app);\r\n        this.root.gameState = parentState;\r\n        this.root.keyMapper = parentState.keyActionMapper;\r\n        this.root.savegame = savegame;\r\n        this.root.gameWidth = this.app.screenWidth;\r\n        this.root.gameHeight = this.app.screenHeight;\r\n\r\n        // Initialize canvas element & context\r\n        this.internalInitCanvas();\r\n\r\n        // Members\r\n        const root = this.root;\r\n\r\n        // This isn't nice, but we need it right here\r\n        root.keyMapper = new KeyActionMapper(root, this.root.gameState.inputReciever);\r\n\r\n        // Needs to come first\r\n        root.dynamicTickrate = new DynamicTickrate(root);\r\n\r\n        // Init game mode\r\n        root.gameMode = new RegularGameMode(root);\r\n\r\n        // Init classes\r\n        root.camera = new Camera(root);\r\n        root.map = new MapView(root);\r\n        root.logic = new GameLogic(root);\r\n        root.hud = new GameHUD(root);\r\n        root.time = new GameTime(root);\r\n        root.automaticSave = new AutomaticSave(root);\r\n        root.soundProxy = new SoundProxy(root);\r\n\r\n        //Call mod for root classes\r\n        for (let i = 0; i < shapezAPI.modOrder.length; i++) {\r\n            const modId = shapezAPI.modOrder[i];\r\n            shapezAPI.mods.get(modId).gameInitializedRootClasses(this.root);\r\n        }\r\n\r\n        // Init managers\r\n        root.entityMgr = new EntityManager(root);\r\n        root.systemMgr = new GameSystemManager(root);\r\n        root.shapeDefinitionMgr = new ShapeDefinitionManager(root);\r\n        root.hubGoals = new HubGoals(root);\r\n        root.productionAnalytics = new ProductionAnalytics(root);\r\n        root.buffers = new BufferMaintainer(root);\r\n\r\n        // Initialize the hud once everything is loaded\r\n        this.root.hud.initialize();\r\n\r\n        //Call mod for root managers\r\n        for (let i = 0; i < shapezAPI.modOrder.length; i++) {\r\n            const modId = shapezAPI.modOrder[i];\r\n            shapezAPI.mods.get(modId).gameInitializedRootManagers(this.root);\r\n        }\r\n\r\n        // Initial resize event, it might be possible that the screen\r\n        // resized later during init tho, which is why will emit it later\r\n        // again anyways\r\n        this.resize(this.app.screenWidth, this.app.screenHeight);\r\n\r\n        if (G_IS_DEV) {\r\n            // @ts-ignore\r\n            window.globalRoot = root;\r\n        }\r\n\r\n        // @todo Find better place\r\n        if (G_IS_DEV && globalConfig.debug.manualTickOnly) {\r\n            this.root.gameState.inputReciever.keydown.add(key => {\r\n                if (key.keyCode === 84) {\r\n                    // 'T'\r\n\r\n                    // Extract current real time\r\n                    this.root.time.updateRealtimeNow();\r\n\r\n                    // Perform logic ticks\r\n                    this.root.time.performTicks(this.root.dynamicTickrate.deltaMs, this.boundInternalTick);\r\n\r\n                    // Update analytics\r\n                    root.productionAnalytics.update();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes a new game, this means creating a new map and centering on the\r\n     * playerbase\r\n     * */\r\n    initNewGame() {\r\n        logger.log(\"Initializing new game\");\r\n        this.root.gameIsFresh = true;\r\n        this.root.map.seed = randomInt(0, 100000);\r\n\r\n        // Place the hub\r\n        const hub = gMetaBuildingRegistry.findByClass(MetaHubBuilding).createEntity({\r\n            root: this.root,\r\n            origin: new Vector(-2, -2),\r\n            rotation: 0,\r\n            originalRotation: 0,\r\n            rotationVariant: 0,\r\n            variant: defaultBuildingVariant,\r\n        });\r\n        this.root.map.placeStaticEntity(hub);\r\n        this.root.entityMgr.registerEntity(hub);\r\n    }\r\n\r\n    /**\r\n     * Inits an existing game by loading the raw savegame data and deserializing it.\r\n     * Also runs basic validity checks.\r\n     */\r\n    initExistingGame() {\r\n        logger.log(\"Initializing existing game\");\r\n        const serializer = new SavegameSerializer();\r\n\r\n        try {\r\n            const status = serializer.deserialize(this.root.savegame.getCurrentDump(), this.root);\r\n            if (!status.isGood()) {\r\n                logger.error(\"savegame-deserialize-failed:\" + status.reason);\r\n                return ExplainedResult.bad(status.reason);\r\n            }\r\n        } catch (ex) {\r\n            logger.error(\"Exception during deserialization:\", ex);\r\n            return ExplainedResult.bad(\"Exception during deserialization:\", ex);\r\n        }\r\n        this.root.gameIsFresh = false;\r\n\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    /**\r\n     * Initializes the render canvas\r\n     */\r\n    internalInitCanvas() {\r\n        let canvas, context;\r\n        if (!lastCanvas) {\r\n            logger.log(\"Creating new canvas\");\r\n            canvas = document.createElement(\"canvas\");\r\n            canvas.id = \"ingame_Canvas\";\r\n            canvas.setAttribute(\"opaque\", \"true\");\r\n            canvas.setAttribute(\"webkitOpaque\", \"true\");\r\n            canvas.setAttribute(\"mozOpaque\", \"true\");\r\n            this.root.gameState.getDivElement().appendChild(canvas);\r\n            context = canvas.getContext(\"2d\", { alpha: false });\r\n\r\n            lastCanvas = canvas;\r\n            lastContext = context;\r\n        } else {\r\n            logger.log(\"Reusing canvas\");\r\n            if (lastCanvas.parentElement) {\r\n                lastCanvas.parentElement.removeChild(lastCanvas);\r\n            }\r\n            this.root.gameState.getDivElement().appendChild(lastCanvas);\r\n\r\n            canvas = lastCanvas;\r\n            context = lastContext;\r\n\r\n            lastContext.clearRect(0, 0, lastCanvas.width, lastCanvas.height);\r\n        }\r\n\r\n        canvas.classList.toggle(\"smoothed\", globalConfig.smoothing.smoothMainCanvas);\r\n\r\n        // Oof, use :not() instead\r\n        canvas.classList.toggle(\"unsmoothed\", !globalConfig.smoothing.smoothMainCanvas);\r\n\r\n        if (globalConfig.smoothing.smoothMainCanvas) {\r\n            enableImageSmoothing(context);\r\n        } else {\r\n            disableImageSmoothing(context);\r\n        }\r\n\r\n        this.root.canvas = canvas;\r\n        this.root.context = context;\r\n\r\n        registerCanvas(canvas, context);\r\n    }\r\n\r\n    /**\r\n     * Destructs the root, freeing all resources\r\n     */\r\n    destruct() {\r\n        if (lastCanvas && lastCanvas.parentElement) {\r\n            lastCanvas.parentElement.removeChild(lastCanvas);\r\n        }\r\n\r\n        this.root.destruct();\r\n        delete this.root;\r\n        this.root = null;\r\n        this.app = null;\r\n    }\r\n\r\n    tick(deltaMs) {\r\n        const root = this.root;\r\n\r\n        // Extract current real time\r\n        root.time.updateRealtimeNow();\r\n\r\n        // Camera is always updated, no matter what\r\n        root.camera.update(deltaMs);\r\n\r\n        if (!(G_IS_DEV && globalConfig.debug.manualTickOnly)) {\r\n            // Perform logic ticks\r\n            this.root.time.performTicks(deltaMs, this.boundInternalTick);\r\n\r\n            // Update analytics\r\n            root.productionAnalytics.update();\r\n        }\r\n\r\n        // Update automatic save after everything finished\r\n        root.automaticSave.update();\r\n\r\n        return true;\r\n    }\r\n\r\n    shouldRender() {\r\n        if (this.root.queue.requireRedraw) {\r\n            return true;\r\n        }\r\n        if (this.root.hud.shouldPauseRendering()) {\r\n            return false;\r\n        }\r\n\r\n        // Do not render\r\n        if (!this.app.isRenderable()) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    updateLogic() {\r\n        const root = this.root;\r\n\r\n        root.dynamicTickrate.beginTick();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.disableLogicTicks) {\r\n            root.dynamicTickrate.endTick();\r\n            return true;\r\n        }\r\n\r\n        this.duringLogicUpdate = true;\r\n\r\n        // Update entities, this removes destroyed entities\r\n        root.entityMgr.update();\r\n\r\n        // IMPORTANT: At this point, the game might be game over. Stop if this is the case\r\n        if (!this.root) {\r\n            logger.log(\"Root destructed, returning false\");\r\n            root.dynamicTickrate.endTick();\r\n\r\n            return false;\r\n        }\r\n\r\n        root.systemMgr.update();\r\n        // root.particleMgr.update();\r\n\r\n        this.duringLogicUpdate = false;\r\n        root.dynamicTickrate.endTick();\r\n        return true;\r\n    }\r\n\r\n    resize(w, h) {\r\n        this.root.gameWidth = w;\r\n        this.root.gameHeight = h;\r\n        resizeHighDPICanvas(this.root.canvas, w, h, globalConfig.smoothing.smoothMainCanvas);\r\n        this.root.signals.resized.dispatch(w, h);\r\n        this.root.queue.requireRedraw = true;\r\n    }\r\n\r\n    postLoadHook() {\r\n        logger.log(\"Dispatching post load hook\");\r\n        this.root.signals.postLoadHook.dispatch();\r\n\r\n        if (!this.root.gameIsFresh) {\r\n            // Also dispatch game restored hook on restored savegames\r\n            this.root.signals.gameRestored.dispatch();\r\n        }\r\n\r\n        this.root.gameInitialized = true;\r\n    }\r\n\r\n    draw() {\r\n        const root = this.root;\r\n        const systems = root.systemMgr.systems;\r\n\r\n        this.root.dynamicTickrate.onFrameRendered();\r\n\r\n        if (!this.shouldRender()) {\r\n            // Always update hud tho\r\n            root.hud.update();\r\n            return;\r\n        }\r\n\r\n        this.root.signals.gameFrameStarted.dispatch();\r\n\r\n        root.queue.requireRedraw = false;\r\n\r\n        // Gather context and save all state\r\n        const context = root.context;\r\n        context.save();\r\n        if (G_IS_DEV) {\r\n            context.fillStyle = \"#a10000\";\r\n            context.fillRect(0, 0, window.innerWidth * 3, window.innerHeight * 3);\r\n        }\r\n\r\n        // Compute optimal zoom level and atlas scale\r\n        const zoomLevel = root.camera.zoomLevel;\r\n        const lowQuality = root.app.settings.getAllSettings().lowQualityTextures;\r\n        const effectiveZoomLevel =\r\n            (zoomLevel / globalConfig.assetsDpi) * getDeviceDPI() * globalConfig.assetsSharpness;\r\n\r\n        let desiredAtlasScale = \"0.25\";\r\n        if (effectiveZoomLevel > 0.5 && !lowQuality) {\r\n            desiredAtlasScale = ORIGINAL_SPRITE_SCALE;\r\n        } else if (effectiveZoomLevel > 0.35 && !lowQuality) {\r\n            desiredAtlasScale = \"0.5\";\r\n        }\r\n\r\n        // Construct parameters required for drawing\r\n        const params = new DrawParameters({\r\n            context: context,\r\n            visibleRect: root.camera.getVisibleRect(),\r\n            desiredAtlasScale,\r\n            zoomLevel,\r\n            root: root,\r\n        });\r\n\r\n        if (G_IS_DEV && globalConfig.debug.testCulling) {\r\n            context.clearRect(0, 0, root.gameWidth, root.gameHeight);\r\n        }\r\n\r\n        // Transform to world space\r\n\r\n        if (G_IS_DEV && globalConfig.debug.testClipping) {\r\n            params.visibleRect = params.visibleRect.expandedInAllDirections(-200 / this.root.camera.zoomLevel);\r\n        }\r\n\r\n        root.camera.transform(context);\r\n\r\n        assert(context.globalAlpha === 1.0, \"Global alpha not 1 on frame start\");\r\n\r\n        // Update hud\r\n        root.hud.update();\r\n\r\n        // Main rendering order\r\n        // -----\r\n\r\n        const desiredOverlayAlpha = this.root.camera.getIsMapOverlayActive() ? 1 : 0;\r\n        this.overlayAlpha = lerp(this.overlayAlpha, desiredOverlayAlpha, 0.25);\r\n\r\n        // On low performance, skip the fade\r\n        if (this.root.entityMgr.entities.length > 5000 || this.root.dynamicTickrate.averageFps < 50) {\r\n            this.overlayAlpha = desiredOverlayAlpha;\r\n        }\r\n\r\n        if (this.overlayAlpha < 0.99) {\r\n            // Background (grid, resources, etc)\r\n            root.map.drawBackground(params);\r\n\r\n            // Belt items\r\n            systems.belt.drawBeltItems(params);\r\n\r\n            // Miner & Static map entities etc.\r\n            root.map.drawForeground(params);\r\n\r\n            // HUB Overlay\r\n            systems.hub.draw(params);\r\n\r\n            // Green wires overlay\r\n            root.hud.parts.wiresOverlay.draw(params);\r\n\r\n            if (this.root.currentLayer === \"wires\") {\r\n                // Static map entities\r\n                root.map.drawWiresForegroundLayer(params);\r\n            } else if (this.root.currentLayer !== \"regular\") {\r\n                root.map.drawForegroundLayer(params, this.root.currentLayer);\r\n            }\r\n        }\r\n\r\n        if (this.overlayAlpha > 0.01) {\r\n            // Map overview\r\n            context.globalAlpha = this.overlayAlpha;\r\n            root.map.drawOverlay(params);\r\n            context.globalAlpha = 1;\r\n        }\r\n\r\n        if (G_IS_DEV) {\r\n            root.map.drawStaticEntityDebugOverlays(params);\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.renderBeltPaths) {\r\n            systems.belt.drawBeltPathDebug(params);\r\n        }\r\n\r\n        // END OF GAME CONTENT\r\n        // -----\r\n\r\n        // Finally, draw the hud. Nothing should come after that\r\n        root.hud.draw(params);\r\n\r\n        assert(context.globalAlpha === 1.0, \"Global alpha not 1 on frame end before restore\");\r\n\r\n        // Restore to screen space\r\n        context.restore();\r\n\r\n        // Restore parameters\r\n        params.zoomLevel = 1;\r\n        params.desiredAtlasScale = ORIGINAL_SPRITE_SCALE;\r\n        params.visibleRect = new Rectangle(0, 0, this.root.gameWidth, this.root.gameHeight);\r\n        if (G_IS_DEV && globalConfig.debug.testClipping) {\r\n            params.visibleRect = params.visibleRect.expandedInAllDirections(-200);\r\n        }\r\n\r\n        // Draw overlays, those are screen space\r\n        root.hud.drawOverlays(params);\r\n\r\n        assert(context.globalAlpha === 1.0, \"context.globalAlpha not 1 on frame end\");\r\n\r\n        if (G_IS_DEV && globalConfig.debug.simulateSlowRendering) {\r\n            let sum = 0;\r\n            for (let i = 0; i < 1e8; ++i) {\r\n                sum += i;\r\n            }\r\n            if (Math.random() > 0.95) {\r\n                console.log(sum);\r\n            }\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.showAtlasInfo) {\r\n            context.font = \"13px GameFont\";\r\n            context.fillStyle = \"blue\";\r\n            context.fillText(\r\n                \"Atlas: \" +\r\n                desiredAtlasScale +\r\n                \" / Zoom: \" +\r\n                round2Digits(zoomLevel) +\r\n                \" / Effective Zoom: \" +\r\n                round2Digits(effectiveZoomLevel),\r\n                20,\r\n                600\r\n            );\r\n\r\n            const stats = this.root.buffers.getStats();\r\n\r\n            context.fillText(\r\n                \"Maintained Buffers: \" +\r\n                stats.rootKeys +\r\n                \" root keys / \" +\r\n                stats.subKeys +\r\n                \" buffers / VRAM: \" +\r\n                round2Digits(stats.vramBytes / (1024 * 1024)) +\r\n                \" MB\",\r\n                20,\r\n                620\r\n            );\r\n            const internalStats = getBufferStats();\r\n            context.fillText(\r\n                \"Total Buffers: \" +\r\n                internalStats.bufferCount +\r\n                \" buffers / \" +\r\n                internalStats.backlogSize +\r\n                \" backlog / \" +\r\n                internalStats.backlogKeys +\r\n                \" keys in backlog / VRAM \" +\r\n                round2Digits(internalStats.vramUsage / (1024 * 1024)) +\r\n                \" MB / Backlog \" +\r\n                round2Digits(internalStats.backlogVramUsage / (1024 * 1024)) +\r\n                \" MB / Created \" +\r\n                internalStats.numCreated +\r\n                \" / Reused \" +\r\n                internalStats.numReused,\r\n                20,\r\n                640\r\n            );\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.testClipping) {\r\n            context.strokeStyle = \"red\";\r\n            context.lineWidth = 1;\r\n            context.beginPath();\r\n            context.rect(200, 200, this.root.gameWidth - 400, this.root.gameHeight - 400);\r\n            context.stroke();\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/core.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1719,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/core.js",
    "static": true,
    "longname": "js/game/core.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/core.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1720,
    "kind": "variable",
    "name": "lastCanvas",
    "memberof": "js/game/core.js",
    "static": true,
    "longname": "js/game/core.js~lastCanvas",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/core.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 1721,
    "kind": "variable",
    "name": "lastContext",
    "memberof": "js/game/core.js",
    "static": true,
    "longname": "js/game/core.js~lastContext",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/core.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "CanvasRenderingContext2D"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 1722,
    "kind": "class",
    "name": "GameCore",
    "memberof": "js/game/core.js",
    "static": true,
    "longname": "js/game/core.js~GameCore",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/core.js",
    "importStyle": "{GameCore}",
    "description": "The core manages the root and represents the whole game. It wraps the root, since\nthe root class is just a data holder.",
    "lineNumber": 54,
    "interface": false
  },
  {
    "__docId__": 1723,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/core.js~GameCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/core.js~GameCore#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1724,
    "kind": "member",
    "name": "app",
    "memberof": "js/game/core.js~GameCore",
    "static": false,
    "longname": "js/game/core.js~GameCore#app",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1725,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/core.js~GameCore",
    "static": false,
    "longname": "js/game/core.js~GameCore#root",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "GameRoot"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1726,
    "kind": "member",
    "name": "duringLogicUpdate",
    "memberof": "js/game/core.js~GameCore",
    "static": false,
    "longname": "js/game/core.js~GameCore#duringLogicUpdate",
    "access": "public",
    "description": "Set to true at the beginning of a logic update and cleared when its finished.\nThis is to prevent doing a recursive logic update which can lead to unexpected\nbehaviour.",
    "lineNumber": 67,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1727,
    "kind": "member",
    "name": "boundInternalTick",
    "memberof": "js/game/core.js~GameCore",
    "static": false,
    "longname": "js/game/core.js~GameCore#boundInternalTick",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1728,
    "kind": "member",
    "name": "overlayAlpha",
    "memberof": "js/game/core.js~GameCore",
    "static": false,
    "longname": "js/game/core.js~GameCore#overlayAlpha",
    "access": "public",
    "description": "Opacity of the overview alpha",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@TODO",
        "tagValue": "Doesn't belong here"
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1729,
    "kind": "method",
    "name": "initializeRoot",
    "memberof": "js/game/core.js~GameCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/core.js~GameCore#initializeRoot",
    "access": "public",
    "description": "Initializes the root object which stores all game related data. The state\nis required as a back reference (used sometimes)",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../states/ingame\").InGameState"
        ],
        "spread": false,
        "optional": false,
        "name": "parentState",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Savegame"
        ],
        "spread": false,
        "optional": false,
        "name": "savegame",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1731,
    "kind": "method",
    "name": "initNewGame",
    "memberof": "js/game/core.js~GameCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/core.js~GameCore#initNewGame",
    "access": "public",
    "description": "Initializes a new game, this means creating a new map and centering on the\nplayerbase",
    "lineNumber": 174,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1732,
    "kind": "method",
    "name": "initExistingGame",
    "memberof": "js/game/core.js~GameCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/core.js~GameCore#initExistingGame",
    "access": "public",
    "description": "Inits an existing game by loading the raw savegame data and deserializing it.\nAlso runs basic validity checks.",
    "lineNumber": 196,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1733,
    "kind": "method",
    "name": "internalInitCanvas",
    "memberof": "js/game/core.js~GameCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/core.js~GameCore#internalInitCanvas",
    "access": "public",
    "description": "Initializes the render canvas",
    "lineNumber": 218,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1734,
    "kind": "method",
    "name": "destruct",
    "memberof": "js/game/core.js~GameCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/core.js~GameCore#destruct",
    "access": "public",
    "description": "Destructs the root, freeing all resources",
    "lineNumber": 265,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1737,
    "kind": "method",
    "name": "tick",
    "memberof": "js/game/core.js~GameCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/core.js~GameCore#tick",
    "access": "public",
    "description": null,
    "lineNumber": 276,
    "undocument": true,
    "params": [
      {
        "name": "deltaMs",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1738,
    "kind": "method",
    "name": "shouldRender",
    "memberof": "js/game/core.js~GameCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/core.js~GameCore#shouldRender",
    "access": "public",
    "description": null,
    "lineNumber": 299,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1739,
    "kind": "method",
    "name": "updateLogic",
    "memberof": "js/game/core.js~GameCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/core.js~GameCore#updateLogic",
    "access": "public",
    "description": null,
    "lineNumber": 315,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1742,
    "kind": "method",
    "name": "resize",
    "memberof": "js/game/core.js~GameCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/core.js~GameCore#resize",
    "access": "public",
    "description": null,
    "lineNumber": 346,
    "undocument": true,
    "params": [
      {
        "name": "w",
        "types": [
          "*"
        ]
      },
      {
        "name": "h",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1743,
    "kind": "method",
    "name": "postLoadHook",
    "memberof": "js/game/core.js~GameCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/core.js~GameCore#postLoadHook",
    "access": "public",
    "description": null,
    "lineNumber": 354,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1744,
    "kind": "method",
    "name": "draw",
    "memberof": "js/game/core.js~GameCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/core.js~GameCore#draw",
    "access": "public",
    "description": null,
    "lineNumber": 366,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1747,
    "kind": "file",
    "name": "js/game/dynamic_tickrate.js",
    "content": "import { GameRoot } from \"./root\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { globalConfig } from \"../core/config\";\r\n\r\nconst logger = createLogger(\"dynamic_tickrate\");\r\n\r\nconst fpsAccumulationTime = 1000;\r\n\r\nexport class DynamicTickrate {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n\r\n        this.currentTickStart = null;\r\n        this.capturedTicks = [];\r\n        this.averageTickDuration = 0;\r\n\r\n        this.accumulatedFps = 0;\r\n        this.accumulatedFpsLastUpdate = 0;\r\n\r\n        this.averageFps = 60;\r\n\r\n        this.setTickRate(this.root.app.settings.getDesiredFps());\r\n\r\n        if (G_IS_DEV && globalConfig.debug.renderForTrailer) {\r\n            this.setTickRate(300);\r\n        }\r\n    }\r\n\r\n    onFrameRendered() {\r\n        ++this.accumulatedFps;\r\n\r\n        const now = performance.now();\r\n        const timeDuration = now - this.accumulatedFpsLastUpdate;\r\n        if (timeDuration > fpsAccumulationTime) {\r\n            const avgFps = (this.accumulatedFps / fpsAccumulationTime) * 1000;\r\n            this.averageFps = avgFps;\r\n            this.accumulatedFps = 0;\r\n            this.accumulatedFpsLastUpdate = now;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the tick rate to N updates per second\r\n     * @param {number} rate\r\n     */\r\n    setTickRate(rate) {\r\n        logger.log(\"Applying tick-rate of\", rate);\r\n        this.currentTickRate = rate;\r\n        this.deltaMs = 1000.0 / this.currentTickRate;\r\n        this.deltaSeconds = 1.0 / this.currentTickRate;\r\n    }\r\n\r\n    /**\r\n     * Increases the tick rate marginally\r\n     */\r\n    increaseTickRate() {\r\n        if (G_IS_DEV && globalConfig.debug.renderForTrailer) {\r\n            return;\r\n        }\r\n\r\n        const desiredFps = this.root.app.settings.getDesiredFps();\r\n        this.setTickRate(Math.round(Math.min(desiredFps, this.currentTickRate * 1.2)));\r\n    }\r\n\r\n    /**\r\n     * Decreases the tick rate marginally\r\n     */\r\n    decreaseTickRate() {\r\n        if (G_IS_DEV && globalConfig.debug.renderForTrailer) {\r\n            return;\r\n        }\r\n\r\n        const desiredFps = this.root.app.settings.getDesiredFps();\r\n        this.setTickRate(Math.round(Math.max(desiredFps / 2, this.currentTickRate * 0.8)));\r\n    }\r\n\r\n    /**\r\n     * Call whenever a tick began\r\n     */\r\n    beginTick() {\r\n        assert(this.currentTickStart === null, \"BeginTick called twice\");\r\n        this.currentTickStart = performance.now();\r\n\r\n        if (this.capturedTicks.length > this.currentTickRate * 2) {\r\n            // Take only a portion of the ticks\r\n            this.capturedTicks.sort();\r\n            this.capturedTicks.splice(0, 10);\r\n            this.capturedTicks.splice(this.capturedTicks.length - 11, 10);\r\n\r\n            let average = 0;\r\n            for (let i = 0; i < this.capturedTicks.length; ++i) {\r\n                average += this.capturedTicks[i];\r\n            }\r\n            average /= this.capturedTicks.length;\r\n\r\n            this.averageTickDuration = average;\r\n\r\n            const desiredFps = this.root.app.settings.getDesiredFps();\r\n\r\n            // Disabled for now: Dynamicall adjusting tick rate\r\n            // if (this.averageFps > desiredFps * 0.9) {\r\n            //     // if (average < maxTickDuration) {\r\n            //     this.increaseTickRate();\r\n            // } else if (this.averageFps < desiredFps * 0.7) {\r\n            //     this.decreaseTickRate();\r\n            // }\r\n\r\n            this.capturedTicks = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Call whenever a tick ended\r\n     */\r\n    endTick() {\r\n        assert(this.currentTickStart !== null, \"EndTick called without BeginTick\");\r\n        const duration = performance.now() - this.currentTickStart;\r\n        this.capturedTicks.push(duration);\r\n        this.currentTickStart = null;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/dynamic_tickrate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1748,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/dynamic_tickrate.js",
    "static": true,
    "longname": "js/game/dynamic_tickrate.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/dynamic_tickrate.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1749,
    "kind": "variable",
    "name": "fpsAccumulationTime",
    "memberof": "js/game/dynamic_tickrate.js",
    "static": true,
    "longname": "js/game/dynamic_tickrate.js~fpsAccumulationTime",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/dynamic_tickrate.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1750,
    "kind": "class",
    "name": "DynamicTickrate",
    "memberof": "js/game/dynamic_tickrate.js",
    "static": true,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/dynamic_tickrate.js",
    "importStyle": "{DynamicTickrate}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 1751,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1752,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#root",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1753,
    "kind": "member",
    "name": "currentTickStart",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#currentTickStart",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1754,
    "kind": "member",
    "name": "capturedTicks",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#capturedTicks",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1755,
    "kind": "member",
    "name": "averageTickDuration",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#averageTickDuration",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1756,
    "kind": "member",
    "name": "accumulatedFps",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#accumulatedFps",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1757,
    "kind": "member",
    "name": "accumulatedFpsLastUpdate",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#accumulatedFpsLastUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1758,
    "kind": "member",
    "name": "averageFps",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#averageFps",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1759,
    "kind": "method",
    "name": "onFrameRendered",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#onFrameRendered",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1763,
    "kind": "method",
    "name": "setTickRate",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#setTickRate",
    "access": "public",
    "description": "Sets the tick rate to N updates per second",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rate",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1764,
    "kind": "member",
    "name": "currentTickRate",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#currentTickRate",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1765,
    "kind": "member",
    "name": "deltaMs",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#deltaMs",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1766,
    "kind": "member",
    "name": "deltaSeconds",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#deltaSeconds",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1767,
    "kind": "method",
    "name": "increaseTickRate",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#increaseTickRate",
    "access": "public",
    "description": "Increases the tick rate marginally",
    "lineNumber": 60,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1768,
    "kind": "method",
    "name": "decreaseTickRate",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#decreaseTickRate",
    "access": "public",
    "description": "Decreases the tick rate marginally",
    "lineNumber": 72,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1769,
    "kind": "method",
    "name": "beginTick",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#beginTick",
    "access": "public",
    "description": "Call whenever a tick began",
    "lineNumber": 84,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1773,
    "kind": "method",
    "name": "endTick",
    "memberof": "js/game/dynamic_tickrate.js~DynamicTickrate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/dynamic_tickrate.js~DynamicTickrate#endTick",
    "access": "public",
    "description": "Call whenever a tick ended",
    "lineNumber": 119,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1775,
    "kind": "file",
    "name": "js/game/entity.js",
    "content": "/* typehints:start */\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { Component } from \"./component\";\r\n/* typehints:end */\r\n\r\nimport { GameRoot } from \"./root\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { enumDirectionToVector, enumDirectionToAngle } from \"../core/vector\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\nimport { EntityComponentStorage } from \"./entity_components\";\r\nimport { Loader } from \"../core/loader\";\r\nimport { drawRotatedSprite } from \"../core/draw_utils\";\r\nimport { gComponentRegistry } from \"../core/global_registries\";\r\nimport { getBuildingDataFromCode } from \"./building_codes\";\r\n\r\nexport class Entity extends BasicSerializableObject {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n\r\n        /**\r\n         * Handle to the global game root\r\n         */\r\n        this.root = root;\r\n\r\n        /**\r\n         * The components of the entity\r\n         */\r\n        this.components = new EntityComponentStorage();\r\n\r\n        /**\r\n         * Whether this entity was registered on the @see EntityManager so far\r\n         */\r\n        this.registered = false;\r\n\r\n        /**\r\n         * On which layer this entity is\r\n         * @type {Layer}\r\n         */\r\n        this.layer = \"regular\";\r\n\r\n        /**\r\n         * Internal entity unique id, set by the @see EntityManager\r\n         */\r\n        this.uid = 0;\r\n\r\n        /* typehints:start */\r\n\r\n        /**\r\n         * Stores if this entity is destroyed, set by the @see EntityManager\r\n         * @type {boolean} */\r\n        this.destroyed;\r\n\r\n        /**\r\n         * Stores if this entity is queued to get destroyed in the next tick\r\n         * of the @see EntityManager\r\n         * @type {boolean} */\r\n        this.queuedForDestroy;\r\n\r\n        /**\r\n         * Stores the reason why this entity was destroyed\r\n         * @type {string} */\r\n        this.destroyReason;\r\n\r\n        /* typehints:end */\r\n    }\r\n\r\n    static getId() {\r\n        return \"Entity\";\r\n    }\r\n\r\n    /**\r\n     * @see BasicSerializableObject.getSchema\r\n     * @returns {import(\"../savegame/serialization\").Schema}\r\n     */\r\n    static getSchema() {\r\n        return {\r\n            uid: types.uint,\r\n            components: types.keyValueMap(types.objData(gComponentRegistry), false),\r\n        };\r\n    }\r\n\r\n    getId() {\r\n        return getBuildingDataFromCode(this.components.StaticMapEntity.code).metaInstance.getId();\r\n    }\r\n\r\n    /**\r\n     * Returns a clone of this entity\r\n     */\r\n    clone() {\r\n        const staticComp = this.components.StaticMapEntity;\r\n        const buildingData = getBuildingDataFromCode(staticComp.code);\r\n\r\n        const clone = buildingData.metaInstance.createEntity({\r\n            root: this.root,\r\n            origin: staticComp.origin,\r\n            originalRotation: staticComp.originalRotation,\r\n            rotation: staticComp.rotation,\r\n            rotationVariant: buildingData.rotationVariant,\r\n            variant: buildingData.variant,\r\n        });\r\n\r\n        for (const key in this.components) {\r\n            /** @type {Component} */\r\n            (this.components[key]).copyAdditionalStateTo(clone.components[key]);\r\n        }\r\n\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Adds a new component, only possible until the entity is registered on the entity manager,\r\n     * after that use @see EntityManager.addDynamicComponent\r\n     * @param {Component} componentInstance\r\n     * @param {boolean} force Used by the entity manager. Internal parameter, do not change\r\n     */\r\n    addComponent(componentInstance, force = false) {\r\n        if (!force && this.registered) {\r\n            this.root.entityMgr.attachDynamicComponent(this, componentInstance);\r\n            return;\r\n        }\r\n        assert(force || !this.registered, \"Entity already registered, use EntityManager.addDynamicComponent\");\r\n        const id = /** @type {typeof Component} */ (componentInstance.constructor).getId();\r\n        assert(!this.components[id], \"Component already present\");\r\n        this.components[id] = componentInstance;\r\n    }\r\n\r\n    /**\r\n     * Removes a given component, only possible until the entity is registered on the entity manager,\r\n     * after that use @see EntityManager.removeDynamicComponent\r\n     * @param {typeof Component} componentClass\r\n     * @param {boolean} force\r\n     */\r\n    removeComponent(componentClass, force = false) {\r\n        if (!force && this.registered) {\r\n            this.root.entityMgr.removeDynamicComponent(this, componentClass);\r\n            return;\r\n        }\r\n        assert(\r\n            force || !this.registered,\r\n            \"Entity already registered, use EntityManager.removeDynamicComponent\"\r\n        );\r\n        const id = componentClass.getId();\r\n        assert(this.components[id], \"Component does not exist on entity\");\r\n        delete this.components[id];\r\n    }\r\n\r\n    /**\r\n     * Draws the entity, to override use @see Entity.drawImpl\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawDebugOverlays(parameters) {\r\n        const context = parameters.context;\r\n        const staticComp = this.components.StaticMapEntity;\r\n\r\n        if (G_IS_DEV && staticComp && globalConfig.debug.showEntityBounds) {\r\n            if (staticComp) {\r\n                const transformed = staticComp.getTileSpaceBounds();\r\n                context.strokeStyle = \"rgba(255, 0, 0, 0.5)\";\r\n                context.lineWidth = 2;\r\n                // const boundsSize = 20;\r\n                context.beginPath();\r\n                context.rect(\r\n                    transformed.x * globalConfig.tileSize,\r\n                    transformed.y * globalConfig.tileSize,\r\n                    transformed.w * globalConfig.tileSize,\r\n                    transformed.h * globalConfig.tileSize\r\n                );\r\n                context.stroke();\r\n            }\r\n        }\r\n\r\n        if (G_IS_DEV && staticComp && globalConfig.debug.showAcceptorEjectors) {\r\n            const ejectorComp = this.components.ItemEjector;\r\n\r\n            if (ejectorComp) {\r\n                const ejectorSprite = Loader.getSprite(\"sprites/debug/ejector_slot.png\");\r\n                for (let i = 0; i < ejectorComp.slots.length; ++i) {\r\n                    const slot = ejectorComp.slots[i];\r\n                    const slotTile = staticComp.localTileToWorld(slot.pos);\r\n                    const direction = staticComp.localDirectionToWorld(slot.direction);\r\n                    const directionVector = enumDirectionToVector[direction];\r\n                    const angle = Math.radians(enumDirectionToAngle[direction]);\r\n\r\n                    context.globalAlpha = slot.item ? 1 : 0.2;\r\n                    drawRotatedSprite({\r\n                        parameters,\r\n                        sprite: ejectorSprite,\r\n                        x: (slotTile.x + 0.5 + directionVector.x * 0.37) * globalConfig.tileSize,\r\n                        y: (slotTile.y + 0.5 + directionVector.y * 0.37) * globalConfig.tileSize,\r\n                        angle,\r\n                        size: globalConfig.tileSize * 0.25,\r\n                    });\r\n                }\r\n            }\r\n            const acceptorComp = this.components.ItemAcceptor;\r\n\r\n            if (acceptorComp) {\r\n                const acceptorSprite = Loader.getSprite(\"sprites/misc/acceptor_slot.png\");\r\n                for (let i = 0; i < acceptorComp.slots.length; ++i) {\r\n                    const slot = acceptorComp.slots[i];\r\n                    const slotTile = staticComp.localTileToWorld(slot.pos);\r\n                    for (let k = 0; k < slot.directions.length; ++k) {\r\n                        const direction = staticComp.localDirectionToWorld(slot.directions[k]);\r\n                        const directionVector = enumDirectionToVector[direction];\r\n                        const angle = Math.radians(enumDirectionToAngle[direction] + 180);\r\n                        context.globalAlpha = 0.4;\r\n                        drawRotatedSprite({\r\n                            parameters,\r\n                            sprite: acceptorSprite,\r\n                            x: (slotTile.x + 0.5 + directionVector.x * 0.37) * globalConfig.tileSize,\r\n                            y: (slotTile.y + 0.5 + directionVector.y * 0.37) * globalConfig.tileSize,\r\n                            angle,\r\n                            size: globalConfig.tileSize * 0.25,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            context.globalAlpha = 1;\r\n        }\r\n        // this.drawImpl(parameters);\r\n    }\r\n\r\n    ///// Helper interfaces\r\n\r\n    ///// Interface to override by subclasses\r\n\r\n    /**\r\n     * override, should draw the entity\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawImpl(parameters) {\r\n        abstract;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/entity.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1776,
    "kind": "class",
    "name": "Entity",
    "memberof": "js/game/entity.js",
    "static": true,
    "longname": "js/game/entity.js~Entity",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/entity.js",
    "importStyle": "{Entity}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/serialization.js~BasicSerializableObject"
    ]
  },
  {
    "__docId__": 1777,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity.js~Entity#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1778,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/entity.js~Entity",
    "static": false,
    "longname": "js/game/entity.js~Entity#root",
    "access": "public",
    "description": "Handle to the global game root",
    "lineNumber": 26,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1779,
    "kind": "member",
    "name": "components",
    "memberof": "js/game/entity.js~Entity",
    "static": false,
    "longname": "js/game/entity.js~Entity#components",
    "access": "public",
    "description": "The components of the entity",
    "lineNumber": 31,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1780,
    "kind": "member",
    "name": "registered",
    "memberof": "js/game/entity.js~Entity",
    "static": false,
    "longname": "js/game/entity.js~Entity#registered",
    "access": "public",
    "description": "Whether this entity was registered on the @see EntityManager so far",
    "lineNumber": 36,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1781,
    "kind": "member",
    "name": "layer",
    "memberof": "js/game/entity.js~Entity",
    "static": false,
    "longname": "js/game/entity.js~Entity#layer",
    "access": "public",
    "description": "On which layer this entity is",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1782,
    "kind": "member",
    "name": "uid",
    "memberof": "js/game/entity.js~Entity",
    "static": false,
    "longname": "js/game/entity.js~Entity#uid",
    "access": "public",
    "description": "Internal entity unique id, set by the @see EntityManager",
    "lineNumber": 47,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1783,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/entity.js~Entity.getId",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1784,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/entity.js~Entity.getSchema",
    "access": "public",
    "description": "",
    "see": [
      "BasicSerializableObject.getSchema"
    ],
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{import(\"../savegame/serialization\").Schema}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "import(\"../savegame/serialization\").Schema"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1785,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity.js~Entity#getId",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1786,
    "kind": "method",
    "name": "clone",
    "memberof": "js/game/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity.js~Entity#clone",
    "access": "public",
    "description": "Returns a clone of this entity",
    "lineNumber": 92,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1787,
    "kind": "method",
    "name": "addComponent",
    "memberof": "js/game/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity.js~Entity#addComponent",
    "access": "public",
    "description": "Adds a new component, only possible until the entity is registered on the entity manager,\nafter that use @see EntityManager.addDynamicComponent",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "componentInstance",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "force",
        "description": "Used by the entity manager. Internal parameter, do not change"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1788,
    "kind": "method",
    "name": "removeComponent",
    "memberof": "js/game/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity.js~Entity#removeComponent",
    "access": "public",
    "description": "Removes a given component, only possible until the entity is registered on the entity manager,\nafter that use @see EntityManager.removeDynamicComponent",
    "lineNumber": 136,
    "params": [
      {
        "nullable": null,
        "types": [
          "typeof Component"
        ],
        "spread": false,
        "optional": false,
        "name": "componentClass",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "force",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1789,
    "kind": "method",
    "name": "drawDebugOverlays",
    "memberof": "js/game/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity.js~Entity#drawDebugOverlays",
    "access": "public",
    "description": "Draws the entity, to override use @see Entity.drawImpl",
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1790,
    "kind": "method",
    "name": "drawImpl",
    "memberof": "js/game/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity.js~Entity#drawImpl",
    "access": "public",
    "description": "override, should draw the entity",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1791,
    "kind": "file",
    "name": "js/game/entity_components.js",
    "content": "/* typehints:start */\r\nimport { BeltComponent } from \"./components/belt\";\r\nimport { BeltUnderlaysComponent } from \"./components/belt_underlays\";\r\nimport { HubComponent } from \"./components/hub\";\r\nimport { ItemAcceptorComponent } from \"./components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"./components/item_ejector\";\r\nimport { ItemProcessorComponent } from \"./components/item_processor\";\r\nimport { MinerComponent } from \"./components/miner\";\r\nimport { StaticMapEntityComponent } from \"./components/static_map_entity\";\r\nimport { StorageComponent } from \"./components/storage\";\r\nimport { UndergroundBeltComponent } from \"./components/underground_belt\";\r\nimport { WiredPinsComponent } from \"./components/wired_pins\";\r\nimport { WireComponent } from \"./components/wire\";\r\nimport { ConstantSignalComponent } from \"./components/constant_signal\";\r\nimport { LogicGateComponent } from \"./components/logic_gate\";\r\nimport { LeverComponent } from \"./components/lever\";\r\nimport { WireTunnelComponent } from \"./components/wire_tunnel\";\r\nimport { DisplayComponent } from \"./components/display\";\r\nimport { BeltReaderComponent } from \"./components/belt_reader\";\r\nimport { FilterComponent } from \"./components/filter\";\r\nimport { ItemProducerComponent } from \"./components/item_producer\";\r\n/* typehints:end */\r\n\r\n/**\r\n * Typedefs for all entity components. These are not actually present on the entity,\r\n * thus they are undefined by default\r\n */\r\nexport class EntityComponentStorage {\r\n    constructor() {\r\n        /* typehints:start */\r\n\r\n        /** @type {StaticMapEntityComponent} */\r\n        this.StaticMapEntity;\r\n\r\n        /** @type {BeltComponent} */\r\n        this.Belt;\r\n\r\n        /** @type {ItemEjectorComponent} */\r\n        this.ItemEjector;\r\n\r\n        /** @type {ItemAcceptorComponent} */\r\n        this.ItemAcceptor;\r\n\r\n        /** @type {MinerComponent} */\r\n        this.Miner;\r\n\r\n        /** @type {ItemProcessorComponent} */\r\n        this.ItemProcessor;\r\n\r\n        /** @type {UndergroundBeltComponent} */\r\n        this.UndergroundBelt;\r\n\r\n        /** @type {HubComponent} */\r\n        this.Hub;\r\n\r\n        /** @type {StorageComponent} */\r\n        this.Storage;\r\n\r\n        /** @type {WiredPinsComponent} */\r\n        this.WiredPins;\r\n\r\n        /** @type {BeltUnderlaysComponent} */\r\n        this.BeltUnderlays;\r\n\r\n        /** @type {WireComponent} */\r\n        this.Wire;\r\n\r\n        /** @type {ConstantSignalComponent} */\r\n        this.ConstantSignal;\r\n\r\n        /** @type {LogicGateComponent} */\r\n        this.LogicGate;\r\n\r\n        /** @type {LeverComponent} */\r\n        this.Lever;\r\n\r\n        /** @type {WireTunnelComponent} */\r\n        this.WireTunnel;\r\n\r\n        /** @type {DisplayComponent} */\r\n        this.Display;\r\n\r\n        /** @type {BeltReaderComponent} */\r\n        this.BeltReader;\r\n\r\n        /** @type {FilterComponent} */\r\n        this.Filter;\r\n\r\n        /** @type {ItemProducerComponent} */\r\n        this.ItemProducer;\r\n\r\n        /* typehints:end */\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/entity_components.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1792,
    "kind": "class",
    "name": "EntityComponentStorage",
    "memberof": "js/game/entity_components.js",
    "static": true,
    "longname": "js/game/entity_components.js~EntityComponentStorage",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/entity_components.js",
    "importStyle": "{EntityComponentStorage}",
    "description": "Typedefs for all entity components. These are not actually present on the entity,\nthus they are undefined by default",
    "lineNumber": 28,
    "interface": false
  },
  {
    "__docId__": 1793,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/entity_components.js~EntityComponentStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_components.js~EntityComponentStorage#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 1794,
    "kind": "file",
    "name": "js/game/entity_manager.js",
    "content": "import { arrayDeleteValue, newEmptyMap, fastArrayDeleteValue } from \"../core/utils\";\r\nimport { Component } from \"./component\";\r\nimport { GameRoot } from \"./root\";\r\nimport { Entity } from \"./entity\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { globalConfig } from \"../core/config\";\r\n\r\nconst logger = createLogger(\"entity_manager\");\r\n\r\n// Manages all entities\r\n\r\n// NOTICE: We use arrayDeleteValue instead of fastArrayDeleteValue since that does not preserve the order\r\n// This is slower but we need it for the street path generation\r\n\r\nexport class EntityManager extends BasicSerializableObject {\r\n    constructor(root) {\r\n        super();\r\n\r\n        /** @type {GameRoot} */\r\n        this.root = root;\r\n\r\n        /** @type {Array<Entity>} */\r\n        this.entities = [];\r\n\r\n        // We store a separate list with entities to destroy, since we don't destroy\r\n        // them instantly\r\n        /** @type {Array<Entity>} */\r\n        this.destroyList = [];\r\n\r\n        // Store a map from componentid to entities - This is used by the game system\r\n        // for faster processing\r\n        /** @type {Object.<string, Array<Entity>>} */\r\n        this.componentToEntity = newEmptyMap();\r\n\r\n        // Store the next uid to use\r\n        this.nextUid = 10000;\r\n    }\r\n\r\n    static getId() {\r\n        return \"EntityManager\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            nextUid: types.uint,\r\n        };\r\n    }\r\n\r\n    getStatsText() {\r\n        return this.entities.length + \" entities [\" + this.destroyList.length + \" to kill]\";\r\n    }\r\n\r\n    // Main update\r\n    update() {\r\n        this.processDestroyList();\r\n    }\r\n\r\n    /**\r\n     * Registers a new entity\r\n     * @param {Entity} entity\r\n     * @param {number=} uid Optional predefined uid\r\n     */\r\n    registerEntity(entity, uid = null, blueprint = false) {\r\n        if (G_IS_DEV && !globalConfig.debug.disableSlowAsserts) {\r\n            assert(this.entities.indexOf(entity) < 0, `RegisterEntity() called twice for entity ${entity}`);\r\n        }\r\n        assert(!entity.destroyed, `Attempting to register destroyed entity ${entity}`);\r\n\r\n        if (G_IS_DEV && !globalConfig.debug.disableSlowAsserts && uid !== null) {\r\n            assert(!this.findByUid(uid, false), \"Entity uid already taken: \" + uid);\r\n            assert(uid >= 0 && uid < Number.MAX_SAFE_INTEGER, \"Invalid uid passed: \" + uid);\r\n        }\r\n\r\n        this.entities.push(entity);\r\n\r\n        // Register into the componentToEntity map\r\n        for (const componentId in entity.components) {\r\n            if (entity.components[componentId]) {\r\n                if (this.componentToEntity[componentId]) {\r\n                    this.componentToEntity[componentId].push(entity);\r\n                } else {\r\n                    this.componentToEntity[componentId] = [entity];\r\n                }\r\n            }\r\n        }\r\n\r\n        // Give each entity a unique id\r\n        entity.uid = uid ? uid : this.generateUid();\r\n        entity.registered = true;\r\n\r\n        this.root.signals.entityAdded.dispatch(entity, blueprint);\r\n    }\r\n\r\n    /**\r\n     * Generates a new uid\r\n     * @returns {number}\r\n     */\r\n    generateUid() {\r\n        return this.nextUid++;\r\n    }\r\n\r\n    /**\r\n     * Call to attach a new component after the creation of the entity\r\n     * @param {Entity} entity\r\n     * @param {Component} component\r\n     */\r\n    attachDynamicComponent(entity, component) {\r\n        entity.addComponent(component, true);\r\n        const componentId = /** @type {typeof Component} */ (component.constructor).getId();\r\n        if (this.componentToEntity[componentId]) {\r\n            this.componentToEntity[componentId].push(entity);\r\n        } else {\r\n            this.componentToEntity[componentId] = [entity];\r\n        }\r\n        this.root.signals.entityGotNewComponent.dispatch(entity);\r\n    }\r\n\r\n    /**\r\n     * Call to remove a component after the creation of the entity\r\n     * @param {Entity} entity\r\n     * @param {typeof Component} component\r\n     */\r\n    removeDynamicComponent(entity, component) {\r\n        entity.removeComponent(component, true);\r\n        const componentId = /** @type {typeof Component} */ (component.constructor).getId();\r\n\r\n        fastArrayDeleteValue(this.componentToEntity[componentId], entity);\r\n        this.root.signals.entityComponentRemoved.dispatch(entity);\r\n    }\r\n\r\n    /**\r\n     * Finds an entity buy its uid, kinda slow since it loops over all entities\r\n     * @param {number} uid\r\n     * @param {boolean=} errorWhenNotFound\r\n     * @returns {Entity}\r\n     */\r\n    findByUid(uid, errorWhenNotFound = true) {\r\n        const arr = this.entities;\r\n        for (let i = 0, len = arr.length; i < len; ++i) {\r\n            const entity = arr[i];\r\n            if (entity.uid === uid) {\r\n                if (entity.queuedForDestroy || entity.destroyed) {\r\n                    if (errorWhenNotFound) {\r\n                        logger.warn(\"Entity with UID\", uid, \"not found (destroyed)\");\r\n                    }\r\n                    return null;\r\n                }\r\n                return entity;\r\n            }\r\n        }\r\n        if (errorWhenNotFound) {\r\n            logger.warn(\"Entity with UID\", uid, \"not found\");\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Returns a map which gives a mapping from UID to Entity.\r\n     * This map is not updated.\r\n     *\r\n     * @returns {Map<number, Entity>}\r\n     */\r\n    getFrozenUidSearchMap() {\r\n        const result = new Map();\r\n        const array = this.entities;\r\n        for (let i = 0, len = array.length; i < len; ++i) {\r\n            const entity = array[i];\r\n            if (!entity.queuedForDestroy && !entity.destroyed) {\r\n                result.set(entity.uid, entity);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns all entities having the given component\r\n     * @param {typeof Component} componentHandle\r\n     * @returns {Array<Entity>} entities\r\n     */\r\n    getAllWithComponent(componentHandle) {\r\n        return this.componentToEntity[componentHandle.getId()] || [];\r\n    }\r\n\r\n    /**\r\n     * Unregisters all components of an entity from the component to entity mapping\r\n     * @param {Entity} entity\r\n     */\r\n    unregisterEntityComponents(entity) {\r\n        for (const componentId in entity.components) {\r\n            if (entity.components[componentId]) {\r\n                arrayDeleteValue(this.componentToEntity[componentId], entity);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Processes the entities to destroy and actually destroys them\r\n    /* eslint-disable max-statements */\r\n    processDestroyList() {\r\n        for (let i = 0; i < this.destroyList.length; ++i) {\r\n            const entity = this.destroyList[i];\r\n\r\n            // Remove from entities list\r\n            arrayDeleteValue(this.entities, entity);\r\n\r\n            // Remove from componentToEntity list\r\n            this.unregisterEntityComponents(entity);\r\n\r\n            entity.registered = false;\r\n            entity.destroyed = true;\r\n\r\n            this.root.signals.entityDestroyed.dispatch(entity);\r\n        }\r\n\r\n        this.destroyList = [];\r\n    }\r\n\r\n    /**\r\n     * Queues an entity for destruction\r\n     * @param {Entity} entity\r\n     */\r\n    destroyEntity(entity) {\r\n        if (entity.destroyed) {\r\n            logger.error(\"Tried to destroy already destroyed entity:\", entity.uid);\r\n            return;\r\n        }\r\n\r\n        if (entity.queuedForDestroy) {\r\n            logger.error(\"Trying to destroy entity which is already queued for destroy!\", entity.uid);\r\n            return;\r\n        }\r\n\r\n        if (this.destroyList.indexOf(entity) < 0) {\r\n            this.destroyList.push(entity);\r\n            entity.queuedForDestroy = true;\r\n            this.root.signals.entityQueuedForDestroy.dispatch(entity);\r\n        } else {\r\n            assert(false, \"Trying to destroy entity twice\");\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/entity_manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1795,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/entity_manager.js",
    "static": true,
    "longname": "js/game/entity_manager.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/entity_manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1796,
    "kind": "class",
    "name": "EntityManager",
    "memberof": "js/game/entity_manager.js",
    "static": true,
    "longname": "js/game/entity_manager.js~EntityManager",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/entity_manager.js",
    "importStyle": "{EntityManager}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/serialization.js~BasicSerializableObject"
    ]
  },
  {
    "__docId__": 1797,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 1798,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#root",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "GameRoot"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1799,
    "kind": "member",
    "name": "entities",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#entities",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Array<Entity>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1800,
    "kind": "member",
    "name": "destroyList",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#destroyList",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "Array<Entity>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1801,
    "kind": "member",
    "name": "componentToEntity",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#componentToEntity",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Object.<string, Array<Entity>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1802,
    "kind": "member",
    "name": "nextUid",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#nextUid",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1803,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/entity_manager.js~EntityManager.getId",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1804,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/entity_manager.js~EntityManager.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"nextUid\": *}"
      ]
    }
  },
  {
    "__docId__": 1805,
    "kind": "method",
    "name": "getStatsText",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#getStatsText",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1806,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#update",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1807,
    "kind": "method",
    "name": "registerEntity",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#registerEntity",
    "access": "public",
    "description": "Registers a new entity",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "Optional predefined uid"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1808,
    "kind": "method",
    "name": "generateUid",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#generateUid",
    "access": "public",
    "description": "Generates a new uid",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1809,
    "kind": "method",
    "name": "attachDynamicComponent",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#attachDynamicComponent",
    "access": "public",
    "description": "Call to attach a new component after the creation of the entity",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1810,
    "kind": "method",
    "name": "removeDynamicComponent",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#removeDynamicComponent",
    "access": "public",
    "description": "Call to remove a component after the creation of the entity",
    "lineNumber": 124,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "typeof Component"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1811,
    "kind": "method",
    "name": "findByUid",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#findByUid",
    "access": "public",
    "description": "Finds an entity buy its uid, kinda slow since it loops over all entities",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Entity}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "errorWhenNotFound",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Entity"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1812,
    "kind": "method",
    "name": "getFrozenUidSearchMap",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#getFrozenUidSearchMap",
    "access": "public",
    "description": "Returns a map which gives a mapping from UID to Entity.\nThis map is not updated.",
    "lineNumber": 164,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Map<number, Entity>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Map<number, Entity>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1813,
    "kind": "method",
    "name": "getAllWithComponent",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#getAllWithComponent",
    "access": "public",
    "description": "Returns all entities having the given component",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<Entity>} entities"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "typeof Component"
        ],
        "spread": false,
        "optional": false,
        "name": "componentHandle",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Entity>"
      ],
      "spread": false,
      "description": "entities"
    }
  },
  {
    "__docId__": 1814,
    "kind": "method",
    "name": "unregisterEntityComponents",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#unregisterEntityComponents",
    "access": "public",
    "description": "Unregisters all components of an entity from the component to entity mapping",
    "lineNumber": 189,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1815,
    "kind": "method",
    "name": "processDestroyList",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#processDestroyList",
    "access": "public",
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1817,
    "kind": "method",
    "name": "destroyEntity",
    "memberof": "js/game/entity_manager.js~EntityManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/entity_manager.js~EntityManager#destroyEntity",
    "access": "public",
    "description": "Queues an entity for destruction",
    "lineNumber": 222,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1818,
    "kind": "file",
    "name": "js/game/game_loading_overlay.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\n\r\nimport { randomChoice } from \"../core/utils\";\r\nimport { T } from \"../translations\";\r\n\r\nexport class GameLoadingOverlay {\r\n    /**\r\n     *\r\n     * @param {Application} app\r\n     * @param {HTMLElement} parent\r\n     */\r\n    constructor(app, parent) {\r\n        this.app = app;\r\n        this.parent = parent;\r\n\r\n        /** @type {HTMLElement} */\r\n        this.element = null;\r\n    }\r\n\r\n    /**\r\n     * Removes the overlay if its currently visible\r\n     */\r\n    removeIfAttached() {\r\n        if (this.element) {\r\n            this.element.remove();\r\n            this.element = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns if the loading overlay is attached\r\n     */\r\n    isAttached() {\r\n        return this.element;\r\n    }\r\n\r\n    /**\r\n     * Shows a super basic overlay\r\n     */\r\n    showBasic() {\r\n        assert(!this.element, \"Loading overlay already visible, cant show again\");\r\n        this.element = document.createElement(\"div\");\r\n        this.element.classList.add(\"gameLoadingOverlay\");\r\n        this.parent.appendChild(this.element);\r\n        this.internalAddSpinnerAndText(this.element);\r\n        this.internalAddHint(this.element);\r\n    }\r\n\r\n    /**\r\n     * Adds a text with 'loading' and a spinner\r\n     * @param {HTMLElement} element\r\n     */\r\n    internalAddSpinnerAndText(element) {\r\n        const inner = document.createElement(\"span\");\r\n        inner.classList.add(\"prefab_LoadingTextWithAnim\");\r\n        element.appendChild(inner);\r\n    }\r\n\r\n    /**\r\n     * Adds a random hint\r\n     * @param {HTMLElement} element\r\n     */\r\n    internalAddHint(element) {\r\n        const hint = document.createElement(\"span\");\r\n        hint.innerHTML = randomChoice(T.tips);\r\n        hint.classList.add(\"prefab_GameHint\");\r\n        element.appendChild(hint);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/game_loading_overlay.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1819,
    "kind": "class",
    "name": "GameLoadingOverlay",
    "memberof": "js/game/game_loading_overlay.js",
    "static": true,
    "longname": "js/game/game_loading_overlay.js~GameLoadingOverlay",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/game_loading_overlay.js",
    "importStyle": "{GameLoadingOverlay}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 1820,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/game_loading_overlay.js~GameLoadingOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_loading_overlay.js~GameLoadingOverlay#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1821,
    "kind": "member",
    "name": "app",
    "memberof": "js/game/game_loading_overlay.js~GameLoadingOverlay",
    "static": false,
    "longname": "js/game/game_loading_overlay.js~GameLoadingOverlay#app",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1822,
    "kind": "member",
    "name": "parent",
    "memberof": "js/game/game_loading_overlay.js~GameLoadingOverlay",
    "static": false,
    "longname": "js/game/game_loading_overlay.js~GameLoadingOverlay#parent",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1823,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/game_loading_overlay.js~GameLoadingOverlay",
    "static": false,
    "longname": "js/game/game_loading_overlay.js~GameLoadingOverlay#element",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1824,
    "kind": "method",
    "name": "removeIfAttached",
    "memberof": "js/game/game_loading_overlay.js~GameLoadingOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_loading_overlay.js~GameLoadingOverlay#removeIfAttached",
    "access": "public",
    "description": "Removes the overlay if its currently visible",
    "lineNumber": 25,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1826,
    "kind": "method",
    "name": "isAttached",
    "memberof": "js/game/game_loading_overlay.js~GameLoadingOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_loading_overlay.js~GameLoadingOverlay#isAttached",
    "access": "public",
    "description": "Returns if the loading overlay is attached",
    "lineNumber": 35,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1827,
    "kind": "method",
    "name": "showBasic",
    "memberof": "js/game/game_loading_overlay.js~GameLoadingOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_loading_overlay.js~GameLoadingOverlay#showBasic",
    "access": "public",
    "description": "Shows a super basic overlay",
    "lineNumber": 42,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1829,
    "kind": "method",
    "name": "internalAddSpinnerAndText",
    "memberof": "js/game/game_loading_overlay.js~GameLoadingOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_loading_overlay.js~GameLoadingOverlay#internalAddSpinnerAndText",
    "access": "public",
    "description": "Adds a text with 'loading' and a spinner",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1830,
    "kind": "method",
    "name": "internalAddHint",
    "memberof": "js/game/game_loading_overlay.js~GameLoadingOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_loading_overlay.js~GameLoadingOverlay#internalAddHint",
    "access": "public",
    "description": "Adds a random hint",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1831,
    "kind": "file",
    "name": "js/game/game_mode.js",
    "content": "/* typehints:start */\r\nimport { enumHubGoalRewards } from \"./tutorial_goals\";\r\n/* typehints:end */\r\n\r\nimport { GameRoot } from \"./root\";\r\n\r\n/** @typedef {{\r\n *   shape: string,\r\n *   amount: number\r\n * }} UpgradeRequirement */\r\n\r\n/** @typedef {{\r\n *   required: Array<UpgradeRequirement>\r\n *   improvement?: number,\r\n *   excludePrevious?: boolean\r\n * }} TierRequirement */\r\n\r\n/** @typedef {Array<TierRequirement>} UpgradeTiers */\r\n\r\n/** @typedef {{\r\n *   shape: string,\r\n *   required: number,\r\n *   reward: enumHubGoalRewards,\r\n *   throughputOnly?: boolean\r\n * }} LevelDefinition */\r\n\r\nexport class GameMode {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n    }\r\n\r\n    static getId() {\r\n        abstract;\r\n        return \"unknow-gamemode\";\r\n    }\r\n\r\n    /**\r\n     * Should return all available upgrades\r\n     * @returns {Object<string, UpgradeTiers>}\r\n     */\r\n    getUpgrades() {\r\n        abstract;\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Returns the blueprint shape key\r\n     * @returns {string}\r\n     */\r\n    getBlueprintShapeKey() {\r\n        abstract;\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Returns the goals for all levels including their reward\r\n     * @returns {Array<LevelDefinition>}\r\n     */\r\n    getLevelDefinitions() {\r\n        abstract;\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Should return whether free play is available or if the game stops\r\n     * after the predefined levels\r\n     * @returns {boolean}\r\n     */\r\n    getIsFreeplayAvailable() {\r\n        return true;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/game_mode.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1832,
    "kind": "typedef",
    "name": "UpgradeRequirement",
    "memberof": "js/game/game_mode.js",
    "static": true,
    "longname": "js/game/game_mode.js~UpgradeRequirement",
    "access": "public",
    "description": null,
    "type": {
      "types": [
        "{\n  shape: string,\n  amount: number\n}"
      ],
      "optional": false,
      "name": "UpgradeRequirement"
    }
  },
  {
    "__docId__": 1833,
    "kind": "typedef",
    "name": "TierRequirement",
    "memberof": "js/game/game_mode.js",
    "static": true,
    "longname": "js/game/game_mode.js~TierRequirement",
    "access": "public",
    "description": null,
    "type": {
      "types": [
        "{\n  required: Array<UpgradeRequirement>\n  improvement?: number,\n  excludePrevious?: boolean\n}"
      ],
      "optional": false,
      "name": "TierRequirement"
    }
  },
  {
    "__docId__": 1834,
    "kind": "typedef",
    "name": "UpgradeTiers",
    "memberof": "js/game/game_mode.js",
    "static": true,
    "longname": "js/game/game_mode.js~UpgradeTiers",
    "access": "public",
    "description": null,
    "type": {
      "types": [
        "Array<TierRequirement>"
      ],
      "optional": false,
      "name": "UpgradeTiers"
    }
  },
  {
    "__docId__": 1835,
    "kind": "typedef",
    "name": "LevelDefinition",
    "memberof": "js/game/game_mode.js",
    "static": true,
    "longname": "js/game/game_mode.js~LevelDefinition",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "type": {
      "types": [
        "{\n  shape: string,\n  required: number,\n  reward: enumHubGoalRewards,\n  throughputOnly?: boolean\n}"
      ],
      "optional": false,
      "name": "LevelDefinition"
    }
  },
  {
    "__docId__": 1836,
    "kind": "file",
    "name": "js/game/game_mode_registry.js",
    "content": "import { gGameModeRegistry } from \"../core/global_registries\";\r\nimport { RegularGameMode } from \"./modes/regular\";\r\n\r\nexport function addVanillaGameModesToAPI() {\r\n    shapezAPI.ingame.gamemodes[RegularGameMode.getId()] = RegularGameMode;\r\n}\r\n\r\nexport function initGameModeRegistry() {\r\n    for (const gamemodeKey in shapezAPI.ingame.gamemodes) {\r\n        if (!shapezAPI.ingame.gamemodes.hasOwnProperty(gamemodeKey)) continue;\r\n        gGameModeRegistry.register(shapezAPI.ingame.gamemodes[gamemodeKey]);\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/game_mode_registry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1837,
    "kind": "function",
    "name": "addVanillaGameModesToAPI",
    "memberof": "js/game/game_mode_registry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/game_mode_registry.js~addVanillaGameModesToAPI",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/game_mode_registry.js",
    "importStyle": "{addVanillaGameModesToAPI}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1838,
    "kind": "function",
    "name": "initGameModeRegistry",
    "memberof": "js/game/game_mode_registry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/game_mode_registry.js~initGameModeRegistry",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/game_mode_registry.js",
    "importStyle": "{initGameModeRegistry}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1839,
    "kind": "file",
    "name": "js/game/game_speed_registry.js",
    "content": "import { RegularGameSpeed } from \"./time/regular_game_speed\";\r\nimport { gGameSpeedRegistry } from \"../core/global_registries\";\r\nimport { FastForwardGameSpeed } from \"./time/fast_forward_game_speed\";\r\nimport { PausedGameSpeed } from \"./time/paused_game_speed\";\r\n\r\nexport function addVanillaGameSpeedToAPI() {\r\n    shapezAPI.ingame.gamespeed[RegularGameSpeed.getId()] = RegularGameSpeed;\r\n    shapezAPI.ingame.gamespeed[FastForwardGameSpeed.getId()] = FastForwardGameSpeed;\r\n    shapezAPI.ingame.gamespeed[PausedGameSpeed.getId()] = PausedGameSpeed;\r\n}\r\n\r\nexport function initGameSpeedRegistry() {\r\n    for (const gamespeedKey in shapezAPI.ingame.gamespeed) {\r\n        if (!shapezAPI.ingame.gamespeed.hasOwnProperty(gamespeedKey)) continue;\r\n        gGameSpeedRegistry.register(shapezAPI.ingame.gamespeed[gamespeedKey]);\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/game_speed_registry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1840,
    "kind": "function",
    "name": "addVanillaGameSpeedToAPI",
    "memberof": "js/game/game_speed_registry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/game_speed_registry.js~addVanillaGameSpeedToAPI",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/game_speed_registry.js",
    "importStyle": "{addVanillaGameSpeedToAPI}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1841,
    "kind": "function",
    "name": "initGameSpeedRegistry",
    "memberof": "js/game/game_speed_registry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/game_speed_registry.js~initGameSpeedRegistry",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/game_speed_registry.js",
    "importStyle": "{initGameSpeedRegistry}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1842,
    "kind": "file",
    "name": "js/game/game_system.js",
    "content": "/* typehints:start */\r\nimport { GameRoot } from \"./root\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\n/* typehints:end */\r\n\r\n/**\r\n * A game system processes all entities which match a given schema, usually a list of\r\n * required components. This is the core of the game logic.\r\n */\r\nexport class GameSystem {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n    }\r\n\r\n    ///// PUBLIC API /////\r\n\r\n    /**\r\n     * Returns static id\r\n     */\r\n    static getId() {\r\n        abstract;\r\n        return \"unknown-system\";\r\n    }\r\n\r\n    /**\r\n     * Updates the game system, override to perform logic\r\n     */\r\n    update() {}\r\n\r\n    /**\r\n     * Override, do not call this directly, use startDraw()\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {}\r\n\r\n    /**\r\n     * Should refresh all caches\r\n     */\r\n    refreshCaches() {}\r\n\r\n    /**\r\n     * @see GameSystem.draw Wrapper arround the draw method\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    startDraw(parameters) {\r\n        this.draw(parameters);\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/game_system.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1843,
    "kind": "class",
    "name": "GameSystem",
    "memberof": "js/game/game_system.js",
    "static": true,
    "longname": "js/game/game_system.js~GameSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/game_system.js",
    "importStyle": "{GameSystem}",
    "description": "A game system processes all entities which match a given schema, usually a list of\nrequired components. This is the core of the game logic.",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 1844,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/game_system.js~GameSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system.js~GameSystem#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1845,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/game_system.js~GameSystem",
    "static": false,
    "longname": "js/game/game_system.js~GameSystem#root",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1846,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/game_system.js~GameSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/game_system.js~GameSystem.getId",
    "access": "public",
    "description": "Returns static id",
    "lineNumber": 23,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1847,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/game_system.js~GameSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system.js~GameSystem#update",
    "access": "public",
    "description": "Updates the game system, override to perform logic",
    "lineNumber": 31,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1848,
    "kind": "method",
    "name": "draw",
    "memberof": "js/game/game_system.js~GameSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system.js~GameSystem#draw",
    "access": "public",
    "description": "Override, do not call this directly, use startDraw()",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1849,
    "kind": "method",
    "name": "refreshCaches",
    "memberof": "js/game/game_system.js~GameSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system.js~GameSystem#refreshCaches",
    "access": "public",
    "description": "Should refresh all caches",
    "lineNumber": 42,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1850,
    "kind": "method",
    "name": "startDraw",
    "memberof": "js/game/game_system.js~GameSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system.js~GameSystem#startDraw",
    "access": "public",
    "description": "",
    "see": [
      "GameSystem.draw Wrapper arround the draw method"
    ],
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1851,
    "kind": "file",
    "name": "js/game/game_system_manager.js",
    "content": "/* typehints:start */\r\nimport { GameRoot } from \"./root\";\r\n/* typehints:end */\r\n\r\nimport { createLogger } from \"../core/logging\";\r\nimport { BeltSystem } from \"./systems/belt\";\r\nimport { ItemEjectorSystem } from \"./systems/item_ejector\";\r\nimport { MapResourcesSystem } from \"./systems/map_resources\";\r\nimport { MinerSystem } from \"./systems/miner\";\r\nimport { ItemProcessorSystem } from \"./systems/item_processor\";\r\nimport { UndergroundBeltSystem } from \"./systems/underground_belt\";\r\nimport { HubSystem } from \"./systems/hub\";\r\nimport { StaticMapEntitySystem } from \"./systems/static_map_entity\";\r\nimport { ItemAcceptorSystem } from \"./systems/item_acceptor\";\r\nimport { StorageSystem } from \"./systems/storage\";\r\nimport { WiredPinsSystem } from \"./systems/wired_pins\";\r\nimport { BeltUnderlaysSystem } from \"./systems/belt_underlays\";\r\nimport { WireSystem } from \"./systems/wire\";\r\nimport { ConstantSignalSystem } from \"./systems/constant_signal\";\r\nimport { LogicGateSystem } from \"./systems/logic_gate\";\r\nimport { LeverSystem } from \"./systems/lever\";\r\nimport { DisplaySystem } from \"./systems/display\";\r\nimport { ItemProcessorOverlaysSystem } from \"./systems/item_processor_overlays\";\r\nimport { BeltReaderSystem } from \"./systems/belt_reader\";\r\nimport { FilterSystem } from \"./systems/filter\";\r\nimport { ItemProducerSystem } from \"./systems/item_producer\";\r\nimport { ItemAcceptorComponent } from \"./components/item_acceptor\";\r\nimport { GameSystem } from \"./game_system\";\r\n\r\nconst logger = createLogger(\"game_system_manager\");\r\n\r\nexport function addVanillaSystemsToAPI() {\r\n    shapezAPI.ingame[\"systems\"] = [\r\n        // Order is important!\r\n\r\n        // IMPORTANT: Item acceptor must be before the belt, because it may not tick after the belt\r\n        // has put in the item into the acceptor animation, otherwise its off\r\n\r\n        ItemAcceptorSystem,\r\n\r\n        MapResourcesSystem,\r\n\r\n        BeltSystem,\r\n\r\n        UndergroundBeltSystem,\r\n\r\n        MinerSystem,\r\n\r\n        StorageSystem,\r\n\r\n        ItemProcessorSystem,\r\n\r\n        FilterSystem,\r\n\r\n        ItemProducerSystem,\r\n\r\n        ItemEjectorSystem,\r\n\r\n        HubSystem,\r\n\r\n        StaticMapEntitySystem,\r\n\r\n        WiredPinsSystem,\r\n\r\n        BeltUnderlaysSystem,\r\n\r\n        ConstantSignalSystem,\r\n\r\n        // WIRES section\r\n        LeverSystem,\r\n\r\n        // Wires must be before all gate, signal etc logic!\r\n        WireSystem,\r\n\r\n        // IMPORTANT: We have 2 phases: In phase 1 we compute the output values of all gates,\r\n        // processors etc. In phase 2 we propagate it through the wires network\r\n        LogicGateSystem,\r\n        BeltReaderSystem,\r\n\r\n        DisplaySystem,\r\n\r\n        ItemProcessorOverlaysSystem,\r\n    ];\r\n}\r\n\r\nexport class GameSystemManager {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n\r\n        this.systems = {};\r\n\r\n        this.systemUpdateOrder = [];\r\n\r\n        this.internalInitSystems();\r\n    }\r\n\r\n    /**\r\n     * Initializes all systems\r\n     */\r\n    internalInitSystems() {\r\n        const systems = shapezAPI.ingame[\"systems\"];\r\n        for (let i = 0; i < systems.length; i++) {\r\n            const system = systems[i];\r\n            this.systems[system.getId()] = new system(this.root);\r\n            this.systemUpdateOrder.push(system.getId());\r\n        }\r\n\r\n        logger.log(\"📦 There are\", this.systemUpdateOrder.length, \"game systems\");\r\n    }\r\n\r\n    /**\r\n     * Updates all systems\r\n     */\r\n    update() {\r\n        for (let i = 0; i < this.systemUpdateOrder.length; ++i) {\r\n            const system = this.systems[this.systemUpdateOrder[i]];\r\n            system.update();\r\n        }\r\n    }\r\n\r\n    refreshCaches() {\r\n        for (let i = 0; i < this.systemUpdateOrder.length; ++i) {\r\n            const system = this.systems[this.systemUpdateOrder[i]];\r\n            system.refreshCaches();\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/game_system_manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1852,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/game_system_manager.js",
    "static": true,
    "longname": "js/game/game_system_manager.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/game_system_manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1853,
    "kind": "function",
    "name": "addVanillaSystemsToAPI",
    "memberof": "js/game/game_system_manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/game_system_manager.js~addVanillaSystemsToAPI",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/game_system_manager.js",
    "importStyle": "{addVanillaSystemsToAPI}",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1854,
    "kind": "class",
    "name": "GameSystemManager",
    "memberof": "js/game/game_system_manager.js",
    "static": true,
    "longname": "js/game/game_system_manager.js~GameSystemManager",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/game_system_manager.js",
    "importStyle": "{GameSystemManager}",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 1855,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/game_system_manager.js~GameSystemManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system_manager.js~GameSystemManager#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1856,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/game_system_manager.js~GameSystemManager",
    "static": false,
    "longname": "js/game/game_system_manager.js~GameSystemManager#root",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1857,
    "kind": "member",
    "name": "systems",
    "memberof": "js/game/game_system_manager.js~GameSystemManager",
    "static": false,
    "longname": "js/game/game_system_manager.js~GameSystemManager#systems",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 1858,
    "kind": "member",
    "name": "systemUpdateOrder",
    "memberof": "js/game/game_system_manager.js~GameSystemManager",
    "static": false,
    "longname": "js/game/game_system_manager.js~GameSystemManager#systemUpdateOrder",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1859,
    "kind": "method",
    "name": "internalInitSystems",
    "memberof": "js/game/game_system_manager.js~GameSystemManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system_manager.js~GameSystemManager#internalInitSystems",
    "access": "public",
    "description": "Initializes all systems",
    "lineNumber": 103,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1860,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/game_system_manager.js~GameSystemManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system_manager.js~GameSystemManager#update",
    "access": "public",
    "description": "Updates all systems",
    "lineNumber": 117,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1861,
    "kind": "method",
    "name": "refreshCaches",
    "memberof": "js/game/game_system_manager.js~GameSystemManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system_manager.js~GameSystemManager#refreshCaches",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1862,
    "kind": "file",
    "name": "js/game/game_system_with_filter.js",
    "content": "/* typehints:start */\r\nimport { Component } from \"./component\";\r\nimport { Entity } from \"./entity\";\r\n/* typehints:end */\r\n\r\nimport { GameRoot } from \"./root\";\r\nimport { GameSystem } from \"./game_system\";\r\nimport { arrayDelete, arrayDeleteValue } from \"../core/utils\";\r\nimport { globalConfig } from \"../core/config\";\r\n\r\nexport class GameSystemWithFilter extends GameSystem {\r\n    /**\r\n     * Constructs a new game system with the given component filter. It will process\r\n     * all entities which have *all* of the passed components\r\n     * @param {GameRoot} root\r\n     * @param {Array<typeof Component>} requiredComponents\r\n     */\r\n    constructor(root, requiredComponents) {\r\n        super(root);\r\n        this.requiredComponents = requiredComponents;\r\n        this.requiredComponentIds = requiredComponents.map(component => component.getId());\r\n\r\n        /**\r\n         * All entities which match the current components\r\n         * @type {Array<Entity>}\r\n         */\r\n        this.allEntities = [];\r\n\r\n        this.root.signals.entityAdded.add(this.internalPushEntityIfMatching, this);\r\n        this.root.signals.entityGotNewComponent.add(this.internalReconsiderEntityToAdd, this);\r\n        this.root.signals.entityComponentRemoved.add(this.internalCheckEntityAfterComponentRemoval, this);\r\n        this.root.signals.entityQueuedForDestroy.add(this.internalPopEntityIfMatching, this);\r\n\r\n        this.root.signals.postLoadHook.add(this.internalPostLoadHook, this);\r\n        this.root.signals.bulkOperationFinished.add(this.refreshCaches, this);\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     */\r\n    internalPushEntityIfMatching(entity) {\r\n        for (let i = 0; i < this.requiredComponentIds.length; ++i) {\r\n            if (!entity.components[this.requiredComponentIds[i]]) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // This is slow!\r\n        if (G_IS_DEV && !globalConfig.debug.disableSlowAsserts) {\r\n            assert(this.allEntities.indexOf(entity) < 0, \"entity already in list: \" + entity);\r\n        }\r\n\r\n        this.internalRegisterEntity(entity);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    internalCheckEntityAfterComponentRemoval(entity) {\r\n        if (this.allEntities.indexOf(entity) < 0) {\r\n            // Entity wasn't interesting anyways\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this.requiredComponentIds.length; ++i) {\r\n            if (!entity.components[this.requiredComponentIds[i]]) {\r\n                // Entity is not interesting anymore\r\n                arrayDeleteValue(this.allEntities, entity);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    internalReconsiderEntityToAdd(entity) {\r\n        for (let i = 0; i < this.requiredComponentIds.length; ++i) {\r\n            if (!entity.components[this.requiredComponentIds[i]]) {\r\n                return;\r\n            }\r\n        }\r\n        if (this.allEntities.indexOf(entity) >= 0) {\r\n            return;\r\n        }\r\n        this.internalRegisterEntity(entity);\r\n    }\r\n\r\n    refreshCaches() {\r\n        // Remove all entities which are queued for destroy\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            if (entity.queuedForDestroy || entity.destroyed) {\r\n                this.allEntities.splice(i, 1);\r\n                i -= 1;\r\n            }\r\n        }\r\n\r\n        this.allEntities.sort((a, b) => a.uid - b.uid);\r\n    }\r\n\r\n    /**\r\n     * Recomputes all target entities after the game has loaded\r\n     */\r\n    internalPostLoadHook() {\r\n        this.refreshCaches();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    internalRegisterEntity(entity) {\r\n        this.allEntities.push(entity);\r\n\r\n        if (this.root.gameInitialized && !this.root.bulkOperationRunning) {\r\n            // Sort entities by uid so behaviour is predictable\r\n            this.allEntities.sort((a, b) => a.uid - b.uid);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    internalPopEntityIfMatching(entity) {\r\n        if (this.root.bulkOperationRunning) {\r\n            // We do this in refreshCaches afterwards\r\n            return;\r\n        }\r\n        const index = this.allEntities.indexOf(entity);\r\n        if (index >= 0) {\r\n            arrayDelete(this.allEntities, index);\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/game_system_with_filter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1863,
    "kind": "class",
    "name": "GameSystemWithFilter",
    "memberof": "js/game/game_system_with_filter.js",
    "static": true,
    "longname": "js/game/game_system_with_filter.js~GameSystemWithFilter",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/game_system_with_filter.js",
    "importStyle": "{GameSystemWithFilter}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system.js~GameSystem"
    ]
  },
  {
    "__docId__": 1864,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/game_system_with_filter.js~GameSystemWithFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system_with_filter.js~GameSystemWithFilter#constructor",
    "access": "public",
    "description": "Constructs a new game system with the given component filter. It will process\nall entities which have *all* of the passed components",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<typeof Component>"
        ],
        "spread": false,
        "optional": false,
        "name": "requiredComponents",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1865,
    "kind": "member",
    "name": "requiredComponents",
    "memberof": "js/game/game_system_with_filter.js~GameSystemWithFilter",
    "static": false,
    "longname": "js/game/game_system_with_filter.js~GameSystemWithFilter#requiredComponents",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1866,
    "kind": "member",
    "name": "requiredComponentIds",
    "memberof": "js/game/game_system_with_filter.js~GameSystemWithFilter",
    "static": false,
    "longname": "js/game/game_system_with_filter.js~GameSystemWithFilter#requiredComponentIds",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1867,
    "kind": "member",
    "name": "allEntities",
    "memberof": "js/game/game_system_with_filter.js~GameSystemWithFilter",
    "static": false,
    "longname": "js/game/game_system_with_filter.js~GameSystemWithFilter#allEntities",
    "access": "public",
    "description": "All entities which match the current components",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "Array<Entity>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1868,
    "kind": "method",
    "name": "internalPushEntityIfMatching",
    "memberof": "js/game/game_system_with_filter.js~GameSystemWithFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system_with_filter.js~GameSystemWithFilter#internalPushEntityIfMatching",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1869,
    "kind": "method",
    "name": "internalCheckEntityAfterComponentRemoval",
    "memberof": "js/game/game_system_with_filter.js~GameSystemWithFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system_with_filter.js~GameSystemWithFilter#internalCheckEntityAfterComponentRemoval",
    "access": "public",
    "description": "",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1870,
    "kind": "method",
    "name": "internalReconsiderEntityToAdd",
    "memberof": "js/game/game_system_with_filter.js~GameSystemWithFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system_with_filter.js~GameSystemWithFilter#internalReconsiderEntityToAdd",
    "access": "public",
    "description": "",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1871,
    "kind": "method",
    "name": "refreshCaches",
    "memberof": "js/game/game_system_with_filter.js~GameSystemWithFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system_with_filter.js~GameSystemWithFilter#refreshCaches",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1872,
    "kind": "method",
    "name": "internalPostLoadHook",
    "memberof": "js/game/game_system_with_filter.js~GameSystemWithFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system_with_filter.js~GameSystemWithFilter#internalPostLoadHook",
    "access": "public",
    "description": "Recomputes all target entities after the game has loaded",
    "lineNumber": 106,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1873,
    "kind": "method",
    "name": "internalRegisterEntity",
    "memberof": "js/game/game_system_with_filter.js~GameSystemWithFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system_with_filter.js~GameSystemWithFilter#internalRegisterEntity",
    "access": "public",
    "description": "",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1874,
    "kind": "method",
    "name": "internalPopEntityIfMatching",
    "memberof": "js/game/game_system_with_filter.js~GameSystemWithFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/game_system_with_filter.js~GameSystemWithFilter#internalPopEntityIfMatching",
    "access": "public",
    "description": "",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1875,
    "kind": "file",
    "name": "js/game/hints.js",
    "content": "import { randomChoice } from \"../core/utils\";\r\nimport { T } from \"../translations\";\r\n\r\nconst hintsShown = [];\r\n\r\n/**\r\n * Finds a new hint to show about the game which the user hasn't seen within this session\r\n */\r\nexport function getRandomHint() {\r\n    let maxTries = 100 * T.tips.length;\r\n\r\n    while (maxTries-- > 0) {\r\n        const hint = randomChoice(T.tips);\r\n        if (!hintsShown.includes(hint)) {\r\n            hintsShown.push(hint);\r\n            return hint;\r\n        }\r\n    }\r\n\r\n    // All tips shown so far\r\n    return randomChoice(T.tips);\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hints.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1876,
    "kind": "variable",
    "name": "hintsShown",
    "memberof": "js/game/hints.js",
    "static": true,
    "longname": "js/game/hints.js~hintsShown",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hints.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1877,
    "kind": "function",
    "name": "getRandomHint",
    "memberof": "js/game/hints.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/hints.js~getRandomHint",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hints.js",
    "importStyle": "{getRandomHint}",
    "description": "Finds a new hint to show about the game which the user hasn't seen within this session",
    "lineNumber": 9,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1878,
    "kind": "file",
    "name": "js/game/hub_goals.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nimport { RandomNumberGenerator } from \"../core/rng\";\r\nimport { clamp } from \"../core/utils\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\nimport { enumColors } from \"./colors\";\r\nimport { enumItemProcessorTypes } from \"./components/item_processor\";\r\nimport { enumAnalyticsDataSource } from \"./production_analytics\";\r\nimport { GameRoot } from \"./root\";\r\nimport { enumSubShape, ShapeDefinition } from \"./shape_definition\";\r\nimport { enumHubGoalRewards } from \"./tutorial_goals\";\r\n\r\nexport class HubGoals extends BasicSerializableObject {\r\n    static getId() {\r\n        return \"HubGoals\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            level: types.uint,\r\n            storedShapes: types.keyValueMap(types.uint),\r\n            upgradeLevels: types.keyValueMap(types.uint),\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} data\r\n     * @param {GameRoot} root\r\n     */\r\n    deserialize(data, root) {\r\n        const errorCode = super.deserialize(data);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n\r\n        const levels = root.gameMode.getLevelDefinitions();\r\n\r\n        // If freeplay is not available, clamp the level\r\n        if (!root.gameMode.getIsFreeplayAvailable()) {\r\n            this.level = Math.min(this.level, levels.length);\r\n        }\r\n\r\n        // Compute gained rewards\r\n        for (let i = 0; i < this.level - 1; ++i) {\r\n            if (i < levels.length) {\r\n                const reward = levels[i].reward;\r\n                this.gainedRewards[reward] = (this.gainedRewards[reward] || 0) + 1;\r\n            }\r\n        }\r\n\r\n        // Compute upgrade improvements\r\n        const upgrades = this.root.gameMode.getUpgrades();\r\n        for (const upgradeId in upgrades) {\r\n            const tiers = upgrades[upgradeId];\r\n            const level = this.upgradeLevels[upgradeId] || 0;\r\n            let totalImprovement = 1;\r\n            for (let i = 0; i < level; ++i) {\r\n                totalImprovement += tiers[i].improvement;\r\n            }\r\n            this.upgradeImprovements[upgradeId] = totalImprovement;\r\n        }\r\n\r\n        // Compute current goal\r\n        this.computeNextGoal();\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n\r\n        this.root = root;\r\n\r\n        this.level = 1;\r\n\r\n        /**\r\n         * Which story rewards we already gained\r\n         * @type {Object.<string, number>}\r\n         */\r\n        this.gainedRewards = {};\r\n\r\n        /**\r\n         * Mapping from shape hash -> amount\r\n         * @type {Object<string, number>}\r\n         */\r\n        this.storedShapes = {};\r\n\r\n        /**\r\n         * Stores the levels for all upgrades\r\n         * @type {Object<string, number>}\r\n         */\r\n        this.upgradeLevels = {};\r\n\r\n        /**\r\n         * Stores the improvements for all upgrades\r\n         * @type {Object<string, number>}\r\n         */\r\n        this.upgradeImprovements = {};\r\n\r\n        // Reset levels first\r\n        const upgrades = this.root.gameMode.getUpgrades();\r\n        for (const key in upgrades) {\r\n            this.upgradeLevels[key] = 0;\r\n            this.upgradeImprovements[key] = 1;\r\n        }\r\n\r\n        this.computeNextGoal();\r\n\r\n        // Allow quickly switching goals in dev mode\r\n        if (G_IS_DEV) {\r\n            window.addEventListener(\"keydown\", ev => {\r\n                if (ev.key === \"b\") {\r\n                    // root is not guaranteed to exist within ~0.5s after loading in\r\n                    if (this.root && this.root.app && this.root.app.gameAnalytics) {\r\n                        if (!this.isEndOfDemoReached()) {\r\n                            this.onGoalCompleted();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether the end of the demo is reached\r\n     * @returns {boolean}\r\n     */\r\n    isEndOfDemoReached() {\r\n        return (!this.root.gameMode.getIsFreeplayAvailable() &&\r\n            this.level >= this.root.gameMode.getLevelDefinitions().length\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns how much of the current shape is stored\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {number}\r\n     */\r\n    getShapesStored(definition) {\r\n        return this.storedShapes[definition.getHash()] || 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @param {number} amount\r\n     */\r\n    takeShapeByKey(key, amount) {\r\n        assert(this.getShapesStoredByKey(key) >= amount, \"Can not afford: \" + key + \" x \" + amount);\r\n        assert(amount >= 0, \"Amount < 0 for \" + key);\r\n        assert(Number.isInteger(amount), \"Invalid amount: \" + amount);\r\n        this.storedShapes[key] = (this.storedShapes[key] || 0) - amount;\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Returns how much of the current shape is stored\r\n     * @param {string} key\r\n     * @returns {number}\r\n     */\r\n    getShapesStoredByKey(key) {\r\n        return this.storedShapes[key] || 0;\r\n    }\r\n\r\n    /**\r\n     * Returns how much of the current goal was already delivered\r\n     */\r\n    getCurrentGoalDelivered() {\r\n        if (this.currentGoal.throughputOnly) {\r\n            return (\r\n                this.root.productionAnalytics.getCurrentShapeRate(\r\n                    enumAnalyticsDataSource.delivered,\r\n                    this.currentGoal.definition\r\n                ) / globalConfig.analyticsSliceDurationSeconds\r\n            );\r\n        }\r\n\r\n        return this.getShapesStored(this.currentGoal.definition);\r\n    }\r\n\r\n    /**\r\n     * Returns the current level of a given upgrade\r\n     * @param {string} upgradeId\r\n     */\r\n    getUpgradeLevel(upgradeId) {\r\n        return this.upgradeLevels[upgradeId] || 0;\r\n    }\r\n\r\n    /**\r\n     * Returns whether the given reward is already unlocked\r\n     * @param {enumHubGoalRewards} reward\r\n     */\r\n    isRewardUnlocked(reward) {\r\n        if (G_IS_DEV && globalConfig.debug.allBuildingsUnlocked) {\r\n            return true;\r\n        }\r\n        return !!this.gainedRewards[reward];\r\n    }\r\n\r\n    /**\r\n     * Handles the given definition, by either accounting it towards the\r\n     * goal or otherwise granting some points\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    handleDefinitionDelivered(definition) {\r\n        const hash = definition.getHash();\r\n        this.storedShapes[hash] = (this.storedShapes[hash] || 0) + 1;\r\n\r\n        this.root.signals.shapeDelivered.dispatch(definition);\r\n\r\n        // Check if we have enough for the next level\r\n        if (\r\n            this.getCurrentGoalDelivered() >= this.currentGoal.required ||\r\n            (G_IS_DEV && globalConfig.debug.rewardsInstant)\r\n        ) {\r\n            if (!this.isEndOfDemoReached()) {\r\n                this.onGoalCompleted();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the next goal\r\n     */\r\n    computeNextGoal() {\r\n        const storyIndex = this.level - 1;\r\n        const levels = this.root.gameMode.getLevelDefinitions();\r\n        if (storyIndex < levels.length) {\r\n            const { shape, required, reward, throughputOnly } = levels[storyIndex];\r\n            this.currentGoal = {\r\n                /** @type {ShapeDefinition} */\r\n                definition: this.root.shapeDefinitionMgr.getShapeFromShortKey(shape),\r\n                required,\r\n                reward,\r\n                throughputOnly,\r\n            };\r\n            return;\r\n        }\r\n\r\n        //Floor Required amount to remove confusion\r\n        const required = Math.min(200, Math.floor(4 + (this.level - 27) * 0.25));\r\n        this.currentGoal = {\r\n            definition: this.computeFreeplayShape(this.level),\r\n            required,\r\n            reward: enumHubGoalRewards.no_reward_freeplay,\r\n            throughputOnly: true,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Called when the level was completed\r\n     */\r\n    onGoalCompleted() {\r\n        const reward = this.currentGoal.reward;\r\n        this.gainedRewards[reward] = (this.gainedRewards[reward] || 0) + 1;\r\n\r\n        this.root.app.gameAnalytics.handleLevelCompleted(this.level);\r\n        ++this.level;\r\n        this.computeNextGoal();\r\n\r\n        this.root.signals.storyGoalCompleted.dispatch(this.level - 1, reward);\r\n    }\r\n\r\n    /**\r\n     * Returns whether we are playing in free-play\r\n     */\r\n    isFreePlay() {\r\n        return this.level >= this.root.gameMode.getLevelDefinitions().length;\r\n    }\r\n\r\n    /**\r\n     * Returns whether a given upgrade can be unlocked\r\n     * @param {string} upgradeId\r\n     */\r\n    canUnlockUpgrade(upgradeId) {\r\n        const tiers = this.root.gameMode.getUpgrades()[upgradeId];\r\n        const currentLevel = this.getUpgradeLevel(upgradeId);\r\n\r\n        if (currentLevel >= tiers.length) {\r\n            // Max level\r\n            return false;\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.upgradesNoCost) {\r\n            return true;\r\n        }\r\n\r\n        const tierData = tiers[currentLevel];\r\n\r\n        for (let i = 0; i < tierData.required.length; ++i) {\r\n            const requirement = tierData.required[i];\r\n            if ((this.storedShapes[requirement.shape] || 0) < requirement.amount) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of available upgrades\r\n     * @returns {number}\r\n     */\r\n    getAvailableUpgradeCount() {\r\n        let count = 0;\r\n        for (const upgradeId in this.root.gameMode.getUpgrades()) {\r\n            if (this.canUnlockUpgrade(upgradeId)) {\r\n                ++count;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * Tries to unlock the given upgrade\r\n     * @param {string} upgradeId\r\n     * @returns {boolean}\r\n     */\r\n    tryUnlockUpgrade(upgradeId) {\r\n        if (!this.canUnlockUpgrade(upgradeId)) {\r\n            return false;\r\n        }\r\n\r\n        const upgradeTiers = this.root.gameMode.getUpgrades()[upgradeId];\r\n        const currentLevel = this.getUpgradeLevel(upgradeId);\r\n\r\n        const tierData = upgradeTiers[currentLevel];\r\n        if (!tierData) {\r\n            return false;\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.upgradesNoCost) {\r\n            // Dont take resources\r\n        } else {\r\n            for (let i = 0; i < tierData.required.length; ++i) {\r\n                const requirement = tierData.required[i];\r\n\r\n                // Notice: Don't have to check for hash here\r\n                this.storedShapes[requirement.shape] -= requirement.amount;\r\n            }\r\n        }\r\n\r\n        this.upgradeLevels[upgradeId] = (this.upgradeLevels[upgradeId] || 0) + 1;\r\n        this.upgradeImprovements[upgradeId] += tierData.improvement;\r\n\r\n        this.root.signals.upgradePurchased.dispatch(upgradeId);\r\n\r\n        this.root.app.gameAnalytics.handleUpgradeUnlocked(upgradeId, currentLevel);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Picks random colors which are close to each other\r\n     * @param {RandomNumberGenerator} rng\r\n     */\r\n    generateRandomColorSet(rng, allowUncolored = false) {\r\n        const colorWheel = [\r\n            enumColors.red,\r\n            enumColors.yellow,\r\n            enumColors.green,\r\n            enumColors.cyan,\r\n            enumColors.blue,\r\n            enumColors.purple,\r\n            enumColors.red,\r\n            enumColors.yellow,\r\n        ];\r\n\r\n        const universalColors = [enumColors.white];\r\n        if (allowUncolored) {\r\n            universalColors.push(enumColors.uncolored);\r\n        }\r\n        const index = rng.nextIntRange(0, colorWheel.length - 2);\r\n        const pickedColors = colorWheel.slice(index, index + 3);\r\n        pickedColors.push(rng.choice(universalColors));\r\n        return pickedColors;\r\n    }\r\n\r\n    /**\r\n     * Creates a (seeded) random shape\r\n     * @param {number} level\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    computeFreeplayShape(level) {\r\n        const layerCount = clamp(this.level / 25, 2, 4);\r\n\r\n        /** @type {Array<import(\"./shape_definition\").ShapeLayer>} */\r\n        let layers = [];\r\n\r\n        const rng = new RandomNumberGenerator(this.root.map.seed + \"/\" + level);\r\n\r\n        const colors = this.generateRandomColorSet(rng, level > 35);\r\n\r\n        let pickedSymmetry = null; // pairs of quadrants that must be the same\r\n        let availableShapes = [enumSubShape.rect, enumSubShape.circle, enumSubShape.star];\r\n        if (rng.next() < 0.5) {\r\n            pickedSymmetry = [\r\n                // radial symmetry\r\n                [0, 2],\r\n                [1, 3],\r\n            ];\r\n            availableShapes.push(enumSubShape.windmill); // windmill looks good only in radial symmetry\r\n        } else {\r\n            const symmetries = [\r\n                [\r\n                    // horizontal axis\r\n                    [0, 3],\r\n                    [1, 2],\r\n                ],\r\n                [\r\n                    // vertical axis\r\n                    [0, 1],\r\n                    [2, 3],\r\n                ],\r\n                [\r\n                    // diagonal axis\r\n                    [0, 2],\r\n                    [1],\r\n                    [3],\r\n                ],\r\n                [\r\n                    // other diagonal axis\r\n                    [1, 3],\r\n                    [0],\r\n                    [2],\r\n                ],\r\n            ];\r\n            pickedSymmetry = rng.choice(symmetries);\r\n        }\r\n\r\n        const randomColor = () => rng.choice(colors);\r\n        const randomShape = () => rng.choice(Object.values(enumSubShape));\r\n\r\n        let anyIsMissingTwo = false;\r\n\r\n        for (let i = 0; i < layerCount; ++i) {\r\n            /** @type {import(\"./shape_definition\").ShapeLayer} */\r\n            const layer = [null, null, null, null];\r\n\r\n            for (let j = 0; j < pickedSymmetry.length; ++j) {\r\n                const group = pickedSymmetry[j];\r\n                const shape = randomShape();\r\n                const color = randomColor();\r\n                for (let k = 0; k < group.length; ++k) {\r\n                    const quad = group[k];\r\n                    layer[quad] = {\r\n                        subShape: shape,\r\n                        color,\r\n                    };\r\n                }\r\n            }\r\n\r\n            // Sometimes they actually are missing *two* ones!\r\n            // Make sure at max only one layer is missing it though, otherwise we could\r\n            // create an uncreateable shape\r\n            if (level > 75 && rng.next() > 0.95 && !anyIsMissingTwo) {\r\n                layer[rng.nextIntRange(0, 4)] = null;\r\n                anyIsMissingTwo = true;\r\n            }\r\n\r\n            layers.push(layer);\r\n        }\r\n\r\n        const definition = new ShapeDefinition({ layers });\r\n        return this.root.shapeDefinitionMgr.registerOrReturnHandle(definition);\r\n    }\r\n\r\n    ////////////// HELPERS\r\n\r\n    /**\r\n     * Belt speed\r\n     * @returns {number} items / sec\r\n     */\r\n    getBeltBaseSpeed() {\r\n        return globalConfig.beltSpeedItemsPerSecond * this.upgradeImprovements.belt;\r\n    }\r\n\r\n    /**\r\n     * Underground belt speed\r\n     * @returns {number} items / sec\r\n     */\r\n    getUndergroundBeltBaseSpeed() {\r\n        return globalConfig.beltSpeedItemsPerSecond * this.upgradeImprovements.belt;\r\n    }\r\n\r\n    /**\r\n     * Miner speed\r\n     * @returns {number} items / sec\r\n     */\r\n    getMinerBaseSpeed() {\r\n        return globalConfig.minerSpeedItemsPerSecond * this.upgradeImprovements.miner;\r\n    }\r\n\r\n    /**\r\n     * Processor speed\r\n     * @param {enumItemProcessorTypes} processorType\r\n     * @returns {number} items / sec\r\n     */\r\n    getProcessorBaseSpeed(processorType) {\r\n        switch (processorType) {\r\n            case enumItemProcessorTypes.trash:\r\n            case enumItemProcessorTypes.hub:\r\n                return 1e30;\r\n            case enumItemProcessorTypes.balancer:\r\n                return globalConfig.beltSpeedItemsPerSecond * this.upgradeImprovements.belt * 2;\r\n            case enumItemProcessorTypes.reader:\r\n                return globalConfig.beltSpeedItemsPerSecond * this.upgradeImprovements.belt;\r\n\r\n            case enumItemProcessorTypes.mixer:\r\n            case enumItemProcessorTypes.painter:\r\n            case enumItemProcessorTypes.painterDouble:\r\n            case enumItemProcessorTypes.painterQuad:\r\n                {\r\n                    assert(\r\n                        globalConfig.buildingSpeeds[processorType],\r\n                        \"Processor type has no speed set in globalConfig.buildingSpeeds: \" + processorType\r\n                    );\r\n                    return (\r\n                        globalConfig.beltSpeedItemsPerSecond *\r\n                        this.upgradeImprovements.painting *\r\n                        globalConfig.buildingSpeeds[processorType]\r\n                    );\r\n                }\r\n\r\n            case enumItemProcessorTypes.cutter:\r\n            case enumItemProcessorTypes.cutterQuad:\r\n            case enumItemProcessorTypes.rotater:\r\n            case enumItemProcessorTypes.rotaterCCW:\r\n            case enumItemProcessorTypes.rotater180:\r\n            case enumItemProcessorTypes.stacker:\r\n                {\r\n                    assert(\r\n                        globalConfig.buildingSpeeds[processorType],\r\n                        \"Processor type has no speed set in globalConfig.buildingSpeeds: \" + processorType\r\n                    );\r\n                    return (\r\n                        globalConfig.beltSpeedItemsPerSecond *\r\n                        this.upgradeImprovements.processors *\r\n                        globalConfig.buildingSpeeds[processorType]\r\n                    );\r\n                }\r\n            default:\r\n                assertAlways(false, \"invalid processor type: \" + processorType);\r\n        }\r\n\r\n        return 1 / globalConfig.beltSpeedItemsPerSecond;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hub_goals.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1879,
    "kind": "class",
    "name": "HubGoals",
    "memberof": "js/game/hub_goals.js",
    "static": true,
    "longname": "js/game/hub_goals.js~HubGoals",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hub_goals.js",
    "importStyle": "{HubGoals}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/serialization.js~BasicSerializableObject"
    ]
  },
  {
    "__docId__": 1880,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/hub_goals.js~HubGoals.getId",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1881,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/hub_goals.js~HubGoals.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"level\": *, \"storedShapes\": *, \"upgradeLevels\": *}"
      ]
    }
  },
  {
    "__docId__": 1882,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#deserialize",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1883,
    "kind": "member",
    "name": "level",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#level",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1884,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1885,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#root",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1887,
    "kind": "member",
    "name": "gainedRewards",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#gainedRewards",
    "access": "public",
    "description": "Which story rewards we already gained",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "Object.<string, number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1888,
    "kind": "member",
    "name": "storedShapes",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#storedShapes",
    "access": "public",
    "description": "Mapping from shape hash -> amount",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "Object<string, number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1889,
    "kind": "member",
    "name": "upgradeLevels",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#upgradeLevels",
    "access": "public",
    "description": "Stores the levels for all upgrades",
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "Object<string, number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1890,
    "kind": "member",
    "name": "upgradeImprovements",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#upgradeImprovements",
    "access": "public",
    "description": "Stores the improvements for all upgrades",
    "lineNumber": 99,
    "type": {
      "nullable": null,
      "types": [
        "Object<string, number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1891,
    "kind": "method",
    "name": "isEndOfDemoReached",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#isEndOfDemoReached",
    "access": "public",
    "description": "Returns whether the end of the demo is reached",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1892,
    "kind": "method",
    "name": "getShapesStored",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#getShapesStored",
    "access": "public",
    "description": "Returns how much of the current shape is stored",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1893,
    "kind": "method",
    "name": "takeShapeByKey",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#takeShapeByKey",
    "access": "public",
    "description": "",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1894,
    "kind": "method",
    "name": "getShapesStoredByKey",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#getShapesStoredByKey",
    "access": "public",
    "description": "Returns how much of the current shape is stored",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1895,
    "kind": "method",
    "name": "getCurrentGoalDelivered",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#getCurrentGoalDelivered",
    "access": "public",
    "description": "Returns how much of the current goal was already delivered",
    "lineNumber": 168,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1896,
    "kind": "method",
    "name": "getUpgradeLevel",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#getUpgradeLevel",
    "access": "public",
    "description": "Returns the current level of a given upgrade",
    "lineNumber": 185,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "upgradeId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1897,
    "kind": "method",
    "name": "isRewardUnlocked",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#isRewardUnlocked",
    "access": "public",
    "description": "Returns whether the given reward is already unlocked",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "enumHubGoalRewards"
        ],
        "spread": false,
        "optional": false,
        "name": "reward",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1898,
    "kind": "method",
    "name": "handleDefinitionDelivered",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#handleDefinitionDelivered",
    "access": "public",
    "description": "Handles the given definition, by either accounting it towards the\ngoal or otherwise granting some points",
    "lineNumber": 205,
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1899,
    "kind": "method",
    "name": "computeNextGoal",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#computeNextGoal",
    "access": "public",
    "description": "Creates the next goal",
    "lineNumber": 225,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1900,
    "kind": "member",
    "name": "currentGoal",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#currentGoal",
    "access": "public",
    "description": null,
    "lineNumber": 230,
    "undocument": true,
    "type": {
      "types": [
        "{\"definition\": *, \"required\": *, \"reward\": *, \"throughputOnly\": *}"
      ]
    }
  },
  {
    "__docId__": 1902,
    "kind": "method",
    "name": "onGoalCompleted",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#onGoalCompleted",
    "access": "public",
    "description": "Called when the level was completed",
    "lineNumber": 253,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1903,
    "kind": "method",
    "name": "isFreePlay",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#isFreePlay",
    "access": "public",
    "description": "Returns whether we are playing in free-play",
    "lineNumber": 267,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1904,
    "kind": "method",
    "name": "canUnlockUpgrade",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#canUnlockUpgrade",
    "access": "public",
    "description": "Returns whether a given upgrade can be unlocked",
    "lineNumber": 275,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "upgradeId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1905,
    "kind": "method",
    "name": "getAvailableUpgradeCount",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#getAvailableUpgradeCount",
    "access": "public",
    "description": "Returns the number of available upgrades",
    "lineNumber": 303,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1906,
    "kind": "method",
    "name": "tryUnlockUpgrade",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#tryUnlockUpgrade",
    "access": "public",
    "description": "Tries to unlock the given upgrade",
    "lineNumber": 318,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "upgradeId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1907,
    "kind": "method",
    "name": "generateRandomColorSet",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#generateRandomColorSet",
    "access": "public",
    "description": "Picks random colors which are close to each other",
    "lineNumber": 356,
    "params": [
      {
        "nullable": null,
        "types": [
          "RandomNumberGenerator"
        ],
        "spread": false,
        "optional": false,
        "name": "rng",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1908,
    "kind": "method",
    "name": "computeFreeplayShape",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#computeFreeplayShape",
    "access": "public",
    "description": "Creates a (seeded) random shape",
    "lineNumber": 383,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1909,
    "kind": "method",
    "name": "getBeltBaseSpeed",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#getBeltBaseSpeed",
    "access": "public",
    "description": "Belt speed",
    "lineNumber": 473,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} items / sec"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "items / sec"
    },
    "params": []
  },
  {
    "__docId__": 1910,
    "kind": "method",
    "name": "getUndergroundBeltBaseSpeed",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#getUndergroundBeltBaseSpeed",
    "access": "public",
    "description": "Underground belt speed",
    "lineNumber": 481,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} items / sec"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "items / sec"
    },
    "params": []
  },
  {
    "__docId__": 1911,
    "kind": "method",
    "name": "getMinerBaseSpeed",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#getMinerBaseSpeed",
    "access": "public",
    "description": "Miner speed",
    "lineNumber": 489,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} items / sec"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "items / sec"
    },
    "params": []
  },
  {
    "__docId__": 1912,
    "kind": "method",
    "name": "getProcessorBaseSpeed",
    "memberof": "js/game/hub_goals.js~HubGoals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hub_goals.js~HubGoals#getProcessorBaseSpeed",
    "access": "public",
    "description": "Processor speed",
    "lineNumber": 498,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} items / sec"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "enumItemProcessorTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "processorType",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "items / sec"
    }
  },
  {
    "__docId__": 1913,
    "kind": "file",
    "name": "js/game/hud/base_hud_part.js",
    "content": "/* typehints:start */\r\nimport { GameRoot } from \"../root\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\n/* typehints:end */\r\n\r\nimport { ClickDetector } from \"../../core/click_detector\";\r\nimport { KeyActionMapper } from \"../key_action_mapper\";\r\n\r\nexport class BaseHUDPart {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n\r\n        /** @type {Array<ClickDetector>} */\r\n        this.clickDetectors = [];\r\n    }\r\n\r\n    /**\r\n     * Should create all require elements\r\n     * @param {HTMLElement} parent\r\n     */\r\n    createElements(parent) {}\r\n\r\n    /**\r\n     * Should initialize the element, called *after* the elements have been created\r\n     */\r\n    initialize() {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Should update any required logic\r\n     */\r\n    update() {}\r\n\r\n    /**\r\n     * Should draw the hud\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {}\r\n\r\n    /**\r\n     * Should draw any overlays (screen space)\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawOverlays(parameters) {}\r\n\r\n    /**\r\n     * Should return true if the widget has a modal dialog opened and thus\r\n     * the game does not need to update / redraw\r\n     * @returns {boolean}\r\n     */\r\n    shouldPauseRendering() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Should return false if the game should be paused\r\n     * @returns {boolean}\r\n     */\r\n    shouldPauseGame() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Should return true if this overlay is open and currently blocking any user interaction\r\n     */\r\n    isBlockingOverlay() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Cleans up the hud element, if overridden make sure to call super.cleanup\r\n     */\r\n    cleanup() {\r\n        this.cleanupClickDetectors();\r\n    }\r\n\r\n    /**\r\n     * Cleans up all click detectors\r\n     */\r\n    cleanupClickDetectors() {\r\n        if (this.clickDetectors) {\r\n            for (let i = 0; i < this.clickDetectors.length; ++i) {\r\n                this.clickDetectors[i].cleanup();\r\n            }\r\n            this.clickDetectors = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Should close the element, in case its supported\r\n     */\r\n    close() {}\r\n\r\n    // Helpers\r\n\r\n    /**\r\n     * Helper method to construct a new click detector\r\n     * @param {Element} element The element to listen on\r\n     * @param {function} handler The handler to call on this object\r\n     * @param {import(\"../../core/click_detector\").ClickDetectorConstructorArgs=} args Click detector arguments\r\n     *\r\n     */\r\n    trackClicks(element, handler, args = {}) {\r\n        const detector = new ClickDetector(element, args);\r\n        detector.click.add(handler, this);\r\n        this.registerClickDetector(detector);\r\n    }\r\n\r\n    /**\r\n     * Registers a new click detector\r\n     * @param {ClickDetector} detector\r\n     */\r\n    registerClickDetector(detector) {\r\n        this.clickDetectors.push(detector);\r\n        if (G_IS_DEV) {\r\n            // @ts-ignore\r\n            detector._src = \"hud-\" + this.constructor.name;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Closes this element when its background is clicked\r\n     * @param {HTMLElement} element\r\n     * @param {function} closeMethod\r\n     */\r\n    closeOnBackgroundClick(element, closeMethod = null) {\r\n        const bgClickDetector = new ClickDetector(element, {\r\n            preventDefault: true,\r\n            targetOnly: true,\r\n            applyCssClass: null,\r\n            consumeEvents: true,\r\n            clickSound: null,\r\n        });\r\n\r\n        // If the state defines a close method, use that as fallback\r\n        // @ts-ignore\r\n        bgClickDetector.touchend.add(closeMethod || this.close, this);\r\n        this.registerClickDetector(bgClickDetector);\r\n    }\r\n\r\n    /**\r\n     * Forwards the game speed keybindings so you can toggle pause / Fastforward\r\n     * in the building tooltip and such\r\n     * @param {KeyActionMapper} sourceMapper\r\n     */\r\n    forwardGameSpeedKeybindings(sourceMapper) {\r\n        sourceMapper.forward(this.root.keyMapper, [\"gamespeed_pause\", \"gamespeed_fastforward\"]);\r\n    }\r\n\r\n    /**\r\n     * Forwards the map movement keybindings so you can move the map with the\r\n     * arrow keys\r\n     * @param {KeyActionMapper} sourceMapper\r\n     */\r\n    forwardMapMovementKeybindings(sourceMapper) {\r\n        sourceMapper.forward(this.root.keyMapper, [\r\n            \"mapMoveUp\",\r\n            \"mapMoveRight\",\r\n            \"mapMoveDown\",\r\n            \"mapMoveLeft\",\r\n        ]);\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/base_hud_part.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1914,
    "kind": "class",
    "name": "BaseHUDPart",
    "memberof": "js/game/hud/base_hud_part.js",
    "static": true,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/base_hud_part.js",
    "importStyle": "{BaseHUDPart}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 1915,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1916,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#root",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1917,
    "kind": "member",
    "name": "clickDetectors",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#clickDetectors",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "Array<ClickDetector>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1918,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#createElements",
    "access": "public",
    "description": "Should create all require elements",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1919,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#initialize",
    "access": "public",
    "description": "Should initialize the element, called *after* the elements have been created",
    "lineNumber": 29,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1920,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#update",
    "access": "public",
    "description": "Should update any required logic",
    "lineNumber": 36,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1921,
    "kind": "method",
    "name": "draw",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#draw",
    "access": "public",
    "description": "Should draw the hud",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1922,
    "kind": "method",
    "name": "drawOverlays",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#drawOverlays",
    "access": "public",
    "description": "Should draw any overlays (screen space)",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1923,
    "kind": "method",
    "name": "shouldPauseRendering",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#shouldPauseRendering",
    "access": "public",
    "description": "Should return true if the widget has a modal dialog opened and thus\nthe game does not need to update / redraw",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1924,
    "kind": "method",
    "name": "shouldPauseGame",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#shouldPauseGame",
    "access": "public",
    "description": "Should return false if the game should be paused",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1925,
    "kind": "method",
    "name": "isBlockingOverlay",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#isBlockingOverlay",
    "access": "public",
    "description": "Should return true if this overlay is open and currently blocking any user interaction",
    "lineNumber": 70,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1926,
    "kind": "method",
    "name": "cleanup",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#cleanup",
    "access": "public",
    "description": "Cleans up the hud element, if overridden make sure to call super.cleanup",
    "lineNumber": 77,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1927,
    "kind": "method",
    "name": "cleanupClickDetectors",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#cleanupClickDetectors",
    "access": "public",
    "description": "Cleans up all click detectors",
    "lineNumber": 84,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1929,
    "kind": "method",
    "name": "close",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#close",
    "access": "public",
    "description": "Should close the element, in case its supported",
    "lineNumber": 96,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1930,
    "kind": "method",
    "name": "trackClicks",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#trackClicks",
    "access": "public",
    "description": "Helper method to construct a new click detector",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The element to listen on"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "The handler to call on this object"
      },
      {
        "nullable": null,
        "types": [
          "import(\"../../core/click_detector\").ClickDetectorConstructorArgs="
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Click detector arguments"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1931,
    "kind": "method",
    "name": "registerClickDetector",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#registerClickDetector",
    "access": "public",
    "description": "Registers a new click detector",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "ClickDetector"
        ],
        "spread": false,
        "optional": false,
        "name": "detector",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1932,
    "kind": "method",
    "name": "closeOnBackgroundClick",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#closeOnBackgroundClick",
    "access": "public",
    "description": "Closes this element when its background is clicked",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "closeMethod",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1933,
    "kind": "method",
    "name": "forwardGameSpeedKeybindings",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#forwardGameSpeedKeybindings",
    "access": "public",
    "description": "Forwards the game speed keybindings so you can toggle pause / Fastforward\nin the building tooltip and such",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "KeyActionMapper"
        ],
        "spread": false,
        "optional": false,
        "name": "sourceMapper",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1934,
    "kind": "method",
    "name": "forwardMapMovementKeybindings",
    "memberof": "js/game/hud/base_hud_part.js~BaseHUDPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/base_hud_part.js~BaseHUDPart#forwardMapMovementKeybindings",
    "access": "public",
    "description": "Forwards the map movement keybindings so you can move the map with the\narrow keys",
    "lineNumber": 159,
    "params": [
      {
        "nullable": null,
        "types": [
          "KeyActionMapper"
        ],
        "spread": false,
        "optional": false,
        "name": "sourceMapper",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1935,
    "kind": "file",
    "name": "js/game/hud/dynamic_dom_attach.js",
    "content": "import { TrackedState } from \"../../core/tracked_state\";\r\nimport { GameRoot } from \"../root\";\r\n\r\n// Automatically attaches and detaches elements from the dom\r\n// Also supports detaching elements after a given time, useful if there is a\r\n// hide animation like for the tooltips\r\n\r\n// Also attaches a class name if desired\r\n\r\nexport class DynamicDomAttach {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     * @param {HTMLElement} element\r\n     * @param {object} param2\r\n     * @param {number=} param2.timeToKeepSeconds How long to keep the element visible (in ms) after it should be hidden.\r\n     *                                           Useful for fade-out effects\r\n     * @param {string=} param2.attachClass If set, attaches a class while the element is visible\r\n     * @param {boolean=} param2.trackHover If set, attaches the 'hovered' class if the cursor is above the element. Useful\r\n     *                                     for fading out the element if its below the cursor for example.\r\n     */\r\n    constructor(root, element, { timeToKeepSeconds = 0, attachClass = null, trackHover = false } = {}) {\r\n        /** @type {GameRoot} */\r\n        this.root = root;\r\n\r\n        /** @type {HTMLElement} */\r\n        this.element = element;\r\n        this.parent = this.element.parentElement;\r\n        assert(this.parent, \"Dom attach created without parent\");\r\n\r\n        this.attachClass = attachClass;\r\n        this.trackHover = trackHover;\r\n\r\n        this.timeToKeepSeconds = timeToKeepSeconds;\r\n        this.lastVisibleTime = 0;\r\n\r\n        // We start attached, so detach the node first\r\n        this.attached = true;\r\n        this.internalDetach();\r\n\r\n        this.internalIsClassAttached = false;\r\n        this.classAttachTimeout = null;\r\n\r\n        // Store the last bounds we computed\r\n        /** @type {DOMRect} */\r\n        this.lastComputedBounds = null;\r\n        this.lastComputedBoundsTime = -1;\r\n\r\n        // Track the 'hovered' class\r\n        this.trackedIsHovered = new TrackedState(this.setIsHoveredClass, this);\r\n    }\r\n\r\n    /**\r\n     * Internal method to attach the element\r\n     */\r\n    internalAttach() {\r\n        if (!this.attached) {\r\n            this.parent.appendChild(this.element);\r\n            assert(this.element.parentElement === this.parent, \"Invalid parent #1\");\r\n            this.attached = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal method to detach the element\r\n     */\r\n    internalDetach() {\r\n        if (this.attached) {\r\n            assert(this.element.parentElement === this.parent, \"Invalid parent #2\");\r\n            this.element.parentElement.removeChild(this.element);\r\n            this.attached = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether the element is currently attached\r\n     */\r\n    isAttached() {\r\n        return this.attached;\r\n    }\r\n\r\n    /**\r\n     * Actually sets the 'hovered' class\r\n     * @param {boolean} isHovered\r\n     */\r\n    setIsHoveredClass(isHovered) {\r\n        this.element.classList.toggle(\"hovered\", isHovered);\r\n    }\r\n\r\n    /**\r\n     * Call this every frame, and the dom attach class will take care of\r\n     * everything else\r\n     * @param {boolean} isVisible Whether the element should currently be visible or not\r\n     */\r\n    update(isVisible) {\r\n        if (isVisible) {\r\n            this.lastVisibleTime = this.root ? this.root.time.realtimeNow() : 0;\r\n            this.internalAttach();\r\n\r\n            if (this.trackHover && this.root) {\r\n                let bounds = this.lastComputedBounds;\r\n\r\n                // Recompute bounds only once in a while\r\n                if (!bounds || this.root.time.realtimeNow() - this.lastComputedBoundsTime > 1.0) {\r\n                    bounds = this.lastComputedBounds = this.element.getBoundingClientRect();\r\n                    this.lastComputedBoundsTime = this.root.time.realtimeNow();\r\n                }\r\n\r\n                const mousePos = this.root.app.mousePosition;\r\n                if (mousePos) {\r\n                    this.trackedIsHovered.set(\r\n                        mousePos.x > bounds.left &&\r\n                            mousePos.x < bounds.right &&\r\n                            mousePos.y > bounds.top &&\r\n                            mousePos.y < bounds.bottom\r\n                    );\r\n                }\r\n            }\r\n        } else {\r\n            if (!this.root || this.root.time.realtimeNow() - this.lastVisibleTime >= this.timeToKeepSeconds) {\r\n                this.internalDetach();\r\n            }\r\n        }\r\n\r\n        if (this.attachClass && isVisible !== this.internalIsClassAttached) {\r\n            // State changed\r\n            this.internalIsClassAttached = isVisible;\r\n\r\n            if (this.classAttachTimeout) {\r\n                clearTimeout(this.classAttachTimeout);\r\n                this.classAttachTimeout = null;\r\n            }\r\n\r\n            if (isVisible) {\r\n                this.classAttachTimeout = setTimeout(() => {\r\n                    this.element.classList.add(this.attachClass);\r\n                }, 15);\r\n            } else {\r\n                this.element.classList.remove(this.attachClass);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/dynamic_dom_attach.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1936,
    "kind": "class",
    "name": "DynamicDomAttach",
    "memberof": "js/game/hud/dynamic_dom_attach.js",
    "static": true,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/dynamic_dom_attach.js",
    "importStyle": "{DynamicDomAttach}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 1937,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param2",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "param2.timeToKeepSeconds",
        "description": "How long to keep the element visible (in ms) after it should be hidden.\n                                          Useful for fade-out effects"
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "param2.attachClass",
        "description": "If set, attaches a class while the element is visible"
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "param2.trackHover",
        "description": "If set, attaches the 'hovered' class if the cursor is above the element. Useful\n                                    for fading out the element if its below the cursor for example."
      }
    ]
  },
  {
    "__docId__": 1938,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#root",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "GameRoot"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1939,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#element",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1940,
    "kind": "member",
    "name": "parent",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#parent",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1941,
    "kind": "member",
    "name": "attachClass",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#attachClass",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1942,
    "kind": "member",
    "name": "trackHover",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#trackHover",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1943,
    "kind": "member",
    "name": "timeToKeepSeconds",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#timeToKeepSeconds",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1944,
    "kind": "member",
    "name": "lastVisibleTime",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#lastVisibleTime",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1945,
    "kind": "member",
    "name": "attached",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#attached",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1946,
    "kind": "member",
    "name": "internalIsClassAttached",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#internalIsClassAttached",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1947,
    "kind": "member",
    "name": "classAttachTimeout",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#classAttachTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1948,
    "kind": "member",
    "name": "lastComputedBounds",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#lastComputedBounds",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "DOMRect"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1949,
    "kind": "member",
    "name": "lastComputedBoundsTime",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#lastComputedBoundsTime",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1950,
    "kind": "member",
    "name": "trackedIsHovered",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#trackedIsHovered",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1951,
    "kind": "method",
    "name": "internalAttach",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#internalAttach",
    "access": "public",
    "description": "Internal method to attach the element",
    "lineNumber": 56,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1953,
    "kind": "method",
    "name": "internalDetach",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#internalDetach",
    "access": "public",
    "description": "Internal method to detach the element",
    "lineNumber": 67,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1955,
    "kind": "method",
    "name": "isAttached",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#isAttached",
    "access": "public",
    "description": "Returns whether the element is currently attached",
    "lineNumber": 78,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1956,
    "kind": "method",
    "name": "setIsHoveredClass",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#setIsHoveredClass",
    "access": "public",
    "description": "Actually sets the 'hovered' class",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isHovered",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1957,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/dynamic_dom_attach.js~DynamicDomAttach#update",
    "access": "public",
    "description": "Call this every frame, and the dom attach class will take care of\neverything else",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isVisible",
        "description": "Whether the element should currently be visible or not"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1963,
    "kind": "file",
    "name": "js/game/hud/hud.js",
    "content": "/* typehints:start */\r\nimport { GameRoot } from \"../root\";\r\n/* typehints:end */\r\n\r\n/* dev:start */\r\nimport { TrailerMaker } from \"./trailer_maker\";\r\n/* dev:end */\r\n\r\nimport { Signal } from \"../../core/signal\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { HUDBuildingsToolbar } from \"./parts/buildings_toolbar\";\r\nimport { HUDBuildingPlacer } from \"./parts/building_placer\";\r\nimport { HUDBlueprintPlacer } from \"./parts/blueprint_placer\";\r\nimport { HUDKeybindingOverlay } from \"./parts/keybinding_overlay\";\r\nimport { HUDUnlockNotification } from \"./parts/unlock_notification\";\r\nimport { HUDGameMenu } from \"./parts/game_menu\";\r\nimport { HUDShop } from \"./parts/shop\";\r\nimport { IS_MOBILE, globalConfig } from \"../../core/config\";\r\nimport { HUDMassSelector } from \"./parts/mass_selector\";\r\nimport { HUDVignetteOverlay } from \"./parts/vignette_overlay\";\r\nimport { HUDStatistics } from \"./parts/statistics\";\r\nimport { MetaBuilding } from \"../meta_building\";\r\nimport { HUDPinnedShapes } from \"./parts/pinned_shapes\";\r\nimport { ShapeDefinition } from \"../shape_definition\";\r\nimport { HUDNotifications, enumNotificationType } from \"./parts/notifications\";\r\nimport { HUDSettingsMenu } from \"./parts/settings_menu\";\r\nimport { HUDDebugInfo } from \"./parts/debug_info\";\r\nimport { HUDEntityDebugger } from \"./parts/entity_debugger\";\r\nimport { KEYMAPPINGS } from \"../key_action_mapper\";\r\nimport { HUDWatermark } from \"./parts/watermark\";\r\nimport { HUDModalDialogs } from \"./parts/modal_dialogs\";\r\nimport { HUDPartTutorialHints } from \"./parts/tutorial_hints\";\r\nimport { HUDWaypoints } from \"./parts/waypoints\";\r\nimport { HUDInteractiveTutorial } from \"./parts/interactive_tutorial\";\r\nimport { HUDScreenshotExporter } from \"./parts/screenshot_exporter\";\r\nimport { HUDColorBlindHelper } from \"./parts/color_blind_helper\";\r\nimport { HUDShapeViewer } from \"./parts/shape_viewer\";\r\nimport { HUDWiresOverlay } from \"./parts/wires_overlay\";\r\nimport { HUDChangesDebugger } from \"./parts/debug_changes\";\r\nimport { queryParamOptions } from \"../../core/query_parameters\";\r\nimport { HUDSandboxController } from \"./parts/sandbox_controller\";\r\nimport { HUDWiresToolbar } from \"./parts/wires_toolbar\";\r\nimport { HUDWireInfo } from \"./parts/wire_info\";\r\nimport { HUDLeverToggle } from \"./parts/lever_toggle\";\r\nimport { HUDLayerPreview } from \"./parts/layer_preview\";\r\nimport { HUDMinerHighlight } from \"./parts/miner_highlight\";\r\nimport { HUDBetaOverlay } from \"./parts/beta_overlay\";\r\nimport { HUDStandaloneAdvantages } from \"./parts/standalone_advantages\";\r\nimport { HUDCatMemes } from \"./parts/cat_memes\";\r\nimport { HUDTutorialVideoOffer } from \"./parts/tutorial_video_offer\";\r\nimport { HUDConstantSignalEdit } from \"./parts/constant_signal_edit\";\r\n\r\nexport class GameHUD {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n    }\r\n\r\n    /**\r\n     * Initializes the hud parts\r\n     */\r\n    initialize() {\r\n        this.signals = {\r\n            buildingSelectedForPlacement: /** @type {TypedSignal<[MetaBuilding|null]>} */ (new Signal()),\r\n            selectedPlacementBuildingChanged: /** @type {TypedSignal<[MetaBuilding|null]>} */ (new Signal()),\r\n            shapePinRequested: /** @type {TypedSignal<[ShapeDefinition]>} */ (new Signal()),\r\n            shapeUnpinRequested: /** @type {TypedSignal<[string]>} */ (new Signal()),\r\n            notification: /** @type {TypedSignal<[string, enumNotificationType]>} */ (new Signal()),\r\n            buildingsSelectedForCopy: /** @type {TypedSignal<[Array<number>]>} */ (new Signal()),\r\n            pasteBlueprintRequested: /** @type {TypedSignal<[]>} */ (new Signal()),\r\n            viewShapeDetailsRequested: /** @type {TypedSignal<[ShapeDefinition]>} */ (new Signal()),\r\n            unlockNotificationFinished: /** @type {TypedSignal<[]>} */ (new Signal()),\r\n        };\r\n\r\n        this.parts = {\r\n            buildingsToolbar: new HUDBuildingsToolbar(this.root),\r\n            wiresToolbar: new HUDWiresToolbar(this.root),\r\n            layerToolbars: [],\r\n            blueprintPlacer: new HUDBlueprintPlacer(this.root),\r\n            buildingPlacer: new HUDBuildingPlacer(this.root),\r\n            unlockNotification: new HUDUnlockNotification(this.root),\r\n            gameMenu: new HUDGameMenu(this.root),\r\n            massSelector: new HUDMassSelector(this.root),\r\n            shop: new HUDShop(this.root),\r\n            statistics: new HUDStatistics(this.root),\r\n            waypoints: new HUDWaypoints(this.root),\r\n            wireInfo: new HUDWireInfo(this.root),\r\n            leverToggle: new HUDLeverToggle(this.root),\r\n            constantSignalEdit: new HUDConstantSignalEdit(this.root),\r\n\r\n            // Must always exist\r\n            pinnedShapes: new HUDPinnedShapes(this.root),\r\n            notifications: new HUDNotifications(this.root),\r\n            settingsMenu: new HUDSettingsMenu(this.root),\r\n            debugInfo: new HUDDebugInfo(this.root),\r\n            dialogs: new HUDModalDialogs(this.root),\r\n            screenshotExporter: new HUDScreenshotExporter(this.root),\r\n            shapeViewer: new HUDShapeViewer(this.root),\r\n\r\n            wiresOverlay: new HUDWiresOverlay(this.root),\r\n            layerPreview: new HUDLayerPreview(this.root),\r\n\r\n            minerHighlight: new HUDMinerHighlight(this.root),\r\n            tutorialVideoOffer: new HUDTutorialVideoOffer(this.root),\r\n\r\n            // Typing hints\r\n            /* typehints:start */\r\n            /** @type {HUDChangesDebugger} */\r\n            changesDebugger: null,\r\n            /* typehints:end */\r\n        };\r\n\r\n        for (let i = 0; i < shapezAPI.ingame.layers.length; i++) {\r\n            const layer = shapezAPI.ingame.layers[i];\r\n            if (shapezAPI.toolbars[layer])\r\n                this.parts.layerToolbars.push(new shapezAPI.toolbars[layer](this.root));\r\n        }\r\n\r\n        if (!IS_MOBILE) {\r\n            this.parts.keybindingOverlay = new HUDKeybindingOverlay(this.root);\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.enableEntityInspector) {\r\n            this.parts.entityDebugger = new HUDEntityDebugger(this.root);\r\n        }\r\n\r\n        if (this.root.app.restrictionMgr.getIsStandaloneMarketingActive()) {\r\n            this.parts.watermark = new HUDWatermark(this.root);\r\n            this.parts.standaloneAdvantages = new HUDStandaloneAdvantages(this.root);\r\n            this.parts.catMemes = new HUDCatMemes(this.root);\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.renderChanges) {\r\n            this.parts.changesDebugger = new HUDChangesDebugger(this.root);\r\n        }\r\n\r\n        if (this.root.app.settings.getAllSettings().offerHints) {\r\n            this.parts.tutorialHints = new HUDPartTutorialHints(this.root);\r\n            this.parts.interactiveTutorial = new HUDInteractiveTutorial(this.root);\r\n        }\r\n\r\n        if (this.root.app.settings.getAllSettings().vignette) {\r\n            this.parts.vignetteOverlay = new HUDVignetteOverlay(this.root);\r\n        }\r\n\r\n        if (this.root.app.settings.getAllSettings().enableColorBlindHelper) {\r\n            this.parts.colorBlindHelper = new HUDColorBlindHelper(this.root);\r\n        }\r\n\r\n        if (queryParamOptions.sandboxMode || G_IS_DEV) {\r\n            this.parts.sandboxController = new HUDSandboxController(this.root);\r\n        }\r\n\r\n        if (!G_IS_RELEASE && !G_IS_DEV) {\r\n            this.parts.betaOverlay = new HUDBetaOverlay(this.root);\r\n        }\r\n\r\n        const frag = document.createDocumentFragment();\r\n        for (const key in this.parts) {\r\n            if (Array.isArray(this.parts[key])) {\r\n                for (let i = 0; i < this.parts[key].length; i++) {\r\n                    this.parts[key][i].createElements(frag);\r\n                }\r\n            } else {\r\n                this.parts[key].createElements(frag);\r\n            }\r\n        }\r\n\r\n        document.body.appendChild(frag);\r\n\r\n        for (const key in this.parts) {\r\n            if (Array.isArray(this.parts[key])) {\r\n                for (let i = 0; i < this.parts[key].length; i++) {\r\n                    this.parts[key][i].initialize();\r\n                }\r\n            } else {\r\n                this.parts[key].initialize();\r\n            }\r\n        }\r\n\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.ingame.toggleHud).add(this.toggleUi, this);\r\n\r\n        /* dev:start */\r\n        if (G_IS_DEV && globalConfig.debug.renderForTrailer) {\r\n            this.trailerMaker = new TrailerMaker(this.root);\r\n        }\r\n        /* dev:end*/\r\n    }\r\n\r\n    /**\r\n     * Attempts to close all overlays\r\n     */\r\n    closeAllOverlays() {\r\n        for (const key in this.parts) {\r\n            this.parts[key].close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if the game logic should be paused\r\n     */\r\n    shouldPauseGame() {\r\n        for (const key in this.parts) {\r\n            if (Array.isArray(this.parts[key])) {\r\n                for (let i = 0; i < this.parts[key].length; i++) {\r\n                    if (this.parts[key][i].shouldPauseGame()) {\r\n                        return true;\r\n                    }\r\n                }\r\n            } else {\r\n                if (this.parts[key].shouldPauseGame()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the rendering can be paused\r\n     */\r\n    shouldPauseRendering() {\r\n        for (const key in this.parts) {\r\n            if (Array.isArray(this.parts[key])) {\r\n                for (let i = 0; i < this.parts[key].length; i++) {\r\n                    if (this.parts[key][i].shouldPauseRendering()) {\r\n                        return true;\r\n                    }\r\n                }\r\n            } else {\r\n                if (this.parts[key].shouldPauseRendering()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the rendering can be paused\r\n     */\r\n    hasBlockingOverlayOpen() {\r\n        for (const key in this.parts) {\r\n            if (Array.isArray(this.parts[key])) {\r\n                for (let i = 0; i < this.parts[key].length; i++) {\r\n                    if (this.parts[key][i].isBlockingOverlay()) {\r\n                        return true;\r\n                    }\r\n                }\r\n            } else {\r\n                if (this.parts[key].isBlockingOverlay()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Toggles the ui\r\n     */\r\n    toggleUi() {\r\n        document.body.classList.toggle(\"uiHidden\");\r\n    }\r\n\r\n    /**\r\n     * Updates all parts\r\n     */\r\n    update() {\r\n        if (!this.root.gameInitialized) {\r\n            return;\r\n        }\r\n        for (const key in this.parts) {\r\n            if (Array.isArray(this.parts[key])) {\r\n                for (let i = 0; i < this.parts[key].length; i++) {\r\n                    this.parts[key][i].update();\r\n                }\r\n            } else {\r\n                this.parts[key].update();\r\n            }\r\n        }\r\n\r\n        /* dev:start */\r\n        if (this.trailerMaker) {\r\n            this.trailerMaker.update();\r\n        }\r\n        /* dev:end*/\r\n    }\r\n\r\n    /**\r\n     * Draws all parts\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        const partsOrder = [\r\n            \"massSelector\",\r\n            \"buildingPlacer\",\r\n            \"blueprintPlacer\",\r\n            \"colorBlindHelper\",\r\n            \"changesDebugger\",\r\n            \"minerHighlight\",\r\n        ];\r\n\r\n        for (let i = 0; i < partsOrder.length; ++i) {\r\n            if (this.parts[partsOrder[i]]) {\r\n                this.parts[partsOrder[i]].draw(parameters);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws all part overlays\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawOverlays(parameters) {\r\n        const partsOrder = [\"waypoints\", \"watermark\", \"wireInfo\"];\r\n\r\n        for (let i = 0; i < partsOrder.length; ++i) {\r\n            if (this.parts[partsOrder[i]]) {\r\n                this.parts[partsOrder[i]].drawOverlays(parameters);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cleans up everything\r\n     */\r\n    cleanup() {\r\n        for (const key in this.parts) {\r\n            if (Array.isArray(this.parts[key])) {\r\n                for (let i = 0; i < this.parts[key].length; i++) {\r\n                    this.parts[key][i].cleanup();\r\n                }\r\n            } else {\r\n                this.parts[key].cleanup();\r\n            }\r\n        }\r\n\r\n        for (const key in this.signals) {\r\n            this.signals[key].removeAll();\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/hud.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1964,
    "kind": "class",
    "name": "GameHUD",
    "memberof": "js/game/hud/hud.js",
    "static": true,
    "longname": "js/game/hud/hud.js~GameHUD",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/hud.js",
    "importStyle": "{GameHUD}",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 1965,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1966,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#root",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1967,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#initialize",
    "access": "public",
    "description": "Initializes the hud parts",
    "lineNumber": 64,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1968,
    "kind": "member",
    "name": "signals",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#signals",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "{\"buildingSelectedForPlacement\": *, \"selectedPlacementBuildingChanged\": *, \"shapePinRequested\": *, \"shapeUnpinRequested\": *, \"notification\": *, \"buildingsSelectedForCopy\": *, \"pasteBlueprintRequested\": *, \"viewShapeDetailsRequested\": *, \"unlockNotificationFinished\": *}"
      ]
    }
  },
  {
    "__docId__": 1969,
    "kind": "member",
    "name": "parts",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#parts",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "{\"buildingsToolbar\": *, \"wiresToolbar\": *, \"layerToolbars\": *, \"blueprintPlacer\": *, \"buildingPlacer\": *, \"unlockNotification\": *, \"gameMenu\": *, \"massSelector\": *, \"shop\": *, \"statistics\": *, \"waypoints\": *, \"wireInfo\": *, \"leverToggle\": *, \"constantSignalEdit\": *, \"pinnedShapes\": *, \"notifications\": *, \"settingsMenu\": *, \"debugInfo\": *, \"dialogs\": *, \"screenshotExporter\": *, \"shapeViewer\": *, \"wiresOverlay\": *, \"layerPreview\": *, \"minerHighlight\": *, \"tutorialVideoOffer\": *, \"changesDebugger\": *}"
      ]
    }
  },
  {
    "__docId__": 1970,
    "kind": "member",
    "name": "trailerMaker",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#trailerMaker",
    "access": "public",
    "description": null,
    "lineNumber": 187,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1971,
    "kind": "method",
    "name": "closeAllOverlays",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#closeAllOverlays",
    "access": "public",
    "description": "Attempts to close all overlays",
    "lineNumber": 195,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1972,
    "kind": "method",
    "name": "shouldPauseGame",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#shouldPauseGame",
    "access": "public",
    "description": "Returns true if the game logic should be paused",
    "lineNumber": 204,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1973,
    "kind": "method",
    "name": "shouldPauseRendering",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#shouldPauseRendering",
    "access": "public",
    "description": "Returns true if the rendering can be paused",
    "lineNumber": 224,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1974,
    "kind": "method",
    "name": "hasBlockingOverlayOpen",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#hasBlockingOverlayOpen",
    "access": "public",
    "description": "Returns true if the rendering can be paused",
    "lineNumber": 244,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1975,
    "kind": "method",
    "name": "toggleUi",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#toggleUi",
    "access": "public",
    "description": "Toggles the ui",
    "lineNumber": 264,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1976,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#update",
    "access": "public",
    "description": "Updates all parts",
    "lineNumber": 271,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1977,
    "kind": "method",
    "name": "draw",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#draw",
    "access": "public",
    "description": "Draws all parts",
    "lineNumber": 296,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1978,
    "kind": "method",
    "name": "drawOverlays",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#drawOverlays",
    "access": "public",
    "description": "Draws all part overlays",
    "lineNumber": 317,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1979,
    "kind": "method",
    "name": "cleanup",
    "memberof": "js/game/hud/hud.js~GameHUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/hud.js~GameHUD#cleanup",
    "access": "public",
    "description": "Cleans up everything",
    "lineNumber": 330,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1980,
    "kind": "file",
    "name": "js/game/hud/parts/base_toolbar.js",
    "content": "import { gMetaBuildingRegistry } from \"../../../core/global_registries\";\r\nimport { STOP_PROPAGATION } from \"../../../core/signal\";\r\nimport { makeDiv, safeModulo } from \"../../../core/utils\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { MetaBuilding } from \"../../meta_building\";\r\nimport { GameRoot } from \"../../root\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\n\r\nexport class HUDBaseToolbar extends BaseHUDPart {\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {object} param0\r\n     * @param {Array<typeof MetaBuilding>} param0.primaryBuildings\r\n     * @param {Array<typeof MetaBuilding>=} param0.secondaryBuildings\r\n     * @param {function} param0.visibilityCondition\r\n     * @param {string} param0.htmlElementId\r\n     * @param {Layer=} param0.layer\r\n     */\r\n    constructor(\r\n        root, { primaryBuildings, secondaryBuildings = [], visibilityCondition, htmlElementId, layer = \"regular\" }\r\n    ) {\r\n        super(root);\r\n\r\n        this.primaryBuildings = primaryBuildings;\r\n        this.secondaryBuildings = secondaryBuildings;\r\n        this.visibilityCondition = visibilityCondition;\r\n        this.htmlElementId = htmlElementId;\r\n        this.layer = layer;\r\n\r\n        /** @type {Object.<string, {\r\n         * metaBuilding: MetaBuilding,\r\n         * unlocked: boolean,\r\n         * selected: boolean,\r\n         * element: HTMLElement,\r\n         * index: number\r\n         * }>} */\r\n        this.buildingHandles = {};\r\n    }\r\n\r\n    /**\r\n     * Should create all require elements\r\n     * @param {HTMLElement} parent\r\n     */\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, this.htmlElementId, [\"ingame_buildingsToolbar\"], \"\");\r\n    }\r\n\r\n    /**\r\n     * Returns all buildings\r\n     * @returns {Array<typeof MetaBuilding>}\r\n     */\r\n    get allBuildings() {\r\n        return [...this.primaryBuildings, ...this.secondaryBuildings];\r\n    }\r\n\r\n    initialize() {\r\n        const actionMapper = this.root.keyMapper;\r\n        let rowSecondary;\r\n        if (this.secondaryBuildings.length > 0) {\r\n            rowSecondary = makeDiv(this.element, null, [\"buildings\", \"secondary\"]);\r\n\r\n            this.secondaryDomAttach = new DynamicDomAttach(this.root, rowSecondary, {\r\n                attachClass: \"visible\",\r\n            });\r\n        }\r\n\r\n        const rowPrimary = makeDiv(this.element, null, [\"buildings\", \"primary\"]);\r\n\r\n        const allBuildings = this.allBuildings;\r\n\r\n        for (let i = 0; i < allBuildings.length; ++i) {\r\n            const metaBuilding = gMetaBuildingRegistry.findByClass(allBuildings[i]);\r\n\r\n            let rawBinding = KEYMAPPINGS.buildings[metaBuilding.getId() + \"_\" + this.layer];\r\n            if (!rawBinding) {\r\n                rawBinding = KEYMAPPINGS.buildings[metaBuilding.getId()];\r\n            }\r\n\r\n            const binding = actionMapper.getBinding(rawBinding);\r\n\r\n            const itemContainer = makeDiv(\r\n                this.primaryBuildings.includes(allBuildings[i]) ? rowPrimary : rowSecondary,\r\n                null, [\"building\"]\r\n            );\r\n            itemContainer.setAttribute(\"data-icon\", \"building_icons/\" + metaBuilding.getId() + \".png\");\r\n            itemContainer.setAttribute(\"data-id\", metaBuilding.getId());\r\n\r\n            binding.add(() => this.selectBuildingForPlacement(metaBuilding));\r\n\r\n            this.trackClicks(itemContainer, () => this.selectBuildingForPlacement(metaBuilding), {\r\n                clickSound: null,\r\n            });\r\n\r\n            this.buildingHandles[metaBuilding.id] = {\r\n                metaBuilding,\r\n                element: itemContainer,\r\n                unlocked: false,\r\n                selected: false,\r\n                index: i,\r\n            };\r\n        }\r\n\r\n        this.root.hud.signals.selectedPlacementBuildingChanged.add(\r\n            this.onSelectedPlacementBuildingChanged,\r\n            this\r\n        );\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element, {\r\n            timeToKeepSeconds: 0.12,\r\n            attachClass: \"visible\",\r\n        });\r\n        this.lastSelectedIndex = 0;\r\n        actionMapper.getBinding(KEYMAPPINGS.placement.cycleBuildings).add(this.cycleBuildings, this);\r\n    }\r\n\r\n    /**\r\n     * Updates the toolbar\r\n     */\r\n    update() {\r\n        const visible = this.visibilityCondition();\r\n        this.domAttach.update(visible);\r\n\r\n        if (visible) {\r\n            let recomputeSecondaryToolbarVisibility = false;\r\n            for (const buildingId in this.buildingHandles) {\r\n                const handle = this.buildingHandles[buildingId];\r\n                const newStatus = handle.metaBuilding.getIsUnlocked(this.root);\r\n                if (handle.unlocked !== newStatus) {\r\n                    handle.unlocked = newStatus;\r\n                    handle.element.classList.toggle(\"unlocked\", newStatus);\r\n                    recomputeSecondaryToolbarVisibility = true;\r\n                }\r\n            }\r\n\r\n            if (recomputeSecondaryToolbarVisibility && this.secondaryDomAttach) {\r\n                let anyUnlocked = false;\r\n                for (let i = 0; i < this.secondaryBuildings.length; ++i) {\r\n                    const metaClass = gMetaBuildingRegistry.findByClass(this.secondaryBuildings[i]);\r\n                    if (metaClass.getIsUnlocked(this.root)) {\r\n                        anyUnlocked = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.secondaryDomAttach.update(anyUnlocked);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cycles through all buildings\r\n     */\r\n    cycleBuildings() {\r\n        const visible = this.visibilityCondition();\r\n        if (!visible) {\r\n            return;\r\n        }\r\n\r\n        let newBuildingFound = false;\r\n        let newIndex = this.lastSelectedIndex;\r\n        const direction = this.root.keyMapper.getBinding(KEYMAPPINGS.placement.rotateInverseModifier).pressed ?\r\n            -1 :\r\n            1;\r\n\r\n        for (let i = 0; i <= this.primaryBuildings.length; ++i) {\r\n            newIndex = safeModulo(newIndex + direction, this.primaryBuildings.length);\r\n            const metaBuilding = gMetaBuildingRegistry.findByClass(this.primaryBuildings[newIndex]);\r\n            const handle = this.buildingHandles[metaBuilding.id];\r\n            if (!handle.selected && handle.unlocked) {\r\n                newBuildingFound = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!newBuildingFound) {\r\n            return;\r\n        }\r\n        const metaBuildingClass = this.primaryBuildings[newIndex];\r\n        const metaBuilding = gMetaBuildingRegistry.findByClass(metaBuildingClass);\r\n        this.selectBuildingForPlacement(metaBuilding);\r\n    }\r\n\r\n    /**\r\n     * Called when the selected building got changed\r\n     * @param {MetaBuilding} metaBuilding\r\n     */\r\n    onSelectedPlacementBuildingChanged(metaBuilding) {\r\n        for (const buildingId in this.buildingHandles) {\r\n            const handle = this.buildingHandles[buildingId];\r\n            const newStatus = handle.metaBuilding === metaBuilding;\r\n            if (handle.selected !== newStatus) {\r\n                handle.selected = newStatus;\r\n                handle.element.classList.toggle(\"selected\", newStatus);\r\n            }\r\n            if (handle.selected) {\r\n                this.lastSelectedIndex = handle.index;\r\n            }\r\n        }\r\n\r\n        this.element.classList.toggle(\"buildingSelected\", !!metaBuilding);\r\n    }\r\n\r\n    /**\r\n     * @param {MetaBuilding} metaBuilding\r\n     */\r\n    selectBuildingForPlacement(metaBuilding) {\r\n        if (!this.visibilityCondition()) {\r\n            // Not active\r\n            return;\r\n        }\r\n\r\n        if (!metaBuilding.getIsUnlocked(this.root)) {\r\n            this.root.soundProxy.playUiError();\r\n            return STOP_PROPAGATION;\r\n        }\r\n\r\n        // Allow clicking an item again to deselect it\r\n        for (const buildingId in this.buildingHandles) {\r\n            const handle = this.buildingHandles[buildingId];\r\n            if (handle.selected && handle.metaBuilding === metaBuilding) {\r\n                metaBuilding = null;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.root.soundProxy.playUiClick();\r\n        this.root.hud.signals.buildingSelectedForPlacement.dispatch(metaBuilding);\r\n        this.onSelectedPlacementBuildingChanged(metaBuilding);\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/base_toolbar.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1981,
    "kind": "class",
    "name": "HUDBaseToolbar",
    "memberof": "js/game/hud/parts/base_toolbar.js",
    "static": true,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/base_toolbar.js",
    "importStyle": "{HUDBaseToolbar}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 1982,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<typeof MetaBuilding>"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.primaryBuildings",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<typeof MetaBuilding>="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.secondaryBuildings",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.visibilityCondition",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.htmlElementId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Layer="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.layer",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1983,
    "kind": "member",
    "name": "primaryBuildings",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#primaryBuildings",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1984,
    "kind": "member",
    "name": "secondaryBuildings",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#secondaryBuildings",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1985,
    "kind": "member",
    "name": "visibilityCondition",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#visibilityCondition",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1986,
    "kind": "member",
    "name": "htmlElementId",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#htmlElementId",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1987,
    "kind": "member",
    "name": "layer",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#layer",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1988,
    "kind": "member",
    "name": "buildingHandles",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#buildingHandles",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "Object.<string, {\nmetaBuilding: MetaBuilding,\nunlocked: boolean,\nselected: boolean,\nelement: HTMLElement,\nindex: number\n}>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1989,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#createElements",
    "access": "public",
    "description": "Should create all require elements",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 1990,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#element",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1991,
    "kind": "get",
    "name": "allBuildings",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#allBuildings",
    "access": "public",
    "description": "Returns all buildings",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<typeof MetaBuilding>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<typeof MetaBuilding>"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 1992,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1993,
    "kind": "member",
    "name": "secondaryDomAttach",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#secondaryDomAttach",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1994,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1995,
    "kind": "member",
    "name": "lastSelectedIndex",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#lastSelectedIndex",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1996,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#update",
    "access": "public",
    "description": "Updates the toolbar",
    "lineNumber": 120,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1997,
    "kind": "method",
    "name": "cycleBuildings",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#cycleBuildings",
    "access": "public",
    "description": "Cycles through all buildings",
    "lineNumber": 154,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1998,
    "kind": "method",
    "name": "onSelectedPlacementBuildingChanged",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#onSelectedPlacementBuildingChanged",
    "access": "public",
    "description": "Called when the selected building got changed",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "MetaBuilding"
        ],
        "spread": false,
        "optional": false,
        "name": "metaBuilding",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2000,
    "kind": "method",
    "name": "selectBuildingForPlacement",
    "memberof": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar#selectBuildingForPlacement",
    "access": "public",
    "description": "",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "MetaBuilding"
        ],
        "spread": false,
        "optional": false,
        "name": "metaBuilding",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2001,
    "kind": "file",
    "name": "js/game/hud/parts/beta_overlay.js",
    "content": "import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\n\r\nexport class HUDBetaOverlay extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(\r\n            parent,\r\n            \"ingame_HUD_BetaOverlay\",\r\n            [],\r\n            \"<h2>UNSTABLE BETA VERSION</h2><span>Unfinalized & potential buggy content!</span>\"\r\n        );\r\n    }\r\n\r\n    initialize() {}\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/beta_overlay.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2002,
    "kind": "class",
    "name": "HUDBetaOverlay",
    "memberof": "js/game/hud/parts/beta_overlay.js",
    "static": true,
    "longname": "js/game/hud/parts/beta_overlay.js~HUDBetaOverlay",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/beta_overlay.js",
    "importStyle": "{HUDBetaOverlay}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2003,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/beta_overlay.js~HUDBetaOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/beta_overlay.js~HUDBetaOverlay#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2004,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/beta_overlay.js~HUDBetaOverlay",
    "static": false,
    "longname": "js/game/hud/parts/beta_overlay.js~HUDBetaOverlay#element",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2005,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/beta_overlay.js~HUDBetaOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/beta_overlay.js~HUDBetaOverlay#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2006,
    "kind": "file",
    "name": "js/game/hud/parts/blueprint_placer.js",
    "content": "import { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { STOP_PROPAGATION } from \"../../../core/signal\";\r\nimport { TrackedState } from \"../../../core/tracked_state\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { SOUNDS } from \"../../../platform/sound\";\r\nimport { T } from \"../../../translations\";\r\nimport { Blueprint } from \"../../blueprint\";\r\nimport { enumMouseButton } from \"../../camera\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\n\r\nexport class HUDBlueprintPlacer extends BaseHUDPart {\r\n    createElements(parent) {\r\n        const blueprintCostShape = this.root.shapeDefinitionMgr.getShapeFromShortKey(\r\n            this.root.gameMode.getBlueprintShapeKey()\r\n        );\r\n        const blueprintCostShapeCanvas = blueprintCostShape.generateAsCanvas(80);\r\n\r\n        this.costDisplayParent = makeDiv(parent, \"ingame_HUD_BlueprintPlacer\", [], ``);\r\n\r\n        makeDiv(this.costDisplayParent, null, [\"label\"], T.ingame.blueprintPlacer.cost);\r\n        const costContainer = makeDiv(this.costDisplayParent, null, [\"costContainer\"], \"\");\r\n        this.costDisplayText = makeDiv(costContainer, null, [\"costText\"], \"\");\r\n        costContainer.appendChild(blueprintCostShapeCanvas);\r\n    }\r\n\r\n    initialize() {\r\n        this.root.hud.signals.buildingsSelectedForCopy.add(this.createBlueprintFromBuildings, this);\r\n\r\n        /** @type {TypedTrackedState<Blueprint?>} */\r\n        this.currentBlueprint = new TrackedState(this.onBlueprintChanged, this);\r\n        /** @type {Blueprint?} */\r\n        this.lastBlueprintUsed = null;\r\n\r\n        const keyActionMapper = this.root.keyMapper;\r\n        keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.abortPlacement, this);\r\n        keyActionMapper.getBinding(KEYMAPPINGS.placement.pipette).add(this.abortPlacement, this);\r\n        keyActionMapper.getBinding(KEYMAPPINGS.placement.rotateWhilePlacing).add(this.rotateBlueprint, this);\r\n        keyActionMapper.getBinding(KEYMAPPINGS.massSelect.pasteLastBlueprint).add(this.pasteBlueprint, this);\r\n\r\n        this.root.camera.downPreHandler.add(this.onMouseDown, this);\r\n        this.root.camera.movePreHandler.add(this.onMouseMove, this);\r\n\r\n        this.root.hud.signals.selectedPlacementBuildingChanged.add(this.abortPlacement, this);\r\n        this.root.signals.editModeChanged.add(this.onEditModeChanged, this);\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.costDisplayParent);\r\n        this.trackedCanAfford = new TrackedState(this.onCanAffordChanged, this);\r\n    }\r\n\r\n    abortPlacement() {\r\n        if (this.currentBlueprint.get()) {\r\n            this.currentBlueprint.set(null);\r\n\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when the layer was changed\r\n     * @param {Layer} layer\r\n     */\r\n    onEditModeChanged(layer) {\r\n        // Check if the layer of the blueprint differs and thus we have to deselect it\r\n        const blueprint = this.currentBlueprint.get();\r\n        if (blueprint) {\r\n            if (blueprint.layer !== layer) {\r\n                this.currentBlueprint.set(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when the blueprint is now affordable or not\r\n     * @param {boolean} canAfford\r\n     */\r\n    onCanAffordChanged(canAfford) {\r\n        this.costDisplayParent.classList.toggle(\"canAfford\", canAfford);\r\n    }\r\n\r\n    update() {\r\n        const currentBlueprint = this.currentBlueprint.get();\r\n        this.domAttach.update(currentBlueprint && currentBlueprint.getCost() > 0);\r\n        this.trackedCanAfford.set(currentBlueprint && currentBlueprint.canAfford(this.root));\r\n    }\r\n\r\n    /**\r\n     * Called when the blueprint was changed\r\n     * @param {Blueprint} blueprint\r\n     */\r\n    onBlueprintChanged(blueprint) {\r\n        if (blueprint) {\r\n            this.lastBlueprintUsed = blueprint;\r\n            this.costDisplayText.innerText = \"\" + blueprint.getCost();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * mouse down pre handler\r\n     * @param {Vector} pos\r\n     * @param {enumMouseButton} button\r\n     */\r\n    onMouseDown(pos, button) {\r\n        if (button === enumMouseButton.right) {\r\n            if (this.currentBlueprint.get()) {\r\n                this.abortPlacement();\r\n                return STOP_PROPAGATION;\r\n            }\r\n        } else if (button === enumMouseButton.left) {\r\n            const blueprint = this.currentBlueprint.get();\r\n            if (!blueprint) {\r\n                return;\r\n            }\r\n\r\n            if (!blueprint.canAfford(this.root)) {\r\n                this.root.soundProxy.playUiError();\r\n                return;\r\n            }\r\n\r\n            const worldPos = this.root.camera.screenToWorld(pos);\r\n            const tile = worldPos.toTileSpace();\r\n            if (blueprint.tryPlace(this.root, tile)) {\r\n                const cost = blueprint.getCost();\r\n                this.root.hubGoals.takeShapeByKey(this.root.gameMode.getBlueprintShapeKey(), cost);\r\n                this.root.soundProxy.playUi(SOUNDS.placeBuilding);\r\n            }\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mose move handler\r\n     */\r\n    onMouseMove() {\r\n        // Prevent movement while blueprint is selected\r\n        if (this.currentBlueprint.get()) {\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when an array of bulidings was selected\r\n     * @param {Array<number>} uids\r\n     */\r\n    createBlueprintFromBuildings(uids) {\r\n        if (uids.length === 0) {\r\n            return;\r\n        }\r\n        this.currentBlueprint.set(Blueprint.fromUids(this.root, uids));\r\n    }\r\n\r\n    /**\r\n     * Attempts to rotate the current blueprint\r\n     */\r\n    rotateBlueprint() {\r\n        if (this.currentBlueprint.get()) {\r\n            if (this.root.keyMapper.getBinding(KEYMAPPINGS.placement.rotateInverseModifier).pressed) {\r\n                this.currentBlueprint.get().rotateCcw();\r\n            } else {\r\n                this.currentBlueprint.get().rotateCw();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attempts to paste the last blueprint\r\n     */\r\n    pasteBlueprint() {\r\n        if (this.lastBlueprintUsed !== null) {\r\n            if (this.lastBlueprintUsed.layer !== this.root.currentLayer) {\r\n                // Not compatible\r\n                this.root.soundProxy.playUiError();\r\n                return;\r\n            }\r\n\r\n            this.root.hud.signals.pasteBlueprintRequested.dispatch();\r\n            this.currentBlueprint.set(this.lastBlueprintUsed);\r\n        } else {\r\n            this.root.soundProxy.playUiError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        const blueprint = this.currentBlueprint.get();\r\n        if (!blueprint) {\r\n            return;\r\n        }\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return;\r\n        }\r\n\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        const tile = worldPos.toTileSpace();\r\n        blueprint.draw(parameters, tile);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/blueprint_placer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2007,
    "kind": "class",
    "name": "HUDBlueprintPlacer",
    "memberof": "js/game/hud/parts/blueprint_placer.js",
    "static": true,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/blueprint_placer.js",
    "importStyle": "{HUDBlueprintPlacer}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2008,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2009,
    "kind": "member",
    "name": "costDisplayParent",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#costDisplayParent",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2010,
    "kind": "member",
    "name": "costDisplayText",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#costDisplayText",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2011,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2012,
    "kind": "member",
    "name": "currentBlueprint",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#currentBlueprint",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "TypedTrackedState<Blueprint?>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2013,
    "kind": "member",
    "name": "lastBlueprintUsed",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#lastBlueprintUsed",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "Blueprint?"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2014,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2015,
    "kind": "member",
    "name": "trackedCanAfford",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#trackedCanAfford",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2016,
    "kind": "method",
    "name": "abortPlacement",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#abortPlacement",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2017,
    "kind": "method",
    "name": "onEditModeChanged",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#onEditModeChanged",
    "access": "public",
    "description": "Called when the layer was changed",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2018,
    "kind": "method",
    "name": "onCanAffordChanged",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#onCanAffordChanged",
    "access": "public",
    "description": "Called when the blueprint is now affordable or not",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "canAfford",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2019,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#update",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2020,
    "kind": "method",
    "name": "onBlueprintChanged",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#onBlueprintChanged",
    "access": "public",
    "description": "Called when the blueprint was changed",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "Blueprint"
        ],
        "spread": false,
        "optional": false,
        "name": "blueprint",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2022,
    "kind": "method",
    "name": "onMouseDown",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#onMouseDown",
    "access": "public",
    "description": "mouse down pre handler",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumMouseButton"
        ],
        "spread": false,
        "optional": false,
        "name": "button",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2023,
    "kind": "method",
    "name": "onMouseMove",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#onMouseMove",
    "access": "public",
    "description": "Mose move handler",
    "lineNumber": 136,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2024,
    "kind": "method",
    "name": "createBlueprintFromBuildings",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#createBlueprintFromBuildings",
    "access": "public",
    "description": "Called when an array of bulidings was selected",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<number>"
        ],
        "spread": false,
        "optional": false,
        "name": "uids",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2025,
    "kind": "method",
    "name": "rotateBlueprint",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#rotateBlueprint",
    "access": "public",
    "description": "Attempts to rotate the current blueprint",
    "lineNumber": 157,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2026,
    "kind": "method",
    "name": "pasteBlueprint",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#pasteBlueprint",
    "access": "public",
    "description": "Attempts to paste the last blueprint",
    "lineNumber": 170,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2027,
    "kind": "method",
    "name": "draw",
    "memberof": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/blueprint_placer.js~HUDBlueprintPlacer#draw",
    "access": "public",
    "description": "",
    "lineNumber": 189,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2028,
    "kind": "file",
    "name": "js/game/hud/parts/buildings_toolbar.js",
    "content": "import { MetaBeltBuilding } from \"../../buildings/belt\";\r\nimport { MetaCutterBuilding } from \"../../buildings/cutter\";\r\nimport { MetaDisplayBuilding } from \"../../buildings/display\";\r\nimport { MetaFilterBuilding } from \"../../buildings/filter\";\r\nimport { MetaLeverBuilding } from \"../../buildings/lever\";\r\nimport { MetaMinerBuilding } from \"../../buildings/miner\";\r\nimport { MetaMixerBuilding } from \"../../buildings/mixer\";\r\nimport { MetaPainterBuilding } from \"../../buildings/painter\";\r\nimport { MetaReaderBuilding } from \"../../buildings/reader\";\r\nimport { MetaRotaterBuilding } from \"../../buildings/rotater\";\r\nimport { MetaBalancerBuilding } from \"../../buildings/balancer\";\r\nimport { MetaStackerBuilding } from \"../../buildings/stacker\";\r\nimport { MetaTrashBuilding } from \"../../buildings/trash\";\r\nimport { MetaUndergroundBeltBuilding } from \"../../buildings/underground_belt\";\r\nimport { HUDBaseToolbar } from \"./base_toolbar\";\r\nimport { MetaStorageBuilding } from \"../../buildings/storage\";\r\nimport { MetaItemProducerBuilding } from \"../../buildings/item_producer\";\r\nimport { queryParamOptions } from \"../../../core/query_parameters\";\r\n\r\nexport class HUDBuildingsToolbar extends HUDBaseToolbar {\r\n    constructor(root) {\r\n        super(root, {\r\n            primaryBuildings: HUDBuildingsToolbar.bar.primaryBuildings,\r\n            secondaryBuildings: HUDBuildingsToolbar.bar.secondaryBuildings,\r\n            visibilityCondition: () =>\r\n                !root.camera.getIsMapOverlayActive() && root.currentLayer === \"regular\",\r\n            htmlElementId: HUDBuildingsToolbar.bar.htmlElementId,\r\n        });\r\n    }\r\n}\r\n\r\nHUDBuildingsToolbar.bar = {\r\n    primaryBuildings: [\r\n        MetaBeltBuilding,\r\n        MetaBalancerBuilding,\r\n        MetaUndergroundBeltBuilding,\r\n        MetaMinerBuilding,\r\n        MetaCutterBuilding,\r\n        MetaRotaterBuilding,\r\n        MetaStackerBuilding,\r\n        MetaMixerBuilding,\r\n        MetaPainterBuilding,\r\n        MetaTrashBuilding,\r\n        ...(queryParamOptions.sandboxMode || G_IS_DEV ? [MetaItemProducerBuilding] : []),\r\n    ],\r\n\r\n    secondaryBuildings: [\r\n        MetaStorageBuilding,\r\n        MetaReaderBuilding,\r\n        MetaLeverBuilding,\r\n        MetaFilterBuilding,\r\n        MetaDisplayBuilding,\r\n    ],\r\n    htmlElementId: \"ingame_HUD_BuildingsToolbar\",\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/buildings_toolbar.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2029,
    "kind": "class",
    "name": "HUDBuildingsToolbar",
    "memberof": "js/game/hud/parts/buildings_toolbar.js",
    "static": true,
    "longname": "js/game/hud/parts/buildings_toolbar.js~HUDBuildingsToolbar",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/buildings_toolbar.js",
    "importStyle": "{HUDBuildingsToolbar}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar"
    ]
  },
  {
    "__docId__": 2030,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/hud/parts/buildings_toolbar.js~HUDBuildingsToolbar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/buildings_toolbar.js~HUDBuildingsToolbar#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 2031,
    "kind": "file",
    "name": "js/game/hud/parts/building_placer.js",
    "content": "import { ClickDetector } from \"../../../core/click_detector\";\r\nimport { globalConfig } from \"../../../core/config\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { drawRotatedSprite } from \"../../../core/draw_utils\";\r\nimport { Loader } from \"../../../core/loader\";\r\nimport { clamp, makeDiv, removeAllChildren } from \"../../../core/utils\";\r\nimport {\r\n    enumDirectionToAngle,\r\n    enumDirectionToVector,\r\n    enumInvertedDirections,\r\n    Vector,\r\n    enumDirection,\r\n} from \"../../../core/vector\";\r\nimport { T } from \"../../../translations\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { defaultBuildingVariant } from \"../../meta_building\";\r\nimport { THEME } from \"../../theme\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { HUDBuildingPlacerLogic } from \"./building_placer_logic\";\r\nimport { makeOffscreenBuffer } from \"../../../core/buffer_utils\";\r\nimport { layers } from \"../../root\";\r\nimport { getCodeFromBuildingData } from \"../../building_codes\";\r\n\r\nexport class HUDBuildingPlacer extends HUDBuildingPlacerLogic {\r\n    /**\r\n     * @param {HTMLElement} parent\r\n     */\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_HUD_PlacementHints\", [], ``);\r\n\r\n        this.buildingInfoElements = {};\r\n        this.buildingInfoElements.label = makeDiv(this.element, null, [\"buildingLabel\"], \"Extract\");\r\n        this.buildingInfoElements.desc = makeDiv(this.element, null, [\"description\"], \"\");\r\n        this.buildingInfoElements.descText = makeDiv(this.buildingInfoElements.desc, null, [\"text\"], \"\");\r\n        this.buildingInfoElements.additionalInfo = makeDiv(\r\n            this.buildingInfoElements.desc,\r\n            null, [\"additionalInfo\"],\r\n            \"\"\r\n        );\r\n        this.buildingInfoElements.hotkey = makeDiv(this.buildingInfoElements.desc, null, [\"hotkey\"], \"\");\r\n        this.buildingInfoElements.tutorialImage = makeDiv(this.element, null, [\"buildingImage\"]);\r\n\r\n        this.variantsElement = makeDiv(parent, \"ingame_HUD_PlacerVariants\");\r\n\r\n        const compact = this.root.app.settings.getAllSettings().compactBuildingInfo;\r\n        this.element.classList.toggle(\"compact\", compact);\r\n        this.variantsElement.classList.toggle(\"compact\", compact);\r\n    }\r\n\r\n    initialize() {\r\n        super.initialize();\r\n\r\n        // Bind to signals\r\n        this.signals.variantChanged.add(this.rerenderVariants, this);\r\n        this.root.hud.signals.buildingSelectedForPlacement.add(this.startSelection, this);\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element, { trackHover: true });\r\n        this.variantsAttach = new DynamicDomAttach(this.root, this.variantsElement, {});\r\n\r\n        this.currentInterpolatedCornerTile = new Vector();\r\n\r\n        this.lockIndicatorSprites = {};\r\n        layers.forEach(layer => {\r\n            this.lockIndicatorSprites[layer] = this.makeLockIndicatorSprite(layer);\r\n        });\r\n\r\n        //\r\n\r\n        /**\r\n         * Stores the click detectors for the variants so we can clean them up later\r\n         * @type {Array<ClickDetector>}\r\n         */\r\n        this.variantClickDetectors = [];\r\n    }\r\n\r\n    /**\r\n     * Makes the lock indicator sprite for the given layer\r\n     * @param {Layer} layer\r\n     */\r\n    makeLockIndicatorSprite(layer) {\r\n        const dims = 48;\r\n        const [canvas, context] = makeOffscreenBuffer(dims, dims, {\r\n            smooth: true,\r\n            reusable: false,\r\n            label: \"lock-direction-indicator\",\r\n        });\r\n\r\n        context.fillStyle = THEME.map.directionLock[layer].color;\r\n        context.strokeStyle = THEME.map.directionLock[layer].color;\r\n        context.lineWidth = 2;\r\n\r\n        const padding = 5;\r\n        const height = dims * 0.5;\r\n        const bottom = (dims + height) / 2;\r\n\r\n        context.moveTo(padding, bottom);\r\n        context.lineTo(dims / 2, bottom - height);\r\n        context.lineTo(dims - padding, bottom);\r\n        context.closePath();\r\n        context.stroke();\r\n        context.fill();\r\n\r\n        return canvas;\r\n    }\r\n\r\n    /**\r\n     * Rerenders the building info dialog\r\n     */\r\n    rerenderInfoDialog() {\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n\r\n        if (!metaBuilding) {\r\n            return;\r\n        }\r\n\r\n        const variant = this.currentVariant.get();\r\n\r\n        this.buildingInfoElements.label.innerHTML = T.buildings[metaBuilding.id][variant].name;\r\n        this.buildingInfoElements.descText.innerHTML = T.buildings[metaBuilding.id][variant].description;\r\n\r\n        const layer = this.root.currentLayer;\r\n\r\n        let rawBinding = KEYMAPPINGS.buildings[metaBuilding.getId() + \"_\" + layer];\r\n        if (!rawBinding) {\r\n            rawBinding = KEYMAPPINGS.buildings[metaBuilding.getId()];\r\n        }\r\n\r\n        const binding = this.root.keyMapper.getBinding(rawBinding);\r\n\r\n        this.buildingInfoElements.hotkey.innerHTML = T.ingame.buildingPlacement.hotkeyLabel.replace(\r\n            \"<key>\",\r\n            \"<code class='keybinding'>\" + binding.getKeyCodeString() + \"</code>\"\r\n        );\r\n\r\n        this.buildingInfoElements.tutorialImage.setAttribute(\r\n            \"data-icon\",\r\n            \"building_tutorials/\" +\r\n            metaBuilding.getId() +\r\n            (variant === defaultBuildingVariant ? \"\" : \"-\" + variant) +\r\n            \".png\"\r\n        );\r\n\r\n        removeAllChildren(this.buildingInfoElements.additionalInfo);\r\n        const additionalInfo = metaBuilding.getAdditionalStatistics(this.root, this.currentVariant.get());\r\n        for (let i = 0; i < additionalInfo.length; ++i) {\r\n            const [label, contents] = additionalInfo[i];\r\n            this.buildingInfoElements.additionalInfo.innerHTML += `\r\n                <label>${label}:</label>\r\n                <span>${contents}</contents>\r\n            `;\r\n        }\r\n    }\r\n\r\n    cleanup() {\r\n        super.cleanup();\r\n        this.cleanupVariantClickDetectors();\r\n    }\r\n\r\n    /**\r\n     * Cleans up all variant click detectors\r\n     */\r\n    cleanupVariantClickDetectors() {\r\n        for (let i = 0; i < this.variantClickDetectors.length; ++i) {\r\n            const detector = this.variantClickDetectors[i];\r\n            detector.cleanup();\r\n        }\r\n        this.variantClickDetectors = [];\r\n    }\r\n\r\n    /**\r\n     * Rerenders the variants displayed\r\n     */\r\n    rerenderVariants() {\r\n        removeAllChildren(this.variantsElement);\r\n        this.rerenderInfoDialog();\r\n\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n\r\n        // First, clear up all click detectors\r\n        this.cleanupVariantClickDetectors();\r\n\r\n        if (!metaBuilding) {\r\n            return;\r\n        }\r\n        const availableVariants = metaBuilding.getAvailableVariants(this.root);\r\n        if (availableVariants.length === 1) {\r\n            return;\r\n        }\r\n\r\n        makeDiv(\r\n            this.variantsElement,\r\n            null, [\"explanation\"],\r\n            T.ingame.buildingPlacement.cycleBuildingVariants.replace(\r\n                \"<key>\",\r\n                \"<code class='keybinding'>\" +\r\n                this.root.keyMapper\r\n                .getBinding(KEYMAPPINGS.placement.cycleBuildingVariants)\r\n                .getKeyCodeString() +\r\n                \"</code>\"\r\n            )\r\n        );\r\n\r\n        const container = makeDiv(this.variantsElement, null, [\"variants\"]);\r\n\r\n        for (let i = 0; i < availableVariants.length; ++i) {\r\n            const variant = availableVariants[i];\r\n\r\n            const element = makeDiv(container, null, [\"variant\"]);\r\n            element.classList.toggle(\"active\", variant === this.currentVariant.get());\r\n            makeDiv(element, null, [\"label\"], variant);\r\n\r\n            const iconSize = 64;\r\n\r\n            const dimensions = metaBuilding.getDimensions(variant);\r\n            const sprite = metaBuilding.getPreviewSprite(0, variant);\r\n            const spriteWrapper = makeDiv(element, null, [\"iconWrap\"]);\r\n            // @ts-ignore\r\n            spriteWrapper.setAttribute(\"data-tile-w\", dimensions.x);\r\n            // @ts-ignore\r\n            spriteWrapper.setAttribute(\"data-tile-h\", dimensions.y);\r\n\r\n            spriteWrapper.innerHTML = sprite.getAsHTML(iconSize * dimensions.x, iconSize * dimensions.y);\r\n\r\n            const detector = new ClickDetector(element, {\r\n                consumeEvents: true,\r\n                targetOnly: true,\r\n            });\r\n            detector.click.add(() => this.setVariant(variant));\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        if (this.root.camera.zoomLevel < globalConfig.mapChunkOverviewMinZoom) {\r\n            // Dont allow placing in overview mode\r\n            this.domAttach.update(false);\r\n            this.variantsAttach.update(false);\r\n            return;\r\n        }\r\n\r\n        this.domAttach.update(!!this.currentMetaBuilding.get());\r\n        this.variantsAttach.update(!!this.currentMetaBuilding.get());\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n\r\n        if (!metaBuilding) {\r\n            return;\r\n        }\r\n\r\n        // Draw direction lock\r\n        if (this.isDirectionLockActive) {\r\n            this.drawDirectionLock(parameters);\r\n        } else {\r\n            this.drawRegularPlacement(parameters);\r\n        }\r\n\r\n        const layer = metaBuilding.getShowLayerPreview(this.currentVariant.get());\r\n\r\n        if (layer && layer != this.root.currentLayer) {\r\n            this.drawLayerPeek(parameters, layer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawLayerPeek(parameters, layer) {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return;\r\n        }\r\n\r\n        const worldPosition = this.root.camera.screenToWorld(mousePosition);\r\n\r\n        // Draw peeker\r\n        this.root.hud.parts.layerPreview.renderPreview(\r\n            parameters,\r\n            worldPosition,\r\n            1 / this.root.camera.zoomLevel,\r\n            layer\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawRegularPlacement(parameters) {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return;\r\n        }\r\n\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        const mouseTile = worldPos.toTileSpace();\r\n\r\n        // Compute best rotation variant\r\n        const {\r\n            rotation,\r\n            rotationVariant,\r\n            connectedEntities,\r\n        } = metaBuilding.computeOptimalDirectionAndRotationVariantAtTile({\r\n            root: this.root,\r\n            tile: mouseTile,\r\n            rotation: this.currentBaseRotation,\r\n            variant: this.currentVariant.get(),\r\n            layer: metaBuilding.getLayer(this.root, this.currentVariant.get()),\r\n        });\r\n\r\n        // Check if there are connected entities\r\n        if (connectedEntities) {\r\n            for (let i = 0; i < connectedEntities.length; ++i) {\r\n                const connectedEntity = connectedEntities[i];\r\n                const connectedWsPoint = connectedEntity.components.StaticMapEntity.getTileSpaceBounds()\r\n                    .getCenter()\r\n                    .toWorldSpace();\r\n\r\n                const startWsPoint = mouseTile.toWorldSpaceCenterOfTile();\r\n\r\n                const startOffset = connectedWsPoint\r\n                    .sub(startWsPoint)\r\n                    .normalize()\r\n                    .multiplyScalar(globalConfig.tileSize * 0.3);\r\n                const effectiveStartPoint = startWsPoint.add(startOffset);\r\n                const effectiveEndPoint = connectedWsPoint.sub(startOffset);\r\n\r\n                parameters.context.globalAlpha = 0.6;\r\n\r\n                // parameters.context.lineCap = \"round\";\r\n                parameters.context.strokeStyle = \"#7f7\";\r\n                parameters.context.lineWidth = 10;\r\n                parameters.context.beginPath();\r\n                parameters.context.moveTo(effectiveStartPoint.x, effectiveStartPoint.y);\r\n                parameters.context.lineTo(effectiveEndPoint.x, effectiveEndPoint.y);\r\n                parameters.context.stroke();\r\n                parameters.context.globalAlpha = 1;\r\n                // parameters.context.lineCap = \"square\";\r\n            }\r\n        }\r\n\r\n        // Synchronize rotation and origin\r\n        this.fakeEntity.layer = metaBuilding.getLayer(this.root, this.currentVariant.get());\r\n        const staticComp = this.fakeEntity.components.StaticMapEntity;\r\n        staticComp.origin = mouseTile;\r\n        staticComp.rotation = rotation;\r\n        metaBuilding.updateVariants(this.fakeEntity, rotationVariant, this.currentVariant.get());\r\n        staticComp.code = getCodeFromBuildingData(\r\n            this.currentMetaBuilding.get(),\r\n            this.currentVariant.get(),\r\n            rotationVariant\r\n        );\r\n\r\n        const canBuild = this.root.logic.checkCanPlaceEntity(this.fakeEntity);\r\n\r\n        // Fade in / out\r\n        parameters.context.lineWidth = 1;\r\n\r\n        // Determine the bounds and visualize them\r\n        const entityBounds = staticComp.getTileSpaceBounds();\r\n        const drawBorder = -3;\r\n        if (canBuild) {\r\n            parameters.context.strokeStyle = \"rgba(56, 235, 111, 0.5)\";\r\n            parameters.context.fillStyle = \"rgba(56, 235, 111, 0.2)\";\r\n        } else {\r\n            parameters.context.strokeStyle = \"rgba(255, 0, 0, 0.2)\";\r\n            parameters.context.fillStyle = \"rgba(255, 0, 0, 0.2)\";\r\n        }\r\n\r\n        parameters.context.beginRoundedRect(\r\n            entityBounds.x * globalConfig.tileSize - drawBorder,\r\n            entityBounds.y * globalConfig.tileSize - drawBorder,\r\n            entityBounds.w * globalConfig.tileSize + 2 * drawBorder,\r\n            entityBounds.h * globalConfig.tileSize + 2 * drawBorder,\r\n            4\r\n        );\r\n        parameters.context.stroke();\r\n        // parameters.context.fill();\r\n        parameters.context.globalAlpha = 1;\r\n\r\n        // HACK to draw the entity sprite\r\n        const previewSprite = metaBuilding.getBlueprintSprite(rotationVariant, this.currentVariant.get());\r\n        staticComp.origin = worldPos.divideScalar(globalConfig.tileSize).subScalars(0.5, 0.5);\r\n        staticComp.drawSpriteOnBoundsClipped(parameters, previewSprite);\r\n        staticComp.origin = mouseTile;\r\n\r\n        // Draw ejectors\r\n        if (canBuild) {\r\n            this.drawMatchingAcceptorsAndEjectors(parameters);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawDirectionLock(parameters) {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return;\r\n        }\r\n\r\n        const mouseWorld = this.root.camera.screenToWorld(mousePosition);\r\n        const mouseTile = mouseWorld.toTileSpace();\r\n        parameters.context.fillStyle = THEME.map.directionLock[this.root.currentLayer].color;\r\n        parameters.context.strokeStyle = THEME.map.directionLock[this.root.currentLayer].background;\r\n        parameters.context.lineWidth = 10;\r\n\r\n        parameters.context.beginCircle(mouseWorld.x, mouseWorld.y, 4);\r\n        parameters.context.fill();\r\n\r\n        if (this.lastDragTile) {\r\n            const startLine = this.lastDragTile.toWorldSpaceCenterOfTile();\r\n            const endLine = mouseTile.toWorldSpaceCenterOfTile();\r\n            const midLine = this.currentDirectionLockCorner.toWorldSpaceCenterOfTile();\r\n\r\n            parameters.context.beginCircle(startLine.x, startLine.y, 8);\r\n            parameters.context.fill();\r\n\r\n            parameters.context.beginPath();\r\n            parameters.context.moveTo(startLine.x, startLine.y);\r\n            parameters.context.lineTo(midLine.x, midLine.y);\r\n            parameters.context.lineTo(endLine.x, endLine.y);\r\n            parameters.context.stroke();\r\n\r\n            parameters.context.beginCircle(endLine.x, endLine.y, 5);\r\n            parameters.context.fill();\r\n\r\n            // Draw arrow\r\n            const arrowSprite = this.lockIndicatorSprites[this.root.currentLayer];\r\n            const path = this.computeDirectionLockPath();\r\n            for (let i = 0; i < path.length - 1; i += 1) {\r\n                const { rotation, tile } = path[i];\r\n                const worldPos = tile.toWorldSpaceCenterOfTile();\r\n                const angle = Math.radians(rotation);\r\n\r\n                parameters.context.translate(worldPos.x, worldPos.y);\r\n                parameters.context.rotate(angle);\r\n                parameters.context.drawImage(\r\n                    arrowSprite, -6, -globalConfig.halfTileSize -\r\n                    clamp((this.root.time.realtimeNow() * 1.5) % 1.0, 0, 1) * 1 * globalConfig.tileSize +\r\n                    globalConfig.halfTileSize -\r\n                    6,\r\n                    12,\r\n                    12\r\n                );\r\n                parameters.context.rotate(-angle);\r\n                parameters.context.translate(-worldPos.x, -worldPos.y);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawMatchingAcceptorsAndEjectors(parameters) {\r\n        const acceptorComp = this.fakeEntity.components.ItemAcceptor;\r\n        const ejectorComp = this.fakeEntity.components.ItemEjector;\r\n        const staticComp = this.fakeEntity.components.StaticMapEntity;\r\n        const beltComp = this.fakeEntity.components.Belt;\r\n        const minerComp = this.fakeEntity.components.Miner;\r\n\r\n        const goodArrowSprite = Loader.getSprite(\"sprites/misc/slot_good_arrow.png\");\r\n        const badArrowSprite = Loader.getSprite(\"sprites/misc/slot_bad_arrow.png\");\r\n\r\n        // Just ignore the following code please ... thanks!\r\n\r\n        const offsetShift = 10;\r\n\r\n        let acceptorSlots = [];\r\n        let ejectorSlots = [];\r\n\r\n        if (ejectorComp) {\r\n            ejectorSlots = ejectorComp.slots.slice();\r\n        }\r\n\r\n        if (acceptorComp) {\r\n            acceptorSlots = acceptorComp.slots.slice();\r\n        }\r\n\r\n        if (beltComp) {\r\n            const fakeEjectorSlot = beltComp.getFakeEjectorSlot();\r\n            const fakeAcceptorSlot = beltComp.getFakeAcceptorSlot();\r\n            ejectorSlots.push(fakeEjectorSlot);\r\n            acceptorSlots.push(fakeAcceptorSlot);\r\n        }\r\n\r\n        for (let acceptorSlotIndex = 0; acceptorSlotIndex < acceptorSlots.length; ++acceptorSlotIndex) {\r\n            const slot = acceptorSlots[acceptorSlotIndex];\r\n\r\n            const acceptorSlotWsTile = staticComp.localTileToWorld(slot.pos);\r\n            const acceptorSlotWsPos = acceptorSlotWsTile.toWorldSpaceCenterOfTile();\r\n\r\n            // Go over all slots\r\n            for (\r\n                let acceptorDirectionIndex = 0; acceptorDirectionIndex < slot.directions.length;\r\n                ++acceptorDirectionIndex\r\n            ) {\r\n                const direction = slot.directions[acceptorDirectionIndex];\r\n                const worldDirection = staticComp.localDirectionToWorld(direction);\r\n\r\n                // Figure out which tile ejects to this slot\r\n                const sourceTile = acceptorSlotWsTile.add(enumDirectionToVector[worldDirection]);\r\n\r\n                let isBlocked = false;\r\n                let isConnected = false;\r\n\r\n                // Find all entities which are on that tile\r\n                const sourceEntities = this.root.map.getLayersContentsMultipleXY(sourceTile.x, sourceTile.y);\r\n\r\n                // Check for every entity:\r\n                for (let i = 0; i < sourceEntities.length; ++i) {\r\n                    const sourceEntity = sourceEntities[i];\r\n                    const sourceEjector = sourceEntity.components.ItemEjector;\r\n                    const sourceBeltComp = sourceEntity.components.Belt;\r\n                    const sourceStaticComp = sourceEntity.components.StaticMapEntity;\r\n                    const ejectorAcceptLocalTile = sourceStaticComp.worldToLocalTile(acceptorSlotWsTile);\r\n\r\n                    // If this entity is on the same layer as the slot - if so, it can either be\r\n                    // connected, or it can not be connected and thus block the input\r\n                    if (sourceEjector && sourceEjector.anySlotEjectsToLocalTile(ejectorAcceptLocalTile)) {\r\n                        // This one is connected, all good\r\n                        isConnected = true;\r\n                    } else if (\r\n                        sourceBeltComp &&\r\n                        sourceStaticComp.localDirectionToWorld(sourceBeltComp.direction) ===\r\n                        enumInvertedDirections[worldDirection]\r\n                    ) {\r\n                        // Belt connected\r\n                        isConnected = true;\r\n                    } else {\r\n                        // This one is blocked\r\n                        isBlocked = true;\r\n                    }\r\n                }\r\n\r\n                const alpha = isConnected || isBlocked ? 1.0 : 0.3;\r\n                const sprite = isBlocked ? badArrowSprite : goodArrowSprite;\r\n\r\n                parameters.context.globalAlpha = alpha;\r\n                drawRotatedSprite({\r\n                    parameters,\r\n                    sprite,\r\n                    x: acceptorSlotWsPos.x,\r\n                    y: acceptorSlotWsPos.y,\r\n                    angle: Math.radians(enumDirectionToAngle[enumInvertedDirections[worldDirection]]),\r\n                    size: 13,\r\n                    offsetY: offsetShift + 13,\r\n                });\r\n                parameters.context.globalAlpha = 1;\r\n            }\r\n        }\r\n\r\n        // Go over all slots\r\n        for (let ejectorSlotIndex = 0; ejectorSlotIndex < ejectorSlots.length; ++ejectorSlotIndex) {\r\n            const slot = ejectorSlots[ejectorSlotIndex];\r\n\r\n            const ejectorSlotLocalTile = slot.pos.add(enumDirectionToVector[slot.direction]);\r\n            const ejectorSlotWsTile = staticComp.localTileToWorld(ejectorSlotLocalTile);\r\n\r\n            const ejectorSLotWsPos = ejectorSlotWsTile.toWorldSpaceCenterOfTile();\r\n            const ejectorSlotWsDirection = staticComp.localDirectionToWorld(slot.direction);\r\n\r\n            let isBlocked = false;\r\n            let isConnected = false;\r\n\r\n            // Find all entities which are on that tile\r\n            const destEntities = this.root.map.getLayersContentsMultipleXY(\r\n                ejectorSlotWsTile.x,\r\n                ejectorSlotWsTile.y\r\n            );\r\n\r\n            // Check for every entity:\r\n            for (let i = 0; i < destEntities.length; ++i) {\r\n                const destEntity = destEntities[i];\r\n                const destAcceptor = destEntity.components.ItemAcceptor;\r\n                const destStaticComp = destEntity.components.StaticMapEntity;\r\n                const destMiner = destEntity.components.Miner;\r\n\r\n                const destLocalTile = destStaticComp.worldToLocalTile(ejectorSlotWsTile);\r\n                const destLocalDir = destStaticComp.worldDirectionToLocal(ejectorSlotWsDirection);\r\n                if (destAcceptor && destAcceptor.findMatchingSlot(destLocalTile, destLocalDir)) {\r\n                    // This one is connected, all good\r\n                    isConnected = true;\r\n                } else if (destEntity.components.Belt && destLocalDir === enumDirection.top) {\r\n                    // Connected to a belt\r\n                    isConnected = true;\r\n                } else if (minerComp && minerComp.chainable && destMiner && destMiner.chainable) {\r\n                    // Chainable miners connected to eachother\r\n                    isConnected = true;\r\n                } else {\r\n                    // This one is blocked\r\n                    isBlocked = true;\r\n                }\r\n            }\r\n\r\n            const alpha = isConnected || isBlocked ? 1.0 : 0.3;\r\n            const sprite = isBlocked ? badArrowSprite : goodArrowSprite;\r\n\r\n            parameters.context.globalAlpha = alpha;\r\n            drawRotatedSprite({\r\n                parameters,\r\n                sprite,\r\n                x: ejectorSLotWsPos.x,\r\n                y: ejectorSLotWsPos.y,\r\n                angle: Math.radians(enumDirectionToAngle[ejectorSlotWsDirection]),\r\n                size: 13,\r\n                offsetY: offsetShift,\r\n            });\r\n            parameters.context.globalAlpha = 1;\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/building_placer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2032,
    "kind": "class",
    "name": "HUDBuildingPlacer",
    "memberof": "js/game/hud/parts/building_placer.js",
    "static": true,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/building_placer.js",
    "importStyle": "{HUDBuildingPlacer}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic"
    ]
  },
  {
    "__docId__": 2033,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#createElements",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2034,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#element",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2035,
    "kind": "member",
    "name": "buildingInfoElements",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#buildingInfoElements",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 2036,
    "kind": "member",
    "name": "variantsElement",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#variantsElement",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2037,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2038,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2039,
    "kind": "member",
    "name": "variantsAttach",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#variantsAttach",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2040,
    "kind": "member",
    "name": "currentInterpolatedCornerTile",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#currentInterpolatedCornerTile",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2041,
    "kind": "member",
    "name": "lockIndicatorSprites",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#lockIndicatorSprites",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 2042,
    "kind": "member",
    "name": "variantClickDetectors",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#variantClickDetectors",
    "access": "public",
    "description": "Stores the click detectors for the variants so we can clean them up later",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "Array<ClickDetector>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2043,
    "kind": "method",
    "name": "makeLockIndicatorSprite",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#makeLockIndicatorSprite",
    "access": "public",
    "description": "Makes the lock indicator sprite for the given layer",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2044,
    "kind": "method",
    "name": "rerenderInfoDialog",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#rerenderInfoDialog",
    "access": "public",
    "description": "Rerenders the building info dialog",
    "lineNumber": 109,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2045,
    "kind": "method",
    "name": "cleanup",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#cleanup",
    "access": "public",
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2046,
    "kind": "method",
    "name": "cleanupVariantClickDetectors",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#cleanupVariantClickDetectors",
    "access": "public",
    "description": "Cleans up all variant click detectors",
    "lineNumber": 162,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2048,
    "kind": "method",
    "name": "rerenderVariants",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#rerenderVariants",
    "access": "public",
    "description": "Rerenders the variants displayed",
    "lineNumber": 173,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2049,
    "kind": "method",
    "name": "draw",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#draw",
    "access": "public",
    "description": "",
    "lineNumber": 236,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2050,
    "kind": "method",
    "name": "drawLayerPeek",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#drawLayerPeek",
    "access": "public",
    "description": "",
    "lineNumber": 270,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2051,
    "kind": "method",
    "name": "drawRegularPlacement",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#drawRegularPlacement",
    "access": "public",
    "description": "",
    "lineNumber": 291,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2052,
    "kind": "method",
    "name": "drawDirectionLock",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#drawDirectionLock",
    "access": "public",
    "description": "",
    "lineNumber": 401,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2053,
    "kind": "method",
    "name": "drawMatchingAcceptorsAndEjectors",
    "memberof": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer.js~HUDBuildingPlacer#drawMatchingAcceptorsAndEjectors",
    "access": "public",
    "description": "",
    "lineNumber": 461,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2054,
    "kind": "file",
    "name": "js/game/hud/parts/building_placer_logic.js",
    "content": "import { globalConfig } from \"../../../core/config\";\r\nimport { gMetaBuildingRegistry } from \"../../../core/global_registries\";\r\nimport { Signal, STOP_PROPAGATION } from \"../../../core/signal\";\r\nimport { TrackedState } from \"../../../core/tracked_state\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { enumMouseButton } from \"../../camera\";\r\nimport { StaticMapEntityComponent } from \"../../components/static_map_entity\";\r\nimport { Entity } from \"../../entity\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../../meta_building\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { SOUNDS } from \"../../../platform/sound\";\r\nimport { MetaMinerBuilding } from \"../../buildings/miner\";\r\nimport { enumHubGoalRewards } from \"../../tutorial_goals\";\r\nimport { getBuildingDataFromCode, getCodeFromBuildingData } from \"../../building_codes\";\r\nimport { MetaHubBuilding } from \"../../buildings/hub\";\r\nimport { safeModulo } from \"../../../core/utils\";\r\n\r\n/**\r\n * Contains all logic for the building placer - this doesn't include the rendering\r\n * of info boxes or drawing.\r\n */\r\nexport class HUDBuildingPlacerLogic extends BaseHUDPart {\r\n    /**\r\n     * Initializes the logic\r\n     * @see BaseHUDPart.initialize\r\n     */\r\n    initialize() {\r\n        /**\r\n         * We use a fake entity to get information about how a building will look\r\n         * once placed\r\n         * @type {Entity}\r\n         */\r\n        this.fakeEntity = null;\r\n\r\n        // Signals\r\n        this.signals = {\r\n            variantChanged: new Signal(),\r\n            draggingStarted: new Signal(),\r\n        };\r\n\r\n        /**\r\n         * The current building\r\n         * @type {TypedTrackedState<MetaBuilding?>}\r\n         */\r\n        this.currentMetaBuilding = new TrackedState(this.onSelectedMetaBuildingChanged, this);\r\n\r\n        /**\r\n         * The current rotation\r\n         * @type {number}\r\n         */\r\n        this.currentBaseRotationGeneral = 0;\r\n\r\n        /**\r\n         * The current rotation preference for each building.\r\n         * @type{Object.<string,number>}\r\n         */\r\n        this.preferredBaseRotations = {};\r\n\r\n        /**\r\n         * Whether we are currently dragging\r\n         * @type {boolean}\r\n         */\r\n        this.currentlyDragging = false;\r\n\r\n        /**\r\n         * Current building variant\r\n         * @type {TypedTrackedState<string>}\r\n         */\r\n        this.currentVariant = new TrackedState(() => this.signals.variantChanged.dispatch());\r\n\r\n        /**\r\n         * Whether we are currently drag-deleting\r\n         * @type {boolean}\r\n         */\r\n        this.currentlyDeleting = false;\r\n\r\n        /**\r\n         * Stores which variants for each building we prefer, this is based on what\r\n         * the user last selected\r\n         * @type {Object.<string, string>}\r\n         */\r\n        this.preferredVariants = {};\r\n\r\n        /**\r\n         * The tile we last dragged from\r\n         * @type {Vector}\r\n         */\r\n        this.lastDragTile = null;\r\n\r\n        /**\r\n         * The side for direction lock\r\n         * @type {number} (0|1)\r\n         */\r\n        this.currentDirectionLockSide = 0;\r\n\r\n        /**\r\n         * Whether the side for direction lock has not yet been determined.\r\n         * @type {boolean}\r\n         */\r\n        this.currentDirectionLockSideIndeterminate = true;\r\n\r\n        this.initializeBindings();\r\n    }\r\n\r\n    /**\r\n     * Initializes all bindings\r\n     */\r\n    initializeBindings() {\r\n        // KEYBINDINGS\r\n        const keyActionMapper = this.root.keyMapper;\r\n        keyActionMapper.getBinding(KEYMAPPINGS.placement.rotateWhilePlacing).add(this.tryRotate, this);\r\n        keyActionMapper.getBinding(KEYMAPPINGS.placement.cycleBuildingVariants).add(this.cycleVariants, this);\r\n        keyActionMapper\r\n            .getBinding(KEYMAPPINGS.placement.switchDirectionLockSide)\r\n            .add(this.switchDirectionLockSide, this);\r\n        keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.abortPlacement, this);\r\n        keyActionMapper.getBinding(KEYMAPPINGS.placement.pipette).add(this.startPipette, this);\r\n        this.root.gameState.inputReciever.keyup.add(this.checkForDirectionLockSwitch, this);\r\n\r\n        // BINDINGS TO GAME EVENTS\r\n        this.root.hud.signals.buildingsSelectedForCopy.add(this.abortPlacement, this);\r\n        this.root.hud.signals.pasteBlueprintRequested.add(this.abortPlacement, this);\r\n        this.root.signals.storyGoalCompleted.add(() => this.signals.variantChanged.dispatch());\r\n        this.root.signals.storyGoalCompleted.add(() => this.currentMetaBuilding.set(null));\r\n        this.root.signals.upgradePurchased.add(() => this.signals.variantChanged.dispatch());\r\n        this.root.signals.editModeChanged.add(this.onEditModeChanged, this);\r\n\r\n        // MOUSE BINDINGS\r\n        this.root.camera.downPreHandler.add(this.onMouseDown, this);\r\n        this.root.camera.movePreHandler.add(this.onMouseMove, this);\r\n        this.root.camera.upPostHandler.add(this.onMouseUp, this);\r\n    }\r\n\r\n    /**\r\n     * Called when the edit mode got changed\r\n     * @param {Layer} layer\r\n     */\r\n    onEditModeChanged(layer) {\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        if (metaBuilding) {\r\n            if (metaBuilding.getLayer(this.root, this.currentVariant.get()) !== layer) {\r\n                // This layer doesn't fit the edit mode anymore\r\n                this.currentMetaBuilding.set(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the current base rotation for the current meta-building.\r\n     * @returns {number}\r\n     */\r\n    get currentBaseRotation() {\r\n        if (!this.root.app.settings.getAllSettings().rotationByBuilding) {\r\n            return this.currentBaseRotationGeneral;\r\n        }\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        if (metaBuilding && this.preferredBaseRotations.hasOwnProperty(metaBuilding.getId())) {\r\n            return this.preferredBaseRotations[metaBuilding.getId()];\r\n        } else {\r\n            return this.currentBaseRotationGeneral;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the base rotation for the current meta-building.\r\n     * @param {number} rotation The new rotation/angle.\r\n     */\r\n    set currentBaseRotation(rotation) {\r\n        if (!this.root.app.settings.getAllSettings().rotationByBuilding) {\r\n            this.currentBaseRotationGeneral = rotation;\r\n        } else {\r\n            const metaBuilding = this.currentMetaBuilding.get();\r\n            if (metaBuilding) {\r\n                this.preferredBaseRotations[metaBuilding.getId()] = rotation;\r\n            } else {\r\n                this.currentBaseRotationGeneral = rotation;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns if the direction lock is currently active\r\n     * @returns {boolean}\r\n     */\r\n    get isDirectionLockActive() {\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        return (\r\n            metaBuilding &&\r\n            metaBuilding.getHasDirectionLockAvailable() &&\r\n            this.root.keyMapper.getBinding(KEYMAPPINGS.placementModifiers.lockBeltDirection).pressed\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns the current direction lock corner, that is, the corner between\r\n     * mouse and original start point\r\n     * @returns {Vector|null}\r\n     */\r\n    get currentDirectionLockCorner() {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return null;\r\n        }\r\n\r\n        if (!this.lastDragTile) {\r\n            // Haven't dragged yet\r\n            return null;\r\n        }\r\n\r\n        // Figure which points the line visits\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        const mouseTile = worldPos.toTileSpace();\r\n\r\n        // Figure initial direction\r\n        const dx = Math.abs(this.lastDragTile.x - mouseTile.x);\r\n        const dy = Math.abs(this.lastDragTile.y - mouseTile.y);\r\n        if (dx === 0 && dy === 0) {\r\n            // Back at the start. Try a new direction.\r\n            this.currentDirectionLockSideIndeterminate = true;\r\n        } else if (this.currentDirectionLockSideIndeterminate) {\r\n            this.currentDirectionLockSideIndeterminate = false;\r\n            this.currentDirectionLockSide = dx <= dy ? 0 : 1;\r\n        }\r\n\r\n        if (this.currentDirectionLockSide === 0) {\r\n            return new Vector(this.lastDragTile.x, mouseTile.y);\r\n        } else {\r\n            return new Vector(mouseTile.x, this.lastDragTile.y);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Aborts the placement\r\n     */\r\n    abortPlacement() {\r\n        if (this.currentMetaBuilding.get()) {\r\n            this.currentMetaBuilding.set(null);\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Aborts any dragging\r\n     */\r\n    abortDragging() {\r\n        this.currentlyDragging = true;\r\n        this.currentlyDeleting = false;\r\n        this.initialPlacementVector = null;\r\n        this.lastDragTile = null;\r\n    }\r\n\r\n    /**\r\n     * @see BaseHUDPart.update\r\n     */\r\n    update() {\r\n        // Abort placement if a dialog was shown in the meantime\r\n        if (this.root.hud.hasBlockingOverlayOpen()) {\r\n            this.abortPlacement();\r\n            return;\r\n        }\r\n\r\n        // Always update since the camera might have moved\r\n        const mousePos = this.root.app.mousePosition;\r\n        if (mousePos) {\r\n            this.onMouseMove(mousePos);\r\n        }\r\n\r\n        // Make sure we have nothing selected while in overview mode\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            if (this.currentMetaBuilding.get()) {\r\n                this.currentMetaBuilding.set(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tries to rotate the current building\r\n     */\r\n    tryRotate() {\r\n            const selectedBuilding = this.currentMetaBuilding.get();\r\n            if (selectedBuilding) {\r\n                if (this.root.keyMapper.getBinding(KEYMAPPINGS.placement.rotateInverseModifier).pressed) {\r\n                    this.currentBaseRotation = (this.currentBaseRotation + 270) % 360;\r\n                } else {\r\n                    this.currentBaseRotation = (this.currentBaseRotation + 90) % 360;\r\n                }\r\n                const staticComp = this.fakeEntity.components.StaticMapEntity;\r\n                staticComp.rotation = this.currentBaseRotation;\r\n            }\r\n        }\r\n        /**\r\n         * Tries to delete the building under the mouse\r\n         */\r\n    deleteBelowCursor() {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return false;\r\n        }\r\n\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        const tile = worldPos.toTileSpace();\r\n        const contents = this.root.map.getTileContent(tile, this.root.currentLayer);\r\n        if (contents) {\r\n            if (this.root.logic.tryDeleteBuilding(contents)) {\r\n                this.root.soundProxy.playUi(SOUNDS.destroyBuilding);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Starts the pipette function\r\n     */\r\n    startPipette() {\r\n        // Disable in overview\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            return;\r\n        }\r\n\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return;\r\n        }\r\n\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        const tile = worldPos.toTileSpace();\r\n\r\n        const contents = this.root.map.getTileContent(tile, this.root.currentLayer);\r\n        if (!contents) {\r\n            const tileBelow = this.root.map.getLowerLayerContentXY(tile.x, tile.y);\r\n\r\n            // Check if there's a shape or color item below, if so select the miner\r\n            if (\r\n                tileBelow &&\r\n                this.root.app.settings.getAllSettings().pickMinerOnPatch &&\r\n                this.root.currentLayer === \"regular\"\r\n            ) {\r\n                this.currentMetaBuilding.set(gMetaBuildingRegistry.findByClass(MetaMinerBuilding));\r\n\r\n                // Select chained miner if available, since that's always desired once unlocked\r\n                if (this.root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_miner_chainable)) {\r\n                    this.currentVariant.set(MetaMinerBuilding.variants.chainable);\r\n                }\r\n            } else {\r\n                this.currentMetaBuilding.set(null);\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Try to extract the building\r\n        const buildingCode = contents.components.StaticMapEntity.code;\r\n        const extracted = getBuildingDataFromCode(buildingCode);\r\n\r\n        // Disable pipetting the hub\r\n        if (\r\n            extracted.metaInstance.getId() === gMetaBuildingRegistry.findByClass(MetaHubBuilding).getId() &&\r\n            !MetaHubBuilding.canPipet()\r\n        ) {\r\n            this.currentMetaBuilding.set(null);\r\n            return;\r\n        }\r\n\r\n        // If the building we are picking is the same as the one we have, clear the cursor.\r\n        if (\r\n            this.currentMetaBuilding.get() &&\r\n            extracted.metaInstance.getId() === this.currentMetaBuilding.get().getId() &&\r\n            extracted.variant === this.currentVariant.get()\r\n        ) {\r\n            this.currentMetaBuilding.set(null);\r\n            return;\r\n        }\r\n\r\n        this.currentMetaBuilding.set(extracted.metaInstance);\r\n        this.currentVariant.set(extracted.variant);\r\n        this.currentBaseRotation = contents.components.StaticMapEntity.rotation;\r\n    }\r\n\r\n    /**\r\n     * Switches the side for the direction lock manually\r\n     */\r\n    switchDirectionLockSide() {\r\n        this.currentDirectionLockSide = 1 - this.currentDirectionLockSide;\r\n    }\r\n\r\n    /**\r\n     * Checks if the direction lock key got released and if such, resets the placement\r\n     * @param {any} args\r\n     */\r\n    checkForDirectionLockSwitch({ keyCode }) {\r\n        if (\r\n            keyCode ===\r\n            this.root.keyMapper.getBinding(KEYMAPPINGS.placementModifiers.lockBeltDirection).keyCode\r\n        ) {\r\n            this.abortDragging();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tries to place the current building at the given tile\r\n     * @param {Vector} tile\r\n     */\r\n    tryPlaceCurrentBuildingAt(tile) {\r\n        if (this.root.camera.zoomLevel < globalConfig.mapChunkOverviewMinZoom) {\r\n            // Dont allow placing in overview mode\r\n            return;\r\n        }\r\n\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        const { rotation, rotationVariant } = metaBuilding.computeOptimalDirectionAndRotationVariantAtTile({\r\n            root: this.root,\r\n            tile,\r\n            rotation: this.currentBaseRotation,\r\n            variant: this.currentVariant.get(),\r\n            layer: metaBuilding.getLayer(this.root, this.currentVariant.get()),\r\n        });\r\n\r\n        const entity = this.root.logic.tryPlaceBuilding({\r\n            origin: tile,\r\n            rotation,\r\n            rotationVariant,\r\n            originalRotation: this.currentBaseRotation,\r\n            building: this.currentMetaBuilding.get(),\r\n            variant: this.currentVariant.get(),\r\n        });\r\n\r\n        if (entity) {\r\n            // Succesfully placed, find which entity we actually placed\r\n            this.root.signals.entityManuallyPlaced.dispatch(entity);\r\n\r\n            // Check if we should flip the orientation (used for tunnels)\r\n            if (\r\n                metaBuilding.getFlipOrientationAfterPlacement() &&\r\n                !this.root.keyMapper.getBinding(\r\n                    KEYMAPPINGS.placementModifiers.placementDisableAutoOrientation\r\n                ).pressed\r\n            ) {\r\n                this.currentBaseRotation = (180 + this.currentBaseRotation) % 360;\r\n            }\r\n\r\n            // Check if we should stop placement\r\n            if (!metaBuilding.getStayInPlacementMode() &&\r\n                !this.root.keyMapper.getBinding(KEYMAPPINGS.placementModifiers.placeMultiple).pressed &&\r\n                !this.root.app.settings.getAllSettings().alwaysMultiplace\r\n            ) {\r\n                // Stop placement\r\n                this.currentMetaBuilding.set(null);\r\n            }\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cycles through the variants\r\n     */\r\n    cycleVariants() {\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        if (!metaBuilding) {\r\n            this.currentVariant.set(defaultBuildingVariant);\r\n        } else {\r\n            const availableVariants = metaBuilding.getAvailableVariants(this.root);\r\n            let index = availableVariants.indexOf(this.currentVariant.get());\r\n            if (index < 0) {\r\n                index = 0;\r\n                console.warn(\"Invalid variant selected:\", this.currentVariant.get());\r\n            }\r\n            const direction = this.root.keyMapper.getBinding(KEYMAPPINGS.placement.rotateInverseModifier)\r\n                .pressed ?\r\n                -1 :\r\n                1;\r\n\r\n            const newIndex = safeModulo(index + direction, availableVariants.length);\r\n            const newVariant = availableVariants[newIndex];\r\n            this.setVariant(newVariant);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the current variant to the given variant\r\n     * @param {string} variant\r\n     */\r\n    setVariant(variant) {\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        this.currentVariant.set(variant);\r\n\r\n        this.preferredVariants[metaBuilding.getId()] = variant;\r\n    }\r\n\r\n    /**\r\n     * Performs the direction locked placement between two points after\r\n     * releasing the mouse\r\n     */\r\n    executeDirectionLockedPlacement() {\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        if (!metaBuilding) {\r\n            // No active building\r\n            return;\r\n        }\r\n\r\n        // Get path to place\r\n        const path = this.computeDirectionLockPath();\r\n\r\n        // Store if we placed anything\r\n        let anythingPlaced = false;\r\n\r\n        // Perform this in bulk to avoid recalculations\r\n        this.root.logic.performBulkOperation(() => {\r\n            for (let i = 0; i < path.length; ++i) {\r\n                const { rotation, tile } = path[i];\r\n                this.currentBaseRotation = rotation;\r\n                if (this.tryPlaceCurrentBuildingAt(tile)) {\r\n                    anythingPlaced = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (anythingPlaced) {\r\n            this.root.soundProxy.playUi(metaBuilding.getPlacementSound(this.currentVariant.get()));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds the path which the current direction lock will use\r\n     * @returns {Array<{ tile: Vector, rotation: number }>}\r\n     */\r\n    computeDirectionLockPath() {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return [];\r\n        }\r\n\r\n        let result = [];\r\n\r\n        // Figure which points the line visits\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        let endTile = worldPos.toTileSpace();\r\n        let startTile = this.lastDragTile;\r\n\r\n        // if the alt key is pressed, reverse belt planner direction by switching start and end tile\r\n        if (this.root.keyMapper.getBinding(KEYMAPPINGS.placementModifiers.placeInverse).pressed) {\r\n            let tmp = startTile;\r\n            startTile = endTile;\r\n            endTile = tmp;\r\n        }\r\n\r\n        // Place from start to corner\r\n        const pathToCorner = this.currentDirectionLockCorner.sub(startTile);\r\n        const deltaToCorner = pathToCorner.normalize().round();\r\n        const lengthToCorner = Math.round(pathToCorner.length());\r\n        let currentPos = startTile.copy();\r\n\r\n        let rotation = (Math.round(Math.degrees(deltaToCorner.angle()) / 90) * 90 + 360) % 360;\r\n\r\n        if (lengthToCorner > 0) {\r\n            for (let i = 0; i < lengthToCorner; ++i) {\r\n                result.push({\r\n                    tile: currentPos.copy(),\r\n                    rotation,\r\n                });\r\n                currentPos.addInplace(deltaToCorner);\r\n            }\r\n        }\r\n\r\n        // Place from corner to end\r\n        const pathFromCorner = endTile.sub(this.currentDirectionLockCorner);\r\n        const deltaFromCorner = pathFromCorner.normalize().round();\r\n        const lengthFromCorner = Math.round(pathFromCorner.length());\r\n\r\n        if (lengthFromCorner > 0) {\r\n            rotation = (Math.round(Math.degrees(deltaFromCorner.angle()) / 90) * 90 + 360) % 360;\r\n            for (let i = 0; i < lengthFromCorner + 1; ++i) {\r\n                result.push({\r\n                    tile: currentPos.copy(),\r\n                    rotation,\r\n                });\r\n                currentPos.addInplace(deltaFromCorner);\r\n            }\r\n        } else {\r\n            // Finish last one\r\n            result.push({\r\n                tile: currentPos.copy(),\r\n                rotation,\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Selects a given building\r\n     * @param {MetaBuilding} metaBuilding\r\n     */\r\n    startSelection(metaBuilding) {\r\n        this.currentMetaBuilding.set(metaBuilding);\r\n    }\r\n\r\n    /**\r\n     * Called when the selected buildings changed\r\n     * @param {MetaBuilding} metaBuilding\r\n     */\r\n    onSelectedMetaBuildingChanged(metaBuilding) {\r\n        this.abortDragging();\r\n        this.root.hud.signals.selectedPlacementBuildingChanged.dispatch(metaBuilding);\r\n        if (metaBuilding) {\r\n            const availableVariants = metaBuilding.getAvailableVariants(this.root);\r\n            const preferredVariant = this.preferredVariants[metaBuilding.getId()];\r\n\r\n            // Choose last stored variant if possible, otherwise the default one\r\n            let variant;\r\n            if (!preferredVariant || !availableVariants.includes(preferredVariant)) {\r\n                variant = availableVariants[0];\r\n            } else {\r\n                variant = preferredVariant;\r\n            }\r\n\r\n            this.currentVariant.set(variant);\r\n\r\n            this.fakeEntity = new Entity(null);\r\n            metaBuilding.setupEntityComponents(this.fakeEntity, null);\r\n\r\n            this.fakeEntity.addComponent(\r\n                new StaticMapEntityComponent({\r\n                    origin: new Vector(0, 0),\r\n                    rotation: 0,\r\n                    tileSize: metaBuilding.getDimensions(this.currentVariant.get()).copy(),\r\n                    code: getCodeFromBuildingData(metaBuilding, variant, 0),\r\n                })\r\n            );\r\n            metaBuilding.updateVariants(this.fakeEntity, 0, this.currentVariant.get());\r\n        } else {\r\n            this.fakeEntity = null;\r\n        }\r\n\r\n        // Since it depends on both, rerender twice\r\n        this.signals.variantChanged.dispatch();\r\n    }\r\n\r\n    /**\r\n     * mouse down pre handler\r\n     * @param {Vector} pos\r\n     * @param {enumMouseButton} button\r\n     */\r\n    onMouseDown(pos, button) {\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            // We do not allow dragging if the overlay is active\r\n            return;\r\n        }\r\n\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n\r\n        // Placement\r\n        if (button === enumMouseButton.left && metaBuilding) {\r\n            this.currentlyDragging = true;\r\n            this.currentlyDeleting = false;\r\n            this.lastDragTile = this.root.camera.screenToWorld(pos).toTileSpace();\r\n\r\n            // Place initial building, but only if direction lock is not active\r\n            if (!this.isDirectionLockActive) {\r\n                if (this.tryPlaceCurrentBuildingAt(this.lastDragTile)) {\r\n                    this.root.soundProxy.playUi(metaBuilding.getPlacementSound(this.currentVariant.get()));\r\n                }\r\n            }\r\n            return STOP_PROPAGATION;\r\n        }\r\n\r\n        // Deletion\r\n        if (\r\n            button === enumMouseButton.right &&\r\n            (!metaBuilding || !this.root.app.settings.getAllSettings().clearCursorOnDeleteWhilePlacing)\r\n        ) {\r\n            this.currentlyDragging = true;\r\n            this.currentlyDeleting = true;\r\n            this.lastDragTile = this.root.camera.screenToWorld(pos).toTileSpace();\r\n            if (this.deleteBelowCursor()) {\r\n                return STOP_PROPAGATION;\r\n            }\r\n        }\r\n\r\n        // Cancel placement\r\n        if (button === enumMouseButton.right && metaBuilding) {\r\n            this.currentMetaBuilding.set(null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * mouse move pre handler\r\n     * @param {Vector} pos\r\n     */\r\n    onMouseMove(pos) {\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            return;\r\n        }\r\n\r\n        // Check for direction lock\r\n        if (this.isDirectionLockActive) {\r\n            return;\r\n        }\r\n\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        if ((metaBuilding || this.currentlyDeleting) && this.lastDragTile) {\r\n            const oldPos = this.lastDragTile;\r\n            let newPos = this.root.camera.screenToWorld(pos).toTileSpace();\r\n\r\n            // Check if camera is moving, since then we do nothing\r\n            if (this.root.camera.desiredCenter) {\r\n                this.lastDragTile = newPos;\r\n                return;\r\n            }\r\n\r\n            // Check if anything changed\r\n            if (!oldPos.equals(newPos)) {\r\n                // Automatic Direction\r\n                if (\r\n                    metaBuilding &&\r\n                    metaBuilding.getRotateAutomaticallyWhilePlacing(this.currentVariant.get()) &&\r\n                    !this.root.keyMapper.getBinding(\r\n                        KEYMAPPINGS.placementModifiers.placementDisableAutoOrientation\r\n                    ).pressed\r\n                ) {\r\n                    const delta = newPos.sub(oldPos);\r\n                    const angleDeg = Math.degrees(delta.angle());\r\n                    this.currentBaseRotation = (Math.round(angleDeg / 90) * 90 + 360) % 360;\r\n\r\n                    // Holding alt inverts the placement\r\n                    if (this.root.keyMapper.getBinding(KEYMAPPINGS.placementModifiers.placeInverse).pressed) {\r\n                        this.currentBaseRotation = (180 + this.currentBaseRotation) % 360;\r\n                    }\r\n                }\r\n\r\n                // bresenham\r\n                let x0 = oldPos.x;\r\n                let y0 = oldPos.y;\r\n                let x1 = newPos.x;\r\n                let y1 = newPos.y;\r\n\r\n                var dx = Math.abs(x1 - x0);\r\n                var dy = Math.abs(y1 - y0);\r\n                var sx = x0 < x1 ? 1 : -1;\r\n                var sy = y0 < y1 ? 1 : -1;\r\n                var err = dx - dy;\r\n\r\n                let anythingPlaced = false;\r\n                let anythingDeleted = false;\r\n\r\n                while (this.currentlyDeleting || this.currentMetaBuilding.get()) {\r\n                    if (this.currentlyDeleting) {\r\n                        // Deletion\r\n                        const contents = this.root.map.getLayerContentXY(x0, y0, this.root.currentLayer);\r\n                        if (contents && !contents.queuedForDestroy && !contents.destroyed) {\r\n                            if (this.root.logic.tryDeleteBuilding(contents)) {\r\n                                anythingDeleted = true;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // Placement\r\n                        if (this.tryPlaceCurrentBuildingAt(new Vector(x0, y0))) {\r\n                            anythingPlaced = true;\r\n                        }\r\n                    }\r\n\r\n                    if (x0 === x1 && y0 === y1) break;\r\n                    var e2 = 2 * err;\r\n                    if (e2 > -dy) {\r\n                        err -= dy;\r\n                        x0 += sx;\r\n                    }\r\n                    if (e2 < dx) {\r\n                        err += dx;\r\n                        y0 += sy;\r\n                    }\r\n                }\r\n\r\n                if (anythingPlaced) {\r\n                    this.root.soundProxy.playUi(metaBuilding.getPlacementSound(this.currentVariant.get()));\r\n                }\r\n                if (anythingDeleted) {\r\n                    this.root.soundProxy.playUi(SOUNDS.destroyBuilding);\r\n                }\r\n            }\r\n\r\n            this.lastDragTile = newPos;\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mouse up handler\r\n     */\r\n    onMouseUp() {\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            return;\r\n        }\r\n\r\n        // Check for direction lock\r\n        if (this.lastDragTile && this.currentlyDragging && this.isDirectionLockActive) {\r\n            this.executeDirectionLockedPlacement();\r\n        }\r\n\r\n        this.abortDragging();\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/building_placer_logic.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2055,
    "kind": "class",
    "name": "HUDBuildingPlacerLogic",
    "memberof": "js/game/hud/parts/building_placer_logic.js",
    "static": true,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/building_placer_logic.js",
    "importStyle": "{HUDBuildingPlacerLogic}",
    "description": "Contains all logic for the building placer - this doesn't include the rendering\nof info boxes or drawing.",
    "lineNumber": 23,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2056,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#initialize",
    "access": "public",
    "description": "Initializes the logic",
    "see": [
      "BaseHUDPart.initialize"
    ],
    "lineNumber": 28,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2057,
    "kind": "member",
    "name": "fakeEntity",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#fakeEntity",
    "access": "public",
    "description": "We use a fake entity to get information about how a building will look\nonce placed",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Entity"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2058,
    "kind": "member",
    "name": "signals",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#signals",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "{\"variantChanged\": *, \"draggingStarted\": *}"
      ]
    }
  },
  {
    "__docId__": 2059,
    "kind": "member",
    "name": "currentMetaBuilding",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#currentMetaBuilding",
    "access": "public",
    "description": "The current building",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "TypedTrackedState<MetaBuilding?>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2060,
    "kind": "member",
    "name": "currentBaseRotationGeneral",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#currentBaseRotationGeneral",
    "access": "public",
    "description": "The current rotation",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2061,
    "kind": "member",
    "name": "preferredBaseRotations",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#preferredBaseRotations",
    "access": "public",
    "description": "The current rotation preference for each building.\n@type{Object.<string,number>}",
    "lineNumber": 58,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 2062,
    "kind": "member",
    "name": "currentlyDragging",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#currentlyDragging",
    "access": "public",
    "description": "Whether we are currently dragging",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2063,
    "kind": "member",
    "name": "currentVariant",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#currentVariant",
    "access": "public",
    "description": "Current building variant",
    "lineNumber": 70,
    "type": {
      "nullable": null,
      "types": [
        "TypedTrackedState<string>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2064,
    "kind": "member",
    "name": "currentlyDeleting",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#currentlyDeleting",
    "access": "public",
    "description": "Whether we are currently drag-deleting",
    "lineNumber": 76,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2065,
    "kind": "member",
    "name": "preferredVariants",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#preferredVariants",
    "access": "public",
    "description": "Stores which variants for each building we prefer, this is based on what\nthe user last selected",
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "Object.<string, string>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2066,
    "kind": "member",
    "name": "lastDragTile",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#lastDragTile",
    "access": "public",
    "description": "The tile we last dragged from",
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2067,
    "kind": "member",
    "name": "currentDirectionLockSide",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#currentDirectionLockSide",
    "access": "public",
    "description": "The side for direction lock",
    "lineNumber": 95,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2068,
    "kind": "member",
    "name": "currentDirectionLockSideIndeterminate",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#currentDirectionLockSideIndeterminate",
    "access": "public",
    "description": "Whether the side for direction lock has not yet been determined.",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2069,
    "kind": "method",
    "name": "initializeBindings",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#initializeBindings",
    "access": "public",
    "description": "Initializes all bindings",
    "lineNumber": 109,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2070,
    "kind": "method",
    "name": "onEditModeChanged",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#onEditModeChanged",
    "access": "public",
    "description": "Called when the edit mode got changed",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2071,
    "kind": "get",
    "name": "currentBaseRotation",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#currentBaseRotation",
    "access": "public",
    "description": "Returns the current base rotation for the current meta-building.",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2072,
    "kind": "set",
    "name": "currentBaseRotation",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#currentBaseRotation",
    "access": "public",
    "description": "Sets the base rotation for the current meta-building.",
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": "The new rotation/angle."
      }
    ]
  },
  {
    "__docId__": 2075,
    "kind": "get",
    "name": "isDirectionLockActive",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#isDirectionLockActive",
    "access": "public",
    "description": "Returns if the direction lock is currently active",
    "lineNumber": 186,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2076,
    "kind": "get",
    "name": "currentDirectionLockCorner",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#currentDirectionLockCorner",
    "access": "public",
    "description": "Returns the current direction lock corner, that is, the corner between\nmouse and original start point",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector|null}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector",
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2080,
    "kind": "method",
    "name": "abortPlacement",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#abortPlacement",
    "access": "public",
    "description": "Aborts the placement",
    "lineNumber": 237,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2081,
    "kind": "method",
    "name": "abortDragging",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#abortDragging",
    "access": "public",
    "description": "Aborts any dragging",
    "lineNumber": 247,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2084,
    "kind": "member",
    "name": "initialPlacementVector",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#initialPlacementVector",
    "access": "public",
    "description": null,
    "lineNumber": 250,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2086,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#update",
    "access": "public",
    "description": "",
    "see": [
      "BaseHUDPart.update"
    ],
    "lineNumber": 257,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2087,
    "kind": "method",
    "name": "tryRotate",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#tryRotate",
    "access": "public",
    "description": "Tries to rotate the current building",
    "lineNumber": 281,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2090,
    "kind": "method",
    "name": "deleteBelowCursor",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#deleteBelowCursor",
    "access": "public",
    "description": "Tries to delete the building under the mouse",
    "lineNumber": 296,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2091,
    "kind": "method",
    "name": "startPipette",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#startPipette",
    "access": "public",
    "description": "Starts the pipette function",
    "lineNumber": 318,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2093,
    "kind": "method",
    "name": "switchDirectionLockSide",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#switchDirectionLockSide",
    "access": "public",
    "description": "Switches the side for the direction lock manually",
    "lineNumber": 386,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2095,
    "kind": "method",
    "name": "checkForDirectionLockSwitch",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#checkForDirectionLockSwitch",
    "access": "public",
    "description": "Checks if the direction lock key got released and if such, resets the placement",
    "lineNumber": 394,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2096,
    "kind": "method",
    "name": "tryPlaceCurrentBuildingAt",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#tryPlaceCurrentBuildingAt",
    "access": "public",
    "description": "Tries to place the current building at the given tile",
    "lineNumber": 407,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "tile",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2098,
    "kind": "method",
    "name": "cycleVariants",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#cycleVariants",
    "access": "public",
    "description": "Cycles through the variants",
    "lineNumber": 462,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2099,
    "kind": "method",
    "name": "setVariant",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#setVariant",
    "access": "public",
    "description": "Sets the current variant to the given variant",
    "lineNumber": 488,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2100,
    "kind": "method",
    "name": "executeDirectionLockedPlacement",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#executeDirectionLockedPlacement",
    "access": "public",
    "description": "Performs the direction locked placement between two points after\nreleasing the mouse",
    "lineNumber": 499,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2102,
    "kind": "method",
    "name": "computeDirectionLockPath",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#computeDirectionLockPath",
    "access": "public",
    "description": "Finds the path which the current direction lock will use",
    "lineNumber": 532,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<{ tile: Vector, rotation: number }>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<{ tile: Vector, rotation: number }>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 2103,
    "kind": "method",
    "name": "startSelection",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#startSelection",
    "access": "public",
    "description": "Selects a given building",
    "lineNumber": 599,
    "params": [
      {
        "nullable": null,
        "types": [
          "MetaBuilding"
        ],
        "spread": false,
        "optional": false,
        "name": "metaBuilding",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2104,
    "kind": "method",
    "name": "onSelectedMetaBuildingChanged",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#onSelectedMetaBuildingChanged",
    "access": "public",
    "description": "Called when the selected buildings changed",
    "lineNumber": 607,
    "params": [
      {
        "nullable": null,
        "types": [
          "MetaBuilding"
        ],
        "spread": false,
        "optional": false,
        "name": "metaBuilding",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2107,
    "kind": "method",
    "name": "onMouseDown",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#onMouseDown",
    "access": "public",
    "description": "mouse down pre handler",
    "lineNumber": 649,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumMouseButton"
        ],
        "spread": false,
        "optional": false,
        "name": "button",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2114,
    "kind": "method",
    "name": "onMouseMove",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#onMouseMove",
    "access": "public",
    "description": "mouse move pre handler",
    "lineNumber": 695,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2119,
    "kind": "method",
    "name": "onMouseUp",
    "memberof": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/building_placer_logic.js~HUDBuildingPlacerLogic#onMouseUp",
    "access": "public",
    "description": "Mouse up handler",
    "lineNumber": 795,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2120,
    "kind": "file",
    "name": "js/game/hud/parts/cat_memes.js",
    "content": "import { makeDiv } from \"../../../core/utils\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\n\r\nconst memeShowIntervalSeconds = 70 * 60;\r\nconst memeShowDuration = 5;\r\n\r\nexport class HUDCatMemes extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_HUD_CatMemes\");\r\n    }\r\n\r\n    initialize() {\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element);\r\n    }\r\n\r\n    update() {\r\n        const now = this.root.time.realtimeNow();\r\n        this.domAttach.update(now % memeShowIntervalSeconds > memeShowIntervalSeconds - memeShowDuration);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/cat_memes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2121,
    "kind": "variable",
    "name": "memeShowIntervalSeconds",
    "memberof": "js/game/hud/parts/cat_memes.js",
    "static": true,
    "longname": "js/game/hud/parts/cat_memes.js~memeShowIntervalSeconds",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/cat_memes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2122,
    "kind": "variable",
    "name": "memeShowDuration",
    "memberof": "js/game/hud/parts/cat_memes.js",
    "static": true,
    "longname": "js/game/hud/parts/cat_memes.js~memeShowDuration",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/cat_memes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2123,
    "kind": "class",
    "name": "HUDCatMemes",
    "memberof": "js/game/hud/parts/cat_memes.js",
    "static": true,
    "longname": "js/game/hud/parts/cat_memes.js~HUDCatMemes",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/cat_memes.js",
    "importStyle": "{HUDCatMemes}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2124,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/cat_memes.js~HUDCatMemes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/cat_memes.js~HUDCatMemes#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2125,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/cat_memes.js~HUDCatMemes",
    "static": false,
    "longname": "js/game/hud/parts/cat_memes.js~HUDCatMemes#element",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2126,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/cat_memes.js~HUDCatMemes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/cat_memes.js~HUDCatMemes#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2127,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/cat_memes.js~HUDCatMemes",
    "static": false,
    "longname": "js/game/hud/parts/cat_memes.js~HUDCatMemes#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2128,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/cat_memes.js~HUDCatMemes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/cat_memes.js~HUDCatMemes#update",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2129,
    "kind": "file",
    "name": "js/game/hud/parts/color_blind_helper.js",
    "content": "import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { TrackedState } from \"../../../core/tracked_state\";\r\nimport { enumColors } from \"../../colors\";\r\nimport { ColorItem } from \"../../items/color_item\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { THEME } from \"../../theme\";\r\nimport { globalConfig } from \"../../../core/config\";\r\nimport { T } from \"../../../translations\";\r\n\r\nexport class HUDColorBlindHelper extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.belowTileIndicator = makeDiv(parent, \"ingame_HUD_ColorBlindBelowTileHelper\", []);\r\n    }\r\n\r\n    initialize() {\r\n        this.trackedColorBelowTile = new TrackedState(this.onColorBelowTileChanged, this);\r\n    }\r\n\r\n    /**\r\n     * Called when the color below the current tile changed\r\n     * @param {enumColors|null} color\r\n     */\r\n    onColorBelowTileChanged(color) {\r\n        this.belowTileIndicator.classList.toggle(\"visible\", !!color);\r\n        if (color) {\r\n            this.belowTileIndicator.innerText = T.ingame.colors[color];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Computes the color below the current tile\r\n     * @returns {enumColors}\r\n     */\r\n    computeColorBelowTile() {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return null;\r\n        }\r\n\r\n        if (this.root.currentLayer !== \"regular\") {\r\n            // Not in regular mode\r\n            return null;\r\n        }\r\n\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        const tile = worldPos.toTileSpace();\r\n        const contents = this.root.map.getTileContent(tile, this.root.currentLayer);\r\n\r\n        if (contents && !contents.components.Miner) {\r\n            const beltComp = contents.components.Belt;\r\n\r\n            // Check if the belt has a color item\r\n            if (beltComp) {\r\n                const item = beltComp.assignedPath.findItemAtTile(tile);\r\n                if (item && item.getItemType() === \"color\") {\r\n                    return /** @type {ColorItem} */ (item).color;\r\n                }\r\n            }\r\n\r\n            // Check if we are ejecting an item, if so use that color\r\n            const ejectorComp = contents.components.ItemEjector;\r\n            if (ejectorComp) {\r\n                for (let i = 0; i < ejectorComp.slots.length; ++i) {\r\n                    const slot = ejectorComp.slots[i];\r\n                    if (slot.item && slot.item.getItemType() === \"color\") {\r\n                        return /** @type {ColorItem} */ (slot.item).color;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            // We hovered a lower layer, show the color there\r\n            const lowerLayer = this.root.map.getLowerLayerContentXY(tile.x, tile.y);\r\n            if (lowerLayer && lowerLayer.getItemType() === \"color\") {\r\n                return /** @type {ColorItem} */ (lowerLayer).color;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    update() {\r\n        this.trackedColorBelowTile.set(this.computeColorBelowTile());\r\n    }\r\n\r\n    /**\r\n     * Draws the currently selected tile\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return null;\r\n        }\r\n\r\n        const below = this.computeColorBelowTile();\r\n        if (below) {\r\n            // We have something below our tile\r\n            const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n            const tile = worldPos.toTileSpace().toWorldSpace();\r\n\r\n            parameters.context.strokeStyle = THEME.map.colorBlindPickerTile;\r\n            parameters.context.lineWidth = 1;\r\n            parameters.context.beginPath();\r\n            parameters.context.rect(tile.x, tile.y, globalConfig.tileSize, globalConfig.tileSize);\r\n            parameters.context.stroke();\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/color_blind_helper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2130,
    "kind": "class",
    "name": "HUDColorBlindHelper",
    "memberof": "js/game/hud/parts/color_blind_helper.js",
    "static": true,
    "longname": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/color_blind_helper.js",
    "importStyle": "{HUDColorBlindHelper}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2131,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2132,
    "kind": "member",
    "name": "belowTileIndicator",
    "memberof": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper",
    "static": false,
    "longname": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper#belowTileIndicator",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2133,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2134,
    "kind": "member",
    "name": "trackedColorBelowTile",
    "memberof": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper",
    "static": false,
    "longname": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper#trackedColorBelowTile",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2135,
    "kind": "method",
    "name": "onColorBelowTileChanged",
    "memberof": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper#onColorBelowTileChanged",
    "access": "public",
    "description": "Called when the color below the current tile changed",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "enumColors",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2136,
    "kind": "method",
    "name": "computeColorBelowTile",
    "memberof": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper#computeColorBelowTile",
    "access": "public",
    "description": "Computes the color below the current tile",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{enumColors}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "enumColors"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 2137,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper#update",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2138,
    "kind": "method",
    "name": "draw",
    "memberof": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/color_blind_helper.js~HUDColorBlindHelper#draw",
    "access": "public",
    "description": "Draws the currently selected tile",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2139,
    "kind": "file",
    "name": "js/game/hud/parts/constant_signal_edit.js",
    "content": "import { STOP_PROPAGATION } from \"../../../core/signal\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { enumMouseButton } from \"../../camera\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\n\r\nexport class HUDConstantSignalEdit extends BaseHUDPart {\r\n    initialize() {\r\n        this.root.camera.downPreHandler.add(this.downPreHandler, this);\r\n    }\r\n\r\n    /**\r\n     * @param {Vector} pos\r\n     * @param {enumMouseButton} button\r\n     */\r\n    downPreHandler(pos, button) {\r\n        if (this.root.currentLayer !== \"wires\") {\r\n            return;\r\n        }\r\n\r\n        const tile = this.root.camera.screenToWorld(pos).toTileSpace();\r\n        const contents = this.root.map.getLayerContentXY(tile.x, tile.y, \"wires\");\r\n        if (contents) {\r\n            const constantComp = contents.components.ConstantSignal;\r\n            if (constantComp) {\r\n                if (button === enumMouseButton.left) {\r\n                    this.root.systemMgr.systems.constantSignal.editConstantSignal(contents, {\r\n                        deleteOnCancel: false,\r\n                    });\r\n                    return STOP_PROPAGATION;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/constant_signal_edit.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2140,
    "kind": "class",
    "name": "HUDConstantSignalEdit",
    "memberof": "js/game/hud/parts/constant_signal_edit.js",
    "static": true,
    "longname": "js/game/hud/parts/constant_signal_edit.js~HUDConstantSignalEdit",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/constant_signal_edit.js",
    "importStyle": "{HUDConstantSignalEdit}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2141,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/constant_signal_edit.js~HUDConstantSignalEdit",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/constant_signal_edit.js~HUDConstantSignalEdit#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2142,
    "kind": "method",
    "name": "downPreHandler",
    "memberof": "js/game/hud/parts/constant_signal_edit.js~HUDConstantSignalEdit",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/constant_signal_edit.js~HUDConstantSignalEdit#downPreHandler",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumMouseButton"
        ],
        "spread": false,
        "optional": false,
        "name": "button",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2143,
    "kind": "file",
    "name": "js/game/hud/parts/debug_changes.js",
    "content": "import { globalConfig } from \"../../../core/config\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { Rectangle } from \"../../../core/rectangle\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\n\r\n/**\r\n * @typedef {{\r\n *    label: string,\r\n *    area: Rectangle,\r\n *    hideAt: number,\r\n *    fillColor: string\r\n * }} DebugChange\r\n */\r\n\r\nexport class HUDChangesDebugger extends BaseHUDPart {\r\n    createElements(parent) {}\r\n\r\n    initialize() {\r\n        /** @type {Array<DebugChange>} */\r\n        this.changes = [];\r\n    }\r\n\r\n    /**\r\n     * Renders a new change\r\n     * @param {string} label Text to display\r\n     * @param {Rectangle} area Affected area world space\r\n     * @param {string} fillColor Color to display (Hex)\r\n     * @param {number=} timeToDisplay How long to display the change\r\n     */\r\n    renderChange(label, area, fillColor, timeToDisplay = 0.3) {\r\n        this.changes.push({\r\n            label,\r\n            area: area.clone(),\r\n            fillColor,\r\n            hideAt: this.root.time.realtimeNow() + timeToDisplay,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        const now = this.root.time.realtimeNow();\r\n        // Detect outdated changes\r\n        for (let i = 0; i < this.changes.length; ++i) {\r\n            const change = this.changes[i];\r\n            if (change.hideAt <= now) {\r\n                this.changes.splice(i, 1);\r\n                i -= 1;\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        for (let i = 0; i < this.changes.length; ++i) {\r\n            const change = this.changes[i];\r\n            parameters.context.fillStyle = change.fillColor;\r\n            parameters.context.globalAlpha = 0.2;\r\n            parameters.context.fillRect(\r\n                change.area.x * globalConfig.tileSize,\r\n                change.area.y * globalConfig.tileSize,\r\n                change.area.w * globalConfig.tileSize,\r\n                change.area.h * globalConfig.tileSize\r\n            );\r\n\r\n            parameters.context.fillStyle = \"#222\";\r\n            parameters.context.globalAlpha = 1;\r\n            parameters.context.font = \"bold 8px GameFont\";\r\n            parameters.context.fillText(\r\n                change.label,\r\n                change.area.x * globalConfig.tileSize + 2,\r\n                change.area.y * globalConfig.tileSize + 12\r\n            );\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/debug_changes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2144,
    "kind": "typedef",
    "name": "DebugChange",
    "memberof": "js/game/hud/parts/debug_changes.js",
    "static": true,
    "longname": "js/game/hud/parts/debug_changes.js~DebugChange",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "type": {
      "types": [
        "{\n   label: string,\n   area: Rectangle,\n   hideAt: number,\n   fillColor: string\n}"
      ],
      "optional": false,
      "name": "DebugChange"
    }
  },
  {
    "__docId__": 2145,
    "kind": "file",
    "name": "js/game/hud/parts/debug_info.js",
    "content": "import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv, round3Digits, round2Digits } from \"../../../core/utils\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { TrackedState } from \"../../../core/tracked_state\";\r\n\r\n/** @enum {string} */\r\nconst enumDebugOverlayMode = { disabled: \"disabled\", regular: \"regular\", detailed: \"detailed\" };\r\n\r\n/**\r\n * Specifies which mode follows after which mode\r\n * @enum {enumDebugOverlayMode}\r\n */\r\nconst enumDebugOverlayModeNext = {\r\n    [enumDebugOverlayMode.disabled]: enumDebugOverlayMode.regular,\r\n    [enumDebugOverlayMode.regular]: enumDebugOverlayMode.detailed,\r\n    [enumDebugOverlayMode.detailed]: enumDebugOverlayMode.disabled,\r\n};\r\n\r\nconst UPDATE_INTERVAL_SECONDS = 0.25;\r\n\r\nexport class HUDDebugInfo extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_HUD_DebugInfo\", []);\r\n\r\n        const tickRateElement = makeDiv(this.element, null, [\"tickRate\"]);\r\n        this.trackedTickRate = new TrackedState(str => (tickRateElement.innerText = str));\r\n\r\n        const tickDurationElement = makeDiv(this.element, null, [\"tickDuration\"]);\r\n        this.trackedTickDuration = new TrackedState(str => (tickDurationElement.innerText = str));\r\n\r\n        const fpsElement = makeDiv(this.element, null, [\"fps\"]);\r\n        this.trackedFPS = new TrackedState(str => (fpsElement.innerText = str));\r\n\r\n        const mousePositionElement = makeDiv(this.element, null, [\"mousePosition\"]);\r\n        this.trackedMousePosition = new TrackedState(str => (mousePositionElement.innerHTML = str));\r\n\r\n        const cameraPositionElement = makeDiv(this.element, null, [\"cameraPosition\"]);\r\n        this.trackedCameraPosition = new TrackedState(str => (cameraPositionElement.innerHTML = str));\r\n\r\n        this.versionElement = makeDiv(this.element, null, [\"version\"], \"version unknown\");\r\n    }\r\n\r\n    initialize() {\r\n        this.lastTick = 0;\r\n\r\n        this.trackedMode = new TrackedState(this.onModeChanged, this);\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element);\r\n\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.ingame.toggleFPSInfo).add(() => this.cycleModes());\r\n\r\n        // Set initial mode\r\n        this.trackedMode.set(enumDebugOverlayMode.disabled);\r\n    }\r\n\r\n    /**\r\n     * Called when the mode changed\r\n     * @param {enumDebugOverlayMode} mode\r\n     */\r\n    onModeChanged(mode) {\r\n        this.element.setAttribute(\"data-mode\", mode);\r\n        this.versionElement.innerText = `${G_BUILD_VERSION} @ ${G_APP_ENVIRONMENT} @ ${G_BUILD_COMMIT_HASH}`;\r\n    }\r\n\r\n    /**\r\n     * Updates the labels\r\n     */\r\n    updateLabels() {\r\n        this.trackedTickRate.set(\"Tickrate: \" + this.root.dynamicTickrate.currentTickRate);\r\n        this.trackedFPS.set(\r\n            \"FPS: \" +\r\n                Math.round(this.root.dynamicTickrate.averageFps) +\r\n                \" (\" +\r\n                round2Digits(1000 / this.root.dynamicTickrate.averageFps) +\r\n                \" ms)\"\r\n        );\r\n        this.trackedTickDuration.set(\r\n            \"Tick: \" + round3Digits(this.root.dynamicTickrate.averageTickDuration) + \"ms\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Updates the detailed information\r\n     */\r\n    updateDetailedInformation() {\r\n        const mousePos = this.root.app.mousePosition || new Vector(0, 0);\r\n        const mouseTile = this.root.camera.screenToWorld(mousePos).toTileSpace();\r\n        const cameraTile = this.root.camera.center.toTileSpace();\r\n\r\n        this.trackedMousePosition.set(`Mouse: <code>${mouseTile.x}</code> / <code>${mouseTile.y}</code>`);\r\n        this.trackedCameraPosition.set(`Camera: <code>${cameraTile.x}</code> / <code>${cameraTile.y}</code>`);\r\n    }\r\n\r\n    /**\r\n     * Cycles through the different modes\r\n     */\r\n    cycleModes() {\r\n        this.trackedMode.set(enumDebugOverlayModeNext[this.trackedMode.get()]);\r\n    }\r\n\r\n    update() {\r\n        const visible = this.trackedMode.get() !== enumDebugOverlayMode.disabled;\r\n        this.domAttach.update(visible);\r\n\r\n        if (!visible) {\r\n            return;\r\n        }\r\n\r\n        // Periodically update the text\r\n        const now = this.root.time.realtimeNow();\r\n        if (now - this.lastTick > UPDATE_INTERVAL_SECONDS) {\r\n            this.lastTick = now;\r\n            this.updateLabels();\r\n        }\r\n\r\n        // Also update detailed information if required\r\n        if (this.trackedMode.get() === enumDebugOverlayMode.detailed) {\r\n            this.updateDetailedInformation();\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/debug_info.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2146,
    "kind": "variable",
    "name": "enumDebugOverlayMode",
    "memberof": "js/game/hud/parts/debug_info.js",
    "static": true,
    "longname": "js/game/hud/parts/debug_info.js~enumDebugOverlayMode",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/debug_info.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"disabled\": string, \"regular\": string, \"detailed\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2147,
    "kind": "variable",
    "name": "enumDebugOverlayModeNext",
    "memberof": "js/game/hud/parts/debug_info.js",
    "static": true,
    "longname": "js/game/hud/parts/debug_info.js~enumDebugOverlayModeNext",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/debug_info.js",
    "importStyle": null,
    "description": "Specifies which mode follows after which mode",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{enumDebugOverlayMode}"
      }
    ],
    "type": {
      "types": [
        "{\"undefined\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2148,
    "kind": "variable",
    "name": "UPDATE_INTERVAL_SECONDS",
    "memberof": "js/game/hud/parts/debug_info.js",
    "static": true,
    "longname": "js/game/hud/parts/debug_info.js~UPDATE_INTERVAL_SECONDS",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/debug_info.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2149,
    "kind": "class",
    "name": "HUDDebugInfo",
    "memberof": "js/game/hud/parts/debug_info.js",
    "static": true,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/debug_info.js",
    "importStyle": "{HUDDebugInfo}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2150,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2151,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#element",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2152,
    "kind": "member",
    "name": "trackedTickRate",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#trackedTickRate",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2153,
    "kind": "member",
    "name": "trackedTickDuration",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#trackedTickDuration",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2154,
    "kind": "member",
    "name": "trackedFPS",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#trackedFPS",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2155,
    "kind": "member",
    "name": "trackedMousePosition",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#trackedMousePosition",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2156,
    "kind": "member",
    "name": "trackedCameraPosition",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#trackedCameraPosition",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2157,
    "kind": "member",
    "name": "versionElement",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#versionElement",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2158,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2159,
    "kind": "member",
    "name": "lastTick",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#lastTick",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2160,
    "kind": "member",
    "name": "trackedMode",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#trackedMode",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2161,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2162,
    "kind": "method",
    "name": "onModeChanged",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#onModeChanged",
    "access": "public",
    "description": "Called when the mode changed",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "enumDebugOverlayMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2163,
    "kind": "method",
    "name": "updateLabels",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#updateLabels",
    "access": "public",
    "description": "Updates the labels",
    "lineNumber": 69,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2164,
    "kind": "method",
    "name": "updateDetailedInformation",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#updateDetailedInformation",
    "access": "public",
    "description": "Updates the detailed information",
    "lineNumber": 86,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2165,
    "kind": "method",
    "name": "cycleModes",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#cycleModes",
    "access": "public",
    "description": "Cycles through the different modes",
    "lineNumber": 98,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2166,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/debug_info.js~HUDDebugInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/debug_info.js~HUDDebugInfo#update",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2168,
    "kind": "file",
    "name": "js/game/hud/parts/entity_debugger.js",
    "content": "/* dev:start */\r\nimport { makeDiv, removeAllChildren } from \"../../../core/utils\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { Entity } from \"../../entity\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\n\r\n/**\r\n * Allows to inspect entities by pressing F8 while hovering them\r\n */\r\nexport class HUDEntityDebugger extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(\r\n            parent,\r\n            \"ingame_HUD_EntityDebugger\",\r\n            [],\r\n            `\r\n            <label>Entity Debugger</label>\r\n            <span class=\"hint\">Use F8 to toggle this overlay</span>\r\n\r\n            <div class=\"propertyTable\">\r\n                <div class=\"entityComponents\"></div>\r\n            </div>\r\n        `\r\n        );\r\n        this.componentsElem = this.element.querySelector(\".entityComponents\");\r\n    }\r\n\r\n    initialize() {\r\n        this.root.gameState.inputReciever.keydown.add(key => {\r\n            if (key.keyCode === 119) {\r\n                // F8\r\n                this.pickEntity();\r\n            }\r\n        });\r\n\r\n        /**\r\n         * The currently selected entity\r\n         * @type {Entity}\r\n         */\r\n        this.selectedEntity = null;\r\n\r\n        this.lastUpdate = 0;\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element);\r\n    }\r\n\r\n    pickEntity() {\r\n        const mousePos = this.root.app.mousePosition;\r\n        if (!mousePos) {\r\n            return;\r\n        }\r\n        const worldPos = this.root.camera.screenToWorld(mousePos);\r\n        const worldTile = worldPos.toTileSpace();\r\n        const entity = this.root.map.getTileContent(worldTile, this.root.currentLayer);\r\n\r\n        this.selectedEntity = entity;\r\n        if (entity) {\r\n            this.rerenderFull(entity);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} name\r\n     * @param {any} val\r\n     * @param {number} indent\r\n     * @param {Array} recursion\r\n     */\r\n    propertyToHTML(name, val, indent = 0, recursion = []) {\r\n        if (indent > 20) {\r\n            return;\r\n        }\r\n\r\n        if (val !== null && typeof val === \"object\") {\r\n            // Array is displayed like object, with indexes\r\n            recursion.push(val);\r\n\r\n            // Get type class name (like Array, Object, Vector...)\r\n            let typeName = `(${val.constructor ? val.constructor.name : \"unknown\"})`;\r\n\r\n            if (Array.isArray(val)) {\r\n                typeName = `(Array[${val.length}])`;\r\n            }\r\n\r\n            if (val instanceof Vector) {\r\n                typeName = `(Vector[${val.x}, ${val.y}])`;\r\n            }\r\n\r\n            const colorStyle = `color: hsl(${30 * indent}, 100%, 80%)`;\r\n\r\n            let html = `<details class=\"object\" style=\"${colorStyle}\">\r\n                            <summary>${name} ${typeName}</summary>\r\n                            <div>`;\r\n\r\n            for (const property in val) {\r\n                const isRoot = val[property] == this.root;\r\n                const isRecursive = recursion.includes(val[property]);\r\n\r\n                let hiddenValue = isRoot ? \"<root>\" : null;\r\n                if (isRecursive) {\r\n                    // Avoid recursion by not \"expanding\" object more than once\r\n                    hiddenValue = \"<recursion>\";\r\n                }\r\n\r\n                html += this.propertyToHTML(\r\n                    property,\r\n                    hiddenValue ? hiddenValue : val[property],\r\n                    indent + 1,\r\n                    [...recursion] // still expand same value in other \"branches\"\r\n                );\r\n            }\r\n\r\n            html += \"</div></details>\";\r\n\r\n            return html;\r\n        }\r\n\r\n        const displayValue = (val + \"\")\r\n            .replaceAll(\"&\", \"&amp;\")\r\n            .replaceAll(\"<\", \"&lt;\")\r\n            .replaceAll(\">\", \"&gt;\");\r\n        return `<label>${name}</label> <span>${displayValue}</span>`;\r\n    }\r\n\r\n    /**\r\n     * Rerenders the whole container\r\n     * @param {Entity} entity\r\n     */\r\n    rerenderFull(entity) {\r\n        removeAllChildren(this.componentsElem);\r\n        let html = \"\";\r\n\r\n        const property = (strings, val) => `<label>${strings[0]}</label> <span>${val}</span>`;\r\n\r\n        html += property`registered ${!!entity.registered}`;\r\n        html += property`uid ${entity.uid}`;\r\n        html += property`destroyed ${!!entity.destroyed}`;\r\n\r\n        for (const componentId in entity.components) {\r\n            const data = entity.components[componentId];\r\n            html += \"<details class='object'>\";\r\n            html += \"<summary>\" + componentId + \"</summary><div>\";\r\n\r\n            for (const property in data) {\r\n                // Put entity into recursion list, so it won't get \"expanded\"\r\n                html += this.propertyToHTML(property, data[property], 0, [entity]);\r\n            }\r\n\r\n            html += \"</div></details>\";\r\n        }\r\n\r\n        this.componentsElem.innerHTML = html;\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(!!this.selectedEntity);\r\n    }\r\n}\r\n\r\n/* dev:end */\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/entity_debugger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2169,
    "kind": "class",
    "name": "HUDEntityDebugger",
    "memberof": "js/game/hud/parts/entity_debugger.js",
    "static": true,
    "longname": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/entity_debugger.js",
    "importStyle": "{HUDEntityDebugger}",
    "description": "Allows to inspect entities by pressing F8 while hovering them",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2170,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2171,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger",
    "static": false,
    "longname": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger#element",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2172,
    "kind": "member",
    "name": "componentsElem",
    "memberof": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger",
    "static": false,
    "longname": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger#componentsElem",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2173,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2174,
    "kind": "member",
    "name": "selectedEntity",
    "memberof": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger",
    "static": false,
    "longname": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger#selectedEntity",
    "access": "public",
    "description": "The currently selected entity",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "Entity"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2175,
    "kind": "member",
    "name": "lastUpdate",
    "memberof": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger",
    "static": false,
    "longname": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger#lastUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2176,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger",
    "static": false,
    "longname": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2177,
    "kind": "method",
    "name": "pickEntity",
    "memberof": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger#pickEntity",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2179,
    "kind": "method",
    "name": "propertyToHTML",
    "memberof": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger#propertyToHTML",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "indent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "recursion",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2180,
    "kind": "method",
    "name": "rerenderFull",
    "memberof": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger#rerenderFull",
    "access": "public",
    "description": "Rerenders the whole container",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2181,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/entity_debugger.js~HUDEntityDebugger#update",
    "access": "public",
    "description": null,
    "lineNumber": 156,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2182,
    "kind": "file",
    "name": "js/game/hud/parts/game_menu.js",
    "content": "import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { SOUNDS } from \"../../../platform/sound\";\r\nimport { enumNotificationType } from \"./notifications\";\r\nimport { T } from \"../../../translations\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { TrackedState } from \"../../../core/tracked_state\";\r\n\r\nexport class HUDGameMenu extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_HUD_GameMenu\");\r\n\r\n        const buttons = [\r\n            {\r\n                id: \"shop\",\r\n                label: \"Upgrades\",\r\n                handler: () => this.root.hud.parts.shop.show(),\r\n                keybinding: KEYMAPPINGS.ingame.menuOpenShop,\r\n                badge: () => this.root.hubGoals.getAvailableUpgradeCount(),\r\n                notification: /** @type {[string, enumNotificationType]} */ ([\r\n                    T.ingame.notifications.newUpgrade,\r\n                    enumNotificationType.upgrade,\r\n                ]),\r\n                visible: () =>\r\n                    !this.root.app.settings.getAllSettings().offerHints || this.root.hubGoals.level >= 3,\r\n            },\r\n            {\r\n                id: \"stats\",\r\n                label: \"Stats\",\r\n                handler: () => this.root.hud.parts.statistics.show(),\r\n                keybinding: KEYMAPPINGS.ingame.menuOpenStats,\r\n                visible: () =>\r\n                    !this.root.app.settings.getAllSettings().offerHints || this.root.hubGoals.level >= 3,\r\n            },\r\n        ];\r\n\r\n        /** @type {Array<{\r\n         * badge: function,\r\n         * button: HTMLElement,\r\n         * badgeElement: HTMLElement,\r\n         * lastRenderAmount: number,\r\n         * condition?: function,\r\n         * notification: [string, enumNotificationType]\r\n         * }>} */\r\n        this.badgesToUpdate = [];\r\n\r\n        /** @type {Array<{\r\n         * button: HTMLElement,\r\n         * condition: function,\r\n         * domAttach: DynamicDomAttach\r\n         * }>} */\r\n        this.visibilityToUpdate = [];\r\n\r\n        buttons.forEach(({ id, label, handler, keybinding, badge, notification, visible }) => {\r\n            const button = document.createElement(\"button\");\r\n            button.classList.add(id);\r\n            this.element.appendChild(button);\r\n            this.trackClicks(button, handler);\r\n\r\n            if (keybinding) {\r\n                const binding = this.root.keyMapper.getBinding(keybinding);\r\n                binding.add(handler);\r\n            }\r\n\r\n            if (visible) {\r\n                this.visibilityToUpdate.push({\r\n                    button,\r\n                    condition: visible,\r\n                    domAttach: new DynamicDomAttach(this.root, button),\r\n                });\r\n            }\r\n\r\n            if (badge) {\r\n                const badgeElement = makeDiv(button, null, [\"badge\"]);\r\n                this.badgesToUpdate.push({\r\n                    badge,\r\n                    lastRenderAmount: 0,\r\n                    button,\r\n                    badgeElement,\r\n                    notification,\r\n                    condition: visible,\r\n                });\r\n            }\r\n        });\r\n\r\n        this.saveButton = makeDiv(this.element, null, [\"button\", \"save\", \"animEven\"]);\r\n        this.settingsButton = makeDiv(this.element, null, [\"button\", \"settings\"]);\r\n\r\n        this.trackClicks(this.saveButton, this.startSave);\r\n        this.trackClicks(this.settingsButton, this.openSettings);\r\n    }\r\n\r\n    initialize() {\r\n        this.root.signals.gameSaved.add(this.onGameSaved, this);\r\n\r\n        this.trackedIsSaving = new TrackedState(this.onIsSavingChanged, this);\r\n    }\r\n\r\n    update() {\r\n        let playSound = false;\r\n        let notifications = new Set();\r\n\r\n        // Check whether we are saving\r\n        this.trackedIsSaving.set(!!this.root.gameState.currentSavePromise);\r\n\r\n        // Update visibility of buttons\r\n        for (let i = 0; i < this.visibilityToUpdate.length; ++i) {\r\n            const { condition, domAttach } = this.visibilityToUpdate[i];\r\n            domAttach.update(condition());\r\n        }\r\n\r\n        // Check for notifications and badges\r\n        for (let i = 0; i < this.badgesToUpdate.length; ++i) {\r\n            const {\r\n                badge,\r\n                button,\r\n                badgeElement,\r\n                lastRenderAmount,\r\n                notification,\r\n                condition,\r\n            } = this.badgesToUpdate[i];\r\n\r\n            if (condition && !condition()) {\r\n                // Do not show notifications for invisible buttons\r\n                continue;\r\n            }\r\n\r\n            // Check if the amount shown differs from the one shown last frame\r\n            const amount = badge();\r\n            if (lastRenderAmount !== amount) {\r\n                if (amount > 0) {\r\n                    badgeElement.innerText = amount;\r\n                }\r\n                // Check if the badge increased, if so play a notification\r\n                if (amount > lastRenderAmount) {\r\n                    playSound = true;\r\n                    if (notification) {\r\n                        notifications.add(notification);\r\n                    }\r\n                }\r\n\r\n                // Rerender notifications\r\n                this.badgesToUpdate[i].lastRenderAmount = amount;\r\n                button.classList.toggle(\"hasBadge\", amount > 0);\r\n            }\r\n        }\r\n\r\n        if (playSound) {\r\n            this.root.soundProxy.playUi(SOUNDS.badgeNotification);\r\n        }\r\n\r\n        notifications.forEach(([notification, type]) => {\r\n            this.root.hud.signals.notification.dispatch(notification, type);\r\n        });\r\n    }\r\n\r\n    onIsSavingChanged(isSaving) {\r\n        this.saveButton.classList.toggle(\"saving\", isSaving);\r\n    }\r\n\r\n    onGameSaved() {\r\n        this.saveButton.classList.toggle(\"animEven\");\r\n        this.saveButton.classList.toggle(\"animOdd\");\r\n    }\r\n\r\n    startSave() {\r\n        this.root.gameState.doSave();\r\n    }\r\n\r\n    openSettings() {\r\n        this.root.hud.parts.settingsMenu.show();\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/game_menu.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2183,
    "kind": "class",
    "name": "HUDGameMenu",
    "memberof": "js/game/hud/parts/game_menu.js",
    "static": true,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/game_menu.js",
    "importStyle": "{HUDGameMenu}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2184,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2185,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "static": false,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu#element",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2186,
    "kind": "member",
    "name": "badgesToUpdate",
    "memberof": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "static": false,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu#badgesToUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "Array<{\nbadge: function,\nbutton: HTMLElement,\nbadgeElement: HTMLElement,\nlastRenderAmount: number,\ncondition?: function,\nnotification: [string, enumNotificationType]\n}>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2187,
    "kind": "member",
    "name": "visibilityToUpdate",
    "memberof": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "static": false,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu#visibilityToUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "Array<{\nbutton: HTMLElement,\ncondition: function,\ndomAttach: DynamicDomAttach\n}>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2188,
    "kind": "member",
    "name": "saveButton",
    "memberof": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "static": false,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu#saveButton",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2189,
    "kind": "member",
    "name": "settingsButton",
    "memberof": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "static": false,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu#settingsButton",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2190,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2191,
    "kind": "member",
    "name": "trackedIsSaving",
    "memberof": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "static": false,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu#trackedIsSaving",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2192,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu#update",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2193,
    "kind": "method",
    "name": "onIsSavingChanged",
    "memberof": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu#onIsSavingChanged",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "params": [
      {
        "name": "isSaving",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2194,
    "kind": "method",
    "name": "onGameSaved",
    "memberof": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu#onGameSaved",
    "access": "public",
    "description": null,
    "lineNumber": 162,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2195,
    "kind": "method",
    "name": "startSave",
    "memberof": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu#startSave",
    "access": "public",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2196,
    "kind": "method",
    "name": "openSettings",
    "memberof": "js/game/hud/parts/game_menu.js~HUDGameMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/game_menu.js~HUDGameMenu#openSettings",
    "access": "public",
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2197,
    "kind": "file",
    "name": "js/game/hud/parts/interactive_tutorial.js",
    "content": "import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { GameRoot } from \"../../root\";\r\nimport { MinerComponent } from \"../../components/miner\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { TrackedState } from \"../../../core/tracked_state\";\r\nimport { cachebust } from \"../../../core/cachebust\";\r\nimport { T } from \"../../../translations\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../../components/item_processor\";\r\nimport { ShapeItem } from \"../../items/shape_item\";\r\nimport { WireComponent } from \"../../components/wire\";\r\nimport { LeverComponent } from \"../../components/lever\";\r\n\r\n// @todo: Make dictionary\r\nconst tutorialsByLevel = [\r\n    // Level 1\r\n    [\r\n        // 1.1. place an extractor\r\n        {\r\n            id: \"1_1_extractor\",\r\n            condition: /** @param {GameRoot} root */ root =>\r\n                root.entityMgr.getAllWithComponent(MinerComponent).length === 0,\r\n        },\r\n        // 1.2. connect to hub\r\n        {\r\n            id: \"1_2_conveyor\",\r\n            condition: /** @param {GameRoot} root */ root => root.hubGoals.getCurrentGoalDelivered() === 0,\r\n        },\r\n        // 1.3 wait for completion\r\n        {\r\n            id: \"1_3_expand\",\r\n            condition: () => true,\r\n        },\r\n    ],\r\n    // Level 2\r\n    [\r\n        // 2.1 place a cutter\r\n        {\r\n            id: \"2_1_place_cutter\",\r\n            condition: /** @param {GameRoot} root */ root =>\r\n                root.entityMgr\r\n                    .getAllWithComponent(ItemProcessorComponent)\r\n                    .filter(e => e.components.ItemProcessor.type === enumItemProcessorTypes.cutter).length ===\r\n                0,\r\n        },\r\n        // 2.2 place trash\r\n        {\r\n            id: \"2_2_place_trash\",\r\n            condition: /** @param {GameRoot} root */ root =>\r\n                root.entityMgr\r\n                    .getAllWithComponent(ItemProcessorComponent)\r\n                    .filter(e => e.components.ItemProcessor.type === enumItemProcessorTypes.trash).length ===\r\n                0,\r\n        },\r\n        // 2.3 place more cutters\r\n        {\r\n            id: \"2_3_more_cutters\",\r\n            condition: /** @param {GameRoot} root */ root =>\r\n                root.entityMgr\r\n                    .getAllWithComponent(ItemProcessorComponent)\r\n                    .filter(e => e.components.ItemProcessor.type === enumItemProcessorTypes.cutter).length <\r\n                3,\r\n        },\r\n    ],\r\n\r\n    // Level 3\r\n    [\r\n        // 3.1. rectangles\r\n        {\r\n            id: \"3_1_rectangles\",\r\n            condition: /** @param {GameRoot} root */ root =>\r\n                // 4 miners placed above rectangles and 10 delivered\r\n                root.hubGoals.getCurrentGoalDelivered() < 10 ||\r\n                root.entityMgr.getAllWithComponent(MinerComponent).filter(entity => {\r\n                    const tile = entity.components.StaticMapEntity.origin;\r\n                    const below = root.map.getLowerLayerContentXY(tile.x, tile.y);\r\n                    if (below && below.getItemType() === \"shape\") {\r\n                        const shape = /** @type {ShapeItem} */ (below).definition.getHash();\r\n                        return shape === \"RuRuRuRu\";\r\n                    }\r\n                    return false;\r\n                }).length < 4,\r\n        },\r\n    ],\r\n\r\n    [], // Level 4\r\n    [], // Level 5\r\n    [], // Level 6\r\n    [], // Level 7\r\n    [], // Level 8\r\n    [], // Level 9\r\n    [], // Level 10\r\n    [], // Level 11\r\n    [], // Level 12\r\n    [], // Level 13\r\n    [], // Level 14\r\n    [], // Level 15\r\n    [], // Level 16\r\n    [], // Level 17\r\n    [], // Level 18\r\n    [], // Level 19\r\n    [], // Level 20\r\n\r\n    // Level 21\r\n    [\r\n        // 21.1 place quad painter\r\n        {\r\n            id: \"21_1_place_quad_painter\",\r\n            condition: /** @param {GameRoot} root */ root =>\r\n                root.entityMgr\r\n                    .getAllWithComponent(ItemProcessorComponent)\r\n                    .filter(e => e.components.ItemProcessor.type === enumItemProcessorTypes.painterQuad)\r\n                    .length === 0,\r\n        },\r\n\r\n        // 21.2 switch to wires layer\r\n        {\r\n            id: \"21_2_switch_to_wires\",\r\n            condition: /** @param {GameRoot} root */ root =>\r\n                root.entityMgr.getAllWithComponent(WireComponent).length < 5,\r\n        },\r\n\r\n        // 21.3 place button\r\n        {\r\n            id: \"21_3_place_button\",\r\n            condition: /** @param {GameRoot} root */ root =>\r\n                root.entityMgr.getAllWithComponent(LeverComponent).length === 0,\r\n        },\r\n\r\n        // 21.4 activate button\r\n        {\r\n            id: \"21_4_press_button\",\r\n            condition: /** @param {GameRoot} root */ root =>\r\n                root.entityMgr.getAllWithComponent(LeverComponent).some(e => !e.components.Lever.toggled),\r\n        },\r\n    ],\r\n];\r\n\r\nexport class HUDInteractiveTutorial extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(\r\n            parent,\r\n            \"ingame_HUD_InteractiveTutorial\",\r\n            [\"animEven\"],\r\n            `\r\n            <strong class=\"title\">${T.ingame.interactiveTutorial.title}</strong>\r\n            `\r\n        );\r\n\r\n        this.elementDescription = makeDiv(this.element, null, [\"desc\"]);\r\n        this.elementGif = makeDiv(this.element, null, [\"helperGif\"]);\r\n    }\r\n\r\n    initialize() {\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element, { trackHover: true });\r\n        this.currentHintId = new TrackedState(this.onHintChanged, this);\r\n    }\r\n\r\n    onHintChanged(hintId) {\r\n        this.elementDescription.innerHTML = T.ingame.interactiveTutorial.hints[hintId];\r\n        this.elementGif.style.backgroundImage =\r\n            \"url('\" + cachebust(\"res/ui/interactive_tutorial.noinline/\" + hintId + \".gif\") + \"')\";\r\n        this.element.classList.toggle(\"animEven\");\r\n        this.element.classList.toggle(\"animOdd\");\r\n    }\r\n\r\n    update() {\r\n        // Compute current hint\r\n        const thisLevelHints = tutorialsByLevel[this.root.hubGoals.level - 1];\r\n        let targetHintId = null;\r\n\r\n        if (thisLevelHints) {\r\n            for (let i = 0; i < thisLevelHints.length; ++i) {\r\n                const hint = thisLevelHints[i];\r\n                if (hint.condition(this.root)) {\r\n                    targetHintId = hint.id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.currentHintId.set(targetHintId);\r\n        this.domAttach.update(!!targetHintId);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/interactive_tutorial.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2198,
    "kind": "variable",
    "name": "tutorialsByLevel",
    "memberof": "js/game/hud/parts/interactive_tutorial.js",
    "static": true,
    "longname": "js/game/hud/parts/interactive_tutorial.js~tutorialsByLevel",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/interactive_tutorial.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2199,
    "kind": "class",
    "name": "HUDInteractiveTutorial",
    "memberof": "js/game/hud/parts/interactive_tutorial.js",
    "static": true,
    "longname": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/interactive_tutorial.js",
    "importStyle": "{HUDInteractiveTutorial}",
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2200,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 140,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2201,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial",
    "static": false,
    "longname": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial#element",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2202,
    "kind": "member",
    "name": "elementDescription",
    "memberof": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial",
    "static": false,
    "longname": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial#elementDescription",
    "access": "public",
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2203,
    "kind": "member",
    "name": "elementGif",
    "memberof": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial",
    "static": false,
    "longname": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial#elementGif",
    "access": "public",
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2204,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2205,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial",
    "static": false,
    "longname": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 155,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2206,
    "kind": "member",
    "name": "currentHintId",
    "memberof": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial",
    "static": false,
    "longname": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial#currentHintId",
    "access": "public",
    "description": null,
    "lineNumber": 156,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2207,
    "kind": "method",
    "name": "onHintChanged",
    "memberof": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial#onHintChanged",
    "access": "public",
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "params": [
      {
        "name": "hintId",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2208,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/interactive_tutorial.js~HUDInteractiveTutorial#update",
    "access": "public",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2209,
    "kind": "file",
    "name": "js/game/hud/parts/keybinding_overlay.js",
    "content": "import { makeDiv } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport {\r\n    getStringForKeyCode,\r\n    KEYCODE_LMB,\r\n    KEYCODE_MMB,\r\n    KEYCODE_RMB,\r\n    KEYMAPPINGS,\r\n} from \"../../key_action_mapper\";\r\nimport { enumHubGoalRewards } from \"../../tutorial_goals\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\n\r\nconst DIVIDER_TOKEN = \"/\";\r\nconst ADDER_TOKEN = \"+\";\r\n\r\n/**\r\n * @typedef {{ keyCode: number }} KeyCode\r\n */\r\n\r\n/**\r\n * @typedef {{\r\n *   condition: () => boolean,\r\n *   keys: Array<KeyCode|number|string>,\r\n *   label: string,\r\n *   cachedElement?: HTMLElement,\r\n *   cachedVisibility?: boolean\r\n * }} KeyBinding\r\n */\r\n\r\nexport class HUDKeybindingOverlay extends BaseHUDPart {\r\n    /**\r\n     * HELPER / Returns if there is a building selected for placement\r\n     * @returns {boolean}\r\n     */\r\n    get buildingPlacementActive() {\r\n        const placer = this.root.hud.parts.buildingPlacer;\r\n        return !this.mapOverviewActive && placer && !!placer.currentMetaBuilding.get();\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if there is a building selected for placement and\r\n     * it supports the belt planner\r\n     * @returns {boolean}\r\n     */\r\n    get buildingPlacementSupportsBeltPlanner() {\r\n        const placer = this.root.hud.parts.buildingPlacer;\r\n        return (\r\n            !this.mapOverviewActive &&\r\n            placer &&\r\n            placer.currentMetaBuilding.get() &&\r\n            placer.currentMetaBuilding.get().getHasDirectionLockAvailable()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if there is a building selected for placement and\r\n     * it has multiplace enabled by default\r\n     * @returns {boolean}\r\n     */\r\n    get buildingPlacementStaysInPlacement() {\r\n        const placer = this.root.hud.parts.buildingPlacer;\r\n        return (\r\n            !this.mapOverviewActive &&\r\n            placer &&\r\n            placer.currentMetaBuilding.get() &&\r\n            placer.currentMetaBuilding.get().getStayInPlacementMode()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if there is a blueprint selected for placement\r\n     * @returns {boolean}\r\n     */\r\n    get blueprintPlacementActive() {\r\n        const placer = this.root.hud.parts.blueprintPlacer;\r\n        return placer && !!placer.currentBlueprint.get();\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if the belt planner is currently active\r\n     * @returns {boolean}\r\n     */\r\n    get beltPlannerActive() {\r\n        const placer = this.root.hud.parts.buildingPlacer;\r\n        return !this.mapOverviewActive && placer && placer.isDirectionLockActive;\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if there is a last blueprint available\r\n     * @returns {boolean}\r\n     */\r\n    get lastBlueprintAvailable() {\r\n        const placer = this.root.hud.parts.blueprintPlacer;\r\n        return placer && !!placer.lastBlueprintUsed;\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if there is anything selected on the map\r\n     * @returns {boolean}\r\n     */\r\n    get anythingSelectedOnMap() {\r\n        const selector = this.root.hud.parts.massSelector;\r\n        return selector && selector.selectedUids.size > 0;\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if there is a building or blueprint selected for placement\r\n     * @returns {boolean}\r\n     */\r\n    get anyPlacementActive() {\r\n        return this.buildingPlacementActive || this.blueprintPlacementActive;\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if the map overview is active\r\n     * @returns {boolean}\r\n     */\r\n    get mapOverviewActive() {\r\n        return this.root.camera.getIsMapOverlayActive();\r\n    }\r\n\r\n    /**\r\n     * Initializes the element\r\n     * @param {HTMLElement} parent\r\n     */\r\n    createElements(parent) {\r\n        const mapper = this.root.keyMapper;\r\n        const k = KEYMAPPINGS;\r\n\r\n        /** @type {Array<KeyBinding>} */\r\n        this.keybindings = [\r\n            {\r\n                // Move map - Including mouse\r\n                label: T.ingame.keybindingsOverlay.moveMap,\r\n                keys: [\r\n                    KEYCODE_LMB,\r\n                    DIVIDER_TOKEN,\r\n                    k.navigation.mapMoveUp,\r\n                    k.navigation.mapMoveLeft,\r\n                    k.navigation.mapMoveDown,\r\n                    k.navigation.mapMoveRight,\r\n                ],\r\n                condition: () => !this.anyPlacementActive,\r\n            },\r\n\r\n            {\r\n                // Move map - No mouse\r\n                label: T.ingame.keybindingsOverlay.moveMap,\r\n                keys: [\r\n                    k.navigation.mapMoveUp,\r\n                    k.navigation.mapMoveLeft,\r\n                    k.navigation.mapMoveDown,\r\n                    k.navigation.mapMoveRight,\r\n                ],\r\n                condition: () => this.anyPlacementActive,\r\n            },\r\n\r\n            {\r\n                // [OVERVIEW] Create marker with right click\r\n                label: T.ingame.keybindingsOverlay.createMarker,\r\n                keys: [KEYCODE_RMB],\r\n                condition: () => this.mapOverviewActive && !this.blueprintPlacementActive,\r\n            },\r\n\r\n            {\r\n                // Cancel placement\r\n                label: T.ingame.keybindingsOverlay.stopPlacement,\r\n                keys: [KEYCODE_RMB],\r\n                condition: () => this.anyPlacementActive,\r\n            },\r\n\r\n            {\r\n                // Delete with right click\r\n                label: T.ingame.keybindingsOverlay.delete,\r\n                keys: [KEYCODE_RMB],\r\n                condition: () =>\r\n                    !this.anyPlacementActive && !this.mapOverviewActive && !this.anythingSelectedOnMap,\r\n            },\r\n\r\n            {\r\n                // Pipette\r\n                label: T.ingame.keybindingsOverlay.pipette,\r\n                keys: [k.placement.pipette],\r\n                condition: () => !this.mapOverviewActive && !this.blueprintPlacementActive,\r\n            },\r\n\r\n            {\r\n                // Area select\r\n                label: T.ingame.keybindingsOverlay.selectBuildings,\r\n                keys: [k.massSelect.massSelectStart, ADDER_TOKEN, KEYCODE_LMB],\r\n                condition: () => !this.anyPlacementActive && !this.anythingSelectedOnMap,\r\n            },\r\n\r\n            {\r\n                // Place building\r\n                label: T.ingame.keybindingsOverlay.placeBuilding,\r\n                keys: [KEYCODE_LMB],\r\n                condition: () => this.anyPlacementActive,\r\n            },\r\n\r\n            {\r\n                // Rotate\r\n                label: T.ingame.keybindingsOverlay.rotateBuilding,\r\n                keys: [k.placement.rotateWhilePlacing],\r\n                condition: () => this.anyPlacementActive && !this.beltPlannerActive,\r\n            },\r\n\r\n            {\r\n                // [BELT PLANNER] Flip Side\r\n                label: T.ingame.keybindingsOverlay.plannerSwitchSide,\r\n                keys: [k.placement.switchDirectionLockSide],\r\n                condition: () => this.beltPlannerActive,\r\n            },\r\n\r\n            {\r\n                // Place last blueprint\r\n                label: T.ingame.keybindingsOverlay.pasteLastBlueprint,\r\n                keys: [k.massSelect.pasteLastBlueprint],\r\n                condition: () => !this.blueprintPlacementActive && this.lastBlueprintAvailable,\r\n            },\r\n\r\n            {\r\n                // Belt planner\r\n                label: T.ingame.keybindingsOverlay.lockBeltDirection,\r\n                keys: [k.placementModifiers.lockBeltDirection],\r\n                condition: () => this.buildingPlacementSupportsBeltPlanner && !this.beltPlannerActive,\r\n            },\r\n\r\n            {\r\n                // [SELECTION] Destroy\r\n                label: T.ingame.keybindingsOverlay.delete,\r\n                keys: [k.massSelect.confirmMassDelete],\r\n                condition: () => this.anythingSelectedOnMap,\r\n            },\r\n\r\n            {\r\n                // [SELECTION] Cancel\r\n                label: T.ingame.keybindingsOverlay.clearSelection,\r\n                keys: [k.general.back],\r\n                condition: () => this.anythingSelectedOnMap,\r\n            },\r\n            {\r\n                // [SELECTION] Cut\r\n                label: T.ingame.keybindingsOverlay.cutSelection,\r\n                keys: [k.massSelect.massSelectCut],\r\n                condition: () => this.anythingSelectedOnMap,\r\n            },\r\n\r\n            {\r\n                // [SELECTION] Copy\r\n                label: T.ingame.keybindingsOverlay.copySelection,\r\n                keys: [k.massSelect.massSelectCopy],\r\n                condition: () => this.anythingSelectedOnMap,\r\n            },\r\n\r\n            {\r\n                // Switch layers\r\n                label: T.ingame.keybindingsOverlay.switchLayers,\r\n                keys: [k.ingame.switchLayers],\r\n                condition: () =>\r\n                    this.root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_wires_painter_and_levers),\r\n            },\r\n        ];\r\n\r\n        if (!this.root.app.settings.getAllSettings().alwaysMultiplace) {\r\n            this.keybindings.push({\r\n                // Multiplace\r\n                label: T.ingame.keybindingsOverlay.placeMultiple,\r\n                keys: [k.placementModifiers.placeMultiple],\r\n                condition: () => this.anyPlacementActive && !this.buildingPlacementStaysInPlacement,\r\n            });\r\n        }\r\n\r\n        this.element = makeDiv(parent, \"ingame_HUD_KeybindingOverlay\", []);\r\n\r\n        for (let i = 0; i < this.keybindings.length; ++i) {\r\n            let html = \"\";\r\n            const handle = this.keybindings[i];\r\n\r\n            for (let k = 0; k < handle.keys.length; ++k) {\r\n                const key = handle.keys[k];\r\n\r\n                switch (key) {\r\n                    case KEYCODE_LMB:\r\n                        html += `<code class=\"keybinding leftMouse\"></code>`;\r\n                        break;\r\n                    case KEYCODE_RMB:\r\n                        html += `<code class=\"keybinding rightMouse\"></code>`;\r\n                        break;\r\n                    case KEYCODE_MMB:\r\n                        html += `<code class=\"keybinding middleMouse\"></code>`;\r\n                        break;\r\n                    case DIVIDER_TOKEN:\r\n                        html += `<i></i>`;\r\n                        break;\r\n                    case ADDER_TOKEN:\r\n                        html += `+`;\r\n                        break;\r\n                    default:\r\n                        html += `<code class=\"keybinding\">${getStringForKeyCode(\r\n                            mapper.getBinding(/** @type {KeyCode} */ (key)).keyCode\r\n                        )}</code>`;\r\n                }\r\n            }\r\n            html += `<label>${handle.label}</label>`;\r\n\r\n            handle.cachedElement = makeDiv(this.element, null, [\"binding\"], html);\r\n            handle.cachedVisibility = false;\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element, {\r\n            trackHover: true,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        for (let i = 0; i < this.keybindings.length; ++i) {\r\n            const handle = this.keybindings[i];\r\n            const visibility = handle.condition();\r\n            if (visibility !== handle.cachedVisibility) {\r\n                handle.cachedVisibility = visibility;\r\n                handle.cachedElement.classList.toggle(\"visible\", visibility);\r\n            }\r\n        }\r\n\r\n        // Required for hover\r\n        this.domAttach.update(true);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/keybinding_overlay.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2210,
    "kind": "variable",
    "name": "DIVIDER_TOKEN",
    "memberof": "js/game/hud/parts/keybinding_overlay.js",
    "static": true,
    "longname": "js/game/hud/parts/keybinding_overlay.js~DIVIDER_TOKEN",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/keybinding_overlay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2211,
    "kind": "variable",
    "name": "ADDER_TOKEN",
    "memberof": "js/game/hud/parts/keybinding_overlay.js",
    "static": true,
    "longname": "js/game/hud/parts/keybinding_overlay.js~ADDER_TOKEN",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/keybinding_overlay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2212,
    "kind": "typedef",
    "name": "KeyCode",
    "memberof": "js/game/hud/parts/keybinding_overlay.js",
    "static": true,
    "longname": "js/game/hud/parts/keybinding_overlay.js~KeyCode",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "{ keyCode: number }"
      ],
      "optional": false,
      "name": "KeyCode"
    }
  },
  {
    "__docId__": 2213,
    "kind": "typedef",
    "name": "KeyBinding",
    "memberof": "js/game/hud/parts/keybinding_overlay.js",
    "static": true,
    "longname": "js/game/hud/parts/keybinding_overlay.js~KeyBinding",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "type": {
      "types": [
        "{\n  condition: () => boolean,\n  keys: Array<KeyCode|number|string>,\n  label: string,\n  cachedElement?: HTMLElement,\n  cachedVisibility?: boolean\n}"
      ],
      "optional": false,
      "name": "KeyBinding"
    }
  },
  {
    "__docId__": 2214,
    "kind": "file",
    "name": "js/game/hud/parts/layer_preview.js",
    "content": "import { freeCanvas, makeOffscreenBuffer } from \"../../../core/buffer_utils\";\r\nimport { globalConfig } from \"../../../core/config\";\r\nimport { Loader } from \"../../../core/loader\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { MapChunkView } from \"../../map_chunk_view\";\r\nimport { THEME } from \"../../theme\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\n\r\n/**\r\n * Helper class which allows peaking through to the wires layer\r\n */\r\nexport class HUDLayerPreview extends BaseHUDPart {\r\n    initialize() {\r\n        this.initializeCanvas();\r\n        this.root.signals.aboutToDestruct.add(() => freeCanvas(this.canvas));\r\n        this.root.signals.resized.add(this.initializeCanvas, this);\r\n        this.previewOverlay = Loader.getSprite(\"sprites/wires/wires_preview.png\");\r\n    }\r\n\r\n    /**\r\n     * (re) initializes the canvas\r\n     */\r\n    initializeCanvas() {\r\n        if (this.canvas) {\r\n            freeCanvas(this.canvas);\r\n            delete this.canvas;\r\n            delete this.context;\r\n        }\r\n\r\n        // Compute how big the preview should be\r\n        this.previewSize = Math.round(\r\n            Math.min(1024, Math.min(this.root.gameWidth, this.root.gameHeight) * 0.8)\r\n        );\r\n\r\n        const [canvas, context] = makeOffscreenBuffer(this.previewSize, this.previewSize, {\r\n            smooth: true,\r\n            label: \"layerPeeker\",\r\n            reusable: true,\r\n        });\r\n\r\n        context.clearRect(0, 0, this.previewSize, this.previewSize);\r\n        this.canvas = canvas;\r\n        this.context = context;\r\n    }\r\n\r\n    /**\r\n     * Prepares the canvas to render at the given worldPos and the given camera scale\r\n     *\r\n     * @param {Vector} worldPos\r\n     * @param {number} scale 1 / zoomLevel\r\n     */\r\n    prepareCanvasForPreview(worldPos, scale, layer) {\r\n        this.context.clearRect(0, 0, this.previewSize, this.previewSize);\r\n        this.context.fillStyle = THEME.map.wires.previewColor;\r\n        this.context.fillRect(0, 0, this.previewSize, this.previewSize);\r\n\r\n        const dimensions = scale * this.previewSize;\r\n\r\n        const startWorldX = worldPos.x - dimensions / 2;\r\n        const startWorldY = worldPos.y - dimensions / 2;\r\n\r\n        const startTileX = Math.floor(startWorldX / globalConfig.tileSize);\r\n        const startTileY = Math.floor(startWorldY / globalConfig.tileSize);\r\n        const tileDimensions = Math.ceil(dimensions / globalConfig.tileSize);\r\n\r\n        this.context.save();\r\n        this.context.scale(1 / scale, 1 / scale);\r\n        this.context.translate(\r\n            startTileX * globalConfig.tileSize - startWorldX,\r\n            startTileY * globalConfig.tileSize - startWorldY\r\n        );\r\n\r\n        for (let dx = 0; dx < tileDimensions; ++dx) {\r\n            for (let dy = 0; dy < tileDimensions; ++dy) {\r\n                const tileX = dx + startTileX;\r\n                const tileY = dy + startTileY; // you labed it as what is this on map_chunk I already said I am trying to make tiles use string instead of BaseItem on discord\r\n\r\n                const content = this.root.map.getLayerContentXY(tileX, tileY, layer);\r\n                if (content) {\r\n                    MapChunkView.drawSingleOverviewTile({\r\n                        context: this.context,\r\n                        x: dx * globalConfig.tileSize,\r\n                        y: dy * globalConfig.tileSize,\r\n                        entity: content,\r\n                        tileSizePixels: globalConfig.tileSize,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        this.context.restore();\r\n        this.context.globalCompositeOperation = \"destination-in\";\r\n        this.previewOverlay.draw(this.context, 0, 0, this.previewSize, this.previewSize);\r\n        this.context.globalCompositeOperation = \"source-over\";\r\n\r\n        return this.canvas;\r\n    }\r\n\r\n    /**\r\n     * Renders the preview at the given position\r\n     * @param {import(\"../../../core/draw_utils\").DrawParameters} parameters\r\n     * @param {Vector} worldPos\r\n     * @param {number} scale 1 / zoomLevel\r\n     */\r\n    renderPreview(parameters, worldPos, scale, layer) {\r\n        if (this.root.currentLayer !== \"regular\") {\r\n            // Only supporting wires right now\r\n            return;\r\n        }\r\n\r\n        const canvas = this.prepareCanvasForPreview(worldPos, scale, layer);\r\n\r\n        parameters.context.globalAlpha = 0.3;\r\n        parameters.context.drawImage(\r\n            canvas,\r\n            worldPos.x - (scale * this.previewSize) / 2,\r\n            worldPos.y - (scale * this.previewSize) / 2,\r\n            scale * this.previewSize,\r\n            scale * this.previewSize\r\n        );\r\n        parameters.context.globalAlpha = 1;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/layer_preview.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2215,
    "kind": "class",
    "name": "HUDLayerPreview",
    "memberof": "js/game/hud/parts/layer_preview.js",
    "static": true,
    "longname": "js/game/hud/parts/layer_preview.js~HUDLayerPreview",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/layer_preview.js",
    "importStyle": "{HUDLayerPreview}",
    "description": "Helper class which allows peaking through to the wires layer",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2216,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/layer_preview.js~HUDLayerPreview",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/layer_preview.js~HUDLayerPreview#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2217,
    "kind": "member",
    "name": "previewOverlay",
    "memberof": "js/game/hud/parts/layer_preview.js~HUDLayerPreview",
    "static": false,
    "longname": "js/game/hud/parts/layer_preview.js~HUDLayerPreview#previewOverlay",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2218,
    "kind": "method",
    "name": "initializeCanvas",
    "memberof": "js/game/hud/parts/layer_preview.js~HUDLayerPreview",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/layer_preview.js~HUDLayerPreview#initializeCanvas",
    "access": "public",
    "description": "(re) initializes the canvas",
    "lineNumber": 23,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2219,
    "kind": "member",
    "name": "previewSize",
    "memberof": "js/game/hud/parts/layer_preview.js~HUDLayerPreview",
    "static": false,
    "longname": "js/game/hud/parts/layer_preview.js~HUDLayerPreview#previewSize",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2220,
    "kind": "member",
    "name": "canvas",
    "memberof": "js/game/hud/parts/layer_preview.js~HUDLayerPreview",
    "static": false,
    "longname": "js/game/hud/parts/layer_preview.js~HUDLayerPreview#canvas",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2221,
    "kind": "member",
    "name": "context",
    "memberof": "js/game/hud/parts/layer_preview.js~HUDLayerPreview",
    "static": false,
    "longname": "js/game/hud/parts/layer_preview.js~HUDLayerPreview#context",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2222,
    "kind": "method",
    "name": "prepareCanvasForPreview",
    "memberof": "js/game/hud/parts/layer_preview.js~HUDLayerPreview",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/layer_preview.js~HUDLayerPreview#prepareCanvasForPreview",
    "access": "public",
    "description": "Prepares the canvas to render at the given worldPos and the given camera scale",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "worldPos",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scale",
        "description": "1 / zoomLevel"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2223,
    "kind": "method",
    "name": "renderPreview",
    "memberof": "js/game/hud/parts/layer_preview.js~HUDLayerPreview",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/layer_preview.js~HUDLayerPreview#renderPreview",
    "access": "public",
    "description": "Renders the preview at the given position",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../../../core/draw_utils\").DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "worldPos",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scale",
        "description": "1 / zoomLevel"
      }
    ],
    "return": null
  },
  {
    "__docId__": 2224,
    "kind": "file",
    "name": "js/game/hud/parts/lever_toggle.js",
    "content": "import { STOP_PROPAGATION } from \"../../../core/signal\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { enumMouseButton } from \"../../camera\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\n\r\nexport class HUDLeverToggle extends BaseHUDPart {\r\n    initialize() {\r\n        this.root.camera.downPreHandler.add(this.downPreHandler, this);\r\n    }\r\n\r\n    /**\r\n     * @param {Vector} pos\r\n     * @param {enumMouseButton} button\r\n     */\r\n    downPreHandler(pos, button) {\r\n        const tile = this.root.camera.screenToWorld(pos).toTileSpace();\r\n        const contents = this.root.map.getLayerContentXY(tile.x, tile.y, \"regular\");\r\n        if (contents) {\r\n            const leverComp = contents.components.Lever;\r\n            if (leverComp) {\r\n                if (button === enumMouseButton.left) {\r\n                    leverComp.toggled = !leverComp.toggled;\r\n                    return STOP_PROPAGATION;\r\n                } else if (button === enumMouseButton.right) {\r\n                    this.root.logic.tryDeleteBuilding(contents);\r\n                    return STOP_PROPAGATION;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/lever_toggle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2225,
    "kind": "class",
    "name": "HUDLeverToggle",
    "memberof": "js/game/hud/parts/lever_toggle.js",
    "static": true,
    "longname": "js/game/hud/parts/lever_toggle.js~HUDLeverToggle",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/lever_toggle.js",
    "importStyle": "{HUDLeverToggle}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2226,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/lever_toggle.js~HUDLeverToggle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/lever_toggle.js~HUDLeverToggle#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2227,
    "kind": "method",
    "name": "downPreHandler",
    "memberof": "js/game/hud/parts/lever_toggle.js~HUDLeverToggle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/lever_toggle.js~HUDLeverToggle#downPreHandler",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumMouseButton"
        ],
        "spread": false,
        "optional": false,
        "name": "button",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2228,
    "kind": "file",
    "name": "js/game/hud/parts/mass_selector.js",
    "content": "import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { STOP_PROPAGATION } from \"../../../core/signal\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { Entity } from \"../../entity\";\r\nimport { Loader } from \"../../../core/loader\";\r\nimport { globalConfig } from \"../../../core/config\";\r\nimport { makeDiv, formatBigNumber, formatBigNumberFull } from \"../../../core/utils\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { createLogger } from \"../../../core/logging\";\r\nimport { enumMouseButton } from \"../../camera\";\r\nimport { T } from \"../../../translations\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { THEME } from \"../../theme\";\r\nimport { enumHubGoalRewards } from \"../../tutorial_goals\";\r\nimport { Blueprint } from \"../../blueprint\";\r\n\r\nconst logger = createLogger(\"hud/mass_selector\");\r\n\r\nexport class HUDMassSelector extends BaseHUDPart {\r\n    createElements(parent) {}\r\n\r\n    initialize() {\r\n        this.currentSelectionStartWorld = null;\r\n        this.currentSelectionEnd = null;\r\n        this.selectedUids = new Set();\r\n\r\n        this.root.signals.entityQueuedForDestroy.add(this.onEntityDestroyed, this);\r\n        this.root.hud.signals.pasteBlueprintRequested.add(this.clearSelection, this);\r\n\r\n        this.root.camera.downPreHandler.add(this.onMouseDown, this);\r\n        this.root.camera.movePreHandler.add(this.onMouseMove, this);\r\n        this.root.camera.upPostHandler.add(this.onMouseUp, this);\r\n\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.general.back).add(this.onBack, this);\r\n        this.root.keyMapper\r\n            .getBinding(KEYMAPPINGS.massSelect.confirmMassDelete)\r\n            .add(this.confirmDelete, this);\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.massSelect.massSelectCut).add(this.confirmCut, this);\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.massSelect.massSelectCopy).add(this.startCopy, this);\r\n\r\n        this.root.hud.signals.selectedPlacementBuildingChanged.add(this.clearSelection, this);\r\n        this.root.signals.editModeChanged.add(this.clearSelection, this);\r\n    }\r\n\r\n    /**\r\n     * Handles the destroy callback and makes sure we clean our list\r\n     * @param {Entity} entity\r\n     */\r\n    onEntityDestroyed(entity) {\r\n        if (this.root.bulkOperationRunning) {\r\n            return;\r\n        }\r\n        this.selectedUids.delete(entity.uid);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    onBack() {\r\n        // Clear entities on escape\r\n        if (this.selectedUids.size > 0) {\r\n            this.selectedUids = new Set();\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears the entire selection\r\n     */\r\n    clearSelection() {\r\n        this.selectedUids = new Set();\r\n    }\r\n\r\n    confirmDelete() {\r\n        if (\r\n            !this.root.app.settings.getAllSettings().disableCutDeleteWarnings &&\r\n            this.selectedUids.size > 100\r\n        ) {\r\n            const { ok } = this.root.hud.parts.dialogs.showWarning(\r\n                T.dialogs.massDeleteConfirm.title,\r\n                T.dialogs.massDeleteConfirm.desc.replace(\r\n                    \"<count>\",\r\n                    \"\" + formatBigNumberFull(this.selectedUids.size)\r\n                ),\r\n                [\"cancel:good:escape\", \"ok:bad:enter\"]\r\n            );\r\n            ok.add(() => this.doDelete());\r\n        } else {\r\n            this.doDelete();\r\n        }\r\n    }\r\n\r\n    doDelete() {\r\n        const entityUids = Array.from(this.selectedUids);\r\n\r\n        // Build mapping from uid to entity\r\n        /**\r\n         * @type {Map<number, Entity>}\r\n         */\r\n        const mapUidToEntity = this.root.entityMgr.getFrozenUidSearchMap();\r\n\r\n        this.root.logic.performBulkOperation(() => {\r\n            for (let i = 0; i < entityUids.length; ++i) {\r\n                const uid = entityUids[i];\r\n                const entity = mapUidToEntity.get(uid);\r\n                if (!entity) {\r\n                    logger.error(\"Entity not found by uid:\", uid);\r\n                    continue;\r\n                }\r\n\r\n                if (!this.root.logic.tryDeleteBuilding(entity)) {\r\n                    logger.error(\"Error in mass delete, could not remove building\");\r\n                }\r\n            }\r\n        });\r\n\r\n        // Clear uids later\r\n        this.selectedUids = new Set();\r\n    }\r\n\r\n    startCopy() {\r\n        if (this.selectedUids.size > 0) {\r\n            if (!this.root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_blueprints)) {\r\n                this.root.hud.parts.dialogs.showInfo(\r\n                    T.dialogs.blueprintsNotUnlocked.title,\r\n                    T.dialogs.blueprintsNotUnlocked.desc\r\n                );\r\n                return;\r\n            }\r\n            this.root.hud.signals.buildingsSelectedForCopy.dispatch(Array.from(this.selectedUids));\r\n            this.selectedUids = new Set();\r\n            this.root.soundProxy.playUiClick();\r\n        } else {\r\n            this.root.soundProxy.playUiError();\r\n        }\r\n    }\r\n\r\n    confirmCut() {\r\n        if (!this.root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_blueprints)) {\r\n            this.root.hud.parts.dialogs.showInfo(\r\n                T.dialogs.blueprintsNotUnlocked.title,\r\n                T.dialogs.blueprintsNotUnlocked.desc\r\n            );\r\n        } else if (\r\n            !this.root.app.settings.getAllSettings().disableCutDeleteWarnings &&\r\n            this.selectedUids.size > 100\r\n        ) {\r\n            const { ok } = this.root.hud.parts.dialogs.showWarning(\r\n                T.dialogs.massCutConfirm.title,\r\n                T.dialogs.massCutConfirm.desc.replace(\r\n                    \"<count>\",\r\n                    \"\" + formatBigNumberFull(this.selectedUids.size)\r\n                ),\r\n                [\"cancel:good:escape\", \"ok:bad:enter\"]\r\n            );\r\n            ok.add(() => this.doCut());\r\n        } else {\r\n            this.doCut();\r\n        }\r\n    }\r\n\r\n    doCut() {\r\n        if (this.selectedUids.size > 0) {\r\n            const entityUids = Array.from(this.selectedUids);\r\n\r\n            const cutAction = () => {\r\n                // copy code relies on entities still existing, so must copy before deleting.\r\n                this.root.hud.signals.buildingsSelectedForCopy.dispatch(entityUids);\r\n\r\n                for (let i = 0; i < entityUids.length; ++i) {\r\n                    const uid = entityUids[i];\r\n                    const entity = this.root.entityMgr.findByUid(uid);\r\n                    if (!this.root.logic.tryDeleteBuilding(entity)) {\r\n                        logger.error(\"Error in mass cut, could not remove building\");\r\n                        this.selectedUids.delete(uid);\r\n                    }\r\n                }\r\n            };\r\n\r\n            const blueprint = Blueprint.fromUids(this.root, entityUids);\r\n            if (blueprint.canAfford(this.root)) {\r\n                cutAction();\r\n            } else {\r\n                const { cancel, ok } = this.root.hud.parts.dialogs.showWarning(\r\n                    T.dialogs.massCutInsufficientConfirm.title,\r\n                    T.dialogs.massCutInsufficientConfirm.desc,\r\n                    [\"cancel:good:escape\", \"ok:bad:enter\"]\r\n                );\r\n                ok.add(cutAction);\r\n            }\r\n\r\n            this.root.soundProxy.playUiClick();\r\n        } else {\r\n            this.root.soundProxy.playUiError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * mouse down pre handler\r\n     * @param {Vector} pos\r\n     * @param {enumMouseButton} mouseButton\r\n     */\r\n    onMouseDown(pos, mouseButton) {\r\n        if (!this.root.keyMapper.getBinding(KEYMAPPINGS.massSelect.massSelectStart).pressed) {\r\n            return;\r\n        }\r\n\r\n        if (mouseButton !== enumMouseButton.left) {\r\n            return;\r\n        }\r\n\r\n        if (!this.root.keyMapper.getBinding(KEYMAPPINGS.massSelect.massSelectSelectMultiple).pressed) {\r\n            // Start new selection\r\n            this.selectedUids = new Set();\r\n        }\r\n\r\n        this.currentSelectionStartWorld = this.root.camera.screenToWorld(pos.copy());\r\n        this.currentSelectionEnd = pos.copy();\r\n        return STOP_PROPAGATION;\r\n    }\r\n\r\n    /**\r\n     * mouse move pre handler\r\n     * @param {Vector} pos\r\n     */\r\n    onMouseMove(pos) {\r\n        if (this.currentSelectionStartWorld) {\r\n            this.currentSelectionEnd = pos.copy();\r\n        }\r\n    }\r\n\r\n    onMouseUp() {\r\n        if (this.currentSelectionStartWorld) {\r\n            const worldStart = this.currentSelectionStartWorld;\r\n            const worldEnd = this.root.camera.screenToWorld(this.currentSelectionEnd);\r\n\r\n            const tileStart = worldStart.toTileSpace();\r\n            const tileEnd = worldEnd.toTileSpace();\r\n\r\n            const realTileStart = tileStart.min(tileEnd);\r\n            const realTileEnd = tileStart.max(tileEnd);\r\n\r\n            for (let x = realTileStart.x; x <= realTileEnd.x; ++x) {\r\n                for (let y = realTileStart.y; y <= realTileEnd.y; ++y) {\r\n                    const contents = this.root.map.getLayerContentXY(x, y, this.root.currentLayer);\r\n                    if (contents && this.root.logic.canDeleteBuilding(contents)) {\r\n                        this.selectedUids.add(contents.uid);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.currentSelectionStartWorld = null;\r\n            this.currentSelectionEnd = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        const boundsBorder = 2;\r\n\r\n        if (this.currentSelectionStartWorld) {\r\n            const worldStart = this.currentSelectionStartWorld;\r\n            const worldEnd = this.root.camera.screenToWorld(this.currentSelectionEnd);\r\n\r\n            const realWorldStart = worldStart.min(worldEnd);\r\n            const realWorldEnd = worldStart.max(worldEnd);\r\n\r\n            const tileStart = worldStart.toTileSpace();\r\n            const tileEnd = worldEnd.toTileSpace();\r\n\r\n            const realTileStart = tileStart.min(tileEnd);\r\n            const realTileEnd = tileStart.max(tileEnd);\r\n\r\n            parameters.context.lineWidth = 1;\r\n            parameters.context.fillStyle = THEME.map.selectionBackground;\r\n            parameters.context.strokeStyle = THEME.map.selectionOutline;\r\n            parameters.context.beginPath();\r\n            parameters.context.rect(\r\n                realWorldStart.x,\r\n                realWorldStart.y,\r\n                realWorldEnd.x - realWorldStart.x,\r\n                realWorldEnd.y - realWorldStart.y\r\n            );\r\n            parameters.context.fill();\r\n            parameters.context.stroke();\r\n\r\n            parameters.context.fillStyle = THEME.map.selectionOverlay;\r\n\r\n            const renderedUids = new Set();\r\n\r\n            for (let x = realTileStart.x; x <= realTileEnd.x; ++x) {\r\n                for (let y = realTileStart.y; y <= realTileEnd.y; ++y) {\r\n                    const contents = this.root.map.getLayerContentXY(x, y, this.root.currentLayer);\r\n                    if (contents && this.root.logic.canDeleteBuilding(contents)) {\r\n                        // Prevent rendering the overlay twice\r\n                        const uid = contents.uid;\r\n                        if (renderedUids.has(uid)) {\r\n                            continue;\r\n                        }\r\n                        renderedUids.add(uid);\r\n\r\n                        const staticComp = contents.components.StaticMapEntity;\r\n                        const bounds = staticComp.getTileSpaceBounds();\r\n                        parameters.context.beginRoundedRect(\r\n                            bounds.x * globalConfig.tileSize + boundsBorder,\r\n                            bounds.y * globalConfig.tileSize + boundsBorder,\r\n                            bounds.w * globalConfig.tileSize - 2 * boundsBorder,\r\n                            bounds.h * globalConfig.tileSize - 2 * boundsBorder,\r\n                            2\r\n                        );\r\n                        parameters.context.fill();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        parameters.context.fillStyle = THEME.map.selectionOverlay;\r\n        this.selectedUids.forEach(uid => {\r\n            const entity = this.root.entityMgr.findByUid(uid);\r\n            const staticComp = entity.components.StaticMapEntity;\r\n            const bounds = staticComp.getTileSpaceBounds();\r\n            parameters.context.beginRoundedRect(\r\n                bounds.x * globalConfig.tileSize + boundsBorder,\r\n                bounds.y * globalConfig.tileSize + boundsBorder,\r\n                bounds.w * globalConfig.tileSize - 2 * boundsBorder,\r\n                bounds.h * globalConfig.tileSize - 2 * boundsBorder,\r\n                2\r\n            );\r\n            parameters.context.fill();\r\n        });\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/mass_selector.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2229,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/hud/parts/mass_selector.js",
    "static": true,
    "longname": "js/game/hud/parts/mass_selector.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/mass_selector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2230,
    "kind": "class",
    "name": "HUDMassSelector",
    "memberof": "js/game/hud/parts/mass_selector.js",
    "static": true,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/mass_selector.js",
    "importStyle": "{HUDMassSelector}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2231,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2232,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2233,
    "kind": "member",
    "name": "currentSelectionStartWorld",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#currentSelectionStartWorld",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2234,
    "kind": "member",
    "name": "currentSelectionEnd",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#currentSelectionEnd",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2235,
    "kind": "member",
    "name": "selectedUids",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#selectedUids",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2236,
    "kind": "method",
    "name": "onEntityDestroyed",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#onEntityDestroyed",
    "access": "public",
    "description": "Handles the destroy callback and makes sure we clean our list",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2237,
    "kind": "method",
    "name": "onBack",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#onBack",
    "access": "public",
    "description": "",
    "lineNumber": 60,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2239,
    "kind": "method",
    "name": "clearSelection",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#clearSelection",
    "access": "public",
    "description": "Clears the entire selection",
    "lineNumber": 71,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2241,
    "kind": "method",
    "name": "confirmDelete",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#confirmDelete",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2242,
    "kind": "method",
    "name": "doDelete",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#doDelete",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2244,
    "kind": "method",
    "name": "startCopy",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#startCopy",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2246,
    "kind": "method",
    "name": "confirmCut",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#confirmCut",
    "access": "public",
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2247,
    "kind": "method",
    "name": "doCut",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#doCut",
    "access": "public",
    "description": null,
    "lineNumber": 163,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2248,
    "kind": "method",
    "name": "onMouseDown",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#onMouseDown",
    "access": "public",
    "description": "mouse down pre handler",
    "lineNumber": 204,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumMouseButton"
        ],
        "spread": false,
        "optional": false,
        "name": "mouseButton",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2252,
    "kind": "method",
    "name": "onMouseMove",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#onMouseMove",
    "access": "public",
    "description": "mouse move pre handler",
    "lineNumber": 227,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2254,
    "kind": "method",
    "name": "onMouseUp",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#onMouseUp",
    "access": "public",
    "description": null,
    "lineNumber": 233,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2257,
    "kind": "method",
    "name": "draw",
    "memberof": "js/game/hud/parts/mass_selector.js~HUDMassSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/mass_selector.js~HUDMassSelector#draw",
    "access": "public",
    "description": "",
    "lineNumber": 262,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2258,
    "kind": "file",
    "name": "js/game/hud/parts/miner_highlight.js",
    "content": "import { globalConfig } from \"../../../core/config\";\r\nimport { formatItemsPerSecond, round2Digits } from \"../../../core/utils\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { T } from \"../../../translations\";\r\nimport { Entity } from \"../../entity\";\r\nimport { THEME } from \"../../theme\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\n\r\nexport class HUDMinerHighlight extends BaseHUDPart {\r\n    initialize() {}\r\n\r\n    /**\r\n     *\r\n     * @param {import(\"../../../core/draw_utils\").DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        const mousePos = this.root.app.mousePosition;\r\n        if (!mousePos) {\r\n            // Mouse pos not ready\r\n            return;\r\n        }\r\n\r\n        if (this.root.currentLayer !== \"regular\") {\r\n            // Not within the regular layer\r\n            return;\r\n        }\r\n\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            // Not within the map overlay\r\n            return;\r\n        }\r\n\r\n        const worldPos = this.root.camera.screenToWorld(mousePos);\r\n        const hoveredTile = worldPos.toTileSpace();\r\n\r\n        const contents = this.root.map.getTileContent(hoveredTile, \"regular\");\r\n        if (!contents) {\r\n            // Empty tile\r\n            return;\r\n        }\r\n\r\n        const minerComp = contents.components.Miner;\r\n        if (!minerComp || !minerComp.chainable) {\r\n            // Not a chainable miner\r\n            return;\r\n        }\r\n\r\n        const lowerContents = this.root.map.getLowerLayerContentXY(hoveredTile.x, hoveredTile.y);\r\n        if (!lowerContents) {\r\n            // Not connected\r\n            return;\r\n        }\r\n\r\n        parameters.context.fillStyle = THEME.map.connectedMiners.overlay;\r\n\r\n        const connectedEntities = this.findConnectedMiners(contents);\r\n\r\n        for (let i = 0; i < connectedEntities.length; ++i) {\r\n            const entity = connectedEntities[i];\r\n            const staticComp = entity.components.StaticMapEntity;\r\n\r\n            parameters.context.beginRoundedRect(\r\n                staticComp.origin.x * globalConfig.tileSize + 5,\r\n                staticComp.origin.y * globalConfig.tileSize + 5,\r\n                globalConfig.tileSize - 10,\r\n                globalConfig.tileSize - 10,\r\n                3\r\n            );\r\n            parameters.context.fill();\r\n        }\r\n\r\n        const throughput = round2Digits(connectedEntities.length * this.root.hubGoals.getMinerBaseSpeed());\r\n\r\n        const maxThroughput = this.root.hubGoals.getBeltBaseSpeed();\r\n\r\n        const tooltipLocation = this.root.camera.screenToWorld(mousePos);\r\n\r\n        const scale = (1 / this.root.camera.zoomLevel) * this.root.app.getEffectiveUiScale();\r\n\r\n        const isCapped = throughput > maxThroughput;\r\n\r\n        // Background\r\n        parameters.context.fillStyle = THEME.map.connectedMiners.background;\r\n        parameters.context.beginRoundedRect(\r\n            tooltipLocation.x + 5 * scale,\r\n            tooltipLocation.y - 3 * scale,\r\n            (isCapped ? 100 : 65) * scale,\r\n            (isCapped ? 45 : 30) * scale,\r\n            2\r\n        );\r\n        parameters.context.fill();\r\n\r\n        // Throughput\r\n        parameters.context.fillStyle = THEME.map.connectedMiners.textColor;\r\n        parameters.context.font = \"bold \" + scale * 10 + \"px GameFont\";\r\n        parameters.context.fillText(\r\n            formatItemsPerSecond(throughput),\r\n            tooltipLocation.x + 10 * scale,\r\n            tooltipLocation.y + 10 * scale\r\n        );\r\n\r\n        // Amount of miners\r\n        parameters.context.globalAlpha = 0.6;\r\n        parameters.context.font = \"bold \" + scale * 8 + \"px GameFont\";\r\n        parameters.context.fillText(\r\n            connectedEntities.length === 1 ?\r\n            T.ingame.connectedMiners.one_miner :\r\n            T.ingame.connectedMiners.n_miners.replace(\"<amount>\", String(connectedEntities.length)),\r\n            tooltipLocation.x + 10 * scale,\r\n            tooltipLocation.y + 22 * scale\r\n        );\r\n\r\n        parameters.context.globalAlpha = 1;\r\n\r\n        if (isCapped) {\r\n            parameters.context.fillStyle = THEME.map.connectedMiners.textColorCapped;\r\n            parameters.context.fillText(\r\n                T.ingame.connectedMiners.limited_items.replace(\r\n                    \"<max_throughput>\",\r\n                    formatItemsPerSecond(maxThroughput)\r\n                ),\r\n                tooltipLocation.x + 10 * scale,\r\n                tooltipLocation.y + 34 * scale\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds all connected miners to the given entity\r\n     * @param {Entity} entity\r\n     * @param {Set<number>} seenUids Which entities have already been processed\r\n     * @returns {Array<Entity>} The connected miners\r\n     */\r\n    findConnectedMiners(entity, seenUids = new Set()) {\r\n        let results = [];\r\n        const origin = entity.components.StaticMapEntity.origin;\r\n\r\n        if (!seenUids.has(entity.uid)) {\r\n            seenUids.add(entity.uid);\r\n            results.push(entity);\r\n        }\r\n\r\n        // Check for the miner which we connect to\r\n        const connectedMiner = this.root.systemMgr.systems.miner.findChainedMiner(entity);\r\n        if (connectedMiner && !seenUids.has(connectedMiner.uid)) {\r\n            results.push(connectedMiner);\r\n            seenUids.add(connectedMiner.uid);\r\n            results.push(...this.findConnectedMiners(connectedMiner, seenUids));\r\n        }\r\n\r\n        // Search within a 1x1 grid - this assumes miners are always 1x1\r\n        for (let dx = -1; dx <= 1; ++dx) {\r\n            for (let dy = -1; dy <= 1; ++dy) {\r\n                const contents = this.root.map.getTileContent(\r\n                    new Vector(origin.x + dx, origin.y + dy),\r\n                    \"regular\"\r\n                );\r\n                if (contents) {\r\n                    const minerComp = contents.components.Miner;\r\n                    if (minerComp && minerComp.chainable) {\r\n                        // Found a miner connected to this entity\r\n                        if (!seenUids.has(contents.uid)) {\r\n                            if (this.root.systemMgr.systems.miner.findChainedMiner(contents) === entity) {\r\n                                results.push(contents);\r\n                                seenUids.add(contents.uid);\r\n                                results.push(...this.findConnectedMiners(contents, seenUids));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/miner_highlight.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2259,
    "kind": "class",
    "name": "HUDMinerHighlight",
    "memberof": "js/game/hud/parts/miner_highlight.js",
    "static": true,
    "longname": "js/game/hud/parts/miner_highlight.js~HUDMinerHighlight",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/miner_highlight.js",
    "importStyle": "{HUDMinerHighlight}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2260,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/miner_highlight.js~HUDMinerHighlight",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/miner_highlight.js~HUDMinerHighlight#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2261,
    "kind": "method",
    "name": "draw",
    "memberof": "js/game/hud/parts/miner_highlight.js~HUDMinerHighlight",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/miner_highlight.js~HUDMinerHighlight#draw",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../../../core/draw_utils\").DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2262,
    "kind": "method",
    "name": "findConnectedMiners",
    "memberof": "js/game/hud/parts/miner_highlight.js~HUDMinerHighlight",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/miner_highlight.js~HUDMinerHighlight#findConnectedMiners",
    "access": "public",
    "description": "Finds all connected miners to the given entity",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<Entity>} The connected miners"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Set<number>"
        ],
        "spread": false,
        "optional": false,
        "name": "seenUids",
        "description": "Which entities have already been processed"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Entity>"
      ],
      "spread": false,
      "description": "The connected miners"
    }
  },
  {
    "__docId__": 2263,
    "kind": "file",
    "name": "js/game/hud/parts/modal_dialogs.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../../../application\";\r\n/* typehints:end */\r\n\r\nimport { SOUNDS } from \"../../../platform/sound\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { Dialog, DialogLoading, DialogOptionChooser } from \"../../../core/modal_dialog_elements\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport { THIRDPARTY_URLS } from \"../../../core/config\";\r\n\r\nexport class HUDModalDialogs extends BaseHUDPart {\r\n    constructor(root, app) {\r\n        // Important: Root is not always available here! Its also used in the main menu\r\n        super(root);\r\n\r\n        /** @type {Application} */\r\n        this.app = root ? root.app : app;\r\n\r\n        this.dialogParent = null;\r\n        this.dialogStack = [];\r\n    }\r\n\r\n    // For use inside of the game, implementation of base hud part\r\n    initialize() {\r\n        this.dialogParent = document.getElementById(\"ingame_HUD_ModalDialogs\");\r\n        this.domWatcher = new DynamicDomAttach(this.root, this.dialogParent);\r\n    }\r\n\r\n    shouldPauseRendering() {\r\n        return this.dialogStack.length > 0;\r\n    }\r\n\r\n    shouldPauseGame() {\r\n        return this.shouldPauseRendering();\r\n    }\r\n\r\n    createElements(parent) {\r\n        return makeDiv(parent, \"ingame_HUD_ModalDialogs\");\r\n    }\r\n\r\n    // For use outside of the game\r\n    initializeToElement(element) {\r\n        assert(element, \"No element for dialogs given\");\r\n        this.dialogParent = element;\r\n    }\r\n\r\n    isBlockingOverlay() {\r\n        return this.dialogStack.length > 0;\r\n    }\r\n\r\n    // Methods\r\n\r\n    /**\r\n     * @param {string} title\r\n     * @param {string} text\r\n     * @param {Array<string>} buttons\r\n     */\r\n    showInfo(title, text, buttons = [\"ok:good\"]) {\r\n        const dialog = new Dialog({\r\n            app: this.app,\r\n            title: title,\r\n            contentHTML: text,\r\n            buttons: buttons,\r\n            type: \"info\",\r\n        });\r\n        this.internalShowDialog(dialog);\r\n\r\n        if (this.app) {\r\n            this.app.sound.playUiSound(SOUNDS.dialogOk);\r\n        }\r\n\r\n        return dialog.buttonSignals;\r\n    }\r\n\r\n    /**\r\n     * @param {string} title\r\n     * @param {string} text\r\n     * @param {Array<string>} buttons\r\n     */\r\n    showWarning(title, text, buttons = [\"ok:good\"]) {\r\n        const dialog = new Dialog({\r\n            app: this.app,\r\n            title: title,\r\n            contentHTML: text,\r\n            buttons: buttons,\r\n            type: \"warning\",\r\n        });\r\n        this.internalShowDialog(dialog);\r\n\r\n        if (this.app) {\r\n            this.app.sound.playUiSound(SOUNDS.dialogError);\r\n        }\r\n\r\n        return dialog.buttonSignals;\r\n    }\r\n\r\n    /**\r\n     * @param {string} feature\r\n     * @param {string} textPrefab\r\n     */\r\n    showFeatureRestrictionInfo(feature, textPrefab = T.dialogs.featureRestriction.desc) {\r\n        const dialog = new Dialog({\r\n            app: this.app,\r\n            title: T.dialogs.featureRestriction.title,\r\n            contentHTML: textPrefab.replace(\"<feature>\", feature),\r\n            buttons: [\"cancel:bad\", \"getStandalone:good\"],\r\n            type: \"warning\",\r\n        });\r\n        this.internalShowDialog(dialog);\r\n\r\n        if (this.app) {\r\n            this.app.sound.playUiSound(SOUNDS.dialogOk);\r\n        }\r\n\r\n        this.app.analytics.trackUiClick(\"demo_dialog_show\");\r\n\r\n        dialog.buttonSignals.cancel.add(() => {\r\n            this.app.analytics.trackUiClick(\"demo_dialog_cancel\");\r\n        });\r\n\r\n        dialog.buttonSignals.getStandalone.add(() => {\r\n            this.app.analytics.trackUiClick(\"demo_dialog_click\");\r\n            window.open(THIRDPARTY_URLS.standaloneStorePage + \"?ref=ddc\");\r\n        });\r\n\r\n        return dialog.buttonSignals;\r\n    }\r\n\r\n    showOptionChooser(title, options) {\r\n        const dialog = new DialogOptionChooser({\r\n            app: this.app,\r\n            title,\r\n            options,\r\n        });\r\n        this.internalShowDialog(dialog);\r\n        return dialog.buttonSignals;\r\n    }\r\n\r\n    // Returns method to be called when laoding finishd\r\n    showLoadingDialog() {\r\n        const dialog = new DialogLoading(this.app);\r\n        this.internalShowDialog(dialog);\r\n        return this.closeDialog.bind(this, dialog);\r\n    }\r\n\r\n    internalShowDialog(dialog) {\r\n        const elem = dialog.createElement();\r\n        dialog.setIndex(this.dialogStack.length);\r\n\r\n        // Hide last dialog in queue\r\n        if (this.dialogStack.length > 0) {\r\n            this.dialogStack[this.dialogStack.length - 1].hide();\r\n        }\r\n\r\n        this.dialogStack.push(dialog);\r\n\r\n        // Append dialog\r\n        dialog.show();\r\n        dialog.closeRequested.add(this.closeDialog.bind(this, dialog));\r\n\r\n        // Append to HTML\r\n        this.dialogParent.appendChild(elem);\r\n\r\n        document.body.classList.toggle(\"modalDialogActive\", this.dialogStack.length > 0);\r\n\r\n        // IMPORTANT: Attach element directly, otherwise double submit is possible\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        if (this.domWatcher) {\r\n            this.domWatcher.update(this.dialogStack.length > 0);\r\n        }\r\n    }\r\n\r\n    closeDialog(dialog) {\r\n        dialog.destroy();\r\n\r\n        let index = -1;\r\n        for (let i = 0; i < this.dialogStack.length; ++i) {\r\n            if (this.dialogStack[i] === dialog) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        assert(index >= 0, \"Dialog not in dialog stack\");\r\n        this.dialogStack.splice(index, 1);\r\n\r\n        if (this.dialogStack.length > 0) {\r\n            // Show the dialog which was previously open\r\n            this.dialogStack[this.dialogStack.length - 1].show();\r\n        }\r\n\r\n        document.body.classList.toggle(\"modalDialogActive\", this.dialogStack.length > 0);\r\n    }\r\n\r\n    close() {\r\n        for (let i = 0; i < this.dialogStack.length; ++i) {\r\n            const dialog = this.dialogStack[i];\r\n            dialog.destroy();\r\n        }\r\n        this.dialogStack = [];\r\n    }\r\n\r\n    cleanup() {\r\n        super.cleanup();\r\n        for (let i = 0; i < this.dialogStack.length; ++i) {\r\n            this.dialogStack[i].destroy();\r\n        }\r\n        this.dialogStack = [];\r\n        this.dialogParent = null;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/modal_dialogs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2264,
    "kind": "class",
    "name": "HUDModalDialogs",
    "memberof": "js/game/hud/parts/modal_dialogs.js",
    "static": true,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/modal_dialogs.js",
    "importStyle": "{HUDModalDialogs}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2265,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 2266,
    "kind": "member",
    "name": "app",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#app",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Application"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2267,
    "kind": "member",
    "name": "dialogParent",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#dialogParent",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2268,
    "kind": "member",
    "name": "dialogStack",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#dialogStack",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 2269,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2271,
    "kind": "member",
    "name": "domWatcher",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#domWatcher",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2272,
    "kind": "method",
    "name": "shouldPauseRendering",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#shouldPauseRendering",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2273,
    "kind": "method",
    "name": "shouldPauseGame",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#shouldPauseGame",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2274,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2275,
    "kind": "method",
    "name": "initializeToElement",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#initializeToElement",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2277,
    "kind": "method",
    "name": "isBlockingOverlay",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#isBlockingOverlay",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2278,
    "kind": "method",
    "name": "showInfo",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#showInfo",
    "access": "public",
    "description": "",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "buttons",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2279,
    "kind": "method",
    "name": "showWarning",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#showWarning",
    "access": "public",
    "description": "",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "buttons",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2280,
    "kind": "method",
    "name": "showFeatureRestrictionInfo",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#showFeatureRestrictionInfo",
    "access": "public",
    "description": "",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "textPrefab",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2281,
    "kind": "method",
    "name": "showOptionChooser",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#showOptionChooser",
    "access": "public",
    "description": null,
    "lineNumber": 131,
    "undocument": true,
    "params": [
      {
        "name": "title",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2282,
    "kind": "method",
    "name": "showLoadingDialog",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#showLoadingDialog",
    "access": "public",
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2283,
    "kind": "method",
    "name": "internalShowDialog",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#internalShowDialog",
    "access": "public",
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "params": [
      {
        "name": "dialog",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2284,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#update",
    "access": "public",
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2285,
    "kind": "method",
    "name": "closeDialog",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#closeDialog",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "params": [
      {
        "name": "dialog",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2286,
    "kind": "method",
    "name": "close",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#close",
    "access": "public",
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2288,
    "kind": "method",
    "name": "cleanup",
    "memberof": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/modal_dialogs.js~HUDModalDialogs#cleanup",
    "access": "public",
    "description": null,
    "lineNumber": 207,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2291,
    "kind": "file",
    "name": "js/game/hud/parts/notifications.js",
    "content": "import { makeDiv } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\n\r\n/** @enum {string} */\r\nexport const enumNotificationType = {\r\n    saved: \"saved\",\r\n    upgrade: \"upgrade\",\r\n    success: \"success\",\r\n};\r\n\r\nconst notificationDuration = 3;\r\n\r\nexport class HUDNotifications extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_HUD_Notifications\", [], ``);\r\n    }\r\n\r\n    initialize() {\r\n        this.root.hud.signals.notification.add(this.onNotification, this);\r\n\r\n        /** @type {Array<{ element: HTMLElement, expireAt: number}>} */\r\n        this.notificationElements = [];\r\n\r\n        // Automatic notifications\r\n        this.root.signals.gameSaved.add(() =>\r\n            this.onNotification(T.ingame.notifications.gameSaved, enumNotificationType.saved)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @param {string} message\r\n     * @param {enumNotificationType} type\r\n     */\r\n    onNotification(message, type) {\r\n        const element = makeDiv(this.element, null, [\"notification\", \"type-\" + type], message);\r\n        element.setAttribute(\"data-icon\", \"icons/notification_\" + type + \".png\");\r\n\r\n        this.notificationElements.push({\r\n            element,\r\n            expireAt: this.root.time.realtimeNow() + notificationDuration,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        const now = this.root.time.realtimeNow();\r\n        for (let i = 0; i < this.notificationElements.length; ++i) {\r\n            const handle = this.notificationElements[i];\r\n            if (handle.expireAt <= now) {\r\n                handle.element.remove();\r\n                this.notificationElements.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/notifications.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2292,
    "kind": "variable",
    "name": "enumNotificationType",
    "memberof": "js/game/hud/parts/notifications.js",
    "static": true,
    "longname": "js/game/hud/parts/notifications.js~enumNotificationType",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/notifications.js",
    "importStyle": "{enumNotificationType}",
    "description": null,
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"saved\": string, \"upgrade\": string, \"success\": string}"
      ]
    }
  },
  {
    "__docId__": 2293,
    "kind": "variable",
    "name": "notificationDuration",
    "memberof": "js/game/hud/parts/notifications.js",
    "static": true,
    "longname": "js/game/hud/parts/notifications.js~notificationDuration",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/notifications.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2294,
    "kind": "class",
    "name": "HUDNotifications",
    "memberof": "js/game/hud/parts/notifications.js",
    "static": true,
    "longname": "js/game/hud/parts/notifications.js~HUDNotifications",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/notifications.js",
    "importStyle": "{HUDNotifications}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2295,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/notifications.js~HUDNotifications",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/notifications.js~HUDNotifications#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2296,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/notifications.js~HUDNotifications",
    "static": false,
    "longname": "js/game/hud/parts/notifications.js~HUDNotifications#element",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2297,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/notifications.js~HUDNotifications",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/notifications.js~HUDNotifications#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2298,
    "kind": "member",
    "name": "notificationElements",
    "memberof": "js/game/hud/parts/notifications.js~HUDNotifications",
    "static": false,
    "longname": "js/game/hud/parts/notifications.js~HUDNotifications#notificationElements",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "Array<{ element: HTMLElement, expireAt: number}>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2299,
    "kind": "method",
    "name": "onNotification",
    "memberof": "js/game/hud/parts/notifications.js~HUDNotifications",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/notifications.js~HUDNotifications#onNotification",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumNotificationType"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2300,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/notifications.js~HUDNotifications",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/notifications.js~HUDNotifications#update",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2301,
    "kind": "file",
    "name": "js/game/hud/parts/pinned_shapes.js",
    "content": "import { ClickDetector } from \"../../../core/click_detector\";\r\nimport { globalConfig } from \"../../../core/config\";\r\nimport { arrayDeleteValue, formatBigNumber, makeDiv } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport { enumAnalyticsDataSource } from \"../../production_analytics\";\r\nimport { ShapeDefinition } from \"../../shape_definition\";\r\nimport { enumHubGoalRewards } from \"../../tutorial_goals\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\n\r\n/**\r\n * Manages the pinned shapes on the left side of the screen\r\n */\r\nexport class HUDPinnedShapes extends BaseHUDPart {\r\n    constructor(root) {\r\n        super(root);\r\n        /**\r\n         * Store a list of pinned shapes\r\n         * @type {Array<string>}\r\n         */\r\n        this.pinnedShapes = [];\r\n\r\n        /**\r\n         * Store handles to the currently rendered elements, so we can update them more\r\n         * convenient. Also allows for cleaning up handles.\r\n         * @type {Array<{\r\n         *  key: string,\r\n         *  definition: ShapeDefinition,\r\n         *  amountLabel: HTMLElement,\r\n         *  lastRenderedValue: string,\r\n         *  element: HTMLElement,\r\n         *  detector?: ClickDetector,\r\n         *  infoDetector?: ClickDetector,\r\n         *  throughputOnly?: boolean\r\n         * }>}\r\n         */\r\n        this.handles = [];\r\n    }\r\n\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_HUD_PinnedShapes\", []);\r\n    }\r\n\r\n    /**\r\n     * Serializes the pinned shapes\r\n     */\r\n    serialize() {\r\n        return {\r\n            shapes: this.pinnedShapes,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Deserializes the pinned shapes\r\n     * @param {{ shapes: Array<string>}} data\r\n     */\r\n    deserialize(data) {\r\n        if (!data || !data.shapes || !Array.isArray(data.shapes)) {\r\n            return \"Invalid pinned shapes data\";\r\n        }\r\n        this.pinnedShapes = data.shapes;\r\n    }\r\n\r\n    /**\r\n     * Initializes the hud component\r\n     */\r\n    initialize() {\r\n        // Connect to any relevant signals\r\n        this.root.signals.storyGoalCompleted.add(this.rerenderFull, this);\r\n        this.root.signals.upgradePurchased.add(this.updateShapesAfterUpgrade, this);\r\n        this.root.signals.postLoadHook.add(this.rerenderFull, this);\r\n        this.root.hud.signals.shapePinRequested.add(this.pinNewShape, this);\r\n        this.root.hud.signals.shapeUnpinRequested.add(this.unpinShape, this);\r\n\r\n        // Perform initial render\r\n        this.updateShapesAfterUpgrade();\r\n    }\r\n\r\n    /**\r\n     * Updates all shapes after an upgrade has been purchased and removes the unused ones\r\n     */\r\n    updateShapesAfterUpgrade() {\r\n        for (let i = 0; i < this.pinnedShapes.length; ++i) {\r\n            const key = this.pinnedShapes[i];\r\n            if (key === this.root.gameMode.getBlueprintShapeKey()) {\r\n                // Ignore blueprint shapes\r\n                continue;\r\n            }\r\n            let goal = this.findGoalValueForShape(key);\r\n            if (!goal) {\r\n                // Seems no longer relevant\r\n                this.pinnedShapes.splice(i, 1);\r\n                i -= 1;\r\n            }\r\n        }\r\n\r\n        this.rerenderFull();\r\n    }\r\n\r\n    /**\r\n     * Finds the current goal for the given key. If the key is the story goal, returns\r\n     * the story goal. If its the blueprint shape, no goal is returned. Otherwise\r\n     * it's searched for upgrades.\r\n     * @param {string} key\r\n     */\r\n    findGoalValueForShape(key) {\r\n        if (key === this.root.hubGoals.currentGoal.definition.getHash()) {\r\n            return this.root.hubGoals.currentGoal.required;\r\n        }\r\n        if (key === this.root.gameMode.getBlueprintShapeKey()) {\r\n            return null;\r\n        }\r\n\r\n        // Check if this shape is required for any upgrade\r\n        const upgrades = this.root.gameMode.getUpgrades();\r\n        for (const upgradeId in upgrades) {\r\n            const upgradeTiers = upgrades[upgradeId];\r\n            const currentTier = this.root.hubGoals.getUpgradeLevel(upgradeId);\r\n            const tierHandle = upgradeTiers[currentTier];\r\n\r\n            if (!tierHandle) {\r\n                // Max level\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < tierHandle.required.length; ++i) {\r\n                const { shape, amount } = tierHandle.required[i];\r\n                if (shape === key) {\r\n                    return amount;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Returns whether a given shape is currently pinned\r\n     * @param {string} key\r\n     */\r\n    isShapePinned(key) {\r\n        if (\r\n            key === this.root.hubGoals.currentGoal.definition.getHash() ||\r\n            key === this.root.gameMode.getBlueprintShapeKey()\r\n        ) {\r\n            // This is a \"special\" shape which is always pinned\r\n            return true;\r\n        }\r\n\r\n        return this.pinnedShapes.indexOf(key) >= 0;\r\n    }\r\n\r\n    /**\r\n     * Rerenders the whole component\r\n     */\r\n    rerenderFull() {\r\n        const currentGoal = this.root.hubGoals.currentGoal;\r\n        const currentKey = currentGoal.definition.getHash();\r\n\r\n        // First, remove all old shapes\r\n        for (let i = 0; i < this.handles.length; ++i) {\r\n            this.handles[i].element.remove();\r\n            const detector = this.handles[i].detector;\r\n            if (detector) {\r\n                detector.cleanup();\r\n            }\r\n            const infoDetector = this.handles[i].infoDetector;\r\n            if (infoDetector) {\r\n                infoDetector.cleanup();\r\n            }\r\n        }\r\n        this.handles = [];\r\n\r\n        // Pin story goal\r\n        this.internalPinShape({\r\n            key: currentKey,\r\n            canUnpin: false,\r\n            className: \"goal\",\r\n            throughputOnly: currentGoal.throughputOnly,\r\n        });\r\n\r\n        // Pin blueprint shape as well\r\n        if (this.root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_blueprints)) {\r\n            this.internalPinShape({\r\n                key: this.root.gameMode.getBlueprintShapeKey(),\r\n                canUnpin: false,\r\n                className: \"blueprint\",\r\n            });\r\n        }\r\n\r\n        // Pin manually pinned shapes\r\n        for (let i = 0; i < this.pinnedShapes.length; ++i) {\r\n            const key = this.pinnedShapes[i];\r\n            if (key !== currentKey) {\r\n                this.internalPinShape({ key });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pins a new shape\r\n     * @param {object} param0\r\n     * @param {string} param0.key\r\n     * @param {boolean=} param0.canUnpin\r\n     * @param {string=} param0.className\r\n     * @param {boolean=} param0.throughputOnly\r\n     */\r\n    internalPinShape({ key, canUnpin = true, className = null, throughputOnly = false }) {\r\n        const definition = this.root.shapeDefinitionMgr.getShapeFromShortKey(key);\r\n\r\n        const element = makeDiv(this.element, null, [\"shape\"]);\r\n        const canvas = definition.generateAsCanvas(120);\r\n        element.appendChild(canvas);\r\n\r\n        if (className) {\r\n            element.classList.add(className);\r\n        }\r\n\r\n        let detector = null;\r\n        if (canUnpin) {\r\n            const unpinButton = document.createElement(\"button\");\r\n            unpinButton.classList.add(\"unpinButton\");\r\n            element.appendChild(unpinButton);\r\n            element.classList.add(\"removable\");\r\n            detector = new ClickDetector(unpinButton, {\r\n                consumeEvents: true,\r\n                preventDefault: true,\r\n                targetOnly: true,\r\n            });\r\n            detector.click.add(() => this.unpinShape(key));\r\n        } else {\r\n            element.classList.add(\"marked\");\r\n        }\r\n\r\n        // Show small info icon\r\n        const infoButton = document.createElement(\"button\");\r\n        infoButton.classList.add(\"infoButton\");\r\n        element.appendChild(infoButton);\r\n        const infoDetector = new ClickDetector(infoButton, {\r\n            consumeEvents: true,\r\n            preventDefault: true,\r\n            targetOnly: true,\r\n        });\r\n        infoDetector.click.add(() => this.root.hud.signals.viewShapeDetailsRequested.dispatch(definition));\r\n\r\n        const amountLabel = makeDiv(element, null, [\"amountLabel\"], \"\");\r\n\r\n        const goal = this.findGoalValueForShape(key);\r\n        if (goal) {\r\n            makeDiv(element, null, [\"goalLabel\"], \"/\" + formatBigNumber(goal));\r\n        }\r\n\r\n        this.handles.push({\r\n            key,\r\n            definition,\r\n            element,\r\n            amountLabel,\r\n            lastRenderedValue: \"\",\r\n            detector,\r\n            infoDetector,\r\n            throughputOnly,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updates all amount labels\r\n     */\r\n    update() {\r\n        for (let i = 0; i < this.handles.length; ++i) {\r\n            const handle = this.handles[i];\r\n\r\n            let currentValue = this.root.hubGoals.getShapesStoredByKey(handle.key);\r\n            let currentValueFormatted = formatBigNumber(currentValue);\r\n\r\n            if (handle.throughputOnly) {\r\n                currentValue =\r\n                    this.root.productionAnalytics.getCurrentShapeRate(\r\n                        enumAnalyticsDataSource.delivered,\r\n                        handle.definition\r\n                    ) / globalConfig.analyticsSliceDurationSeconds;\r\n                currentValueFormatted = T.ingame.statistics.shapesDisplayUnits.second.replace(\r\n                    \"<shapes>\",\r\n                    String(currentValue)\r\n                );\r\n            }\r\n\r\n            if (currentValueFormatted !== handle.lastRenderedValue) {\r\n                handle.lastRenderedValue = currentValueFormatted;\r\n                handle.amountLabel.innerText = currentValueFormatted;\r\n                const goal = this.findGoalValueForShape(handle.key);\r\n                handle.element.classList.toggle(\"completed\", goal && currentValue > goal);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unpins a shape\r\n     * @param {string} key\r\n     */\r\n    unpinShape(key) {\r\n        console.log(\"unpin\", key);\r\n        arrayDeleteValue(this.pinnedShapes, key);\r\n        this.rerenderFull();\r\n    }\r\n\r\n    /**\r\n     * Requests to pin a new shape\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    pinNewShape(definition) {\r\n        const key = definition.getHash();\r\n        if (key === this.root.hubGoals.currentGoal.definition.getHash()) {\r\n            // Can not pin current goal\r\n            return;\r\n        }\r\n\r\n        if (key === this.root.gameMode.getBlueprintShapeKey()) {\r\n            // Can not pin the blueprint shape\r\n            return;\r\n        }\r\n\r\n        // Check if its already pinned\r\n        if (this.pinnedShapes.indexOf(key) >= 0) {\r\n            return;\r\n        }\r\n\r\n        this.pinnedShapes.push(key);\r\n        this.rerenderFull();\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/pinned_shapes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2302,
    "kind": "class",
    "name": "HUDPinnedShapes",
    "memberof": "js/game/hud/parts/pinned_shapes.js",
    "static": true,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/pinned_shapes.js",
    "importStyle": "{HUDPinnedShapes}",
    "description": "Manages the pinned shapes on the left side of the screen",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2303,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 2304,
    "kind": "member",
    "name": "pinnedShapes",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#pinnedShapes",
    "access": "public",
    "description": "Store a list of pinned shapes",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2305,
    "kind": "member",
    "name": "handles",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#handles",
    "access": "public",
    "description": "Store handles to the currently rendered elements, so we can update them more\nconvenient. Also allows for cleaning up handles.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Array<{\n key: string,\n definition: ShapeDefinition,\n amountLabel: HTMLElement,\n lastRenderedValue: string,\n element: HTMLElement,\n detector?: ClickDetector,\n infoDetector?: ClickDetector,\n throughputOnly?: boolean\n}>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2306,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2307,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#element",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2308,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#serialize",
    "access": "public",
    "description": "Serializes the pinned shapes",
    "lineNumber": 46,
    "params": [],
    "return": {
      "types": [
        "{\"shapes\": *}"
      ]
    }
  },
  {
    "__docId__": 2309,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#deserialize",
    "access": "public",
    "description": "Deserializes the pinned shapes",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "{ shapes: Array<string>}"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2311,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#initialize",
    "access": "public",
    "description": "Initializes the hud component",
    "lineNumber": 66,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2312,
    "kind": "method",
    "name": "updateShapesAfterUpgrade",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#updateShapesAfterUpgrade",
    "access": "public",
    "description": "Updates all shapes after an upgrade has been purchased and removes the unused ones",
    "lineNumber": 81,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2313,
    "kind": "method",
    "name": "findGoalValueForShape",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#findGoalValueForShape",
    "access": "public",
    "description": "Finds the current goal for the given key. If the key is the story goal, returns\nthe story goal. If its the blueprint shape, no goal is returned. Otherwise\nit's searched for upgrades.",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2314,
    "kind": "method",
    "name": "isShapePinned",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#isShapePinned",
    "access": "public",
    "description": "Returns whether a given shape is currently pinned",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2315,
    "kind": "method",
    "name": "rerenderFull",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#rerenderFull",
    "access": "public",
    "description": "Rerenders the whole component",
    "lineNumber": 155,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2317,
    "kind": "method",
    "name": "internalPinShape",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#internalPinShape",
    "access": "public",
    "description": "Pins a new shape",
    "lineNumber": 207,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.canUnpin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.className",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.throughputOnly",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2318,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#update",
    "access": "public",
    "description": "Updates all amount labels",
    "lineNumber": 267,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2319,
    "kind": "method",
    "name": "unpinShape",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#unpinShape",
    "access": "public",
    "description": "Unpins a shape",
    "lineNumber": 299,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2320,
    "kind": "method",
    "name": "pinNewShape",
    "memberof": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/pinned_shapes.js~HUDPinnedShapes#pinNewShape",
    "access": "public",
    "description": "Requests to pin a new shape",
    "lineNumber": 309,
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2321,
    "kind": "file",
    "name": "js/game/hud/parts/sandbox_controller.js",
    "content": "import { makeDiv } from \"../../../core/utils\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { enumNotificationType } from \"./notifications\";\r\n\r\nexport class HUDSandboxController extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(\r\n            parent,\r\n            \"ingame_HUD_SandboxController\",\r\n            [],\r\n            `\r\n            <label>Sandbox Options</label>\r\n            <span class=\"sandboxHint\">Use F6 to toggle this overlay</span>\r\n\r\n            <div class=\"buttons\">\r\n                <div class=\"levelToggle plusMinus\">\r\n                    <label>Level</label>\r\n                    <button class=\"styledButton minus\">-</button>\r\n                    <button class=\"styledButton plus\">+</button>\r\n                </div>\r\n                \r\n                <div class=\"upgradesBelt plusMinus\">\r\n                    <label>Upgrades &rarr; Belt</label>\r\n                    <button class=\"styledButton minus\">-</button>\r\n                    <button class=\"styledButton plus\">+</button>\r\n                </div>\r\n                \r\n                <div class=\"upgradesExtraction plusMinus\">\r\n                    <label>Upgrades &rarr; Extraction</label>\r\n                    <button class=\"styledButton minus\">-</button>\r\n                    <button class=\"styledButton plus\">+</button>\r\n                </div>\r\n                \r\n                <div class=\"upgradesProcessing plusMinus\">\r\n                    <label>Upgrades &rarr; Processing</label>\r\n                    <button class=\"styledButton minus\">-</button>\r\n                    <button class=\"styledButton plus\">+</button>\r\n                </div>\r\n                \r\n                <div class=\"upgradesPainting plusMinus\">\r\n                    <label>Upgrades &rarr; Painting</label>\r\n                    <button class=\"styledButton minus\">-</button>\r\n                    <button class=\"styledButton plus\">+</button>\r\n                </div>\r\n\r\n                <div class=\"additionalOptions\">\r\n                    <button class=\"styledButton giveBlueprints\">Fill blueprint shapes</button>\r\n                    <button class=\"styledButton maxOutAll\">Max out all</button>\r\n                </div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        const bind = (selector, handler) => this.trackClicks(this.element.querySelector(selector), handler);\r\n\r\n        bind(\".giveBlueprints\", this.giveBlueprints);\r\n        bind(\".maxOutAll\", this.maxOutAll);\r\n        bind(\".levelToggle .minus\", () => this.modifyLevel(-1));\r\n        bind(\".levelToggle .plus\", () => this.modifyLevel(1));\r\n\r\n        bind(\".upgradesBelt .minus\", () => this.modifyUpgrade(\"belt\", -1));\r\n        bind(\".upgradesBelt .plus\", () => this.modifyUpgrade(\"belt\", 1));\r\n\r\n        bind(\".upgradesExtraction .minus\", () => this.modifyUpgrade(\"miner\", -1));\r\n        bind(\".upgradesExtraction .plus\", () => this.modifyUpgrade(\"miner\", 1));\r\n\r\n        bind(\".upgradesProcessing .minus\", () => this.modifyUpgrade(\"processors\", -1));\r\n        bind(\".upgradesProcessing .plus\", () => this.modifyUpgrade(\"processors\", 1));\r\n\r\n        bind(\".upgradesPainting .minus\", () => this.modifyUpgrade(\"painting\", -1));\r\n        bind(\".upgradesPainting .plus\", () => this.modifyUpgrade(\"painting\", 1));\r\n    }\r\n\r\n    giveBlueprints() {\r\n        const shape = this.root.gameMode.getBlueprintShapeKey();\r\n        if (!this.root.hubGoals.storedShapes[shape]) {\r\n            this.root.hubGoals.storedShapes[shape] = 0;\r\n        }\r\n        this.root.hubGoals.storedShapes[shape] += 1e9;\r\n    }\r\n\r\n    maxOutAll() {\r\n        this.modifyUpgrade(\"belt\", 100);\r\n        this.modifyUpgrade(\"miner\", 100);\r\n        this.modifyUpgrade(\"processors\", 100);\r\n        this.modifyUpgrade(\"painting\", 100);\r\n    }\r\n\r\n    modifyUpgrade(id, amount) {\r\n        const upgradeTiers = this.root.gameMode.getUpgrades()[id];\r\n        const maxLevel = upgradeTiers.length;\r\n\r\n        this.root.hubGoals.upgradeLevels[id] = Math.max(\r\n            0,\r\n            Math.min(maxLevel, (this.root.hubGoals.upgradeLevels[id] || 0) + amount)\r\n        );\r\n\r\n        // Compute improvement\r\n        let improvement = 1;\r\n        for (let i = 0; i < this.root.hubGoals.upgradeLevels[id]; ++i) {\r\n            improvement += upgradeTiers[i].improvement;\r\n        }\r\n        this.root.hubGoals.upgradeImprovements[id] = improvement;\r\n        this.root.signals.upgradePurchased.dispatch(id);\r\n        this.root.hud.signals.notification.dispatch(\r\n            \"Upgrade '\" + id + \"' is now at tier \" + (this.root.hubGoals.upgradeLevels[id] + 1),\r\n            enumNotificationType.upgrade\r\n        );\r\n    }\r\n\r\n    modifyLevel(amount) {\r\n        const hubGoals = this.root.hubGoals;\r\n        hubGoals.level = Math.max(1, hubGoals.level + amount);\r\n        hubGoals.computeNextGoal();\r\n\r\n        // Clear all shapes of this level\r\n        hubGoals.storedShapes[hubGoals.currentGoal.definition.getHash()] = 0;\r\n\r\n        this.root.hud.parts.pinnedShapes.rerenderFull();\r\n\r\n        // Compute gained rewards\r\n        hubGoals.gainedRewards = {};\r\n        const levels = this.root.gameMode.getLevelDefinitions();\r\n        for (let i = 0; i < hubGoals.level - 1; ++i) {\r\n            if (i < levels.length) {\r\n                const reward = levels[i].reward;\r\n                hubGoals.gainedRewards[reward] = (hubGoals.gainedRewards[reward] || 0) + 1;\r\n            }\r\n        }\r\n\r\n        this.root.hud.signals.notification.dispatch(\r\n            \"Changed level to \" + hubGoals.level,\r\n            enumNotificationType.upgrade\r\n        );\r\n    }\r\n\r\n    initialize() {\r\n        // Allow toggling the controller overlay\r\n        this.root.gameState.inputReciever.keydown.add(key => {\r\n            if (key.keyCode === 117) {\r\n                // F6\r\n                this.toggle();\r\n            }\r\n        });\r\n\r\n        this.visible = !G_IS_DEV;\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element);\r\n    }\r\n\r\n    toggle() {\r\n        this.visible = !this.visible;\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(this.visible);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/sandbox_controller.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2322,
    "kind": "class",
    "name": "HUDSandboxController",
    "memberof": "js/game/hud/parts/sandbox_controller.js",
    "static": true,
    "longname": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/sandbox_controller.js",
    "importStyle": "{HUDSandboxController}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2323,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2324,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController",
    "static": false,
    "longname": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController#element",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2325,
    "kind": "method",
    "name": "giveBlueprints",
    "memberof": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController#giveBlueprints",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2326,
    "kind": "method",
    "name": "maxOutAll",
    "memberof": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController#maxOutAll",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2327,
    "kind": "method",
    "name": "modifyUpgrade",
    "memberof": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController#modifyUpgrade",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "amount",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2328,
    "kind": "method",
    "name": "modifyLevel",
    "memberof": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController#modifyLevel",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [
      {
        "name": "amount",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2329,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2330,
    "kind": "member",
    "name": "visible",
    "memberof": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController",
    "static": false,
    "longname": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController#visible",
    "access": "public",
    "description": null,
    "lineNumber": 147,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2331,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController",
    "static": false,
    "longname": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2332,
    "kind": "method",
    "name": "toggle",
    "memberof": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController#toggle",
    "access": "public",
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2334,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/sandbox_controller.js~HUDSandboxController#update",
    "access": "public",
    "description": null,
    "lineNumber": 155,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2335,
    "kind": "file",
    "name": "js/game/hud/parts/screenshot_exporter.js",
    "content": "import { makeOffscreenBuffer } from \"../../../core/buffer_utils\";\r\nimport { globalConfig } from \"../../../core/config\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { createLogger } from \"../../../core/logging\";\r\nimport { Rectangle } from \"../../../core/rectangle\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { T } from \"../../../translations\";\r\nimport { StaticMapEntityComponent } from \"../../components/static_map_entity\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\n\r\nconst logger = createLogger(\"screenshot_exporter\");\r\n\r\nexport class HUDScreenshotExporter extends BaseHUDPart {\r\n    createElements() {}\r\n\r\n    initialize() {\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.ingame.exportScreenshot).add(this.startExport, this);\r\n    }\r\n\r\n    startExport() {\r\n        if (!this.root.app.restrictionMgr.getIsExportingScreenshotsPossible()) {\r\n            this.root.hud.parts.dialogs.showFeatureRestrictionInfo(T.demo.features.exportingBase);\r\n            return;\r\n        }\r\n\r\n        const { ok } = this.root.hud.parts.dialogs.showInfo(\r\n            T.dialogs.exportScreenshotWarning.title,\r\n            T.dialogs.exportScreenshotWarning.desc,\r\n            [\"cancel:good\", \"ok:bad\"]\r\n        );\r\n        ok.add(this.doExport, this);\r\n    }\r\n\r\n    doExport() {\r\n        logger.log(\"Starting export ...\");\r\n\r\n        // Find extends\r\n        const staticEntities = this.root.entityMgr.getAllWithComponent(StaticMapEntityComponent);\r\n\r\n        const minTile = new Vector(0, 0);\r\n        const maxTile = new Vector(0, 0);\r\n        for (let i = 0; i < staticEntities.length; ++i) {\r\n            const bounds = staticEntities[i].components.StaticMapEntity.getTileSpaceBounds();\r\n            minTile.x = Math.min(minTile.x, bounds.x);\r\n            minTile.y = Math.min(minTile.y, bounds.y);\r\n\r\n            maxTile.x = Math.max(maxTile.x, bounds.x + bounds.w);\r\n            maxTile.y = Math.max(maxTile.y, bounds.y + bounds.h);\r\n        }\r\n\r\n        const minChunk = minTile.divideScalar(globalConfig.mapChunkSize).floor();\r\n        const maxChunk = maxTile.divideScalar(globalConfig.mapChunkSize).ceil();\r\n\r\n        const dimensions = maxChunk.sub(minChunk);\r\n        logger.log(\"Dimensions:\", dimensions);\r\n\r\n        let chunkSizePixels = 128;\r\n        const maxDimensions = Math.max(dimensions.x, dimensions.y);\r\n\r\n        if (maxDimensions > 128) {\r\n            chunkSizePixels = Math.max(1, Math.floor(128 * (128 / maxDimensions)));\r\n        }\r\n        logger.log(\"ChunkSizePixels:\", chunkSizePixels);\r\n\r\n        const chunkScale = chunkSizePixels / globalConfig.mapChunkWorldSize;\r\n        logger.log(\"Scale:\", chunkScale);\r\n\r\n        logger.log(\"Allocating buffer, if the factory grew too big it will crash here\");\r\n        const [canvas, context] = makeOffscreenBuffer(\r\n            dimensions.x * chunkSizePixels,\r\n            dimensions.y * chunkSizePixels,\r\n            {\r\n                smooth: true,\r\n                reusable: false,\r\n                label: \"export-buffer\",\r\n            }\r\n        );\r\n        logger.log(\"Got buffer, rendering now ...\");\r\n\r\n        const visibleRect = new Rectangle(\r\n            minChunk.x * globalConfig.mapChunkWorldSize,\r\n            minChunk.y * globalConfig.mapChunkWorldSize,\r\n            dimensions.x * globalConfig.mapChunkWorldSize,\r\n            dimensions.y * globalConfig.mapChunkWorldSize\r\n        );\r\n        const parameters = new DrawParameters({\r\n            context,\r\n            visibleRect,\r\n            desiredAtlasScale: 0.25,\r\n            root: this.root,\r\n            zoomLevel: chunkScale,\r\n        });\r\n\r\n        context.scale(chunkScale, chunkScale);\r\n        context.translate(-visibleRect.x, -visibleRect.y);\r\n\r\n        // Render all relevant chunks\r\n        this.root.map.drawBackground(parameters);\r\n        this.root.map.drawForeground(parameters);\r\n\r\n        // Offer export\r\n        logger.log(\"Rendered buffer, exporting ...\");\r\n        const image = canvas.toDataURL(\"image/png\");\r\n        const link = document.createElement(\"a\");\r\n        link.download = \"base.png\";\r\n        link.href = image;\r\n        link.click();\r\n        logger.log(\"Done!\");\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/screenshot_exporter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2336,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/hud/parts/screenshot_exporter.js",
    "static": true,
    "longname": "js/game/hud/parts/screenshot_exporter.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/screenshot_exporter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2337,
    "kind": "class",
    "name": "HUDScreenshotExporter",
    "memberof": "js/game/hud/parts/screenshot_exporter.js",
    "static": true,
    "longname": "js/game/hud/parts/screenshot_exporter.js~HUDScreenshotExporter",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/screenshot_exporter.js",
    "importStyle": "{HUDScreenshotExporter}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2338,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/screenshot_exporter.js~HUDScreenshotExporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/screenshot_exporter.js~HUDScreenshotExporter#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2339,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/screenshot_exporter.js~HUDScreenshotExporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/screenshot_exporter.js~HUDScreenshotExporter#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2340,
    "kind": "method",
    "name": "startExport",
    "memberof": "js/game/hud/parts/screenshot_exporter.js~HUDScreenshotExporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/screenshot_exporter.js~HUDScreenshotExporter#startExport",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2341,
    "kind": "method",
    "name": "doExport",
    "memberof": "js/game/hud/parts/screenshot_exporter.js~HUDScreenshotExporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/screenshot_exporter.js~HUDScreenshotExporter#doExport",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2342,
    "kind": "file",
    "name": "js/game/hud/parts/settings_menu.js",
    "content": "import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv, formatBigNumberFull } from \"../../../core/utils\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { InputReceiver } from \"../../../core/input_receiver\";\r\nimport { KeyActionMapper, KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { T } from \"../../../translations\";\r\nimport { StaticMapEntityComponent } from \"../../components/static_map_entity\";\r\nimport { BeltComponent } from \"../../components/belt\";\r\n\r\nexport class HUDSettingsMenu extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.background = makeDiv(parent, \"ingame_HUD_SettingsMenu\", [\"ingameDialog\"]);\r\n\r\n        this.menuElement = makeDiv(this.background, null, [\"menuElement\"]);\r\n\r\n        this.statsElement = makeDiv(\r\n            this.background,\r\n            null, [\"statsElement\"],\r\n            `\r\n            <strong>${T.ingame.settingsMenu.beltsPlaced}</strong><span class=\"beltsPlaced\"></span>\r\n            <strong>${T.ingame.settingsMenu.buildingsPlaced}</strong><span class=\"buildingsPlaced\"></span>\r\n            <strong>${T.ingame.settingsMenu.playtime}</strong><span class=\"playtime\"></span>\r\n\r\n            `\r\n        );\r\n\r\n        this.buttonContainer = makeDiv(this.menuElement, null, [\"buttons\"]);\r\n\r\n        const buttons = HUDSettingsMenu.buttons;\r\n\r\n        for (let i = 0; i < buttons.length; ++i) {\r\n            const { action, id, options } = buttons[i];\r\n\r\n            const element = document.createElement(\"button\");\r\n            element.classList.add(\"styledButton\");\r\n            element.classList.add(id);\r\n            this.buttonContainer.appendChild(element);\r\n\r\n            this.trackClicks(element, action(this), options);\r\n        }\r\n    }\r\n\r\n    isBlockingOverlay() {\r\n        return this.visible;\r\n    }\r\n\r\n    returnToMenu() {\r\n        this.root.gameState.goBackToMenu();\r\n    }\r\n\r\n    goToSettings() {\r\n        this.root.gameState.goToSettings();\r\n    }\r\n\r\n    shouldPauseGame() {\r\n        return this.visible;\r\n    }\r\n\r\n    shouldPauseRendering() {\r\n        return this.visible;\r\n    }\r\n\r\n    initialize() {\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.general.back).add(this.show, this);\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.background, {\r\n            attachClass: \"visible\",\r\n        });\r\n\r\n        this.inputReciever = new InputReceiver(\"settingsmenu\");\r\n        this.keyActionMapper = new KeyActionMapper(this.root, this.inputReciever);\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.close, this);\r\n\r\n        this.close();\r\n    }\r\n\r\n    show() {\r\n        this.visible = true;\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReciever);\r\n\r\n        const totalMinutesPlayed = Math.ceil(this.root.time.now() / 60);\r\n\r\n        /** @type {HTMLElement} */\r\n        const playtimeElement = this.statsElement.querySelector(\".playtime\");\r\n        /** @type {HTMLElement} */\r\n        const buildingsPlacedElement = this.statsElement.querySelector(\".buildingsPlaced\");\r\n        /** @type {HTMLElement} */\r\n        const beltsPlacedElement = this.statsElement.querySelector(\".beltsPlaced\");\r\n\r\n        playtimeElement.innerText = T.global.time.xMinutes.replace(\"<x>\", `${totalMinutesPlayed}`);\r\n\r\n        buildingsPlacedElement.innerText = formatBigNumberFull(\r\n            this.root.entityMgr.getAllWithComponent(StaticMapEntityComponent).length -\r\n            this.root.entityMgr.getAllWithComponent(BeltComponent).length\r\n        );\r\n\r\n        beltsPlacedElement.innerText = formatBigNumberFull(\r\n            this.root.entityMgr.getAllWithComponent(BeltComponent).length\r\n        );\r\n    }\r\n\r\n    close() {\r\n        this.visible = false;\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(this.visible);\r\n    }\r\n}\r\n\r\nHUDSettingsMenu.buttons = [{\r\n        id: \"continue\",\r\n        action: hudSettingsMenu => () => hudSettingsMenu.close(),\r\n        options: {\r\n            preventDefault: false,\r\n        },\r\n    },\r\n    {\r\n        id: \"settings\",\r\n        action: hudSettingsMenu => () => hudSettingsMenu.goToSettings(),\r\n        options: {\r\n            preventDefault: false,\r\n        },\r\n    },\r\n    {\r\n        id: \"menu\",\r\n        action: hudSettingsMenu => () => hudSettingsMenu.returnToMenu(),\r\n        options: {\r\n            preventDefault: false,\r\n        },\r\n    },\r\n];",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/settings_menu.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2343,
    "kind": "class",
    "name": "HUDSettingsMenu",
    "memberof": "js/game/hud/parts/settings_menu.js",
    "static": true,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/settings_menu.js",
    "importStyle": "{HUDSettingsMenu}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2344,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2345,
    "kind": "member",
    "name": "background",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#background",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2346,
    "kind": "member",
    "name": "menuElement",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#menuElement",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2347,
    "kind": "member",
    "name": "statsElement",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#statsElement",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2348,
    "kind": "member",
    "name": "buttonContainer",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#buttonContainer",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2349,
    "kind": "method",
    "name": "isBlockingOverlay",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#isBlockingOverlay",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2350,
    "kind": "method",
    "name": "returnToMenu",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#returnToMenu",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2351,
    "kind": "method",
    "name": "goToSettings",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#goToSettings",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2352,
    "kind": "method",
    "name": "shouldPauseGame",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#shouldPauseGame",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2353,
    "kind": "method",
    "name": "shouldPauseRendering",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#shouldPauseRendering",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2354,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2355,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2356,
    "kind": "member",
    "name": "inputReciever",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#inputReciever",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2357,
    "kind": "member",
    "name": "keyActionMapper",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#keyActionMapper",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2358,
    "kind": "method",
    "name": "show",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#show",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2359,
    "kind": "member",
    "name": "visible",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#visible",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2360,
    "kind": "method",
    "name": "close",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#close",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2362,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/settings_menu.js~HUDSettingsMenu#update",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2363,
    "kind": "file",
    "name": "js/game/hud/parts/shape_viewer.js",
    "content": "import { InputReceiver } from \"../../../core/input_receiver\";\r\nimport { makeDiv, removeAllChildren } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport { KeyActionMapper, KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { ShapeDefinition } from \"../../shape_definition\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\n\r\nconst copy = require(\"clipboard-copy\");\r\n\r\nexport class HUDShapeViewer extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.background = makeDiv(parent, \"ingame_HUD_ShapeViewer\", [\"ingameDialog\"]);\r\n\r\n        // DIALOG Inner / Wrapper\r\n        this.dialogInner = makeDiv(this.background, null, [\"dialogInner\"]);\r\n        this.title = makeDiv(this.dialogInner, null, [\"title\"], T.ingame.shapeViewer.title);\r\n        this.closeButton = makeDiv(this.title, null, [\"closeButton\"]);\r\n        this.trackClicks(this.closeButton, this.close);\r\n        this.contentDiv = makeDiv(this.dialogInner, null, [\"content\"]);\r\n\r\n        this.renderArea = makeDiv(this.contentDiv, null, [\"renderArea\"]);\r\n        this.infoArea = makeDiv(this.contentDiv, null, [\"infoArea\"]);\r\n\r\n        // Create button to copy the shape area\r\n        this.copyButton = document.createElement(\"button\");\r\n        this.copyButton.classList.add(\"styledButton\", \"copyKey\");\r\n        this.copyButton.innerText = T.ingame.shapeViewer.copyKey;\r\n        this.infoArea.appendChild(this.copyButton);\r\n    }\r\n\r\n    initialize() {\r\n        this.root.hud.signals.viewShapeDetailsRequested.add(this.renderForShape, this);\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.background, {\r\n            attachClass: \"visible\",\r\n        });\r\n\r\n        this.currentShapeKey = null;\r\n\r\n        this.inputReciever = new InputReceiver(\"shape_viewer\");\r\n        this.keyActionMapper = new KeyActionMapper(this.root, this.inputReciever);\r\n\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.close, this);\r\n\r\n        this.trackClicks(this.copyButton, this.onCopyKeyRequested);\r\n\r\n        this.close();\r\n    }\r\n\r\n    isBlockingOverlay() {\r\n        return this.visible;\r\n    }\r\n\r\n    /**\r\n     * Called when the copying of a key was requested\r\n     */\r\n    onCopyKeyRequested() {\r\n        if (this.currentShapeKey) {\r\n            copy(this.currentShapeKey);\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Closes the dialog\r\n     */\r\n    close() {\r\n        this.visible = false;\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Shows the viewer for a given definition\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    renderForShape(definition) {\r\n        this.visible = true;\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReciever);\r\n\r\n        removeAllChildren(this.renderArea);\r\n\r\n        this.currentShapeKey = definition.getHash();\r\n\r\n        const layers = definition.layers;\r\n        this.contentDiv.setAttribute(\"data-layers\", layers.length);\r\n\r\n        for (let i = layers.length - 1; i >= 0; --i) {\r\n            const layerElem = makeDiv(this.renderArea, null, [\"layer\", \"layer-\" + i]);\r\n\r\n            let fakeLayers = [];\r\n            for (let k = 0; k < i; ++k) {\r\n                fakeLayers.push([null, null, null, null]);\r\n            }\r\n            fakeLayers.push(layers[i]);\r\n\r\n            const thisLayerOnly = new ShapeDefinition({ layers: fakeLayers });\r\n            const thisLayerCanvas = thisLayerOnly.generateAsCanvas(160);\r\n            layerElem.appendChild(thisLayerCanvas);\r\n\r\n            for (let quad = 0; quad < 4; ++quad) {\r\n                const quadElem = makeDiv(layerElem, null, [\"quad\", \"quad-\" + quad]);\r\n\r\n                const contents = layers[i][quad];\r\n                if (contents) {\r\n                    const colorLabelElem = makeDiv(\r\n                        quadElem,\r\n                        null,\r\n                        [\"colorLabel\"],\r\n                        T.ingame.colors[contents.color]\r\n                    );\r\n                } else {\r\n                    const emptyLabelElem = makeDiv(\r\n                        quadElem,\r\n                        null,\r\n                        [\"emptyLabel\"],\r\n                        T.ingame.shapeViewer.empty\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(this.visible);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/shape_viewer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2364,
    "kind": "variable",
    "name": "copy",
    "memberof": "js/game/hud/parts/shape_viewer.js",
    "static": true,
    "longname": "js/game/hud/parts/shape_viewer.js~copy",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/shape_viewer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2365,
    "kind": "class",
    "name": "HUDShapeViewer",
    "memberof": "js/game/hud/parts/shape_viewer.js",
    "static": true,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/shape_viewer.js",
    "importStyle": "{HUDShapeViewer}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2366,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2367,
    "kind": "member",
    "name": "background",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#background",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2368,
    "kind": "member",
    "name": "dialogInner",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#dialogInner",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2369,
    "kind": "member",
    "name": "title",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#title",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2370,
    "kind": "member",
    "name": "closeButton",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#closeButton",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2371,
    "kind": "member",
    "name": "contentDiv",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#contentDiv",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2372,
    "kind": "member",
    "name": "renderArea",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#renderArea",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2373,
    "kind": "member",
    "name": "infoArea",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#infoArea",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2374,
    "kind": "member",
    "name": "copyButton",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#copyButton",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2375,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2376,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2377,
    "kind": "member",
    "name": "currentShapeKey",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#currentShapeKey",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2378,
    "kind": "member",
    "name": "inputReciever",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#inputReciever",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2379,
    "kind": "member",
    "name": "keyActionMapper",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#keyActionMapper",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2380,
    "kind": "method",
    "name": "isBlockingOverlay",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#isBlockingOverlay",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2381,
    "kind": "method",
    "name": "onCopyKeyRequested",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#onCopyKeyRequested",
    "access": "public",
    "description": "Called when the copying of a key was requested",
    "lineNumber": 58,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2382,
    "kind": "method",
    "name": "close",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#close",
    "access": "public",
    "description": "Closes the dialog",
    "lineNumber": 68,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2383,
    "kind": "member",
    "name": "visible",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#visible",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2384,
    "kind": "method",
    "name": "renderForShape",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#renderForShape",
    "access": "public",
    "description": "Shows the viewer for a given definition",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2387,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shape_viewer.js~HUDShapeViewer#update",
    "access": "public",
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2388,
    "kind": "file",
    "name": "js/game/hud/parts/shop.js",
    "content": "import { ClickDetector } from \"../../../core/click_detector\";\r\nimport { InputReceiver } from \"../../../core/input_receiver\";\r\nimport { formatBigNumber, getRomanNumber, makeDiv } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport { KeyActionMapper, KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\n\r\nexport class HUDShop extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.background = makeDiv(parent, \"ingame_HUD_Shop\", [\"ingameDialog\"]);\r\n\r\n        // DIALOG Inner / Wrapper\r\n        this.dialogInner = makeDiv(this.background, null, [\"dialogInner\"]);\r\n        this.title = makeDiv(this.dialogInner, null, [\"title\"], T.ingame.shop.title);\r\n        this.closeButton = makeDiv(this.title, null, [\"closeButton\"]);\r\n        this.trackClicks(this.closeButton, this.close);\r\n        this.contentDiv = makeDiv(this.dialogInner, null, [\"content\"]);\r\n\r\n        this.upgradeToElements = {};\r\n\r\n        // Upgrades\r\n        for (const upgradeId in this.root.gameMode.getUpgrades()) {\r\n            const handle = {};\r\n            handle.requireIndexToElement = [];\r\n\r\n            // Wrapper\r\n            handle.elem = makeDiv(this.contentDiv, null, [\"upgrade\"]);\r\n            handle.elem.setAttribute(\"data-upgrade-id\", upgradeId);\r\n\r\n            // Title\r\n            const title = makeDiv(handle.elem, null, [\"title\"], T.shopUpgrades[upgradeId].name);\r\n\r\n            // Title > Tier\r\n            handle.elemTierLabel = makeDiv(title, null, [\"tier\"]);\r\n\r\n            // Icon\r\n            handle.icon = makeDiv(handle.elem, null, [\"icon\"]);\r\n            handle.icon.setAttribute(\"data-icon\", \"upgrades/\" + upgradeId + \".png\");\r\n\r\n            // Description\r\n            handle.elemDescription = makeDiv(handle.elem, null, [\"description\"], \"??\");\r\n            handle.elemRequirements = makeDiv(handle.elem, null, [\"requirements\"]);\r\n\r\n            // Buy button\r\n            handle.buyButton = document.createElement(\"button\");\r\n            handle.buyButton.classList.add(\"buy\", \"styledButton\");\r\n            handle.buyButton.innerText = T.ingame.shop.buttonUnlock;\r\n            handle.elem.appendChild(handle.buyButton);\r\n\r\n            this.trackClicks(handle.buyButton, () => this.tryUnlockNextTier(upgradeId));\r\n\r\n            // Assign handle\r\n            this.upgradeToElements[upgradeId] = handle;\r\n        }\r\n    }\r\n\r\n    rerenderFull() {\r\n        for (const upgradeId in this.upgradeToElements) {\r\n            const handle = this.upgradeToElements[upgradeId];\r\n            const upgradeTiers = this.root.gameMode.getUpgrades()[upgradeId];\r\n\r\n            const currentTier = this.root.hubGoals.getUpgradeLevel(upgradeId);\r\n            const currentTierMultiplier = this.root.hubGoals.upgradeImprovements[upgradeId];\r\n            const tierHandle = upgradeTiers[currentTier];\r\n\r\n            // Set tier\r\n            handle.elemTierLabel.innerText = T.ingame.shop.tier.replace(\r\n                \"<x>\",\r\n                getRomanNumber(currentTier + 1)\r\n            );\r\n\r\n            handle.elemTierLabel.setAttribute(\"data-tier\", currentTier);\r\n\r\n            // Cleanup detectors\r\n            for (let i = 0; i < handle.requireIndexToElement.length; ++i) {\r\n                const requiredHandle = handle.requireIndexToElement[i];\r\n                requiredHandle.container.remove();\r\n                requiredHandle.pinDetector.cleanup();\r\n                requiredHandle.infoDetector.cleanup();\r\n            }\r\n\r\n            // Cleanup\r\n            handle.requireIndexToElement = [];\r\n\r\n            handle.elem.classList.toggle(\"maxLevel\", !tierHandle);\r\n\r\n            if (!tierHandle) {\r\n                // Max level\r\n                handle.elemDescription.innerText = T.ingame.shop.maximumLevel.replace(\r\n                    \"<currentMult>\",\r\n                    formatBigNumber(currentTierMultiplier)\r\n                );\r\n                continue;\r\n            }\r\n\r\n            // Set description\r\n            handle.elemDescription.innerText = T.shopUpgrades[upgradeId].description\r\n                .replace(\"<currentMult>\", formatBigNumber(currentTierMultiplier))\r\n                .replace(\"<newMult>\", formatBigNumber(currentTierMultiplier + tierHandle.improvement));\r\n\r\n            tierHandle.required.forEach(({ shape, amount }) => {\r\n                const container = makeDiv(handle.elemRequirements, null, [\"requirement\"]);\r\n\r\n                const shapeDef = this.root.shapeDefinitionMgr.getShapeFromShortKey(shape);\r\n                const shapeCanvas = shapeDef.generateAsCanvas(120);\r\n                shapeCanvas.classList.add();\r\n                container.appendChild(shapeCanvas);\r\n\r\n                const progressContainer = makeDiv(container, null, [\"amount\"]);\r\n                const progressBar = document.createElement(\"label\");\r\n                progressBar.classList.add(\"progressBar\");\r\n                progressContainer.appendChild(progressBar);\r\n\r\n                const progressLabel = document.createElement(\"label\");\r\n                progressContainer.appendChild(progressLabel);\r\n\r\n                const pinButton = document.createElement(\"button\");\r\n                pinButton.classList.add(\"pin\");\r\n                container.appendChild(pinButton);\r\n\r\n                const viewInfoButton = document.createElement(\"button\");\r\n                viewInfoButton.classList.add(\"showInfo\");\r\n                container.appendChild(viewInfoButton);\r\n\r\n                const currentGoalShape = this.root.hubGoals.currentGoal.definition.getHash();\r\n                if (shape === currentGoalShape) {\r\n                    pinButton.classList.add(\"isGoal\");\r\n                } else if (this.root.hud.parts.pinnedShapes.isShapePinned(shape)) {\r\n                    pinButton.classList.add(\"alreadyPinned\");\r\n                }\r\n\r\n                const pinDetector = new ClickDetector(pinButton, {\r\n                    consumeEvents: true,\r\n                    preventDefault: true,\r\n                });\r\n                pinDetector.click.add(() => {\r\n                    if (this.root.hud.parts.pinnedShapes.isShapePinned(shape)) {\r\n                        this.root.hud.signals.shapeUnpinRequested.dispatch(shape);\r\n                        pinButton.classList.add(\"unpinned\");\r\n                        pinButton.classList.remove(\"pinned\", \"alreadyPinned\");\r\n                    } else {\r\n                        this.root.hud.signals.shapePinRequested.dispatch(shapeDef);\r\n                        pinButton.classList.add(\"pinned\");\r\n                        pinButton.classList.remove(\"unpinned\");\r\n                    }\r\n                });\r\n\r\n                const infoDetector = new ClickDetector(viewInfoButton, {\r\n                    consumeEvents: true,\r\n                    preventDefault: true,\r\n                });\r\n                infoDetector.click.add(() =>\r\n                    this.root.hud.signals.viewShapeDetailsRequested.dispatch(shapeDef)\r\n                );\r\n\r\n                handle.requireIndexToElement.push({\r\n                    container,\r\n                    progressLabel,\r\n                    progressBar,\r\n                    definition: shapeDef,\r\n                    required: amount,\r\n                    pinDetector,\r\n                    infoDetector,\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    renderCountsAndStatus() {\r\n        for (const upgradeId in this.upgradeToElements) {\r\n            const handle = this.upgradeToElements[upgradeId];\r\n            for (let i = 0; i < handle.requireIndexToElement.length; ++i) {\r\n                const { progressLabel, progressBar, definition, required } = handle.requireIndexToElement[i];\r\n\r\n                const haveAmount = this.root.hubGoals.getShapesStored(definition);\r\n                const progress = Math.min(haveAmount / required, 1.0);\r\n\r\n                progressLabel.innerText = formatBigNumber(haveAmount) + \" / \" + formatBigNumber(required);\r\n                progressBar.style.width = progress * 100.0 + \"%\";\r\n                progressBar.classList.toggle(\"complete\", progress >= 1.0);\r\n            }\r\n\r\n            handle.buyButton.classList.toggle(\"buyable\", this.root.hubGoals.canUnlockUpgrade(upgradeId));\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        this.domAttach = new DynamicDomAttach(this.root, this.background, {\r\n            attachClass: \"visible\",\r\n        });\r\n\r\n        this.inputReciever = new InputReceiver(\"shop\");\r\n        this.keyActionMapper = new KeyActionMapper(this.root, this.inputReciever);\r\n\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.close, this);\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.ingame.menuClose).add(this.close, this);\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.ingame.menuOpenShop).add(this.close, this);\r\n\r\n        this.close();\r\n\r\n        this.rerenderFull();\r\n        this.root.signals.upgradePurchased.add(this.rerenderFull, this);\r\n    }\r\n\r\n    cleanup() {\r\n        // Cleanup detectors\r\n        for (const upgradeId in this.upgradeToElements) {\r\n            const handle = this.upgradeToElements[upgradeId];\r\n            for (let i = 0; i < handle.requireIndexToElement.length; ++i) {\r\n                const requiredHandle = handle.requireIndexToElement[i];\r\n                requiredHandle.container.remove();\r\n                requiredHandle.pinDetector.cleanup();\r\n                requiredHandle.infoDetector.cleanup();\r\n            }\r\n            handle.requireIndexToElement = [];\r\n        }\r\n    }\r\n\r\n    show() {\r\n        this.visible = true;\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReciever);\r\n        this.rerenderFull();\r\n    }\r\n\r\n    close() {\r\n        this.visible = false;\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(this.visible);\r\n        if (this.visible) {\r\n            this.renderCountsAndStatus();\r\n        }\r\n    }\r\n\r\n    tryUnlockNextTier(upgradeId) {\r\n        // Nothing\r\n        this.root.hubGoals.tryUnlockUpgrade(upgradeId);\r\n    }\r\n\r\n    isBlockingOverlay() {\r\n        return this.visible;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/shop.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2389,
    "kind": "class",
    "name": "HUDShop",
    "memberof": "js/game/hud/parts/shop.js",
    "static": true,
    "longname": "js/game/hud/parts/shop.js~HUDShop",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/shop.js",
    "importStyle": "{HUDShop}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2390,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2391,
    "kind": "member",
    "name": "background",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#background",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2392,
    "kind": "member",
    "name": "dialogInner",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#dialogInner",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2393,
    "kind": "member",
    "name": "title",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#title",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2394,
    "kind": "member",
    "name": "closeButton",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#closeButton",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2395,
    "kind": "member",
    "name": "contentDiv",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#contentDiv",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2396,
    "kind": "member",
    "name": "upgradeToElements",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#upgradeToElements",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 2397,
    "kind": "method",
    "name": "rerenderFull",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#rerenderFull",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2398,
    "kind": "method",
    "name": "renderCountsAndStatus",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#renderCountsAndStatus",
    "access": "public",
    "description": null,
    "lineNumber": 170,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2399,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2400,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2401,
    "kind": "member",
    "name": "inputReciever",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#inputReciever",
    "access": "public",
    "description": null,
    "lineNumber": 193,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2402,
    "kind": "member",
    "name": "keyActionMapper",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#keyActionMapper",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2403,
    "kind": "method",
    "name": "cleanup",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#cleanup",
    "access": "public",
    "description": null,
    "lineNumber": 206,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2404,
    "kind": "method",
    "name": "show",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#show",
    "access": "public",
    "description": null,
    "lineNumber": 220,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2405,
    "kind": "member",
    "name": "visible",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#visible",
    "access": "public",
    "description": null,
    "lineNumber": 221,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2406,
    "kind": "method",
    "name": "close",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#close",
    "access": "public",
    "description": null,
    "lineNumber": 226,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2408,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#update",
    "access": "public",
    "description": null,
    "lineNumber": 232,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2409,
    "kind": "method",
    "name": "tryUnlockNextTier",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#tryUnlockNextTier",
    "access": "public",
    "description": null,
    "lineNumber": 239,
    "undocument": true,
    "params": [
      {
        "name": "upgradeId",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2410,
    "kind": "method",
    "name": "isBlockingOverlay",
    "memberof": "js/game/hud/parts/shop.js~HUDShop",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/shop.js~HUDShop#isBlockingOverlay",
    "access": "public",
    "description": null,
    "lineNumber": 244,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2411,
    "kind": "file",
    "name": "js/game/hud/parts/standalone_advantages.js",
    "content": "import { A_B_TESTING_LINK_TYPE, THIRDPARTY_URLS } from \"../../../core/config\";\r\nimport { InputReceiver } from \"../../../core/input_receiver\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\n\r\nconst showIntervalSeconds = 30 * 60;\r\n\r\nexport class HUDStandaloneAdvantages extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.background = makeDiv(parent, \"ingame_HUD_StandaloneAdvantages\", [\"ingameDialog\"]);\r\n\r\n        // DIALOG Inner / Wrapper\r\n        this.dialogInner = makeDiv(this.background, null, [\"dialogInner\"]);\r\n        this.title = makeDiv(this.dialogInner, null, [\"title\"], T.ingame.standaloneAdvantages.title);\r\n        this.contentDiv = makeDiv(\r\n            this.dialogInner,\r\n            null,\r\n            [\"content\"],\r\n            `\r\n            <div class=\"points\">\r\n                ${Object.entries(T.ingame.standaloneAdvantages.points)\r\n                    .map(\r\n                        ([key, trans]) => `\r\n                <div class=\"point ${key}\">\r\n                    <strong>${trans.title}</strong>\r\n                    <p>${trans.desc}</p> \r\n                </div>`\r\n                    )\r\n                    .join(\"\")}\r\n\r\n            </div>\r\n\r\n            <div class=\"lowerBar\">\r\n            <button class=\"steamLinkButton ${A_B_TESTING_LINK_TYPE}\"></button>\r\n            <button class=\"otherCloseButton\">${T.ingame.standaloneAdvantages.no_thanks}</button>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        this.trackClicks(this.contentDiv.querySelector(\"button.steamLinkButton\"), () => {\r\n            this.root.app.analytics.trackUiClick(\"standalone_advantage_visit_steam\");\r\n            this.root.app.platformWrapper.openExternalLink(\r\n                THIRDPARTY_URLS.standaloneStorePage + \"?ref=savs&prc=\" + A_B_TESTING_LINK_TYPE\r\n            );\r\n            this.close();\r\n        });\r\n        this.trackClicks(this.contentDiv.querySelector(\"button.otherCloseButton\"), () => {\r\n            this.root.app.analytics.trackUiClick(\"standalone_advantage_no_thanks\");\r\n            this.close();\r\n        });\r\n    }\r\n\r\n    initialize() {\r\n        this.domAttach = new DynamicDomAttach(this.root, this.background, {\r\n            attachClass: \"visible\",\r\n        });\r\n\r\n        this.inputReciever = new InputReceiver(\"standalone-advantages\");\r\n        this.close();\r\n\r\n        this.lastShown = this.root.gameIsFresh ? this.root.time.now() : 0;\r\n    }\r\n\r\n    show() {\r\n        this.lastShown = this.root.time.now();\r\n        this.visible = true;\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReciever);\r\n    }\r\n\r\n    close() {\r\n        this.visible = false;\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        if (!this.visible && this.root.time.now() - this.lastShown > showIntervalSeconds) {\r\n            this.show();\r\n        }\r\n\r\n        this.domAttach.update(this.visible);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/standalone_advantages.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2412,
    "kind": "variable",
    "name": "showIntervalSeconds",
    "memberof": "js/game/hud/parts/standalone_advantages.js",
    "static": true,
    "longname": "js/game/hud/parts/standalone_advantages.js~showIntervalSeconds",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/standalone_advantages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2413,
    "kind": "class",
    "name": "HUDStandaloneAdvantages",
    "memberof": "js/game/hud/parts/standalone_advantages.js",
    "static": true,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/standalone_advantages.js",
    "importStyle": "{HUDStandaloneAdvantages}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2414,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2415,
    "kind": "member",
    "name": "background",
    "memberof": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "static": false,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages#background",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2416,
    "kind": "member",
    "name": "dialogInner",
    "memberof": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "static": false,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages#dialogInner",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2417,
    "kind": "member",
    "name": "title",
    "memberof": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "static": false,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages#title",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2418,
    "kind": "member",
    "name": "contentDiv",
    "memberof": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "static": false,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages#contentDiv",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2419,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2420,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "static": false,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2421,
    "kind": "member",
    "name": "inputReciever",
    "memberof": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "static": false,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages#inputReciever",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2422,
    "kind": "member",
    "name": "lastShown",
    "memberof": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "static": false,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages#lastShown",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2423,
    "kind": "method",
    "name": "show",
    "memberof": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages#show",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2425,
    "kind": "member",
    "name": "visible",
    "memberof": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "static": false,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages#visible",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2426,
    "kind": "method",
    "name": "close",
    "memberof": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages#close",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2428,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/standalone_advantages.js~HUDStandaloneAdvantages#update",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2429,
    "kind": "file",
    "name": "js/game/hud/parts/statistics.js",
    "content": "import { InputReceiver } from \"../../../core/input_receiver\";\r\nimport { makeButton, makeDiv, removeAllChildren } from \"../../../core/utils\";\r\nimport { KeyActionMapper, KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { enumAnalyticsDataSource } from \"../../production_analytics\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { enumDisplayMode, HUDShapeStatisticsHandle, statisticsUnitsSeconds } from \"./statistics_handle\";\r\nimport { T } from \"../../../translations\";\r\n\r\n/**\r\n * Capitalizes the first letter\r\n * @param {string} str\r\n */\r\nfunction capitalizeFirstLetter(str) {\r\n    return str.substr(0, 1).toUpperCase() + str.substr(1).toLowerCase();\r\n}\r\n\r\nexport class HUDStatistics extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.background = makeDiv(parent, \"ingame_HUD_Statistics\", [\"ingameDialog\"]);\r\n\r\n        // DIALOG Inner / Wrapper\r\n        this.dialogInner = makeDiv(this.background, null, [\"dialogInner\"]);\r\n        this.title = makeDiv(this.dialogInner, null, [\"title\"], T.ingame.statistics.title);\r\n        this.closeButton = makeDiv(this.title, null, [\"closeButton\"]);\r\n        this.trackClicks(this.closeButton, this.close);\r\n\r\n        this.filterHeader = makeDiv(this.dialogInner, null, [\"filterHeader\"]);\r\n        this.sourceExplanation = makeDiv(this.dialogInner, null, [\"sourceExplanation\"]);\r\n\r\n        this.filtersDataSource = makeDiv(this.filterHeader, null, [\"filtersDataSource\"]);\r\n        this.filtersDisplayMode = makeDiv(this.filterHeader, null, [\"filtersDisplayMode\"]);\r\n\r\n        const dataSources = [\r\n            enumAnalyticsDataSource.produced,\r\n            enumAnalyticsDataSource.delivered,\r\n            enumAnalyticsDataSource.stored,\r\n        ];\r\n\r\n        for (let i = 0; i < dataSources.length; ++i) {\r\n            const dataSource = dataSources[i];\r\n            const button = makeButton(\r\n                this.filtersDataSource,\r\n                [\"mode\" + capitalizeFirstLetter(dataSource)],\r\n                T.ingame.statistics.dataSources[dataSource].title\r\n            );\r\n            this.trackClicks(button, () => this.setDataSource(dataSource));\r\n        }\r\n\r\n        const buttonIterateUnit = makeButton(this.filtersDisplayMode, [\"displayIterateUnit\"]);\r\n        const buttonDisplaySorted = makeButton(this.filtersDisplayMode, [\"displaySorted\"]);\r\n        const buttonDisplayDetailed = makeButton(this.filtersDisplayMode, [\"displayDetailed\"]);\r\n        const buttonDisplayIcons = makeButton(this.filtersDisplayMode, [\"displayIcons\"]);\r\n\r\n        this.trackClicks(buttonIterateUnit, () => this.iterateUnit());\r\n        this.trackClicks(buttonDisplaySorted, () => this.toggleSorted());\r\n        this.trackClicks(buttonDisplayIcons, () => this.setDisplayMode(enumDisplayMode.icons));\r\n        this.trackClicks(buttonDisplayDetailed, () => this.setDisplayMode(enumDisplayMode.detailed));\r\n\r\n        this.contentDiv = makeDiv(this.dialogInner, null, [\"content\"]);\r\n    }\r\n\r\n    /**\r\n     * @param {enumAnalyticsDataSource} source\r\n     */\r\n    setDataSource(source) {\r\n        this.dataSource = source;\r\n        this.dialogInner.setAttribute(\"data-datasource\", source);\r\n\r\n        this.sourceExplanation.innerText = T.ingame.statistics.dataSources[source].description;\r\n        if (this.visible) {\r\n            this.rerenderFull();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {enumDisplayMode} mode\r\n     */\r\n    setDisplayMode(mode) {\r\n        this.displayMode = mode;\r\n        this.dialogInner.setAttribute(\"data-displaymode\", mode);\r\n        if (this.visible) {\r\n            this.rerenderFull();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {boolean} sorted\r\n     */\r\n    setSorted(sorted) {\r\n        this.sorted = sorted;\r\n        this.dialogInner.setAttribute(\"data-sorted\", String(sorted));\r\n        if (this.visible) {\r\n            this.rerenderFull();\r\n        }\r\n    }\r\n\r\n    toggleSorted() {\r\n        this.setSorted(!this.sorted);\r\n    }\r\n\r\n    /**\r\n     * Chooses the next unit\r\n     */\r\n    iterateUnit() {\r\n        const units = Array.from(Object.keys(statisticsUnitsSeconds));\r\n        const newIndex = (units.indexOf(this.currentUnit) + 1) % units.length;\r\n        this.currentUnit = units[newIndex];\r\n\r\n        this.rerenderPartial();\r\n    }\r\n\r\n    initialize() {\r\n        this.domAttach = new DynamicDomAttach(this.root, this.background, {\r\n            attachClass: \"visible\",\r\n        });\r\n\r\n        this.inputReciever = new InputReceiver(\"statistics\");\r\n        this.keyActionMapper = new KeyActionMapper(this.root, this.inputReciever);\r\n\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.close, this);\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.ingame.menuClose).add(this.close, this);\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.ingame.menuOpenStats).add(this.close, this);\r\n\r\n        /** @type {Object.<string, HUDShapeStatisticsHandle>} */\r\n        this.activeHandles = {};\r\n\r\n        this.currentUnit = \"second\";\r\n\r\n        this.setSorted(true);\r\n        this.setDataSource(enumAnalyticsDataSource.produced);\r\n        this.setDisplayMode(enumDisplayMode.detailed);\r\n\r\n        this.intersectionObserver = new IntersectionObserver(this.intersectionCallback.bind(this), {\r\n            root: this.contentDiv,\r\n        });\r\n\r\n        this.lastFullRerender = 0;\r\n\r\n        this.close();\r\n        this.rerenderFull();\r\n    }\r\n\r\n    intersectionCallback(entries) {\r\n        for (let i = 0; i < entries.length; ++i) {\r\n            const entry = entries[i];\r\n            const handle = this.activeHandles[entry.target.getAttribute(\"data-shape-key\")];\r\n            if (handle) {\r\n                handle.setVisible(entry.intersectionRatio > 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    isBlockingOverlay() {\r\n        return this.visible;\r\n    }\r\n\r\n    show() {\r\n        this.visible = true;\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReciever);\r\n        this.rerenderFull();\r\n        this.update();\r\n    }\r\n\r\n    close() {\r\n        this.visible = false;\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(this.visible);\r\n        if (this.visible) {\r\n            if (this.root.time.now() - this.lastFullRerender > 1) {\r\n                this.lastFullRerender = this.root.time.now();\r\n                this.lastPartialRerender = this.root.time.now();\r\n                this.rerenderFull();\r\n            }\r\n            this.rerenderPartial();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs a partial rerender, only updating graphs and counts\r\n     */\r\n    rerenderPartial() {\r\n        for (const key in this.activeHandles) {\r\n            const handle = this.activeHandles[key];\r\n            handle.update(this.displayMode, this.dataSource, this.currentUnit);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs a full rerender, regenerating everything\r\n     */\r\n    rerenderFull() {\r\n        for (const key in this.activeHandles) {\r\n            this.activeHandles[key].detach();\r\n        }\r\n        removeAllChildren(this.contentDiv);\r\n\r\n        // Now, attach new ones\r\n\r\n        let entries = null;\r\n        switch (this.dataSource) {\r\n            case enumAnalyticsDataSource.stored: {\r\n                entries = Object.entries(this.root.hubGoals.storedShapes);\r\n                break;\r\n            }\r\n            case enumAnalyticsDataSource.produced:\r\n            case enumAnalyticsDataSource.delivered: {\r\n                entries = Object.entries(this.root.productionAnalytics.getCurrentShapeRates(this.dataSource));\r\n                break;\r\n            }\r\n        }\r\n\r\n        const pinnedShapes = this.root.hud.parts.pinnedShapes;\r\n\r\n        entries.sort((a, b) => {\r\n            const aPinned = pinnedShapes.isShapePinned(a[0]);\r\n            const bPinned = pinnedShapes.isShapePinned(b[0]);\r\n\r\n            if (aPinned !== bPinned) {\r\n                return aPinned ? -1 : 1;\r\n            }\r\n\r\n            // Sort by shape key for some consistency\r\n            if (!this.sorted || b[1] == a[1]) {\r\n                return b[0].localeCompare(a[0]);\r\n            }\r\n            return b[1] - a[1];\r\n        });\r\n\r\n        let rendered = new Set();\r\n\r\n        for (let i = 0; i < Math.min(entries.length, 200); ++i) {\r\n            const entry = entries[i];\r\n            const shapeKey = entry[0];\r\n\r\n            let handle = this.activeHandles[shapeKey];\r\n            if (!handle) {\r\n                const definition = this.root.shapeDefinitionMgr.getShapeFromShortKey(shapeKey);\r\n                handle = this.activeHandles[shapeKey] = new HUDShapeStatisticsHandle(\r\n                    this.root,\r\n                    definition,\r\n                    this.intersectionObserver\r\n                );\r\n            }\r\n\r\n            rendered.add(shapeKey);\r\n            handle.attach(this.contentDiv);\r\n        }\r\n\r\n        for (const key in this.activeHandles) {\r\n            if (!rendered.has(key)) {\r\n                this.activeHandles[key].destroy();\r\n                delete this.activeHandles[key];\r\n            }\r\n        }\r\n\r\n        if (entries.length === 0) {\r\n            this.contentDiv.innerHTML = `\r\n            <strong class=\"noEntries\">${T.ingame.statistics.noShapesProduced}</strong>`;\r\n        }\r\n\r\n        this.contentDiv.classList.toggle(\"hasEntries\", entries.length > 0);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/statistics.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2430,
    "kind": "function",
    "name": "capitalizeFirstLetter",
    "memberof": "js/game/hud/parts/statistics.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/hud/parts/statistics.js~capitalizeFirstLetter",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/statistics.js",
    "importStyle": null,
    "description": "Capitalizes the first letter",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2431,
    "kind": "class",
    "name": "HUDStatistics",
    "memberof": "js/game/hud/parts/statistics.js",
    "static": true,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/statistics.js",
    "importStyle": "{HUDStatistics}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2432,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2433,
    "kind": "member",
    "name": "background",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#background",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2434,
    "kind": "member",
    "name": "dialogInner",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#dialogInner",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2435,
    "kind": "member",
    "name": "title",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#title",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2436,
    "kind": "member",
    "name": "closeButton",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#closeButton",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2437,
    "kind": "member",
    "name": "filterHeader",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#filterHeader",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2438,
    "kind": "member",
    "name": "sourceExplanation",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#sourceExplanation",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2439,
    "kind": "member",
    "name": "filtersDataSource",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#filtersDataSource",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2440,
    "kind": "member",
    "name": "filtersDisplayMode",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#filtersDisplayMode",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2441,
    "kind": "member",
    "name": "contentDiv",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#contentDiv",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2442,
    "kind": "method",
    "name": "setDataSource",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#setDataSource",
    "access": "public",
    "description": "",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "enumAnalyticsDataSource"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2443,
    "kind": "member",
    "name": "dataSource",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#dataSource",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2444,
    "kind": "method",
    "name": "setDisplayMode",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#setDisplayMode",
    "access": "public",
    "description": "",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "enumDisplayMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2445,
    "kind": "member",
    "name": "displayMode",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#displayMode",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2446,
    "kind": "method",
    "name": "setSorted",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#setSorted",
    "access": "public",
    "description": "",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "sorted",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2447,
    "kind": "member",
    "name": "sorted",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#sorted",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2448,
    "kind": "method",
    "name": "toggleSorted",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#toggleSorted",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2449,
    "kind": "method",
    "name": "iterateUnit",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#iterateUnit",
    "access": "public",
    "description": "Chooses the next unit",
    "lineNumber": 105,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2450,
    "kind": "member",
    "name": "currentUnit",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#currentUnit",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2451,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2452,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2453,
    "kind": "member",
    "name": "inputReciever",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#inputReciever",
    "access": "public",
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2454,
    "kind": "member",
    "name": "keyActionMapper",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#keyActionMapper",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2455,
    "kind": "member",
    "name": "activeHandles",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#activeHandles",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "type": {
      "nullable": null,
      "types": [
        "Object.<string, HUDShapeStatisticsHandle>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2457,
    "kind": "member",
    "name": "intersectionObserver",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#intersectionObserver",
    "access": "public",
    "description": null,
    "lineNumber": 134,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2458,
    "kind": "member",
    "name": "lastFullRerender",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#lastFullRerender",
    "access": "public",
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2459,
    "kind": "method",
    "name": "intersectionCallback",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#intersectionCallback",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "params": [
      {
        "name": "entries",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2460,
    "kind": "method",
    "name": "isBlockingOverlay",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#isBlockingOverlay",
    "access": "public",
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2461,
    "kind": "method",
    "name": "show",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#show",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2462,
    "kind": "member",
    "name": "visible",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#visible",
    "access": "public",
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2463,
    "kind": "method",
    "name": "close",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#close",
    "access": "public",
    "description": null,
    "lineNumber": 165,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2465,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#update",
    "access": "public",
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2467,
    "kind": "member",
    "name": "lastPartialRerender",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#lastPartialRerender",
    "access": "public",
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2468,
    "kind": "method",
    "name": "rerenderPartial",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#rerenderPartial",
    "access": "public",
    "description": "Performs a partial rerender, only updating graphs and counts",
    "lineNumber": 186,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2469,
    "kind": "method",
    "name": "rerenderFull",
    "memberof": "js/game/hud/parts/statistics.js~HUDStatistics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics.js~HUDStatistics#rerenderFull",
    "access": "public",
    "description": "Performs a full rerender, regenerating everything",
    "lineNumber": 196,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2470,
    "kind": "file",
    "name": "js/game/hud/parts/statistics_handle.js",
    "content": "import { makeOffscreenBuffer } from \"../../../core/buffer_utils\";\r\nimport { globalConfig } from \"../../../core/config\";\r\nimport { clamp, formatBigNumber, round2Digits } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport { enumAnalyticsDataSource } from \"../../production_analytics\";\r\nimport { GameRoot } from \"../../root\";\r\nimport { ShapeDefinition } from \"../../shape_definition\";\r\n\r\n/** @enum {string} */\r\nexport const enumDisplayMode = {\r\n    icons: \"icons\",\r\n    detailed: \"detailed\",\r\n};\r\n\r\n/**\r\n * Stores how many seconds one unit is\r\n * @type {Object<string, number>}\r\n */\r\nexport const statisticsUnitsSeconds = {\r\n    second: 1,\r\n    minute: 60,\r\n    hour: 3600,\r\n};\r\n\r\n/**\r\n * Simple wrapper for a shape definition within the shape statistics\r\n */\r\nexport class HUDShapeStatisticsHandle {\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {ShapeDefinition} definition\r\n     * @param {IntersectionObserver} intersectionObserver\r\n     */\r\n    constructor(root, definition, intersectionObserver) {\r\n        this.definition = definition;\r\n        this.root = root;\r\n        this.intersectionObserver = intersectionObserver;\r\n\r\n        this.visible = false;\r\n    }\r\n\r\n    initElement() {\r\n        this.element = document.createElement(\"div\");\r\n        this.element.setAttribute(\"data-shape-key\", this.definition.getHash());\r\n\r\n        this.counter = document.createElement(\"span\");\r\n        this.counter.classList.add(\"counter\");\r\n        this.element.appendChild(this.counter);\r\n    }\r\n\r\n    /**\r\n     * Sets whether the shape handle is visible currently\r\n     * @param {boolean} visibility\r\n     */\r\n    setVisible(visibility) {\r\n        if (visibility === this.visible) {\r\n            return;\r\n        }\r\n        this.visible = visibility;\r\n        if (visibility) {\r\n            if (!this.shapeCanvas) {\r\n                // Create elements\r\n                this.shapeCanvas = this.definition.generateAsCanvas(100);\r\n                this.shapeCanvas.classList.add(\"icon\");\r\n                this.element.appendChild(this.shapeCanvas);\r\n            }\r\n        } else {\r\n            // Drop elements\r\n            this.cleanupChildElements();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {enumDisplayMode} displayMode\r\n     * @param {enumAnalyticsDataSource} dataSource\r\n     * @param {string} unit\r\n     * @param {boolean=} forced\r\n     */\r\n    update(displayMode, dataSource, unit, forced = false) {\r\n        if (!this.element) {\r\n            return;\r\n        }\r\n        if (!this.visible && !forced) {\r\n            return;\r\n        }\r\n\r\n        this.element.classList.toggle(\r\n            \"pinned\",\r\n            this.root.hud.parts.pinnedShapes.isShapePinned(this.definition.getHash())\r\n        );\r\n\r\n        switch (dataSource) {\r\n            case enumAnalyticsDataSource.stored: {\r\n                this.counter.innerText = formatBigNumber(\r\n                    this.root.hubGoals.storedShapes[this.definition.getHash()] || 0\r\n                );\r\n                break;\r\n            }\r\n            case enumAnalyticsDataSource.delivered:\r\n            case enumAnalyticsDataSource.produced: {\r\n                let rate =\r\n                    this.root.productionAnalytics.getCurrentShapeRate(dataSource, this.definition) /\r\n                    globalConfig.analyticsSliceDurationSeconds;\r\n\r\n                this.counter.innerText = T.ingame.statistics.shapesDisplayUnits[unit].replace(\r\n                    \"<shapes>\",\r\n                    formatBigNumber(rate * statisticsUnitsSeconds[unit])\r\n                );\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (displayMode === enumDisplayMode.detailed) {\r\n            const graphDpi = globalConfig.statisticsGraphDpi;\r\n\r\n            const w = 270;\r\n            const h = 40;\r\n\r\n            if (!this.graphCanvas) {\r\n                const [canvas, context] = makeOffscreenBuffer(w * graphDpi, h * graphDpi, {\r\n                    smooth: true,\r\n                    reusable: false,\r\n                    label: \"statgraph-\" + this.definition.getHash(),\r\n                });\r\n                context.scale(graphDpi, graphDpi);\r\n                canvas.classList.add(\"graph\");\r\n                this.graphCanvas = canvas;\r\n                this.graphContext = context;\r\n                this.element.appendChild(this.graphCanvas);\r\n            }\r\n\r\n            this.graphContext.clearRect(0, 0, w, h);\r\n\r\n            this.graphContext.fillStyle = \"#bee0db\";\r\n            this.graphContext.strokeStyle = \"#66ccbc\";\r\n            this.graphContext.lineWidth = 1.5;\r\n\r\n            const sliceWidth = w / (globalConfig.statisticsGraphSlices - 1);\r\n\r\n            let values = [];\r\n            let maxValue = 1;\r\n\r\n            for (let i = 0; i < globalConfig.statisticsGraphSlices - 2; ++i) {\r\n                const value = this.root.productionAnalytics.getPastShapeRate(\r\n                    dataSource,\r\n                    this.definition,\r\n                    globalConfig.statisticsGraphSlices - i - 2\r\n                );\r\n                if (value > maxValue) {\r\n                    maxValue = value;\r\n                }\r\n                values.push(value);\r\n            }\r\n\r\n            this.graphContext.beginPath();\r\n            this.graphContext.moveTo(0.75, h + 5);\r\n            for (let i = 0; i < values.length; ++i) {\r\n                const yValue = clamp((1 - values[i] / maxValue) * h, 0.75, h - 0.75);\r\n                const x = i * sliceWidth;\r\n                if (i === 0) {\r\n                    this.graphContext.lineTo(0.75, yValue);\r\n                }\r\n                this.graphContext.lineTo(x, yValue);\r\n                if (i === values.length - 1) {\r\n                    this.graphContext.lineTo(w + 100, yValue);\r\n                    this.graphContext.lineTo(w + 100, h + 5);\r\n                }\r\n            }\r\n\r\n            this.graphContext.closePath();\r\n            this.graphContext.stroke();\r\n            this.graphContext.fill();\r\n        } else {\r\n            if (this.graphCanvas) {\r\n                this.graphCanvas.remove();\r\n                delete this.graphCanvas;\r\n                delete this.graphContext;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attaches the handle\r\n     * @param {HTMLElement} parent\r\n     */\r\n    attach(parent) {\r\n        if (!this.element) {\r\n            this.initElement();\r\n        }\r\n        if (this.element.parentElement !== parent) {\r\n            parent.appendChild(this.element);\r\n            this.intersectionObserver.observe(this.element);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Detaches the handle\r\n     */\r\n    detach() {\r\n        if (this.element && this.element.parentElement) {\r\n            this.element.parentElement.removeChild(this.element);\r\n            this.intersectionObserver.unobserve(this.element);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cleans up all child elements\r\n     */\r\n    cleanupChildElements() {\r\n        if (this.shapeCanvas) {\r\n            this.shapeCanvas.remove();\r\n            delete this.shapeCanvas;\r\n        }\r\n\r\n        if (this.graphCanvas) {\r\n            this.graphCanvas.remove();\r\n            delete this.graphCanvas;\r\n            delete this.graphContext;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroys the handle\r\n     */\r\n    destroy() {\r\n        this.cleanupChildElements();\r\n        if (this.element) {\r\n            this.intersectionObserver.unobserve(this.element);\r\n            this.element.remove();\r\n            delete this.element;\r\n\r\n            // Remove handle\r\n            delete this.counter;\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/statistics_handle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2471,
    "kind": "variable",
    "name": "enumDisplayMode",
    "memberof": "js/game/hud/parts/statistics_handle.js",
    "static": true,
    "longname": "js/game/hud/parts/statistics_handle.js~enumDisplayMode",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/statistics_handle.js",
    "importStyle": "{enumDisplayMode}",
    "description": null,
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"icons\": string, \"detailed\": string}"
      ]
    }
  },
  {
    "__docId__": 2472,
    "kind": "variable",
    "name": "statisticsUnitsSeconds",
    "memberof": "js/game/hud/parts/statistics_handle.js",
    "static": true,
    "longname": "js/game/hud/parts/statistics_handle.js~statisticsUnitsSeconds",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/statistics_handle.js",
    "importStyle": "{statisticsUnitsSeconds}",
    "description": "Stores how many seconds one unit is",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Object<string, number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2473,
    "kind": "class",
    "name": "HUDShapeStatisticsHandle",
    "memberof": "js/game/hud/parts/statistics_handle.js",
    "static": true,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/statistics_handle.js",
    "importStyle": "{HUDShapeStatisticsHandle}",
    "description": "Simple wrapper for a shape definition within the shape statistics",
    "lineNumber": 28,
    "interface": false
  },
  {
    "__docId__": 2474,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "IntersectionObserver"
        ],
        "spread": false,
        "optional": false,
        "name": "intersectionObserver",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2475,
    "kind": "member",
    "name": "definition",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#definition",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2476,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#root",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2477,
    "kind": "member",
    "name": "intersectionObserver",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#intersectionObserver",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2478,
    "kind": "member",
    "name": "visible",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#visible",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2479,
    "kind": "method",
    "name": "initElement",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#initElement",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2480,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#element",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2481,
    "kind": "member",
    "name": "counter",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#counter",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2482,
    "kind": "method",
    "name": "setVisible",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#setVisible",
    "access": "public",
    "description": "Sets whether the shape handle is visible currently",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visibility",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2484,
    "kind": "member",
    "name": "shapeCanvas",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#shapeCanvas",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2485,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#update",
    "access": "public",
    "description": "",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "enumDisplayMode"
        ],
        "spread": false,
        "optional": false,
        "name": "displayMode",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumAnalyticsDataSource"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSource",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "unit",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "forced",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2486,
    "kind": "member",
    "name": "graphCanvas",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#graphCanvas",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2487,
    "kind": "member",
    "name": "graphContext",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#graphContext",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2488,
    "kind": "method",
    "name": "attach",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#attach",
    "access": "public",
    "description": "Attaches the handle",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2489,
    "kind": "method",
    "name": "detach",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#detach",
    "access": "public",
    "description": "Detaches the handle",
    "lineNumber": 200,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2490,
    "kind": "method",
    "name": "cleanupChildElements",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#cleanupChildElements",
    "access": "public",
    "description": "Cleans up all child elements",
    "lineNumber": 210,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2491,
    "kind": "method",
    "name": "destroy",
    "memberof": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/statistics_handle.js~HUDShapeStatisticsHandle#destroy",
    "access": "public",
    "description": "Destroys the handle",
    "lineNumber": 226,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2492,
    "kind": "file",
    "name": "js/game/hud/parts/tutorial_hints.js",
    "content": "import { InputReceiver } from \"../../../core/input_receiver\";\r\nimport { TrackedState } from \"../../../core/tracked_state\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { KeyActionMapper, KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { T } from \"../../../translations\";\r\n\r\nconst tutorialVideos = [2, 3, 4, 5, 6, 7, 9, 10, 11];\r\n\r\nexport class HUDPartTutorialHints extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(\r\n            parent,\r\n            \"ingame_HUD_TutorialHints\",\r\n            [],\r\n            `\r\n        <div class=\"header\">\r\n            <span>${T.ingame.tutorialHints.title}</span>\r\n            <button class=\"styledButton toggleHint\">\r\n                <span class=\"show\">${T.ingame.tutorialHints.showHint}</span>\r\n                <span class=\"hide\">${T.ingame.tutorialHints.hideHint}</span>\r\n            </button>\r\n        </div>\r\n\r\n        <video autoplay muted loop class=\"fullscreenBackgroundVideo\">\r\n            <source type=\"video/webm\">\r\n        </video>\r\n        `\r\n        );\r\n\r\n        this.videoElement = this.element.querySelector(\"video\");\r\n    }\r\n\r\n    shouldPauseGame() {\r\n        return this.enlarged;\r\n    }\r\n\r\n    initialize() {\r\n        this.trackClicks(this.element.querySelector(\".toggleHint\"), this.toggleHintEnlarged);\r\n\r\n        this.videoAttach = new DynamicDomAttach(this.root, this.videoElement, {\r\n            timeToKeepSeconds: 0.3,\r\n        });\r\n\r\n        this.videoAttach.update(false);\r\n        this.enlarged = false;\r\n\r\n        this.inputReciever = new InputReceiver(\"tutorial_hints\");\r\n        this.keyActionMapper = new KeyActionMapper(this.root, this.inputReciever);\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.close, this);\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element);\r\n\r\n        this.currentShownLevel = new TrackedState(this.updateVideoUrl, this);\r\n    }\r\n\r\n    updateVideoUrl(level) {\r\n        if (tutorialVideos.indexOf(level) < 0) {\r\n            this.videoElement.querySelector(\"source\").setAttribute(\"src\", \"\");\r\n            this.videoElement.pause();\r\n        } else {\r\n            this.videoElement\r\n                .querySelector(\"source\")\r\n                .setAttribute(\"src\", \"https://static.shapez.io/tutorial_videos/level_\" + level + \".webm\");\r\n            this.videoElement.currentTime = 0;\r\n            this.videoElement.load();\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.enlarged = false;\r\n        this.element.classList.remove(\"enlarged\", \"noBlur\");\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        this.update();\r\n    }\r\n\r\n    show() {\r\n        this.root.app.analytics.trackUiClick(\"tutorial_hint_show\");\r\n        this.root.app.analytics.trackUiClick(\"tutorial_hint_show_lvl_\" + this.root.hubGoals.level);\r\n        this.element.classList.add(\"enlarged\", \"noBlur\");\r\n        this.enlarged = true;\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReciever);\r\n        this.update();\r\n\r\n        this.videoElement.currentTime = 0;\r\n        this.videoElement.play();\r\n    }\r\n\r\n    update() {\r\n        this.videoAttach.update(this.enlarged);\r\n\r\n        this.currentShownLevel.set(this.root.hubGoals.level);\r\n\r\n        const tutorialVisible = tutorialVideos.indexOf(this.root.hubGoals.level) >= 0;\r\n        this.domAttach.update(tutorialVisible);\r\n    }\r\n\r\n    toggleHintEnlarged() {\r\n        if (this.enlarged) {\r\n            this.close();\r\n        } else {\r\n            this.show();\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/tutorial_hints.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2493,
    "kind": "variable",
    "name": "tutorialVideos",
    "memberof": "js/game/hud/parts/tutorial_hints.js",
    "static": true,
    "longname": "js/game/hud/parts/tutorial_hints.js~tutorialVideos",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/tutorial_hints.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2494,
    "kind": "class",
    "name": "HUDPartTutorialHints",
    "memberof": "js/game/hud/parts/tutorial_hints.js",
    "static": true,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/tutorial_hints.js",
    "importStyle": "{HUDPartTutorialHints}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2495,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2496,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#element",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2497,
    "kind": "member",
    "name": "videoElement",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#videoElement",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2498,
    "kind": "method",
    "name": "shouldPauseGame",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#shouldPauseGame",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2499,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2500,
    "kind": "member",
    "name": "videoAttach",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#videoAttach",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2501,
    "kind": "member",
    "name": "enlarged",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#enlarged",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2502,
    "kind": "member",
    "name": "inputReciever",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#inputReciever",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2503,
    "kind": "member",
    "name": "keyActionMapper",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#keyActionMapper",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2504,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2505,
    "kind": "member",
    "name": "currentShownLevel",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#currentShownLevel",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2506,
    "kind": "method",
    "name": "updateVideoUrl",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#updateVideoUrl",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "level",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2507,
    "kind": "method",
    "name": "close",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#close",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2509,
    "kind": "method",
    "name": "show",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#show",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2511,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#update",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2512,
    "kind": "method",
    "name": "toggleHintEnlarged",
    "memberof": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/tutorial_hints.js~HUDPartTutorialHints#toggleHintEnlarged",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2513,
    "kind": "file",
    "name": "js/game/hud/parts/tutorial_video_offer.js",
    "content": "import { THIRDPARTY_URLS } from \"../../../core/config\";\r\nimport { T } from \"../../../translations\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\n\r\n/**\r\n * Offers to open the tutorial video after completing a level\r\n */\r\nexport class HUDTutorialVideoOffer extends BaseHUDPart {\r\n    createElements() {}\r\n\r\n    initialize() {\r\n        this.root.hud.signals.unlockNotificationFinished.add(() => {\r\n            const level = this.root.hubGoals.level;\r\n            const tutorialVideoLink = THIRDPARTY_URLS.levelTutorialVideos[level];\r\n            if (tutorialVideoLink) {\r\n                const isForeign = this.root.app.settings.getLanguage() !== \"en\";\r\n                const dialogData = isForeign\r\n                    ? T.dialogs.tutorialVideoAvailableForeignLanguage\r\n                    : T.dialogs.tutorialVideoAvailable;\r\n\r\n                const { ok } = this.root.hud.parts.dialogs.showInfo(dialogData.title, dialogData.desc, [\r\n                    \"cancel:bad\",\r\n                    \"ok:good\",\r\n                ]);\r\n\r\n                this.root.app.analytics.trackUiClick(\"ingame_video_link_show_\" + level);\r\n                ok.add(() => {\r\n                    this.root.app.platformWrapper.openExternalLink(tutorialVideoLink);\r\n                    this.root.app.analytics.trackUiClick(\"ingame_video_link_open_\" + level);\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/tutorial_video_offer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2514,
    "kind": "class",
    "name": "HUDTutorialVideoOffer",
    "memberof": "js/game/hud/parts/tutorial_video_offer.js",
    "static": true,
    "longname": "js/game/hud/parts/tutorial_video_offer.js~HUDTutorialVideoOffer",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/tutorial_video_offer.js",
    "importStyle": "{HUDTutorialVideoOffer}",
    "description": "Offers to open the tutorial video after completing a level",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2515,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/tutorial_video_offer.js~HUDTutorialVideoOffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/tutorial_video_offer.js~HUDTutorialVideoOffer#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2516,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/tutorial_video_offer.js~HUDTutorialVideoOffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/tutorial_video_offer.js~HUDTutorialVideoOffer#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2517,
    "kind": "file",
    "name": "js/game/hud/parts/unlock_notification.js",
    "content": "import { globalConfig } from \"../../../core/config\";\r\nimport { gMetaBuildingRegistry } from \"../../../core/global_registries\";\r\nimport { InputReceiver } from \"../../../core/input_receiver\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { SOUNDS } from \"../../../platform/sound\";\r\nimport { T } from \"../../../translations\";\r\nimport { defaultBuildingVariant } from \"../../meta_building\";\r\nimport { enumHubGoalRewards } from \"../../tutorial_goals\";\r\nimport { enumHubGoalRewardsToContentUnlocked } from \"../../tutorial_goals_mappings\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { enumNotificationType } from \"./notifications\";\r\n\r\nexport class HUDUnlockNotification extends BaseHUDPart {\r\n    initialize() {\r\n        this.visible = false;\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element, {\r\n            timeToKeepSeconds: 0,\r\n        });\r\n\r\n        if (!(G_IS_DEV && globalConfig.debug.disableUnlockDialog)) {\r\n            this.root.signals.storyGoalCompleted.add(this.showForLevel, this);\r\n        }\r\n\r\n        this.buttonShowTimeout = null;\r\n    }\r\n\r\n    createElements(parent) {\r\n        this.inputReciever = new InputReceiver(\"unlock-notification\");\r\n\r\n        this.element = makeDiv(parent, \"ingame_HUD_UnlockNotification\", [\"noBlur\"]);\r\n\r\n        const dialog = makeDiv(this.element, null, [\"dialog\"]);\r\n\r\n        this.elemTitle = makeDiv(dialog, null, [\"title\"]);\r\n        this.elemSubTitle = makeDiv(dialog, null, [\"subTitle\"], T.ingame.levelCompleteNotification.completed);\r\n\r\n        this.elemContents = makeDiv(dialog, null, [\"contents\"]);\r\n\r\n        this.btnClose = document.createElement(\"button\");\r\n        this.btnClose.classList.add(\"close\", \"styledButton\");\r\n        this.btnClose.innerText = T.ingame.levelCompleteNotification.buttonNextLevel;\r\n        dialog.appendChild(this.btnClose);\r\n\r\n        this.trackClicks(this.btnClose, this.requestClose);\r\n    }\r\n\r\n    /**\r\n     * @param {number} level\r\n     * @param {enumHubGoalRewards} reward\r\n     */\r\n    showForLevel(level, reward) {\r\n        this.root.soundProxy.playUi(SOUNDS.levelComplete);\r\n\r\n        const levels = this.root.gameMode.getLevelDefinitions();\r\n        // Don't use getIsFreeplay() because we want the freeplay level up to show\r\n        if (level > levels.length) {\r\n            this.root.hud.signals.notification.dispatch(\r\n                T.ingame.notifications.freeplayLevelComplete.replace(\"<level>\", String(level)),\r\n                enumNotificationType.success\r\n            );\r\n            return;\r\n        }\r\n\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReciever);\r\n        this.elemTitle.innerText = T.ingame.levelCompleteNotification.levelTitle.replace(\r\n            \"<level>\",\r\n            (\"\" + level).padStart(2, \"0\")\r\n        );\r\n\r\n        const rewardName = T.storyRewards[reward].title;\r\n\r\n        let html = `\r\n        <div class=\"rewardName\">\r\n            ${T.ingame.levelCompleteNotification.unlockText.replace(\"<reward>\", rewardName)}\r\n        </div>\r\n        \r\n        <div class=\"rewardDesc\">\r\n            ${T.storyRewards[reward].desc}\r\n        </div>\r\n\r\n        `;\r\n\r\n        html += \"<div class='images'>\";\r\n        const gained = enumHubGoalRewardsToContentUnlocked[reward];\r\n        if (gained) {\r\n            gained.forEach(([metaBuildingClass, variant]) => {\r\n                const metaBuilding = gMetaBuildingRegistry.findByClass(metaBuildingClass);\r\n                html += `<div class=\"buildingExplanation\" data-icon=\"building_tutorials/${\r\n                    metaBuilding.getId() + (variant === defaultBuildingVariant ? \"\" : \"-\" + variant)\r\n                }.png\"></div>`;\r\n            });\r\n        }\r\n        html += \"</div>\";\r\n\r\n        this.elemContents.innerHTML = html;\r\n        this.visible = true;\r\n\r\n        if (this.buttonShowTimeout) {\r\n            clearTimeout(this.buttonShowTimeout);\r\n        }\r\n\r\n        this.element.querySelector(\"button.close\").classList.remove(\"unlocked\");\r\n\r\n        if (this.root.app.settings.getAllSettings().offerHints) {\r\n            this.buttonShowTimeout = setTimeout(\r\n                () => this.element.querySelector(\"button.close\").classList.add(\"unlocked\"),\r\n                G_IS_DEV ? 100 : 5000\r\n            );\r\n        } else {\r\n            this.element.querySelector(\"button.close\").classList.add(\"unlocked\");\r\n        }\r\n    }\r\n\r\n    cleanup() {\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        if (this.buttonShowTimeout) {\r\n            clearTimeout(this.buttonShowTimeout);\r\n            this.buttonShowTimeout = null;\r\n        }\r\n    }\r\n\r\n    isBlockingOverlay() {\r\n        return this.visible;\r\n    }\r\n\r\n    requestClose() {\r\n        this.root.app.adProvider.showVideoAd().then(() => {\r\n            this.close();\r\n\r\n            this.root.hud.signals.unlockNotificationFinished.dispatch();\r\n\r\n            if (!this.root.app.settings.getAllSettings().offerHints) {\r\n                return;\r\n            }\r\n\r\n            if (this.root.hubGoals.level === 3) {\r\n                const { showUpgrades } = this.root.hud.parts.dialogs.showInfo(\r\n                    T.dialogs.upgradesIntroduction.title,\r\n                    T.dialogs.upgradesIntroduction.desc,\r\n                    [\"showUpgrades:good:timeout\"]\r\n                );\r\n                showUpgrades.add(() => this.root.hud.parts.shop.show());\r\n            }\r\n\r\n            if (this.root.hubGoals.level === 5) {\r\n                const { showKeybindings } = this.root.hud.parts.dialogs.showInfo(\r\n                    T.dialogs.keybindingsIntroduction.title,\r\n                    T.dialogs.keybindingsIntroduction.desc,\r\n                    [\"showKeybindings:misc\", \"ok:good:timeout\"]\r\n                );\r\n                showKeybindings.add(() => this.root.gameState.goToKeybindings());\r\n            }\r\n        });\r\n    }\r\n\r\n    close() {\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        if (this.buttonShowTimeout) {\r\n            clearTimeout(this.buttonShowTimeout);\r\n            this.buttonShowTimeout = null;\r\n        }\r\n        this.visible = false;\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(this.visible);\r\n        if (!this.visible && this.buttonShowTimeout) {\r\n            clearTimeout(this.buttonShowTimeout);\r\n            this.buttonShowTimeout = null;\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/unlock_notification.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2518,
    "kind": "class",
    "name": "HUDUnlockNotification",
    "memberof": "js/game/hud/parts/unlock_notification.js",
    "static": true,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/unlock_notification.js",
    "importStyle": "{HUDUnlockNotification}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2519,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2520,
    "kind": "member",
    "name": "visible",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#visible",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2521,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2522,
    "kind": "member",
    "name": "buttonShowTimeout",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#buttonShowTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2523,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2524,
    "kind": "member",
    "name": "inputReciever",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#inputReciever",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2525,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#element",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2526,
    "kind": "member",
    "name": "elemTitle",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#elemTitle",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2527,
    "kind": "member",
    "name": "elemSubTitle",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#elemSubTitle",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2528,
    "kind": "member",
    "name": "elemContents",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#elemContents",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2529,
    "kind": "member",
    "name": "btnClose",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#btnClose",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2530,
    "kind": "method",
    "name": "showForLevel",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#showForLevel",
    "access": "public",
    "description": "",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumHubGoalRewards"
        ],
        "spread": false,
        "optional": false,
        "name": "reward",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2533,
    "kind": "method",
    "name": "cleanup",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#cleanup",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2535,
    "kind": "method",
    "name": "isBlockingOverlay",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#isBlockingOverlay",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2536,
    "kind": "method",
    "name": "requestClose",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#requestClose",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2537,
    "kind": "method",
    "name": "close",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#close",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2540,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/unlock_notification.js~HUDUnlockNotification#update",
    "access": "public",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2542,
    "kind": "file",
    "name": "js/game/hud/parts/vignette_overlay.js",
    "content": "import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\n\r\nexport class HUDVignetteOverlay extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_VignetteOverlay\");\r\n    }\r\n\r\n    initialize() {}\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/vignette_overlay.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2543,
    "kind": "class",
    "name": "HUDVignetteOverlay",
    "memberof": "js/game/hud/parts/vignette_overlay.js",
    "static": true,
    "longname": "js/game/hud/parts/vignette_overlay.js~HUDVignetteOverlay",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/vignette_overlay.js",
    "importStyle": "{HUDVignetteOverlay}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2544,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/vignette_overlay.js~HUDVignetteOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/vignette_overlay.js~HUDVignetteOverlay#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2545,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/vignette_overlay.js~HUDVignetteOverlay",
    "static": false,
    "longname": "js/game/hud/parts/vignette_overlay.js~HUDVignetteOverlay#element",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2546,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/vignette_overlay.js~HUDVignetteOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/vignette_overlay.js~HUDVignetteOverlay#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2547,
    "kind": "file",
    "name": "js/game/hud/parts/watermark.js",
    "content": "import { THIRDPARTY_URLS } from \"../../../core/config\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\n\r\nconst watermarkShowIntervalSeconds = G_IS_DEV ? 120 : 7 * 60;\r\nconst watermarkShowDuration = 5;\r\n\r\nexport class HUDWatermark extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(\r\n            parent,\r\n            \"ingame_HUD_Watermark\",\r\n            [],\r\n            `\r\n            <strong>${T.ingame.watermark.title}</strong>\r\n            <p>${T.ingame.watermark.desc}</p>\r\n        `\r\n        );\r\n\r\n        this.linkElement = makeDiv(\r\n            parent,\r\n            \"ingame_HUD_WatermarkClicker\",\r\n            [],\r\n            T.ingame.watermark.get_on_steam\r\n        );\r\n        this.trackClicks(this.linkElement, () => {\r\n            this.root.app.analytics.trackUiClick(\"watermark_click_2_direct\");\r\n            this.root.app.platformWrapper.openExternalLink(THIRDPARTY_URLS.standaloneStorePage + \"?ref=wtmd\");\r\n        });\r\n    }\r\n\r\n    initialize() {\r\n        this.trackClicks(this.element, this.onWatermarkClick);\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element, {\r\n            attachClass: \"visible\",\r\n            timeToKeepSeconds: 0.5,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(\r\n            this.root.time.realtimeNow() % watermarkShowIntervalSeconds < watermarkShowDuration\r\n        );\r\n    }\r\n\r\n    onWatermarkClick() {\r\n        this.root.app.analytics.trackUiClick(\"watermark_click_2_new\");\r\n        this.root.hud.parts.standaloneAdvantages.show();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {import(\"../../../core/draw_utils\").DrawParameters} parameters\r\n     */\r\n    drawOverlays(parameters) {\r\n        const w = this.root.gameWidth;\r\n\r\n        parameters.context.fillStyle = \"rgba(230, 230, 230, 0.9)\";\r\n        parameters.context.font = \"bold \" + this.root.app.getEffectiveUiScale() * 40 + \"px GameFont\";\r\n        parameters.context.textAlign = \"center\";\r\n        parameters.context.fillText(\r\n            T.demoBanners.title.toUpperCase(),\r\n            w / 2,\r\n            this.root.app.getEffectiveUiScale() * 50\r\n        );\r\n\r\n        parameters.context.textAlign = \"left\";\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/watermark.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2548,
    "kind": "variable",
    "name": "watermarkShowIntervalSeconds",
    "memberof": "js/game/hud/parts/watermark.js",
    "static": true,
    "longname": "js/game/hud/parts/watermark.js~watermarkShowIntervalSeconds",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/watermark.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2549,
    "kind": "variable",
    "name": "watermarkShowDuration",
    "memberof": "js/game/hud/parts/watermark.js",
    "static": true,
    "longname": "js/game/hud/parts/watermark.js~watermarkShowDuration",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/watermark.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2550,
    "kind": "class",
    "name": "HUDWatermark",
    "memberof": "js/game/hud/parts/watermark.js",
    "static": true,
    "longname": "js/game/hud/parts/watermark.js~HUDWatermark",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/watermark.js",
    "importStyle": "{HUDWatermark}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2551,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/watermark.js~HUDWatermark",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/watermark.js~HUDWatermark#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2552,
    "kind": "member",
    "name": "element",
    "memberof": "js/game/hud/parts/watermark.js~HUDWatermark",
    "static": false,
    "longname": "js/game/hud/parts/watermark.js~HUDWatermark#element",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2553,
    "kind": "member",
    "name": "linkElement",
    "memberof": "js/game/hud/parts/watermark.js~HUDWatermark",
    "static": false,
    "longname": "js/game/hud/parts/watermark.js~HUDWatermark#linkElement",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2554,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/watermark.js~HUDWatermark",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/watermark.js~HUDWatermark#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2555,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/watermark.js~HUDWatermark",
    "static": false,
    "longname": "js/game/hud/parts/watermark.js~HUDWatermark#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2556,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/watermark.js~HUDWatermark",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/watermark.js~HUDWatermark#update",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2557,
    "kind": "method",
    "name": "onWatermarkClick",
    "memberof": "js/game/hud/parts/watermark.js~HUDWatermark",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/watermark.js~HUDWatermark#onWatermarkClick",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2558,
    "kind": "method",
    "name": "drawOverlays",
    "memberof": "js/game/hud/parts/watermark.js~HUDWatermark",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/watermark.js~HUDWatermark#drawOverlays",
    "access": "public",
    "description": "",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../../../core/draw_utils\").DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2559,
    "kind": "file",
    "name": "js/game/hud/parts/waypoints.js",
    "content": "import { makeOffscreenBuffer } from \"../../../core/buffer_utils\";\r\nimport { globalConfig, THIRDPARTY_URLS } from \"../../../core/config\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { gMetaBuildingRegistry } from \"../../../core/global_registries\";\r\nimport { Loader } from \"../../../core/loader\";\r\nimport { DialogWithForm } from \"../../../core/modal_dialog_elements\";\r\nimport { FormElementInput } from \"../../../core/modal_dialog_forms\";\r\nimport { Rectangle } from \"../../../core/rectangle\";\r\nimport { STOP_PROPAGATION } from \"../../../core/signal\";\r\nimport {\r\n    arrayDeleteValue,\r\n    fillInLinkIntoTranslation,\r\n    lerp,\r\n    makeDiv,\r\n    removeAllChildren,\r\n} from \"../../../core/utils\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { T } from \"../../../translations\";\r\nimport { BaseItem } from \"../../base_item\";\r\nimport { MetaHubBuilding } from \"../../buildings/hub\";\r\nimport { enumMouseButton } from \"../../camera\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { defaultBuildingVariant } from \"../../meta_building\";\r\nimport { ShapeDefinition } from \"../../shape_definition\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { enumNotificationType } from \"./notifications\";\r\n\r\n/** @typedef {{\r\n *   label: string | null,\r\n *   center: { x: number, y: number },\r\n *   zoomLevel: number,\r\n *   layer: Layer,\r\n * }} Waypoint */\r\n\r\n/**\r\n * Used when a shape icon is rendered instead\r\n */\r\nconst MAX_LABEL_LENGTH = 71;\r\n\r\nexport class HUDWaypoints extends BaseHUDPart {\r\n    /**\r\n     * Creates the overview of waypoints\r\n     * @param {HTMLElement} parent\r\n     */\r\n    createElements(parent) {\r\n            // Create the helper box on the lower right when zooming out\r\n            if (this.root.app.settings.getAllSettings().offerHints) {\r\n                this.hintElement = makeDiv(\r\n                        parent,\r\n                        \"ingame_HUD_Waypoints_Hint\", [],\r\n                        `\r\n            <strong class='title'>${T.ingame.waypoints.waypoints}</strong>\r\n            <span class='desc'>${T.ingame.waypoints.description.replace(\r\n                \"<keybinding>\",\r\n                `<code class='keybinding'>${this.root.keyMapper\r\n                    .getBinding(KEYMAPPINGS.navigation.createMarker)\r\n                    .getKeyCodeString()}</code>`\r\n            )}</span>\r\n        `\r\n            );\r\n        }\r\n\r\n        // Create the waypoint list on the upper right\r\n        this.waypointsListElement = makeDiv(parent, \"ingame_HUD_Waypoints\", [], \"Waypoints\");\r\n    }\r\n\r\n    /**\r\n     * Serializes the waypoints\r\n     */\r\n    serialize() {\r\n        return {\r\n            waypoints: this.waypoints,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Deserializes the waypoints\r\n     * @param {{waypoints: Array<Waypoint>}} data\r\n     */\r\n    deserialize(data) {\r\n        if (!data || !data.waypoints || !Array.isArray(data.waypoints)) {\r\n            return \"Invalid waypoints data\";\r\n        }\r\n        this.waypoints = data.waypoints;\r\n        this.rerenderWaypointList();\r\n    }\r\n\r\n    /**\r\n     * Initializes everything\r\n     */\r\n    initialize() {\r\n        // Cache the sprite for the waypoints\r\n\r\n        this.waypointSprites = {\r\n            regular: Loader.getSprite(\"sprites/misc/waypoint.png\"),\r\n            wires: Loader.getSprite(\"sprites/misc/waypoint_wires.png\"),\r\n        };\r\n\r\n        this.directionIndicatorSprite = Loader.getSprite(\"sprites/misc/hub_direction_indicator.png\");\r\n\r\n        /** @type {Array<Waypoint>}\r\n         */\r\n        this.waypoints = [\r\n            {\r\n                label: null,\r\n                center: { x: 0, y: 0 },\r\n                zoomLevel: 3,\r\n                layer: gMetaBuildingRegistry\r\n                    .findByClass(MetaHubBuilding)\r\n                    .getLayer(this.root, defaultBuildingVariant),\r\n            },\r\n        ];\r\n\r\n        // Create a buffer we can use to measure text\r\n        this.dummyBuffer = makeOffscreenBuffer(1, 1, {\r\n            reusable: false,\r\n            label: \"waypoints-measure-canvas\",\r\n        })[1];\r\n\r\n        // Dynamically attach/detach the lower right hint in the map overview\r\n        if (this.hintElement) {\r\n            this.domAttach = new DynamicDomAttach(this.root, this.hintElement);\r\n        }\r\n\r\n        // Catch mouse and key events\r\n        this.root.camera.downPreHandler.add(this.onMouseDown, this);\r\n        this.root.keyMapper\r\n            .getBinding(KEYMAPPINGS.navigation.createMarker)\r\n            .add(() => this.requestSaveMarker({}));\r\n\r\n        /**\r\n         * Stores at how much opacity the markers should be rendered on the map.\r\n         * This is interpolated over multiple frames so we have some sort of fade effect\r\n         */\r\n        this.currentMarkerOpacity = 1;\r\n        this.currentCompassOpacity = 0;\r\n\r\n        // Create buffer which is used to indicate the hub direction\r\n        const [canvas, context] = makeOffscreenBuffer(48, 48, {\r\n            smooth: true,\r\n            reusable: false,\r\n            label: \"waypoints-compass\",\r\n        });\r\n        this.compassBuffer = { canvas, context };\r\n\r\n        /**\r\n         * Stores a cache from a shape short key to its canvas representation\r\n         */\r\n        this.cachedKeyToCanvas = {};\r\n\r\n        /**\r\n         * Store cached text widths\r\n         * @type {Object<string, number>}\r\n         */\r\n        this.cachedTextWidths = {};\r\n\r\n        // Initial render\r\n        this.rerenderWaypointList();\r\n    }\r\n\r\n    /**\r\n     * Returns how long a text will be rendered\r\n     * @param {string} text\r\n     * @returns {number}\r\n     */\r\n    getTextWidth(text) {\r\n        if (this.cachedTextWidths[text]) {\r\n            return this.cachedTextWidths[text];\r\n        }\r\n\r\n        this.dummyBuffer.font = \"bold \" + this.getTextScale() + \"px GameFont\";\r\n        return (this.cachedTextWidths[text] = this.dummyBuffer.measureText(text).width);\r\n    }\r\n\r\n    /**\r\n     * Returns how big the text should be rendered\r\n     */\r\n    getTextScale() {\r\n        return this.getWaypointUiScale() * 12;\r\n    }\r\n\r\n    /**\r\n     * Returns the scale for rendering waypoints\r\n     */\r\n    getWaypointUiScale() {\r\n        return this.root.app.getEffectiveUiScale();\r\n    }\r\n\r\n    /**\r\n     * Re-renders the waypoint list to account for changes\r\n     */\r\n    rerenderWaypointList() {\r\n        removeAllChildren(this.waypointsListElement);\r\n        this.cleanupClickDetectors();\r\n\r\n        for (let i = 0; i < this.waypoints.length; ++i) {\r\n            const waypoint = this.waypoints[i];\r\n            const label = this.getWaypointLabel(waypoint);\r\n\r\n            const element = makeDiv(this.waypointsListElement, null, [\r\n                \"waypoint\",\r\n                \"layer--\" + waypoint.layer,\r\n            ]);\r\n\r\n            if (ShapeDefinition.isValidShortKey(label)) {\r\n                const canvas = this.getWaypointCanvas(waypoint);\r\n                /**\r\n                 * Create a clone of the cached canvas, as calling appendElement when a canvas is\r\n                 * already in the document will move the existing canvas to the new position.\r\n                 */\r\n                const [newCanvas, context] = makeOffscreenBuffer(48, 48, {\r\n                    smooth: true,\r\n                    label: label + \"-waypoint-\" + i,\r\n                });\r\n                context.drawImage(canvas, 0, 0);\r\n                element.appendChild(newCanvas);\r\n                element.classList.add(\"shapeIcon\");\r\n            } else {\r\n                element.innerText = label;\r\n            }\r\n\r\n            if (this.isWaypointDeletable(waypoint)) {\r\n                const editButton = makeDiv(element, null, [\"editButton\"]);\r\n                this.trackClicks(editButton, () => this.requestSaveMarker({ waypoint }));\r\n            }\r\n\r\n            if (!waypoint.label) {\r\n                // This must be the hub label\r\n                element.classList.add(\"hub\");\r\n                element.insertBefore(this.compassBuffer.canvas, element.childNodes[0]);\r\n            }\r\n\r\n            this.trackClicks(element, () => this.moveToWaypoint(waypoint), {\r\n                targetOnly: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Moves the camera to a given waypoint\r\n     * @param {Waypoint} waypoint\r\n     */\r\n    moveToWaypoint(waypoint) {\r\n        this.root.currentLayer = waypoint.layer;\r\n        this.root.camera.setDesiredCenter(new Vector(waypoint.center.x, waypoint.center.y));\r\n        this.root.camera.setDesiredZoom(waypoint.zoomLevel);\r\n    }\r\n\r\n    /**\r\n     * Deletes a waypoint from the list\r\n     * @param {Waypoint} waypoint\r\n     */\r\n    deleteWaypoint(waypoint) {\r\n        arrayDeleteValue(this.waypoints, waypoint);\r\n        this.rerenderWaypointList();\r\n    }\r\n\r\n    /**\r\n     * Gets the canvas for a given waypoint\r\n     * @param {Waypoint} waypoint\r\n     * @returns {HTMLCanvasElement}\r\n     */\r\n    getWaypointCanvas(waypoint) {\r\n        const key = waypoint.label;\r\n        if (this.cachedKeyToCanvas[key]) {\r\n            return this.cachedKeyToCanvas[key];\r\n        }\r\n\r\n        assert(ShapeDefinition.isValidShortKey(key), \"Invalid short key: \" + key);\r\n        const definition = this.root.shapeDefinitionMgr.getShapeFromShortKey(key);\r\n        const preRendered = definition.generateAsCanvas(48);\r\n        return (this.cachedKeyToCanvas[key] = preRendered);\r\n    }\r\n\r\n    /**\r\n     * Requests to save a marker at the current camera position. If worldPos is set,\r\n     * uses that position instead.\r\n     * @param {object} param0\r\n     * @param {Vector=} param0.worldPos Override the world pos, otherwise it is the camera position\r\n     * @param {Waypoint=} param0.waypoint Waypoint to be edited. If omitted, create new\r\n     */\r\n    requestSaveMarker({ worldPos = null, waypoint = null }) {\r\n        // Construct dialog with input field\r\n        const markerNameInput = new FormElementInput({\r\n            id: \"markerName\",\r\n            label: null,\r\n            placeholder: \"\",\r\n            defaultValue: waypoint ? waypoint.label : \"\",\r\n            validator: val =>\r\n                val.length > 0 && (val.length < MAX_LABEL_LENGTH || ShapeDefinition.isValidShortKey(val)),\r\n        });\r\n        const dialog = new DialogWithForm({\r\n            app: this.root.app,\r\n            title: waypoint ? T.dialogs.createMarker.titleEdit : T.dialogs.createMarker.title,\r\n            desc: fillInLinkIntoTranslation(T.dialogs.createMarker.desc, THIRDPARTY_URLS.shapeViewer),\r\n            formElements: [markerNameInput],\r\n            buttons: waypoint ? [\"delete:bad\", \"cancel\", \"ok:good\"] : [\"cancel\", \"ok:good\"],\r\n        });\r\n        this.root.hud.parts.dialogs.internalShowDialog(dialog);\r\n\r\n        // Edit marker\r\n        if (waypoint) {\r\n            dialog.buttonSignals.ok.add(() => {\r\n                // Actually rename the waypoint\r\n                this.renameWaypoint(waypoint, markerNameInput.getValue());\r\n            });\r\n            dialog.buttonSignals.delete.add(() => {\r\n                // Actually delete the waypoint\r\n                this.deleteWaypoint(waypoint);\r\n            });\r\n        } else {\r\n            // Compute where to create the marker\r\n            const center = worldPos || this.root.camera.center;\r\n\r\n            dialog.buttonSignals.ok.add(() => {\r\n                // Show info that you can have only N markers in the demo,\r\n                // actually show this *after* entering the name so you want the\r\n                // standalone even more (I'm evil :P)\r\n                if (this.waypoints.length > this.root.app.restrictionMgr.getMaximumWaypoints()) {\r\n                    this.root.hud.parts.dialogs.showFeatureRestrictionInfo(\r\n                        \"\",\r\n                        T.dialogs.markerDemoLimit.desc\r\n                    );\r\n                    return;\r\n                }\r\n\r\n                // Actually create the waypoint\r\n                this.addWaypoint(markerNameInput.getValue(), center);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a new waypoint at the given location with the given label\r\n     * @param {string} label\r\n     * @param {Vector} position\r\n     */\r\n    addWaypoint(label, position) {\r\n        this.waypoints.push({\r\n            label,\r\n            center: { x: position.x, y: position.y },\r\n            zoomLevel: this.root.camera.zoomLevel,\r\n            layer: this.root.currentLayer,\r\n        });\r\n\r\n        this.sortWaypoints();\r\n\r\n        // Show notification about creation\r\n        this.root.hud.signals.notification.dispatch(\r\n            T.ingame.waypoints.creationSuccessNotification,\r\n            enumNotificationType.success\r\n        );\r\n\r\n        // Re-render the list and thus add it\r\n        this.rerenderWaypointList();\r\n    }\r\n\r\n    /**\r\n     * Renames a waypoint with the given label\r\n     * @param {Waypoint} waypoint\r\n     * @param {string} label\r\n     */\r\n    renameWaypoint(waypoint, label) {\r\n        waypoint.label = label;\r\n\r\n        this.sortWaypoints();\r\n\r\n        // Show notification about renamed\r\n        this.root.hud.signals.notification.dispatch(\r\n            T.ingame.waypoints.creationSuccessNotification,\r\n            enumNotificationType.success\r\n        );\r\n\r\n        // Re-render the list and thus add it\r\n        this.rerenderWaypointList();\r\n    }\r\n\r\n    /**\r\n     * Called every frame to update stuff\r\n     */\r\n    update() {\r\n        if (this.domAttach) {\r\n            this.domAttach.update(this.root.camera.getIsMapOverlayActive());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sort waypoints by name\r\n     */\r\n    sortWaypoints() {\r\n        this.waypoints.sort((a, b) => {\r\n            if (!a.label) {\r\n                return -1;\r\n            }\r\n            if (!b.label) {\r\n                return 1;\r\n            }\r\n            return this.getWaypointLabel(a)\r\n                .padEnd(MAX_LABEL_LENGTH, \"0\")\r\n                .localeCompare(this.getWaypointLabel(b).padEnd(MAX_LABEL_LENGTH, \"0\"));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns the label for a given waypoint\r\n     * @param {Waypoint} waypoint\r\n     * @returns {string}\r\n     */\r\n    getWaypointLabel(waypoint) {\r\n        return waypoint.label || T.ingame.waypoints.hub;\r\n    }\r\n\r\n    /**\r\n     * Returns if a waypoint is deletable\r\n     * @param {Waypoint} waypoint\r\n     * @returns {boolean}\r\n     */\r\n    isWaypointDeletable(waypoint) {\r\n        return waypoint.label !== null;\r\n    }\r\n\r\n    /**\r\n     * Returns the screen space bounds of the given waypoint or null\r\n     * if it couldn't be determined. Also returns wheter its a shape or not\r\n     * @param {Waypoint} waypoint\r\n     * @return {{\r\n     *   screenBounds: Rectangle\r\n     *   item: BaseItem|null,\r\n     *   text: string\r\n     * }}\r\n     */\r\n    getWaypointScreenParams(waypoint) {\r\n        if (!this.root.camera.getIsMapOverlayActive()) {\r\n            return null;\r\n        }\r\n\r\n        // Find parameters\r\n        const scale = this.getWaypointUiScale();\r\n        const screenPos = this.root.camera.worldToScreen(new Vector(waypoint.center.x, waypoint.center.y));\r\n\r\n        // Distinguish between text and item waypoints -> Figure out parameters\r\n        const originalLabel = this.getWaypointLabel(waypoint);\r\n        let text, item, textWidth;\r\n\r\n        if (ShapeDefinition.isValidShortKey(originalLabel)) {\r\n            // If the label is actually a key, render the shape icon\r\n            item = this.root.shapeDefinitionMgr.getShapeItemFromShortKey(originalLabel);\r\n            textWidth = 40;\r\n        } else {\r\n            // Otherwise render a regular waypoint\r\n            text = originalLabel;\r\n            textWidth = this.getTextWidth(text);\r\n        }\r\n\r\n        return {\r\n            screenBounds: new Rectangle(\r\n                screenPos.x - 7 * scale,\r\n                screenPos.y - 12 * scale,\r\n                15 * scale + textWidth,\r\n                15 * scale\r\n            ),\r\n            item,\r\n            text,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Finds the currently intersected waypoint on the map overview under\r\n     * the cursor.\r\n     *\r\n     * @returns {Waypoint | null}\r\n     */\r\n    findCurrentIntersectedWaypoint() {\r\n        const mousePos = this.root.app.mousePosition;\r\n        if (!mousePos) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this.waypoints.length; ++i) {\r\n            const waypoint = this.waypoints[i];\r\n            const params = this.getWaypointScreenParams(waypoint);\r\n            if (params && params.screenBounds.containsPoint(mousePos.x, mousePos.y)) {\r\n                return waypoint;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mouse-Down handler\r\n     * @param {Vector} pos\r\n     * @param {enumMouseButton} button\r\n     */\r\n    onMouseDown(pos, button) {\r\n        const waypoint = this.findCurrentIntersectedWaypoint();\r\n        if (waypoint) {\r\n            if (button === enumMouseButton.left) {\r\n                this.root.soundProxy.playUiClick();\r\n                this.moveToWaypoint(waypoint);\r\n            } else if (button === enumMouseButton.right) {\r\n                if (this.isWaypointDeletable(waypoint)) {\r\n                    this.root.soundProxy.playUiClick();\r\n                    this.requestSaveMarker({ waypoint });\r\n                } else {\r\n                    this.root.soundProxy.playUiError();\r\n                }\r\n            }\r\n\r\n            return STOP_PROPAGATION;\r\n        } else {\r\n            // Allow right click to create a marker\r\n            if (button === enumMouseButton.right) {\r\n                if (this.root.camera.getIsMapOverlayActive()) {\r\n                    const worldPos = this.root.camera.screenToWorld(pos);\r\n                    this.requestSaveMarker({ worldPos });\r\n                    return STOP_PROPAGATION;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Rerenders the compass\r\n     */\r\n    rerenderWaypointsCompass() {\r\n        const dims = 48;\r\n        const indicatorSize = 30;\r\n        const cameraPos = this.root.camera.center;\r\n\r\n        const context = this.compassBuffer.context;\r\n        context.clearRect(0, 0, dims, dims);\r\n\r\n        const distanceToHub = cameraPos.length();\r\n        const compassVisible = distanceToHub > (10 * globalConfig.tileSize) / this.root.camera.zoomLevel;\r\n        const targetCompassAlpha = compassVisible ? 1 : 0;\r\n\r\n        // Fade the compas in / out\r\n        this.currentCompassOpacity = lerp(this.currentCompassOpacity, targetCompassAlpha, 0.08);\r\n\r\n        // Render the compass\r\n        if (this.currentCompassOpacity > 0.01) {\r\n            context.globalAlpha = this.currentCompassOpacity;\r\n            const angle = cameraPos.angle() + Math.radians(45) + Math.PI / 2;\r\n            context.translate(dims / 2, dims / 2);\r\n            context.rotate(angle);\r\n            this.directionIndicatorSprite.drawCentered(context, 0, 0, indicatorSize);\r\n            context.rotate(-angle);\r\n            context.translate(-dims / 2, -dims / 2);\r\n            context.globalAlpha = 1;\r\n        }\r\n\r\n        // Render the regualr icon\r\n        const iconOpacity = 1 - this.currentCompassOpacity;\r\n        if (iconOpacity > 0.01) {\r\n            context.globalAlpha = iconOpacity;\r\n            this.waypointSprites.regular.drawCentered(context, dims / 2, dims / 2, dims * 0.7);\r\n            context.globalAlpha = 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the waypoints on the map\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawOverlays(parameters) {\r\n        const mousePos = this.root.app.mousePosition;\r\n        const desiredOpacity = this.root.camera.getIsMapOverlayActive() ? 1 : 0;\r\n        this.currentMarkerOpacity = lerp(this.currentMarkerOpacity, desiredOpacity, 0.08);\r\n\r\n        this.rerenderWaypointsCompass();\r\n\r\n        // Don't render with low opacity\r\n        if (this.currentMarkerOpacity < 0.01) {\r\n            return;\r\n        }\r\n\r\n        // Determine rendering scale\r\n        const scale = this.getWaypointUiScale();\r\n\r\n        // Set the font size\r\n        const textSize = this.getTextScale();\r\n        parameters.context.font = \"bold \" + textSize + \"px GameFont\";\r\n        parameters.context.textBaseline = \"middle\";\r\n\r\n        // Loop over all waypoints\r\n        for (let i = 0; i < this.waypoints.length; ++i) {\r\n            const waypoint = this.waypoints[i];\r\n\r\n            const waypointData = this.getWaypointScreenParams(waypoint);\r\n            if (!waypointData) {\r\n                // Not relevant\r\n                continue;\r\n            }\r\n\r\n            if (!parameters.visibleRect.containsRect(waypointData.screenBounds)) {\r\n                // Out of screen\r\n                continue;\r\n            }\r\n\r\n            const bounds = waypointData.screenBounds;\r\n            const contentPaddingX = 7 * scale;\r\n            const isSelected = mousePos && bounds.containsPoint(mousePos.x, mousePos.y);\r\n\r\n            // Render the background rectangle\r\n            parameters.context.globalAlpha = this.currentMarkerOpacity * (isSelected ? 1 : 0.7);\r\n            parameters.context.fillStyle = \"rgba(255, 255, 255, 0.7)\";\r\n            parameters.context.fillRect(bounds.x, bounds.y, bounds.w, bounds.h);\r\n\r\n            // Render the text\r\n            if (waypointData.item) {\r\n                const canvas = this.getWaypointCanvas(waypoint);\r\n                const itemSize = 14 * scale;\r\n                parameters.context.drawImage(\r\n                    canvas,\r\n                    bounds.x + contentPaddingX + 6 * scale,\r\n                    bounds.y + bounds.h / 2 - itemSize / 2,\r\n                    itemSize,\r\n                    itemSize\r\n                );\r\n            } else if (waypointData.text) {\r\n                // Render the text\r\n                parameters.context.fillStyle = \"#000\";\r\n                parameters.context.textBaseline = \"middle\";\r\n                parameters.context.fillText(\r\n                    waypointData.text,\r\n                    bounds.x + contentPaddingX + 6 * scale,\r\n                    bounds.y + bounds.h / 2\r\n                );\r\n                parameters.context.textBaseline = \"alphabetic\";\r\n            } else {\r\n                assertAlways(false, \"Waypoint has no item and text\");\r\n            }\r\n\r\n            // Render the small icon on the left\r\n            this.waypointSprites[waypoint.layer].drawCentered(\r\n                parameters.context,\r\n                bounds.x + contentPaddingX,\r\n                bounds.y + bounds.h / 2,\r\n                bounds.h * 0.6\r\n            );\r\n        }\r\n\r\n        parameters.context.textBaseline = \"alphabetic\";\r\n        parameters.context.globalAlpha = 1;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/waypoints.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2560,
    "kind": "typedef",
    "name": "Waypoint",
    "memberof": "js/game/hud/parts/waypoints.js",
    "static": true,
    "longname": "js/game/hud/parts/waypoints.js~Waypoint",
    "access": "public",
    "description": null,
    "type": {
      "types": [
        "{\n  label: string | null,\n  center: { x: number, y: number },\n  zoomLevel: number,\n  layer: Layer,\n}"
      ],
      "optional": false,
      "name": "Waypoint"
    }
  },
  {
    "__docId__": 2561,
    "kind": "variable",
    "name": "MAX_LABEL_LENGTH",
    "memberof": "js/game/hud/parts/waypoints.js",
    "static": true,
    "longname": "js/game/hud/parts/waypoints.js~MAX_LABEL_LENGTH",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/waypoints.js",
    "importStyle": null,
    "description": "Used when a shape icon is rendered instead",
    "lineNumber": 39,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2562,
    "kind": "class",
    "name": "HUDWaypoints",
    "memberof": "js/game/hud/parts/waypoints.js",
    "static": true,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/waypoints.js",
    "importStyle": "{HUDWaypoints}",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2563,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#createElements",
    "access": "public",
    "description": "Creates the overview of waypoints",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2564,
    "kind": "member",
    "name": "hintElement",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#hintElement",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2565,
    "kind": "member",
    "name": "waypointsListElement",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#waypointsListElement",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2566,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#serialize",
    "access": "public",
    "description": "Serializes the waypoints",
    "lineNumber": 71,
    "params": [],
    "return": {
      "types": [
        "{\"waypoints\": *}"
      ]
    }
  },
  {
    "__docId__": 2567,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#deserialize",
    "access": "public",
    "description": "Deserializes the waypoints",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "{waypoints: Array<Waypoint>}"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2568,
    "kind": "member",
    "name": "waypoints",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#waypoints",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2569,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#initialize",
    "access": "public",
    "description": "Initializes everything",
    "lineNumber": 92,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2570,
    "kind": "member",
    "name": "waypointSprites",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#waypointSprites",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "{\"regular\": *, \"wires\": *}"
      ]
    }
  },
  {
    "__docId__": 2571,
    "kind": "member",
    "name": "directionIndicatorSprite",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#directionIndicatorSprite",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2573,
    "kind": "member",
    "name": "dummyBuffer",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#dummyBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2574,
    "kind": "member",
    "name": "domAttach",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#domAttach",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2575,
    "kind": "member",
    "name": "currentMarkerOpacity",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#currentMarkerOpacity",
    "access": "public",
    "description": "Stores at how much opacity the markers should be rendered on the map.\nThis is interpolated over multiple frames so we have some sort of fade effect",
    "lineNumber": 136,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2576,
    "kind": "member",
    "name": "currentCompassOpacity",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#currentCompassOpacity",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2577,
    "kind": "member",
    "name": "compassBuffer",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#compassBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "type": {
      "types": [
        "{\"canvas\": *, \"context\": *}"
      ]
    }
  },
  {
    "__docId__": 2578,
    "kind": "member",
    "name": "cachedKeyToCanvas",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#cachedKeyToCanvas",
    "access": "public",
    "description": "Stores a cache from a shape short key to its canvas representation",
    "lineNumber": 150,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 2579,
    "kind": "member",
    "name": "cachedTextWidths",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#cachedTextWidths",
    "access": "public",
    "description": "Store cached text widths",
    "lineNumber": 156,
    "type": {
      "nullable": null,
      "types": [
        "Object<string, number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2580,
    "kind": "method",
    "name": "getTextWidth",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#getTextWidth",
    "access": "public",
    "description": "Returns how long a text will be rendered",
    "lineNumber": 167,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2581,
    "kind": "method",
    "name": "getTextScale",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#getTextScale",
    "access": "public",
    "description": "Returns how big the text should be rendered",
    "lineNumber": 179,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2582,
    "kind": "method",
    "name": "getWaypointUiScale",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#getWaypointUiScale",
    "access": "public",
    "description": "Returns the scale for rendering waypoints",
    "lineNumber": 186,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2583,
    "kind": "method",
    "name": "rerenderWaypointList",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#rerenderWaypointList",
    "access": "public",
    "description": "Re-renders the waypoint list to account for changes",
    "lineNumber": 193,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2584,
    "kind": "method",
    "name": "moveToWaypoint",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#moveToWaypoint",
    "access": "public",
    "description": "Moves the camera to a given waypoint",
    "lineNumber": 244,
    "params": [
      {
        "nullable": null,
        "types": [
          "Waypoint"
        ],
        "spread": false,
        "optional": false,
        "name": "waypoint",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2585,
    "kind": "method",
    "name": "deleteWaypoint",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#deleteWaypoint",
    "access": "public",
    "description": "Deletes a waypoint from the list",
    "lineNumber": 254,
    "params": [
      {
        "nullable": null,
        "types": [
          "Waypoint"
        ],
        "spread": false,
        "optional": false,
        "name": "waypoint",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2586,
    "kind": "method",
    "name": "getWaypointCanvas",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#getWaypointCanvas",
    "access": "public",
    "description": "Gets the canvas for a given waypoint",
    "lineNumber": 264,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{HTMLCanvasElement}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Waypoint"
        ],
        "spread": false,
        "optional": false,
        "name": "waypoint",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2587,
    "kind": "method",
    "name": "requestSaveMarker",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#requestSaveMarker",
    "access": "public",
    "description": "Requests to save a marker at the current camera position. If worldPos is set,\nuses that position instead.",
    "lineNumber": 283,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.worldPos",
        "description": "Override the world pos, otherwise it is the camera position"
      },
      {
        "nullable": null,
        "types": [
          "Waypoint="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.waypoint",
        "description": "Waypoint to be edited. If omitted, create new"
      }
    ],
    "return": null
  },
  {
    "__docId__": 2588,
    "kind": "method",
    "name": "addWaypoint",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#addWaypoint",
    "access": "public",
    "description": "Adds a new waypoint at the given location with the given label",
    "lineNumber": 339,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "label",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2589,
    "kind": "method",
    "name": "renameWaypoint",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#renameWaypoint",
    "access": "public",
    "description": "Renames a waypoint with the given label",
    "lineNumber": 364,
    "params": [
      {
        "nullable": null,
        "types": [
          "Waypoint"
        ],
        "spread": false,
        "optional": false,
        "name": "waypoint",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "label",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2590,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#update",
    "access": "public",
    "description": "Called every frame to update stuff",
    "lineNumber": 382,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2591,
    "kind": "method",
    "name": "sortWaypoints",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#sortWaypoints",
    "access": "public",
    "description": "Sort waypoints by name",
    "lineNumber": 391,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2592,
    "kind": "method",
    "name": "getWaypointLabel",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#getWaypointLabel",
    "access": "public",
    "description": "Returns the label for a given waypoint",
    "lineNumber": 410,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Waypoint"
        ],
        "spread": false,
        "optional": false,
        "name": "waypoint",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2593,
    "kind": "method",
    "name": "isWaypointDeletable",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#isWaypointDeletable",
    "access": "public",
    "description": "Returns if a waypoint is deletable",
    "lineNumber": 419,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Waypoint"
        ],
        "spread": false,
        "optional": false,
        "name": "waypoint",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2594,
    "kind": "method",
    "name": "getWaypointScreenParams",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#getWaypointScreenParams",
    "access": "public",
    "description": "Returns the screen space bounds of the given waypoint or null\nif it couldn't be determined. Also returns wheter its a shape or not",
    "lineNumber": 433,
    "params": [
      {
        "nullable": null,
        "types": [
          "Waypoint"
        ],
        "spread": false,
        "optional": false,
        "name": "waypoint",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{\n  screenBounds: Rectangle\n  item: BaseItem|null,\n  text: string\n}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2595,
    "kind": "method",
    "name": "findCurrentIntersectedWaypoint",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#findCurrentIntersectedWaypoint",
    "access": "public",
    "description": "Finds the currently intersected waypoint on the map overview under\nthe cursor.",
    "lineNumber": 474,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Waypoint | null}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Waypoint ",
        " null"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 2596,
    "kind": "method",
    "name": "onMouseDown",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#onMouseDown",
    "access": "public",
    "description": "Mouse-Down handler",
    "lineNumber": 494,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumMouseButton"
        ],
        "spread": false,
        "optional": false,
        "name": "button",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2597,
    "kind": "method",
    "name": "rerenderWaypointsCompass",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#rerenderWaypointsCompass",
    "access": "public",
    "description": "Rerenders the compass",
    "lineNumber": 525,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2599,
    "kind": "method",
    "name": "drawOverlays",
    "memberof": "js/game/hud/parts/waypoints.js~HUDWaypoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/waypoints.js~HUDWaypoints#drawOverlays",
    "access": "public",
    "description": "Draws the waypoints on the map",
    "lineNumber": 565,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2601,
    "kind": "file",
    "name": "js/game/hud/parts/wires_overlay.js",
    "content": "import { makeOffscreenBuffer } from \"../../../core/buffer_utils\";\r\nimport { globalConfig } from \"../../../core/config\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { Loader } from \"../../../core/loader\";\r\nimport { lerp } from \"../../../core/utils\";\r\nimport { SOUNDS } from \"../../../platform/sound\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { enumHubGoalRewards } from \"../../tutorial_goals\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\n\r\nconst copy = require(\"clipboard-copy\");\r\nconst wiresBackgroundDpi = 4;\r\n\r\nexport class HUDWiresOverlay extends BaseHUDPart {\r\n    createElements(parent) {}\r\n\r\n    initialize() {\r\n        // Probably not the best location, but the one which makes most sense\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.ingame.switchLayers).add(this.switchLayers, this);\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.placement.copyWireValue).add(this.copyWireValue, this);\r\n\r\n        this.generateTilePattern();\r\n\r\n        this.currentAlpha = 0.0;\r\n    }\r\n\r\n    /**\r\n     * Switches between layers\r\n     */\r\n    switchLayers() {\r\n        if (this.root.currentLayer === \"regular\") {\r\n            if (\r\n                this.root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_wires_painter_and_levers) ||\r\n                (G_IS_DEV && globalConfig.debug.allBuildingsUnlocked)\r\n            ) {\r\n                this.root.currentLayer = \"wires\";\r\n            }\r\n        } else if (\r\n            shapezAPI.ingame.layers.length > 0 &&\r\n            this.root.currentLayer === shapezAPI.ingame.layers[shapezAPI.ingame.layers.length - 1]\r\n        ) {\r\n            this.root.currentLayer = \"regular\";\r\n        } else if (this.root.currentLayer === \"wires\") {\r\n            if (shapezAPI.ingame.layers.length > 0) {\r\n                this.root.currentLayer = shapezAPI.ingame.layers[0];\r\n            } else {\r\n                this.root.currentLayer = \"regular\";\r\n            }\r\n        } else if (!(shapezAPI.ingame.layers.indexOf(this.root.currentLayer) < 0)) {\r\n            const layer =\r\n                shapezAPI.ingame.layers[shapezAPI.ingame.layers.indexOf(this.root.currentLayer) + 1];\r\n            if (this.root.hubGoals.isRewardUnlocked(\"layers_\" + layer)) this.root.currentLayer = layer;\r\n        }\r\n        this.root.signals.editModeChanged.dispatch(this.root.currentLayer);\r\n    }\r\n\r\n    /**\r\n     * Generates the background pattern for the wires overlay\r\n     */\r\n    generateTilePattern() {\r\n        const overlayTile = Loader.getSprite(\"sprites/wires/overlay_tile.png\");\r\n        const dims = globalConfig.tileSize * wiresBackgroundDpi;\r\n        const [canvas, context] = makeOffscreenBuffer(dims, dims, {\r\n            smooth: false,\r\n            reusable: false,\r\n            label: \"wires-tile-pattern\",\r\n        });\r\n        context.clearRect(0, 0, dims, dims);\r\n        overlayTile.draw(context, 0, 0, dims, dims);\r\n        this.tilePatternCanvas = canvas;\r\n    }\r\n\r\n    update() {\r\n        const desiredAlpha = this.root.currentLayer === \"wires\" ? 1.0 : 0.0;\r\n\r\n        // On low performance, skip the fade\r\n        if (this.root.entityMgr.entities.length > 5000 || this.root.dynamicTickrate.averageFps < 50) {\r\n            this.currentAlpha = desiredAlpha;\r\n        } else {\r\n            this.currentAlpha = lerp(this.currentAlpha, desiredAlpha, 0.12);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Copies the wires value below the cursor\r\n     */\r\n    copyWireValue() {\r\n        if (this.root.currentLayer !== \"wires\") {\r\n            return;\r\n        }\r\n\r\n        const mousePos = this.root.app.mousePosition;\r\n        if (!mousePos) {\r\n            return;\r\n        }\r\n\r\n        const tile = this.root.camera.screenToWorld(mousePos).toTileSpace();\r\n        const contents = this.root.map.getLayerContentXY(tile.x, tile.y, \"wires\");\r\n        if (!contents) {\r\n            return;\r\n        }\r\n\r\n        let value = null;\r\n        if (contents.components.Wire) {\r\n            const network = contents.components.Wire.linkedNetwork;\r\n            if (network && network.hasValue()) {\r\n                value = network.currentValue;\r\n            }\r\n        }\r\n\r\n        if (contents.components.ConstantSignal) {\r\n            value = contents.components.ConstantSignal.signal;\r\n        }\r\n\r\n        if (value) {\r\n            copy(value.getAsCopyableKey());\r\n            this.root.soundProxy.playUi(SOUNDS.copy);\r\n        } else {\r\n            copy(\"\");\r\n            this.root.soundProxy.playUiError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        if (this.currentAlpha < 0.02) {\r\n            return;\r\n        }\r\n\r\n        const hasTileGrid = !this.root.app.settings.getAllSettings().disableTileGrid;\r\n        if (hasTileGrid && !this.cachedPatternBackground) {\r\n            this.cachedPatternBackground = parameters.context.createPattern(this.tilePatternCanvas, \"repeat\");\r\n        }\r\n\r\n        const bounds = parameters.visibleRect;\r\n\r\n        parameters.context.globalAlpha = this.currentAlpha;\r\n\r\n        const scaleFactor = 1 / wiresBackgroundDpi;\r\n        parameters.context.globalCompositeOperation = \"overlay\";\r\n        parameters.context.fillStyle = \"rgba(50, 200, 150, 1)\";\r\n        parameters.context.fillRect(bounds.x, bounds.y, bounds.w, bounds.h);\r\n        parameters.context.globalCompositeOperation = \"source-over\";\r\n\r\n        parameters.context.scale(scaleFactor, scaleFactor);\r\n        parameters.context.fillStyle = hasTileGrid ?\r\n            this.cachedPatternBackground :\r\n            \"rgba(78, 137, 125, 0.75)\";\r\n        parameters.context.fillRect(\r\n            bounds.x / scaleFactor,\r\n            bounds.y / scaleFactor,\r\n            bounds.w / scaleFactor,\r\n            bounds.h / scaleFactor\r\n        );\r\n        parameters.context.scale(1 / scaleFactor, 1 / scaleFactor);\r\n\r\n        parameters.context.globalAlpha = 1;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/wires_overlay.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2602,
    "kind": "variable",
    "name": "copy",
    "memberof": "js/game/hud/parts/wires_overlay.js",
    "static": true,
    "longname": "js/game/hud/parts/wires_overlay.js~copy",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/wires_overlay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2603,
    "kind": "variable",
    "name": "wiresBackgroundDpi",
    "memberof": "js/game/hud/parts/wires_overlay.js",
    "static": true,
    "longname": "js/game/hud/parts/wires_overlay.js~wiresBackgroundDpi",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/parts/wires_overlay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2604,
    "kind": "class",
    "name": "HUDWiresOverlay",
    "memberof": "js/game/hud/parts/wires_overlay.js",
    "static": true,
    "longname": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/wires_overlay.js",
    "importStyle": "{HUDWiresOverlay}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2605,
    "kind": "method",
    "name": "createElements",
    "memberof": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay#createElements",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2606,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2607,
    "kind": "member",
    "name": "currentAlpha",
    "memberof": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay",
    "static": false,
    "longname": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay#currentAlpha",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2608,
    "kind": "method",
    "name": "switchLayers",
    "memberof": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay#switchLayers",
    "access": "public",
    "description": "Switches between layers",
    "lineNumber": 30,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2609,
    "kind": "method",
    "name": "generateTilePattern",
    "memberof": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay#generateTilePattern",
    "access": "public",
    "description": "Generates the background pattern for the wires overlay",
    "lineNumber": 60,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2610,
    "kind": "member",
    "name": "tilePatternCanvas",
    "memberof": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay",
    "static": false,
    "longname": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay#tilePatternCanvas",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2611,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay#update",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2614,
    "kind": "method",
    "name": "copyWireValue",
    "memberof": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay#copyWireValue",
    "access": "public",
    "description": "Copies the wires value below the cursor",
    "lineNumber": 87,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2615,
    "kind": "method",
    "name": "draw",
    "memberof": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay#draw",
    "access": "public",
    "description": "",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2616,
    "kind": "member",
    "name": "cachedPatternBackground",
    "memberof": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay",
    "static": false,
    "longname": "js/game/hud/parts/wires_overlay.js~HUDWiresOverlay#cachedPatternBackground",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2617,
    "kind": "file",
    "name": "js/game/hud/parts/wires_toolbar.js",
    "content": "import { HUDBaseToolbar } from \"./base_toolbar\";\r\nimport { MetaWireBuilding } from \"../../buildings/wire\";\r\nimport { MetaConstantSignalBuilding } from \"../../buildings/constant_signal\";\r\nimport { MetaLogicGateBuilding } from \"../../buildings/logic_gate\";\r\nimport { MetaLeverBuilding } from \"../../buildings/lever\";\r\nimport { MetaWireTunnelBuilding } from \"../../buildings/wire_tunnel\";\r\nimport { MetaVirtualProcessorBuilding } from \"../../buildings/virtual_processor\";\r\nimport { MetaTransistorBuilding } from \"../../buildings/transistor\";\r\nimport { MetaAnalyzerBuilding } from \"../../buildings/analyzer\";\r\nimport { MetaComparatorBuilding } from \"../../buildings/comparator\";\r\nimport { MetaReaderBuilding } from \"../../buildings/reader\";\r\nimport { MetaFilterBuilding } from \"../../buildings/filter\";\r\nimport { MetaDisplayBuilding } from \"../../buildings/display\";\r\nimport { MetaStorageBuilding } from \"../../buildings/storage\";\r\n\r\nexport class HUDWiresToolbar extends HUDBaseToolbar {\r\n    constructor(root) {\r\n        super(root, {\r\n            primaryBuildings: HUDWiresToolbar.bar.primaryBuildings,\r\n            secondaryBuildings: HUDWiresToolbar.bar.secondaryBuildings,\r\n            visibilityCondition: () =>\r\n                !this.root.camera.getIsMapOverlayActive() && this.root.currentLayer === \"wires\",\r\n            htmlElementId: HUDWiresToolbar.bar.htmlElementId,\r\n            layer: \"wires\",\r\n        });\r\n    }\r\n}\r\n\r\nHUDWiresToolbar.bar = {\r\n    primaryBuildings: [\r\n        MetaWireBuilding,\r\n        MetaWireTunnelBuilding,\r\n        MetaConstantSignalBuilding,\r\n        MetaLogicGateBuilding,\r\n        MetaVirtualProcessorBuilding,\r\n        MetaAnalyzerBuilding,\r\n        MetaComparatorBuilding,\r\n        MetaTransistorBuilding,\r\n    ],\r\n    secondaryBuildings: [\r\n        MetaStorageBuilding,\r\n        MetaReaderBuilding,\r\n        MetaLeverBuilding,\r\n        MetaFilterBuilding,\r\n        MetaDisplayBuilding,\r\n    ],\r\n    htmlElementId: \"ingame_HUD_wires_toolbar\",\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/wires_toolbar.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2618,
    "kind": "class",
    "name": "HUDWiresToolbar",
    "memberof": "js/game/hud/parts/wires_toolbar.js",
    "static": true,
    "longname": "js/game/hud/parts/wires_toolbar.js~HUDWiresToolbar",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/wires_toolbar.js",
    "importStyle": "{HUDWiresToolbar}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/parts/base_toolbar.js~HUDBaseToolbar"
    ]
  },
  {
    "__docId__": 2619,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/hud/parts/wires_toolbar.js~HUDWiresToolbar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/wires_toolbar.js~HUDWiresToolbar#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 2620,
    "kind": "file",
    "name": "js/game/hud/parts/wire_info.js",
    "content": "import { globalConfig } from \"../../../core/config\";\r\nimport { MapChunkView } from \"../../map_chunk_view\";\r\nimport { WireNetwork } from \"../../systems/wire\";\r\nimport { THEME } from \"../../theme\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { Loader } from \"../../../core/loader\";\r\n\r\nexport class HUDWireInfo extends BaseHUDPart {\r\n    initialize() {\r\n        this.spriteEmpty = Loader.getSprite(\"sprites/wires/network_empty.png\");\r\n        this.spriteConflict = Loader.getSprite(\"sprites/wires/network_conflict.png\");\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {import(\"../../../core/draw_utils\").DrawParameters} parameters\r\n     */\r\n    drawOverlays(parameters) {\r\n        if (this.root.currentLayer !== \"wires\") {\r\n            // Not in the wires layer\r\n            return;\r\n        }\r\n\r\n        const mousePos = this.root.app.mousePosition;\r\n        if (!mousePos) {\r\n            // No mouse\r\n            return;\r\n        }\r\n\r\n        const worldPos = this.root.camera.screenToWorld(mousePos);\r\n        const tile = worldPos.toTileSpace();\r\n        const entity = this.root.map.getLayerContentXY(tile.x, tile.y, \"wires\");\r\n\r\n        if (!entity) {\r\n            // No entity\r\n            return;\r\n        }\r\n\r\n        if (!this.root.camera.getIsMapOverlayActive() &&\r\n            !this.root.logic.getIsEntityIntersectedWithMatrix(entity, worldPos)\r\n        ) {\r\n            // Detailed intersection check\r\n            return;\r\n        }\r\n\r\n        const networks = this.root.logic.getEntityWireNetworks(entity, tile);\r\n        if (networks === null) {\r\n            // This entity will never be able to be connected\r\n            return;\r\n        }\r\n\r\n        if (networks.length === 0) {\r\n            // No network at all\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < networks.length; ++i) {\r\n            const network = networks[i];\r\n            this.drawHighlightedNetwork(parameters, network);\r\n        }\r\n\r\n        if (networks.length === 1) {\r\n            const network = networks[0];\r\n\r\n            if (network.valueConflict) {\r\n                this.spriteConflict.draw(parameters.context, mousePos.x + 15, mousePos.y - 10, 60, 60);\r\n            } else if (!network.currentValue) {\r\n                this.spriteEmpty.draw(parameters.context, mousePos.x + 15, mousePos.y - 10, 60, 60);\r\n            } else {\r\n                network.currentValue.drawItemCenteredClipped(\r\n                    mousePos.x + 40,\r\n                    mousePos.y + 10,\r\n                    parameters,\r\n                    60\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {import(\"../../../core/draw_utils\").DrawParameters} parameters\r\n     * @param {WireNetwork} network\r\n     */\r\n    drawHighlightedNetwork(parameters, network) {\r\n        parameters.context.globalAlpha = 0.5;\r\n\r\n        for (let i = 0; i < network.wires.length; ++i) {\r\n            const wire = network.wires[i];\r\n            const staticComp = wire.components.StaticMapEntity;\r\n            const screenTile = this.root.camera.worldToScreen(staticComp.origin.toWorldSpace());\r\n            MapChunkView.drawSingleOverviewTile({\r\n                context: parameters.context,\r\n                x: screenTile.x,\r\n                y: screenTile.y,\r\n                entity: wire,\r\n                tileSizePixels: globalConfig.tileSize * this.root.camera.zoomLevel,\r\n                overrideColor: THEME.map.wires.highlightColor,\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < network.tunnels.length; ++i) {\r\n            const tunnel = network.tunnels[i];\r\n            const staticComp = tunnel.components.StaticMapEntity;\r\n            const screenTile = this.root.camera.worldToScreen(staticComp.origin.toWorldSpace());\r\n            MapChunkView.drawSingleOverviewTile({\r\n                context: parameters.context,\r\n                x: screenTile.x,\r\n                y: screenTile.y,\r\n                entity: tunnel,\r\n                tileSizePixels: globalConfig.tileSize * this.root.camera.zoomLevel,\r\n                overrideColor: THEME.map.wires.highlightColor,\r\n            });\r\n        }\r\n        parameters.context.globalAlpha = 1;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/parts/wire_info.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2621,
    "kind": "class",
    "name": "HUDWireInfo",
    "memberof": "js/game/hud/parts/wire_info.js",
    "static": true,
    "longname": "js/game/hud/parts/wire_info.js~HUDWireInfo",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/parts/wire_info.js",
    "importStyle": "{HUDWireInfo}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/hud/base_hud_part.js~BaseHUDPart"
    ]
  },
  {
    "__docId__": 2622,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/game/hud/parts/wire_info.js~HUDWireInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/wire_info.js~HUDWireInfo#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2623,
    "kind": "member",
    "name": "spriteEmpty",
    "memberof": "js/game/hud/parts/wire_info.js~HUDWireInfo",
    "static": false,
    "longname": "js/game/hud/parts/wire_info.js~HUDWireInfo#spriteEmpty",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2624,
    "kind": "member",
    "name": "spriteConflict",
    "memberof": "js/game/hud/parts/wire_info.js~HUDWireInfo",
    "static": false,
    "longname": "js/game/hud/parts/wire_info.js~HUDWireInfo#spriteConflict",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2625,
    "kind": "method",
    "name": "drawOverlays",
    "memberof": "js/game/hud/parts/wire_info.js~HUDWireInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/wire_info.js~HUDWireInfo#drawOverlays",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../../../core/draw_utils\").DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2626,
    "kind": "method",
    "name": "drawHighlightedNetwork",
    "memberof": "js/game/hud/parts/wire_info.js~HUDWireInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/parts/wire_info.js~HUDWireInfo#drawHighlightedNetwork",
    "access": "public",
    "description": "",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../../../core/draw_utils\").DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "WireNetwork"
        ],
        "spread": false,
        "optional": false,
        "name": "network",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2627,
    "kind": "file",
    "name": "js/game/hud/trailer_maker.js",
    "content": "import { GameRoot } from \"../root\";\r\nimport { globalConfig } from \"../../core/config\";\r\nimport { Vector, mixVector } from \"../../core/vector\";\r\nimport { lerp } from \"../../core/utils\";\r\n\r\n/* dev:start */\r\nimport trailerPoints from \"./trailer_points\";\r\n\r\nconst tickrate = 1 / 165;\r\n\r\nexport class TrailerMaker {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n\r\n        this.markers = [];\r\n        this.playbackMarkers = null;\r\n        this.currentPlaybackOrigin = new Vector();\r\n        this.currentPlaybackZoom = 3;\r\n\r\n        window.addEventListener(\"keydown\", ev => {\r\n            if (ev.key === \"j\") {\r\n                console.log(\"Record\");\r\n                this.markers.push({\r\n                    pos: this.root.camera.center.copy(),\r\n                    zoom: this.root.camera.zoomLevel,\r\n                    time: 1,\r\n                    wait: 0,\r\n                });\r\n            } else if (ev.key === \"k\") {\r\n                console.log(\"Export\");\r\n                const json = JSON.stringify(this.markers);\r\n                const handle = window.open(\"about:blank\");\r\n                handle.document.write(json);\r\n            } else if (ev.key === \"u\") {\r\n                if (this.playbackMarkers && this.playbackMarkers.length > 0) {\r\n                    this.playbackMarkers = [];\r\n                    return;\r\n                }\r\n                console.log(\"Playback\");\r\n                this.playbackMarkers = trailerPoints.map(p => Object.assign({}, p));\r\n                this.playbackMarkers.unshift(this.playbackMarkers[0]);\r\n                this.currentPlaybackOrigin = Vector.fromSerializedObject(this.playbackMarkers[0].pos);\r\n\r\n                this.currentPlaybackZoom = this.playbackMarkers[0].zoom;\r\n                this.root.camera.center = this.currentPlaybackOrigin.copy();\r\n                this.root.camera.zoomLevel = this.currentPlaybackZoom;\r\n                console.log(\"STart at\", this.currentPlaybackOrigin);\r\n\r\n                // this.root.entityMgr.getAllWithComponent(MinerComponent).forEach(miner => {\r\n                //     miner.components.Miner.itemChainBuffer = [];\r\n                //     miner.components.Miner.lastMiningTime = this.root.time.now() + 5;\r\n                //     miner.components.ItemEjector.slots.forEach(slot => (slot.item = null));\r\n                // });\r\n\r\n                // this.root.logic.tryPlaceBuilding({\r\n                //     origin: new Vector(-428, -15),\r\n                //     building: gMetaBuildingRegistry.findByClass(MetaBeltBaseBuilding),\r\n                //     originalRotation: 0,\r\n                //     rotation: 0,\r\n                //     variant: \"default\",\r\n                //     rotationVariant: 0,\r\n                // });\r\n\r\n                // this.root.logic.tryPlaceBuilding({\r\n                //     origin: new Vector(-427, -15),\r\n                //     building: gMetaBuildingRegistry.findByClass(MetaBeltBaseBuilding),\r\n                //     originalRotation: 0,\r\n                //     rotation: 0,\r\n                //     variant: \"default\",\r\n                //     rotationVariant: 0,\r\n                // });\r\n            }\r\n        });\r\n    }\r\n\r\n    update() {\r\n        if (this.playbackMarkers && this.playbackMarkers.length > 0) {\r\n            const nextMarker = this.playbackMarkers[0];\r\n\r\n            if (!nextMarker.startTime) {\r\n                console.log(\"Starting to approach\", nextMarker.pos);\r\n                nextMarker.startTime = performance.now() / 1000.0;\r\n            }\r\n\r\n            const speed =\r\n                globalConfig.tileSize *\r\n                globalConfig.beltSpeedItemsPerSecond *\r\n                globalConfig.itemSpacingOnBelts;\r\n            // let time =\r\n            //     this.currentPlaybackOrigin.distance(Vector.fromSerializedObject(nextMarker.pos)) / speed;\r\n            const time = nextMarker.time;\r\n\r\n            const progress = (performance.now() / 1000.0 - nextMarker.startTime) / time;\r\n\r\n            if (progress > 1.0) {\r\n                if (nextMarker.wait > 0) {\r\n                    nextMarker.wait -= tickrate;\r\n                } else {\r\n                    console.log(\"Approached\");\r\n                    this.currentPlaybackOrigin = this.root.camera.center.copy();\r\n                    this.currentPlaybackZoom = this.root.camera.zoomLevel;\r\n                    this.playbackMarkers.shift();\r\n                }\r\n                return;\r\n            }\r\n\r\n            const targetPos = Vector.fromSerializedObject(nextMarker.pos);\r\n            const targetZoom = nextMarker.zoom;\r\n\r\n            const pos = mixVector(this.currentPlaybackOrigin, targetPos, progress);\r\n            const zoom = lerp(this.currentPlaybackZoom, targetZoom, progress);\r\n            this.root.camera.zoomLevel = zoom;\r\n            this.root.camera.center = pos;\r\n        }\r\n    }\r\n}\r\n\r\n/* dev:end */\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/trailer_maker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2628,
    "kind": "variable",
    "name": "tickrate",
    "memberof": "js/game/hud/trailer_maker.js",
    "static": true,
    "longname": "js/game/hud/trailer_maker.js~tickrate",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/hud/trailer_maker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2629,
    "kind": "class",
    "name": "TrailerMaker",
    "memberof": "js/game/hud/trailer_maker.js",
    "static": true,
    "longname": "js/game/hud/trailer_maker.js~TrailerMaker",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/hud/trailer_maker.js",
    "importStyle": "{TrailerMaker}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 2630,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/hud/trailer_maker.js~TrailerMaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/trailer_maker.js~TrailerMaker#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2631,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/hud/trailer_maker.js~TrailerMaker",
    "static": false,
    "longname": "js/game/hud/trailer_maker.js~TrailerMaker#root",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2632,
    "kind": "member",
    "name": "markers",
    "memberof": "js/game/hud/trailer_maker.js~TrailerMaker",
    "static": false,
    "longname": "js/game/hud/trailer_maker.js~TrailerMaker#markers",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 2633,
    "kind": "member",
    "name": "playbackMarkers",
    "memberof": "js/game/hud/trailer_maker.js~TrailerMaker",
    "static": false,
    "longname": "js/game/hud/trailer_maker.js~TrailerMaker#playbackMarkers",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2634,
    "kind": "member",
    "name": "currentPlaybackOrigin",
    "memberof": "js/game/hud/trailer_maker.js~TrailerMaker",
    "static": false,
    "longname": "js/game/hud/trailer_maker.js~TrailerMaker#currentPlaybackOrigin",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2635,
    "kind": "member",
    "name": "currentPlaybackZoom",
    "memberof": "js/game/hud/trailer_maker.js~TrailerMaker",
    "static": false,
    "longname": "js/game/hud/trailer_maker.js~TrailerMaker#currentPlaybackZoom",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2640,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/hud/trailer_maker.js~TrailerMaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/hud/trailer_maker.js~TrailerMaker#update",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2643,
    "kind": "file",
    "name": "js/game/hud/trailer_points.js",
    "content": "export default [\r\n    // // initial\r\n    // { pos: { x: -13665, y: -434 }, zoom: 6, time: 1, wait: 8 },\r\n\r\n    // // Go up to first curve\r\n    // { pos: { x: -13665, y: -580 }, zoom: 6, time: 1, wait: 0 },\r\n\r\n    // // To balancers\r\n    // { pos: { x: -13450, y: -580 }, zoom: 6, time: 1, wait: 0 },\r\n\r\n    // // To cutters\r\n    // { pos: { x: -13350, y: -580 }, zoom: 3, time: 1, wait: 2 },\r\n\r\n    // // To initial cutters\r\n    // { pos: { x: -12713, y: -580 }, zoom: 3, time: 1, wait: 2.5 },\r\n\r\n    // // To rotaters 3,2,1,0\r\n    // { pos: { x: -12402, y: -580 }, zoom: 3, time: 1, wait: 0 },\r\n\r\n    // // Zoom in further to stackers\r\n    // { pos: { x: -12045, y: -580 }, zoom: 6, time: 1, wait: 4 },\r\n\r\n    // // Focus on painter\r\n    // { pos: { x: -11700, y: -660 }, zoom: 6, time: 1, wait: 3.5 },\r\n\r\n    // // Zoom in to mixers\r\n    // { pos: { x: -11463, y: -520 }, zoom: 6, time: 1, wait: 3.8 },\r\n\r\n    // // Focus to second painter\r\n    // { pos: { x: -11290, y: -610 }, zoom: 6, time: 1, wait: 1 },\r\n\r\n    // // Second stacker\r\n    // { pos: { x: -11022, y: -610 }, zoom: 6, time: 1, wait: 0 },\r\n\r\n    // // Go right until first curve\r\n    // { pos: { x: -10859, y: -650 }, zoom: 6, time: 1, wait: 0 },\r\n\r\n    // // Go up to stacker\r\n    // { pos: { x: -10859, y: -1120 }, zoom: 6, time: 1, wait: 0 },\r\n\r\n    // // Go further up\r\n    // { pos: { x: -10859, y: -1260 }, zoom: 6, time: 1, wait: 0 },\r\n\r\n    // // Go left\r\n    // { pos: { x: -11235, y: -1260 }, zoom: 6, time: 1, wait: 1 },\r\n\r\n    // OWO Savegames\r\n    // { pos: { x: -4939.356940622392, y: 71.76431237675517 }, zoom: 5.06640625, time: 1, wait: 1 },\r\n    // { pos: { x: -4275.441641063683, y: 26.3603982512193 }, zoom: 0.45, time: 32, wait: 0 },\r\n\r\n    // Eve\r\n\r\n    //     { pos: { x: -277.22574043554704, y: 2151.1873666983033 }, zoom: 3.1, time: 0, wait: 2 },\r\n    //     { pos: { x: -43.64015426578788, y: 1577.5520572108883 }, zoom: 1.4, time: 16, wait: 0 },\r\n    //     { pos: { x: 133.22735227708466, y: 957.2211413984563 }, zoom: 1.4, time: 8, wait: 0 },\r\n    //     { pos: { x: 480.20365842184424, y: -313.5485044644265 }, zoom: 1.4, time: 8, wait: 0 },\r\n    //     {\r\n    //         pos: { x: 452.56528647804333, y: -1341.6422407571154 },\r\n    //         zoom: 1.4,\r\n    //         time: 8,\r\n    //         wait: 0,\r\n    //     },\r\n\r\n    // D\r\n    { pos: { x: -7506.562977380196, y: 1777.6671860680613 }, zoom: 2.3764616075569833, time: 0, wait: 1 },\r\n    { pos: { x: -7506.562977380196, y: 1777.6671860680613 }, zoom: 2.3764616075569833, time: 1, wait: 0 },\r\n    { pos: { x: -6592.471896026158, y: 1841.974816890533 }, zoom: 1.4594444847409322, time: 24, wait: 0 },\r\n    { pos: { x: -7274.384090342281, y: 729.3783696229457 }, zoom: 1.4594444847409322, time: 24, wait: 0 },\r\n    { pos: { x: -6048.006011617565, y: 764.6297752493597 }, zoom: 1.1853320776932916, time: 24, wait: 0 },\r\n    {\r\n        pos: { x: -3674.7204249483366, y: 658.6366426023269 },\r\n        zoom: 0.25332031250000003,\r\n        time: 24,\r\n        wait: 0,\r\n    },\r\n    {\r\n        pos: { x: -1213.9916574596728, y: -1387.1496772071198 },\r\n        zoom: 0.443058809814453,\r\n        time: 24,\r\n        wait: 0,\r\n    },\r\n    {\r\n        pos: { x: 1722.5210292405573, y: -2457.2072755163636 },\r\n        zoom: 0.6313986260996299,\r\n        time: 24,\r\n        wait: 0,\r\n    },\r\n    { pos: { x: 3533.263459106946, y: -1806.6756300805193 }, zoom: 1.551908182277415, time: 24, wait: 0 },\r\n];\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/hud/trailer_points.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2644,
    "kind": "file",
    "name": "js/game/items/boolean_item.js",
    "content": "import { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { globalConfig } from \"../../core/config\";\r\n\r\nexport class BooleanItem extends BaseItem {\r\n    static getId() {\r\n        return \"boolean_item\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return types.uint;\r\n    }\r\n\r\n    serialize() {\r\n        return this.value;\r\n    }\r\n\r\n    deserialize(data) {\r\n        this.value = data;\r\n    }\r\n\r\n    /** @returns {\"boolean\"} **/\r\n    getItemType() {\r\n        return \"boolean\";\r\n    }\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    getAsCopyableKey() {\r\n        return this.value ? \"1\" : \"0\";\r\n    }\r\n\r\n    /**\r\n     * @param {number} value\r\n     */\r\n    constructor(value) {\r\n        super();\r\n        this.value = value ? 1 : 0;\r\n    }\r\n\r\n    /**\r\n     * @param {BaseItem} other\r\n     */\r\n    equalsImpl(other) {\r\n        return this.value === /** @type {BooleanItem} */ (other).value;\r\n    }\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} diameter\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawItemCenteredImpl(x, y, parameters, diameter = globalConfig.defaultItemDiameter) {\r\n        let sprite;\r\n        if (this.value) {\r\n            sprite = Loader.getSprite(\"sprites/wires/boolean_true.png\");\r\n        } else {\r\n            sprite = Loader.getSprite(\"sprites/wires/boolean_false.png\");\r\n        }\r\n        sprite.drawCachedCentered(parameters, x, y, diameter);\r\n    }\r\n\r\n    /**\r\n     * Draws the item to a canvas\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} size\r\n     */\r\n    drawFullSizeOnCanvas(context, size) {\r\n        let sprite;\r\n        if (this.value) {\r\n            sprite = Loader.getSprite(\"sprites/wires/boolean_true.png\");\r\n        } else {\r\n            sprite = Loader.getSprite(\"sprites/wires/boolean_false.png\");\r\n        }\r\n        sprite.drawCentered(context, size / 2, size / 2, size);\r\n    }\r\n}\r\n\r\nBooleanItem.resolveSingleton = (root, itemData) => {\r\n    return itemData ? BOOL_TRUE_SINGLETON : BOOL_FALSE_SINGLETON;\r\n};\r\n\r\nexport const BOOL_FALSE_SINGLETON = new BooleanItem(0);\r\nexport const BOOL_TRUE_SINGLETON = new BooleanItem(1);\r\n\r\n/**\r\n * Returns whether the item is Boolean and TRUE\r\n * @param {BaseItem} item\r\n * @returns {boolean}\r\n */\r\nexport function isTrueItem(item) {\r\n    return item && item.getItemType() === \"boolean\" && !!( /** @type {BooleanItem} */ (item).value);\r\n}\r\n\r\n/**\r\n * Returns whether the item is truthy\r\n * @param {BaseItem} item\r\n * @returns {boolean}\r\n */\r\nexport function isTruthyItem(item) {\r\n    if (!item) {\r\n        return false;\r\n    }\r\n\r\n    if (item.getItemType() === \"boolean\") {\r\n        return !!( /** @type {BooleanItem} */ (item).value);\r\n    }\r\n\r\n    return true;\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/items/boolean_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2645,
    "kind": "class",
    "name": "BooleanItem",
    "memberof": "js/game/items/boolean_item.js",
    "static": true,
    "longname": "js/game/items/boolean_item.js~BooleanItem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/items/boolean_item.js",
    "importStyle": "{BooleanItem}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/base_item.js~BaseItem"
    ]
  },
  {
    "__docId__": 2646,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/items/boolean_item.js~BooleanItem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/items/boolean_item.js~BooleanItem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2647,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/items/boolean_item.js~BooleanItem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/items/boolean_item.js~BooleanItem.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2648,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/game/items/boolean_item.js~BooleanItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/boolean_item.js~BooleanItem#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2649,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/game/items/boolean_item.js~BooleanItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/boolean_item.js~BooleanItem#deserialize",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2650,
    "kind": "member",
    "name": "value",
    "memberof": "js/game/items/boolean_item.js~BooleanItem",
    "static": false,
    "longname": "js/game/items/boolean_item.js~BooleanItem#value",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2651,
    "kind": "method",
    "name": "getItemType",
    "memberof": "js/game/items/boolean_item.js~BooleanItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/boolean_item.js~BooleanItem#getItemType",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{\"boolean\"} *"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "\"boolean\""
      ],
      "spread": false,
      "description": "*"
    },
    "params": []
  },
  {
    "__docId__": 2652,
    "kind": "method",
    "name": "getAsCopyableKey",
    "memberof": "js/game/items/boolean_item.js~BooleanItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/boolean_item.js~BooleanItem#getAsCopyableKey",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 2653,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/items/boolean_item.js~BooleanItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/boolean_item.js~BooleanItem#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2655,
    "kind": "method",
    "name": "equalsImpl",
    "memberof": "js/game/items/boolean_item.js~BooleanItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/boolean_item.js~BooleanItem#equalsImpl",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2656,
    "kind": "method",
    "name": "drawItemCenteredImpl",
    "memberof": "js/game/items/boolean_item.js~BooleanItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/boolean_item.js~BooleanItem#drawItemCenteredImpl",
    "access": "public",
    "description": "",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "diameter",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2657,
    "kind": "method",
    "name": "drawFullSizeOnCanvas",
    "memberof": "js/game/items/boolean_item.js~BooleanItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/boolean_item.js~BooleanItem#drawFullSizeOnCanvas",
    "access": "public",
    "description": "Draws the item to a canvas",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2658,
    "kind": "variable",
    "name": "BOOL_FALSE_SINGLETON",
    "memberof": "js/game/items/boolean_item.js",
    "static": true,
    "longname": "js/game/items/boolean_item.js~BOOL_FALSE_SINGLETON",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/items/boolean_item.js",
    "importStyle": "{BOOL_FALSE_SINGLETON}",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "js/game/items/boolean_item.js~BooleanItem"
      ]
    }
  },
  {
    "__docId__": 2659,
    "kind": "variable",
    "name": "BOOL_TRUE_SINGLETON",
    "memberof": "js/game/items/boolean_item.js",
    "static": true,
    "longname": "js/game/items/boolean_item.js~BOOL_TRUE_SINGLETON",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/items/boolean_item.js",
    "importStyle": "{BOOL_TRUE_SINGLETON}",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "js/game/items/boolean_item.js~BooleanItem"
      ]
    }
  },
  {
    "__docId__": 2660,
    "kind": "function",
    "name": "isTrueItem",
    "memberof": "js/game/items/boolean_item.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/items/boolean_item.js~isTrueItem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/items/boolean_item.js",
    "importStyle": "{isTrueItem}",
    "description": "Returns whether the item is Boolean and TRUE",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2661,
    "kind": "function",
    "name": "isTruthyItem",
    "memberof": "js/game/items/boolean_item.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/items/boolean_item.js~isTruthyItem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/items/boolean_item.js",
    "importStyle": "{isTruthyItem}",
    "description": "Returns whether the item is truthy",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2662,
    "kind": "file",
    "name": "js/game/items/color_item.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { enumColors } from \"../colors\";\r\nimport { THEME } from \"../theme\";\r\n\r\nexport class ColorItem extends BaseItem {\r\n    static getId() {\r\n        return \"color\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return types.enum(enumColors);\r\n    }\r\n\r\n    serialize() {\r\n        return this.color;\r\n    }\r\n\r\n    deserialize(data) {\r\n        this.color = data;\r\n    }\r\n\r\n    /** @returns {\"color\"} **/\r\n    getItemType() {\r\n        return \"color\";\r\n    }\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    getAsCopyableKey() {\r\n        return this.color;\r\n    }\r\n\r\n    /**\r\n     * @param {BaseItem} other\r\n     */\r\n    equalsImpl(other) {\r\n        return this.color === /** @type {ColorItem} */ (other).color;\r\n    }\r\n\r\n    /**\r\n     * @param {enumColors} color\r\n     */\r\n    constructor(color) {\r\n        super();\r\n        this.color = color;\r\n    }\r\n\r\n    getBackgroundColorAsResource() {\r\n        return THEME.map.resources[this.color];\r\n    }\r\n\r\n    /**\r\n     * Draws the item to a canvas\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} size\r\n     */\r\n    drawFullSizeOnCanvas(context, size) {\r\n        if (!this.cachedSprite) {\r\n            this.cachedSprite = Loader.getSprite(\"sprites/colors/\" + this.color + \".png\");\r\n        }\r\n        this.cachedSprite.drawCentered(context, size / 2, size / 2, size);\r\n    }\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} diameter\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawItemCenteredClipped(x, y, parameters, diameter = globalConfig.defaultItemDiameter) {\r\n        const realDiameter = diameter * 0.6;\r\n        const func = ColorItem.drawingFunctionByColor[this.color];\r\n\r\n        if (func) {\r\n            func(x, y, parameters, realDiameter, this.color);\r\n            return;\r\n        }\r\n\r\n        if (!this.cachedSprite) {\r\n            this.cachedSprite = Loader.getSprite(\"sprites/colors/\" + this.color + \".png\");\r\n        }\r\n        this.cachedSprite.drawCachedCentered(parameters, x, y, realDiameter);\r\n    }\r\n}\r\n\r\nColorItem.drawingFunctionByColor = {};\r\n\r\nColorItem.resolveSingleton = (root, itemData) => {\r\n    return ColorItem.ITEM_SINGLETONS[itemData];\r\n};\r\n\r\n/**\r\n * Singleton instances\r\n * @type {Object<enumColors, ColorItem>}\r\n */\r\nColorItem.ITEM_SINGLETONS = {};\r\n\r\nfor (const color in enumColors) {\r\n    ColorItem.ITEM_SINGLETONS[color] = new ColorItem(color);\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/items/color_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2663,
    "kind": "class",
    "name": "ColorItem",
    "memberof": "js/game/items/color_item.js",
    "static": true,
    "longname": "js/game/items/color_item.js~ColorItem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/items/color_item.js",
    "importStyle": "{ColorItem}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/base_item.js~BaseItem"
    ]
  },
  {
    "__docId__": 2664,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/items/color_item.js~ColorItem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/items/color_item.js~ColorItem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2665,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/items/color_item.js~ColorItem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/items/color_item.js~ColorItem.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2666,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/game/items/color_item.js~ColorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/color_item.js~ColorItem#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2667,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/game/items/color_item.js~ColorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/color_item.js~ColorItem#deserialize",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2668,
    "kind": "member",
    "name": "color",
    "memberof": "js/game/items/color_item.js~ColorItem",
    "static": false,
    "longname": "js/game/items/color_item.js~ColorItem#color",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2669,
    "kind": "method",
    "name": "getItemType",
    "memberof": "js/game/items/color_item.js~ColorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/color_item.js~ColorItem#getItemType",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{\"color\"} *"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "\"color\""
      ],
      "spread": false,
      "description": "*"
    },
    "params": []
  },
  {
    "__docId__": 2670,
    "kind": "method",
    "name": "getAsCopyableKey",
    "memberof": "js/game/items/color_item.js~ColorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/color_item.js~ColorItem#getAsCopyableKey",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 2671,
    "kind": "method",
    "name": "equalsImpl",
    "memberof": "js/game/items/color_item.js~ColorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/color_item.js~ColorItem#equalsImpl",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2672,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/items/color_item.js~ColorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/color_item.js~ColorItem#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "enumColors"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2674,
    "kind": "method",
    "name": "getBackgroundColorAsResource",
    "memberof": "js/game/items/color_item.js~ColorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/color_item.js~ColorItem#getBackgroundColorAsResource",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2675,
    "kind": "method",
    "name": "drawFullSizeOnCanvas",
    "memberof": "js/game/items/color_item.js~ColorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/color_item.js~ColorItem#drawFullSizeOnCanvas",
    "access": "public",
    "description": "Draws the item to a canvas",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2676,
    "kind": "member",
    "name": "cachedSprite",
    "memberof": "js/game/items/color_item.js~ColorItem",
    "static": false,
    "longname": "js/game/items/color_item.js~ColorItem#cachedSprite",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2677,
    "kind": "method",
    "name": "drawItemCenteredClipped",
    "memberof": "js/game/items/color_item.js~ColorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/color_item.js~ColorItem#drawItemCenteredClipped",
    "access": "public",
    "description": "",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "diameter",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2679,
    "kind": "file",
    "name": "js/game/items/shape_item.js",
    "content": "import { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { ShapeDefinition } from \"../shape_definition\";\r\nimport { THEME } from \"../theme\";\r\nimport { globalConfig } from \"../../core/config\";\r\n\r\nexport class ShapeItem extends BaseItem {\r\n    static getId() {\r\n        return \"shape\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return types.string;\r\n    }\r\n\r\n    serialize() {\r\n        return this.definition.getHash();\r\n    }\r\n\r\n    deserialize(data) {\r\n        this.definition = ShapeDefinition.fromShortKey(data);\r\n    }\r\n\r\n    /** @returns {\"shape\"} **/\r\n    getItemType() {\r\n        return \"shape\";\r\n    }\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    getAsCopyableKey() {\r\n        return this.definition.getHash();\r\n    }\r\n\r\n    /**\r\n     * @param {BaseItem} other\r\n     */\r\n    equalsImpl(other) {\r\n        return this.definition.getHash() === /** @type {ShapeItem} */ (other).definition.getHash();\r\n    }\r\n\r\n    /**\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    constructor(definition) {\r\n        super();\r\n\r\n        /**\r\n         * This property must not be modified on runtime, you have to clone the class in order to change the definition\r\n         */\r\n        this.definition = definition;\r\n    }\r\n\r\n    getBackgroundColorAsResource() {\r\n        return THEME.map.resources.shape;\r\n    }\r\n\r\n    /**\r\n     * Draws the item to a canvas\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} size\r\n     */\r\n    drawFullSizeOnCanvas(context, size) {\r\n        this.definition.drawFullSizeOnCanvas(context, size);\r\n    }\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {DrawParameters} parameters\r\n     * @param {number=} diameter\r\n     */\r\n    drawItemCenteredImpl(x, y, parameters, diameter = globalConfig.defaultItemDiameter, background = true) {\r\n        this.definition.drawCentered(x, y, parameters, diameter, background);\r\n    }\r\n}\r\n\r\nShapeItem.resolveSingleton = (root, itemData) => {\r\n    return root.shapeDefinitionMgr.getShapeItemFromShortKey(itemData);\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/items/shape_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2680,
    "kind": "class",
    "name": "ShapeItem",
    "memberof": "js/game/items/shape_item.js",
    "static": true,
    "longname": "js/game/items/shape_item.js~ShapeItem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/items/shape_item.js",
    "importStyle": "{ShapeItem}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/base_item.js~BaseItem"
    ]
  },
  {
    "__docId__": 2681,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/items/shape_item.js~ShapeItem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/items/shape_item.js~ShapeItem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2682,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/items/shape_item.js~ShapeItem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/items/shape_item.js~ShapeItem.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2683,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/game/items/shape_item.js~ShapeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/shape_item.js~ShapeItem#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2684,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/game/items/shape_item.js~ShapeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/shape_item.js~ShapeItem#deserialize",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 2685,
    "kind": "member",
    "name": "definition",
    "memberof": "js/game/items/shape_item.js~ShapeItem",
    "static": false,
    "longname": "js/game/items/shape_item.js~ShapeItem#definition",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2686,
    "kind": "method",
    "name": "getItemType",
    "memberof": "js/game/items/shape_item.js~ShapeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/shape_item.js~ShapeItem#getItemType",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{\"shape\"} *"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "\"shape\""
      ],
      "spread": false,
      "description": "*"
    },
    "params": []
  },
  {
    "__docId__": 2687,
    "kind": "method",
    "name": "getAsCopyableKey",
    "memberof": "js/game/items/shape_item.js~ShapeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/shape_item.js~ShapeItem#getAsCopyableKey",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 2688,
    "kind": "method",
    "name": "equalsImpl",
    "memberof": "js/game/items/shape_item.js~ShapeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/shape_item.js~ShapeItem#equalsImpl",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2689,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/items/shape_item.js~ShapeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/shape_item.js~ShapeItem#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2691,
    "kind": "method",
    "name": "getBackgroundColorAsResource",
    "memberof": "js/game/items/shape_item.js~ShapeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/shape_item.js~ShapeItem#getBackgroundColorAsResource",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2692,
    "kind": "method",
    "name": "drawFullSizeOnCanvas",
    "memberof": "js/game/items/shape_item.js~ShapeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/shape_item.js~ShapeItem#drawFullSizeOnCanvas",
    "access": "public",
    "description": "Draws the item to a canvas",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2693,
    "kind": "method",
    "name": "drawItemCenteredImpl",
    "memberof": "js/game/items/shape_item.js~ShapeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/items/shape_item.js~ShapeItem#drawItemCenteredImpl",
    "access": "public",
    "description": "",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "diameter",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2694,
    "kind": "file",
    "name": "js/game/item_registry.js",
    "content": "import { gItemRegistry } from \"../core/global_registries\";\r\nimport { ShapeItem } from \"./items/shape_item\";\r\nimport { ColorItem } from \"./items/color_item\";\r\nimport { BooleanItem } from \"./items/boolean_item\";\r\n\r\nexport function addVanillaItemsToAPI() {\r\n    shapezAPI.ingame.items[ShapeItem.getId()] = ShapeItem;\r\n    shapezAPI.ingame.items[ColorItem.getId()] = ColorItem;\r\n    shapezAPI.ingame.items[BooleanItem.getId()] = BooleanItem;\r\n}\r\n\r\nexport function initItemRegistry() {\r\n    for (const itemId in shapezAPI.ingame.items) {\r\n        if (!shapezAPI.ingame.items.hasOwnProperty(itemId)) continue;\r\n        const itemClass = shapezAPI.ingame.items[itemId];\r\n        gItemRegistry.register(itemClass);\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/item_registry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2695,
    "kind": "function",
    "name": "addVanillaItemsToAPI",
    "memberof": "js/game/item_registry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/item_registry.js~addVanillaItemsToAPI",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/item_registry.js",
    "importStyle": "{addVanillaItemsToAPI}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2696,
    "kind": "function",
    "name": "initItemRegistry",
    "memberof": "js/game/item_registry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/item_registry.js~initItemRegistry",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/item_registry.js",
    "importStyle": "{initItemRegistry}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2697,
    "kind": "file",
    "name": "js/game/item_resolver.js",
    "content": "import { types } from \"../savegame/serialization\";\r\nimport { gItemRegistry } from \"../core/global_registries\";\r\n\r\n/**\r\n * Resolves items so we share instances\r\n * @param {import(\"./root\").GameRoot} root\r\n * @param {{$: string, data: any }} data\r\n */\r\nexport function itemResolverSingleton(root, data) {\r\n    const itemType = data.$;\r\n    const itemData = data.data;\r\n\r\n    for (const itemId in shapezAPI.ingame.items) {\r\n        if (!shapezAPI.ingame.items.hasOwnProperty(itemId)) continue;\r\n        const itemClass = shapezAPI.ingame.items[itemId];\r\n        if (itemType !== itemClass.getId()) continue;\r\n        return itemClass.resolveSingleton(root, itemData);\r\n    }\r\n    assertAlways(false, \"Unknown item type: \" + itemType);\r\n}\r\n\r\nexport const typeItemSingleton = types.obj(gItemRegistry, itemResolverSingleton);",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/item_resolver.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2698,
    "kind": "function",
    "name": "itemResolverSingleton",
    "memberof": "js/game/item_resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/item_resolver.js~itemResolverSingleton",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/item_resolver.js",
    "importStyle": "{itemResolverSingleton}",
    "description": "Resolves items so we share instances",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"./root\").GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{$: string, data: any }"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2699,
    "kind": "variable",
    "name": "typeItemSingleton",
    "memberof": "js/game/item_resolver.js",
    "static": true,
    "longname": "js/game/item_resolver.js~typeItemSingleton",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/item_resolver.js",
    "importStyle": "{typeItemSingleton}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2700,
    "kind": "file",
    "name": "js/game/key_action_mapper.js",
    "content": "/* typehints:start */\r\nimport { GameRoot } from \"./root\";\r\nimport { InputReceiver } from \"../core/input_receiver\";\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\n\r\nimport { Signal, STOP_PROPAGATION } from \"../core/signal\";\r\nimport { IS_MOBILE } from \"../core/config\";\r\nimport { T } from \"../translations\";\r\n\r\nfunction key(str) {\r\n    return str.toUpperCase().charCodeAt(0);\r\n}\r\n\r\nexport const KEYMAPPINGS = {\r\n    general: {\r\n        confirm: { keyCode: 13 }, // enter\r\n        back: { keyCode: 27, builtin: true }, // escape\r\n    },\r\n\r\n    ingame: {\r\n        menuOpenShop: { keyCode: key(\"F\") },\r\n        menuOpenStats: { keyCode: key(\"G\") },\r\n        menuClose: { keyCode: key(\"Q\") },\r\n\r\n        toggleHud: { keyCode: 113 }, // F2\r\n        exportScreenshot: { keyCode: 114 }, // F3PS\r\n        toggleFPSInfo: { keyCode: 115 }, // F4\r\n\r\n        switchLayers: { keyCode: key(\"E\") },\r\n    },\r\n\r\n    navigation: {\r\n        mapMoveUp: { keyCode: key(\"W\") },\r\n        mapMoveRight: { keyCode: key(\"D\") },\r\n        mapMoveDown: { keyCode: key(\"S\") },\r\n        mapMoveLeft: { keyCode: key(\"A\") },\r\n        mapMoveFaster: { keyCode: 16 }, //shift\r\n\r\n        centerMap: { keyCode: 32 }, // SPACE\r\n        mapZoomIn: { keyCode: 187, repeated: true }, // \"+\"\r\n        mapZoomOut: { keyCode: 189, repeated: true }, // \"-\"\r\n\r\n        createMarker: { keyCode: key(\"M\") },\r\n    },\r\n\r\n    buildings: {\r\n        // Primary Toolbar\r\n        belt: { keyCode: key(\"1\") },\r\n        balancer: { keyCode: key(\"2\") },\r\n        underground_belt: { keyCode: key(\"3\") },\r\n        miner: { keyCode: key(\"4\") },\r\n        cutter: { keyCode: key(\"5\") },\r\n        rotater: { keyCode: key(\"6\") },\r\n        stacker: { keyCode: key(\"7\") },\r\n        mixer: { keyCode: key(\"8\") },\r\n        painter: { keyCode: key(\"9\") },\r\n        trash: { keyCode: key(\"0\") },\r\n\r\n        // Sandbox\r\n        item_producer: { keyCode: key(\"L\") },\r\n\r\n        // Secondary toolbar\r\n        storage: { keyCode: key(\"Y\") },\r\n        reader: { keyCode: key(\"U\") },\r\n        lever: { keyCode: key(\"I\") },\r\n        filter: { keyCode: key(\"O\") },\r\n        display: { keyCode: key(\"P\") },\r\n\r\n        // Wires toolbar\r\n        wire: { keyCode: key(\"1\") },\r\n        wire_tunnel: { keyCode: key(\"2\") },\r\n        constant_signal: { keyCode: key(\"3\") },\r\n        logic_gate: { keyCode: key(\"4\") },\r\n        virtual_processor: { keyCode: key(\"5\") },\r\n        analyzer: { keyCode: key(\"6\") },\r\n        comparator: { keyCode: key(\"7\") },\r\n        transistor: { keyCode: key(\"8\") },\r\n    },\r\n\r\n    placement: {\r\n        pipette: { keyCode: key(\"Q\") },\r\n        rotateWhilePlacing: { keyCode: key(\"R\") },\r\n        rotateInverseModifier: { keyCode: 16 }, // SHIFT\r\n        cycleBuildingVariants: { keyCode: key(\"T\") },\r\n        cycleBuildings: { keyCode: 9 }, // TAB\r\n        switchDirectionLockSide: { keyCode: key(\"R\") },\r\n\r\n        copyWireValue: { keyCode: key(\"Z\") },\r\n    },\r\n\r\n    massSelect: {\r\n        massSelectStart: { keyCode: 17 }, // CTRL\r\n        massSelectSelectMultiple: { keyCode: 16 }, // SHIFT\r\n        massSelectCopy: { keyCode: key(\"C\") },\r\n        massSelectCut: { keyCode: key(\"X\") },\r\n        confirmMassDelete: { keyCode: 46 }, // DEL\r\n        pasteLastBlueprint: { keyCode: key(\"V\") },\r\n    },\r\n\r\n    placementModifiers: {\r\n        lockBeltDirection: { keyCode: 16 }, // SHIFT\r\n        placementDisableAutoOrientation: { keyCode: 17 }, // CTRL\r\n        placeMultiple: { keyCode: 16 }, // SHIFT\r\n        placeInverse: { keyCode: 18 }, // ALT\r\n    },\r\n};\r\n\r\n// Assign ids\r\nfor (const categoryId in KEYMAPPINGS) {\r\n    for (const mappingId in KEYMAPPINGS[categoryId]) {\r\n        KEYMAPPINGS[categoryId][mappingId].id = mappingId;\r\n    }\r\n}\r\n\r\nexport const KEYCODE_LMB = 1;\r\nexport const KEYCODE_MMB = 2;\r\nexport const KEYCODE_RMB = 3;\r\n\r\n/**\r\n * Returns a keycode -> string\r\n * @param {number} code\r\n * @returns {string}\r\n */\r\nexport function getStringForKeyCode(code) {\r\n    // @todo: Refactor into dictionary\r\n    switch (code) {\r\n        case KEYCODE_LMB:\r\n            return \"LMB\";\r\n        case KEYCODE_MMB:\r\n            return \"MMB\";\r\n        case KEYCODE_RMB:\r\n            return \"RMB\";\r\n        case 4:\r\n            return \"MB4\";\r\n        case 5:\r\n            return \"MB5\";\r\n        case 8:\r\n            return \"⌫\";\r\n        case 9:\r\n            return T.global.keys.tab;\r\n        case 13:\r\n            return \"⏎\";\r\n        case 16:\r\n            return \"⇪\";\r\n        case 17:\r\n            return T.global.keys.control;\r\n        case 18:\r\n            return T.global.keys.alt;\r\n        case 19:\r\n            return \"PAUSE\";\r\n        case 20:\r\n            return \"CAPS\";\r\n        case 27:\r\n            return T.global.keys.escape;\r\n        case 32:\r\n            return T.global.keys.space;\r\n        case 33:\r\n            return \"PGUP\";\r\n        case 34:\r\n            return \"PGDOWN\";\r\n        case 35:\r\n            return \"END\";\r\n        case 36:\r\n            return \"HOME\";\r\n        case 37:\r\n            return \"⬅\";\r\n        case 38:\r\n            return \"⬆\";\r\n        case 39:\r\n            return \"➡\";\r\n        case 40:\r\n            return \"⬇\";\r\n        case 44:\r\n            return \"PRNT\";\r\n        case 45:\r\n            return \"INS\";\r\n        case 46:\r\n            return \"DEL\";\r\n        case 93:\r\n            return \"SEL\";\r\n        case 96:\r\n            return \"NUM 0\";\r\n        case 97:\r\n            return \"NUM 1\";\r\n        case 98:\r\n            return \"NUM 2\";\r\n        case 99:\r\n            return \"NUM 3\";\r\n        case 100:\r\n            return \"NUM 4\";\r\n        case 101:\r\n            return \"NUM 5\";\r\n        case 102:\r\n            return \"NUM 6\";\r\n        case 103:\r\n            return \"NUM 7\";\r\n        case 104:\r\n            return \"NUM 8\";\r\n        case 105:\r\n            return \"NUM 9\";\r\n        case 106:\r\n            return \"*\";\r\n        case 107:\r\n            return \"+\";\r\n        case 109:\r\n            return \"-\";\r\n        case 110:\r\n            return \".\";\r\n        case 111:\r\n            return \"/\";\r\n        case 112:\r\n            return \"F1\";\r\n        case 113:\r\n            return \"F2\";\r\n        case 114:\r\n            return \"F3\";\r\n        case 115:\r\n            return \"F4\";\r\n        case 116:\r\n            return \"F5\";\r\n        case 117:\r\n            return \"F6\";\r\n        case 118:\r\n            return \"F7\";\r\n        case 119:\r\n            return \"F8\";\r\n        case 120:\r\n            return \"F9\";\r\n        case 121:\r\n            return \"F10\";\r\n        case 122:\r\n            return \"F11\";\r\n        case 123:\r\n            return \"F12\";\r\n\r\n        case 144:\r\n            return \"NUMLOCK\";\r\n        case 145:\r\n            return \"SCRLOCK\";\r\n        case 182:\r\n            return \"COMP\";\r\n        case 183:\r\n            return \"CALC\";\r\n        case 186:\r\n            return \";\";\r\n        case 187:\r\n            return \"+\";\r\n        case 188:\r\n            return \",\";\r\n        case 189:\r\n            return \"-\";\r\n        case 190:\r\n            return \".\";\r\n        case 191:\r\n            return \"/\";\r\n        case 219:\r\n            return \"[\";\r\n        case 220:\r\n            return \"\\\\\";\r\n        case 221:\r\n            return \"]\";\r\n        case 222:\r\n            return \"'\";\r\n    }\r\n\r\n    return (48 <= code && code <= 57) || (65 <= code && code <= 90) ?\r\n        String.fromCharCode(code) :\r\n        \"[\" + code + \"]\";\r\n}\r\n\r\nexport class Keybinding {\r\n    /**\r\n     *\r\n     * @param {KeyActionMapper} keyMapper\r\n     * @param {Application} app\r\n     * @param {object} param0\r\n     * @param {number} param0.keyCode\r\n     * @param {boolean=} param0.builtin\r\n     * @param {boolean=} param0.repeated\r\n     */\r\n    constructor(keyMapper, app, { keyCode, builtin = false, repeated = false }) {\r\n        assert(keyCode && Number.isInteger(keyCode), \"Invalid key code: \" + keyCode);\r\n        this.keyMapper = keyMapper;\r\n        this.app = app;\r\n        this.keyCode = keyCode;\r\n        this.builtin = builtin;\r\n        this.repeated = repeated;\r\n\r\n        this.signal = new Signal();\r\n        this.toggled = new Signal();\r\n    }\r\n\r\n    /**\r\n     * Returns whether this binding is currently pressed\r\n     * @returns {boolean}\r\n     */\r\n    get pressed() {\r\n        // Check if the key is down\r\n        if (this.app.inputMgr.keysDown.has(this.keyCode)) {\r\n            // Check if it is the top reciever\r\n            const reciever = this.keyMapper.inputReceiver;\r\n            return this.app.inputMgr.getTopReciever() === reciever;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Adds an event listener\r\n     * @param {function() : void} receiver\r\n     * @param {object=} scope\r\n     */\r\n    add(receiver, scope = null) {\r\n        this.signal.add(receiver, scope);\r\n    }\r\n\r\n    /**\r\n     * @param {Element} elem\r\n     * @returns {HTMLElement} the created element, or null if the keybindings are not shown\r\n     *  */\r\n    appendLabelToElement(elem) {\r\n        if (IS_MOBILE) {\r\n            return null;\r\n        }\r\n        const spacer = document.createElement(\"code\");\r\n        spacer.classList.add(\"keybinding\");\r\n        spacer.innerHTML = getStringForKeyCode(this.keyCode);\r\n        elem.appendChild(spacer);\r\n        return spacer;\r\n    }\r\n\r\n    /**\r\n     * Returns the key code as a nice string\r\n     */\r\n    getKeyCodeString() {\r\n        return getStringForKeyCode(this.keyCode);\r\n    }\r\n\r\n    /**\r\n     * Remvoes all signal receivers\r\n     */\r\n    clearSignalReceivers() {\r\n        this.signal.removeAll();\r\n    }\r\n}\r\n\r\nexport class KeyActionMapper {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     * @param {InputReceiver} inputReciever\r\n     */\r\n    constructor(root, inputReciever) {\r\n        this.root = root;\r\n        this.inputReceiver = inputReciever;\r\n\r\n        inputReciever.keydown.add(this.handleKeydown, this);\r\n        inputReciever.keyup.add(this.handleKeyup, this);\r\n\r\n        /** @type {Object.<string, Keybinding>} */\r\n        this.keybindings = {};\r\n\r\n        const overrides = root.app.settings.getKeybindingOverrides();\r\n\r\n        for (const category in KEYMAPPINGS) {\r\n            for (const key in KEYMAPPINGS[category]) {\r\n                let payload = Object.assign({}, KEYMAPPINGS[category][key]);\r\n                if (overrides[key]) {\r\n                    payload.keyCode = overrides[key];\r\n                }\r\n\r\n                this.keybindings[key] = new Keybinding(this, this.root.app, payload);\r\n\r\n                if (G_IS_DEV) {\r\n                    // Sanity\r\n                    if (!T.keybindings.mappings[key]) {\r\n                        assertAlways(false, \"Keybinding \" + key + \" has no translation!\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        inputReciever.pageBlur.add(this.onPageBlur, this);\r\n        inputReciever.destroyed.add(this.cleanup, this);\r\n    }\r\n\r\n    /**\r\n     * Returns all keybindings starting with the given id\r\n     * @param {string} pattern\r\n     * @returns {Array<Keybinding>}\r\n     */\r\n    getKeybindingsStartingWith(pattern) {\r\n        let result = [];\r\n        for (const key in this.keybindings) {\r\n            if (key.startsWith(pattern)) {\r\n                result.push(this.keybindings[key]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Forwards the given events to the other mapper (used in tooltips)\r\n     * @param {KeyActionMapper} receiver\r\n     * @param {Array<string>} bindings\r\n     */\r\n    forward(receiver, bindings) {\r\n        for (let i = 0; i < bindings.length; ++i) {\r\n            const key = bindings[i];\r\n            this.keybindings[key].signal.add((...args) => receiver.keybindings[key].signal.dispatch(...args));\r\n        }\r\n    }\r\n\r\n    cleanup() {\r\n        for (const key in this.keybindings) {\r\n            this.keybindings[key].signal.removeAll();\r\n        }\r\n    }\r\n\r\n    onPageBlur() {\r\n        // Reset all down states\r\n        // Find mapping\r\n        for (const key in this.keybindings) {\r\n            /** @type {Keybinding} */\r\n            const binding = this.keybindings[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal keydown handler\r\n     * @param {object} param0\r\n     * @param {number} param0.keyCode\r\n     * @param {boolean} param0.shift\r\n     * @param {boolean} param0.alt\r\n     * @param {boolean=} param0.initial\r\n     */\r\n    handleKeydown({ keyCode, shift, alt, initial }) {\r\n        let stop = false;\r\n\r\n        // Find mapping\r\n        for (const key in this.keybindings) {\r\n            /** @type {Keybinding} */\r\n            const binding = this.keybindings[key];\r\n            if (binding.keyCode === keyCode && (initial || binding.repeated)) {\r\n                /** @type {Signal} */\r\n                const signal = this.keybindings[key].signal;\r\n                if (signal.dispatch() === STOP_PROPAGATION) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (stop) {\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal keyup handler\r\n     * @param {object} param0\r\n     * @param {number} param0.keyCode\r\n     * @param {boolean} param0.shift\r\n     * @param {boolean} param0.alt\r\n     */\r\n    handleKeyup({ keyCode, shift, alt }) {\r\n        // Empty\r\n    }\r\n\r\n    /**\r\n     * Returns a given keybinding\r\n     * @param {{ keyCode: number }} binding\r\n     * @returns {Keybinding}\r\n     */\r\n    getBinding(binding) {\r\n        // @ts-ignore\r\n        const id = binding.id;\r\n        assert(id, \"Not a valid keybinding: \" + JSON.stringify(binding));\r\n        assert(this.keybindings[id], \"Keybinding \" + id + \" not known!\");\r\n        return this.keybindings[id];\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/key_action_mapper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2701,
    "kind": "function",
    "name": "key",
    "memberof": "js/game/key_action_mapper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/key_action_mapper.js~key",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/key_action_mapper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2702,
    "kind": "variable",
    "name": "KEYMAPPINGS",
    "memberof": "js/game/key_action_mapper.js",
    "static": true,
    "longname": "js/game/key_action_mapper.js~KEYMAPPINGS",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/key_action_mapper.js",
    "importStyle": "{KEYMAPPINGS}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "{\"general\": *, \"ingame\": *, \"navigation\": *, \"buildings\": *, \"placement\": *, \"massSelect\": *, \"placementModifiers\": *}"
      ]
    }
  },
  {
    "__docId__": 2703,
    "kind": "variable",
    "name": "KEYCODE_LMB",
    "memberof": "js/game/key_action_mapper.js",
    "static": true,
    "longname": "js/game/key_action_mapper.js~KEYCODE_LMB",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/key_action_mapper.js",
    "importStyle": "{KEYCODE_LMB}",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2704,
    "kind": "variable",
    "name": "KEYCODE_MMB",
    "memberof": "js/game/key_action_mapper.js",
    "static": true,
    "longname": "js/game/key_action_mapper.js~KEYCODE_MMB",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/key_action_mapper.js",
    "importStyle": "{KEYCODE_MMB}",
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2705,
    "kind": "variable",
    "name": "KEYCODE_RMB",
    "memberof": "js/game/key_action_mapper.js",
    "static": true,
    "longname": "js/game/key_action_mapper.js~KEYCODE_RMB",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/key_action_mapper.js",
    "importStyle": "{KEYCODE_RMB}",
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2706,
    "kind": "function",
    "name": "getStringForKeyCode",
    "memberof": "js/game/key_action_mapper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/key_action_mapper.js~getStringForKeyCode",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/key_action_mapper.js",
    "importStyle": "{getStringForKeyCode}",
    "description": "Returns a keycode -> string",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2707,
    "kind": "class",
    "name": "Keybinding",
    "memberof": "js/game/key_action_mapper.js",
    "static": true,
    "longname": "js/game/key_action_mapper.js~Keybinding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/key_action_mapper.js",
    "importStyle": "{Keybinding}",
    "description": null,
    "lineNumber": 272,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 2708,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/key_action_mapper.js~Keybinding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~Keybinding#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 282,
    "params": [
      {
        "nullable": null,
        "types": [
          "KeyActionMapper"
        ],
        "spread": false,
        "optional": false,
        "name": "keyMapper",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.keyCode",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.builtin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.repeated",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2709,
    "kind": "member",
    "name": "keyMapper",
    "memberof": "js/game/key_action_mapper.js~Keybinding",
    "static": false,
    "longname": "js/game/key_action_mapper.js~Keybinding#keyMapper",
    "access": "public",
    "description": null,
    "lineNumber": 284,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2710,
    "kind": "member",
    "name": "app",
    "memberof": "js/game/key_action_mapper.js~Keybinding",
    "static": false,
    "longname": "js/game/key_action_mapper.js~Keybinding#app",
    "access": "public",
    "description": null,
    "lineNumber": 285,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2711,
    "kind": "member",
    "name": "keyCode",
    "memberof": "js/game/key_action_mapper.js~Keybinding",
    "static": false,
    "longname": "js/game/key_action_mapper.js~Keybinding#keyCode",
    "access": "public",
    "description": null,
    "lineNumber": 286,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2712,
    "kind": "member",
    "name": "builtin",
    "memberof": "js/game/key_action_mapper.js~Keybinding",
    "static": false,
    "longname": "js/game/key_action_mapper.js~Keybinding#builtin",
    "access": "public",
    "description": null,
    "lineNumber": 287,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2713,
    "kind": "member",
    "name": "repeated",
    "memberof": "js/game/key_action_mapper.js~Keybinding",
    "static": false,
    "longname": "js/game/key_action_mapper.js~Keybinding#repeated",
    "access": "public",
    "description": null,
    "lineNumber": 288,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2714,
    "kind": "member",
    "name": "signal",
    "memberof": "js/game/key_action_mapper.js~Keybinding",
    "static": false,
    "longname": "js/game/key_action_mapper.js~Keybinding#signal",
    "access": "public",
    "description": null,
    "lineNumber": 290,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2715,
    "kind": "member",
    "name": "toggled",
    "memberof": "js/game/key_action_mapper.js~Keybinding",
    "static": false,
    "longname": "js/game/key_action_mapper.js~Keybinding#toggled",
    "access": "public",
    "description": null,
    "lineNumber": 291,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2716,
    "kind": "get",
    "name": "pressed",
    "memberof": "js/game/key_action_mapper.js~Keybinding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~Keybinding#pressed",
    "access": "public",
    "description": "Returns whether this binding is currently pressed",
    "lineNumber": 298,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2717,
    "kind": "method",
    "name": "add",
    "memberof": "js/game/key_action_mapper.js~Keybinding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~Keybinding#add",
    "access": "public",
    "description": "Adds an event listener",
    "lineNumber": 313,
    "params": [
      {
        "nullable": null,
        "types": [
          "function() : void"
        ],
        "spread": false,
        "optional": false,
        "name": "receiver",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object="
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2718,
    "kind": "method",
    "name": "appendLabelToElement",
    "memberof": "js/game/key_action_mapper.js~Keybinding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~Keybinding#appendLabelToElement",
    "access": "public",
    "description": "",
    "lineNumber": 321,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{HTMLElement} the created element, or null if the keybindings are not shown"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": "the created element, or null if the keybindings are not shown"
    }
  },
  {
    "__docId__": 2719,
    "kind": "method",
    "name": "getKeyCodeString",
    "memberof": "js/game/key_action_mapper.js~Keybinding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~Keybinding#getKeyCodeString",
    "access": "public",
    "description": "Returns the key code as a nice string",
    "lineNumber": 335,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2720,
    "kind": "method",
    "name": "clearSignalReceivers",
    "memberof": "js/game/key_action_mapper.js~Keybinding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~Keybinding#clearSignalReceivers",
    "access": "public",
    "description": "Remvoes all signal receivers",
    "lineNumber": 342,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2721,
    "kind": "class",
    "name": "KeyActionMapper",
    "memberof": "js/game/key_action_mapper.js",
    "static": true,
    "longname": "js/game/key_action_mapper.js~KeyActionMapper",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/key_action_mapper.js",
    "importStyle": "{KeyActionMapper}",
    "description": null,
    "lineNumber": 347,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 2722,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/key_action_mapper.js~KeyActionMapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~KeyActionMapper#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 353,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "InputReceiver"
        ],
        "spread": false,
        "optional": false,
        "name": "inputReciever",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2723,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/key_action_mapper.js~KeyActionMapper",
    "static": false,
    "longname": "js/game/key_action_mapper.js~KeyActionMapper#root",
    "access": "public",
    "description": null,
    "lineNumber": 354,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2724,
    "kind": "member",
    "name": "inputReceiver",
    "memberof": "js/game/key_action_mapper.js~KeyActionMapper",
    "static": false,
    "longname": "js/game/key_action_mapper.js~KeyActionMapper#inputReceiver",
    "access": "public",
    "description": null,
    "lineNumber": 355,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2725,
    "kind": "member",
    "name": "keybindings",
    "memberof": "js/game/key_action_mapper.js~KeyActionMapper",
    "static": false,
    "longname": "js/game/key_action_mapper.js~KeyActionMapper#keybindings",
    "access": "public",
    "description": null,
    "lineNumber": 361,
    "type": {
      "nullable": null,
      "types": [
        "Object.<string, Keybinding>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2726,
    "kind": "method",
    "name": "getKeybindingsStartingWith",
    "memberof": "js/game/key_action_mapper.js~KeyActionMapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~KeyActionMapper#getKeybindingsStartingWith",
    "access": "public",
    "description": "Returns all keybindings starting with the given id",
    "lineNumber": 392,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<Keybinding>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pattern",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Keybinding>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2727,
    "kind": "method",
    "name": "forward",
    "memberof": "js/game/key_action_mapper.js~KeyActionMapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~KeyActionMapper#forward",
    "access": "public",
    "description": "Forwards the given events to the other mapper (used in tooltips)",
    "lineNumber": 407,
    "params": [
      {
        "nullable": null,
        "types": [
          "KeyActionMapper"
        ],
        "spread": false,
        "optional": false,
        "name": "receiver",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "bindings",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2728,
    "kind": "method",
    "name": "cleanup",
    "memberof": "js/game/key_action_mapper.js~KeyActionMapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~KeyActionMapper#cleanup",
    "access": "public",
    "description": null,
    "lineNumber": 414,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2729,
    "kind": "method",
    "name": "onPageBlur",
    "memberof": "js/game/key_action_mapper.js~KeyActionMapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~KeyActionMapper#onPageBlur",
    "access": "public",
    "description": null,
    "lineNumber": 420,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2730,
    "kind": "method",
    "name": "handleKeydown",
    "memberof": "js/game/key_action_mapper.js~KeyActionMapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~KeyActionMapper#handleKeydown",
    "access": "public",
    "description": "Internal keydown handler",
    "lineNumber": 437,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.keyCode",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.shift",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.alt",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.initial",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2731,
    "kind": "method",
    "name": "handleKeyup",
    "memberof": "js/game/key_action_mapper.js~KeyActionMapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~KeyActionMapper#handleKeyup",
    "access": "public",
    "description": "Internal keyup handler",
    "lineNumber": 465,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.keyCode",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.shift",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.alt",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2732,
    "kind": "method",
    "name": "getBinding",
    "memberof": "js/game/key_action_mapper.js~KeyActionMapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/key_action_mapper.js~KeyActionMapper#getBinding",
    "access": "public",
    "description": "Returns a given keybinding",
    "lineNumber": 474,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Keybinding}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{ keyCode: number }"
        ],
        "spread": false,
        "optional": false,
        "name": "binding",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Keybinding"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2733,
    "kind": "file",
    "name": "js/game/logic.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { STOP_PROPAGATION } from \"../core/signal\";\r\nimport { round2Digits } from \"../core/utils\";\r\nimport { enumDirection, enumDirectionToVector, enumInvertedDirections, Vector } from \"../core/vector\";\r\nimport { MetaWireBuilding } from \"./buildings/wire\";\r\nimport { getBuildingDataFromCode } from \"./building_codes\";\r\nimport { Entity } from \"./entity\";\r\nimport { CHUNK_OVERLAY_RES } from \"./map_chunk_view\";\r\nimport { MetaBuilding } from \"./meta_building\";\r\nimport { GameRoot } from \"./root\";\r\nimport { WireNetwork } from \"./systems/wire\";\r\n\r\nconst logger = createLogger(\"ingame/logic\");\r\n\r\n/**\r\n * Typing helper\r\n * @typedef {Array<{\r\n *  entity: Entity,\r\n *  slot: import(\"./components/item_ejector\").ItemEjectorSlot,\r\n *  fromTile: Vector,\r\n *  toDirection: enumDirection\r\n * }>} EjectorsAffectingTile\r\n */\r\n\r\n/**\r\n * Typing helper\r\n * @typedef {Array<{\r\n *  entity: Entity,\r\n *  slot: import(\"./components/item_acceptor\").ItemAcceptorSlot,\r\n *  toTile: Vector,\r\n *  fromDirection: enumDirection\r\n * }>} AcceptorsAffectingTile\r\n */\r\n\r\n/**\r\n * @typedef {{\r\n *     acceptors: AcceptorsAffectingTile,\r\n *     ejectors: EjectorsAffectingTile\r\n * }} AcceptorsAndEjectorsAffectingTile\r\n */\r\n\r\nexport class GameLogic {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n    }\r\n\r\n    /**\r\n     * Checks if the given entity can be placed\r\n     * @param {Entity} entity\r\n     * @param {Vector=} offset Optional, move the entity by the given offset first\r\n     * @returns {boolean} true if the entity could be placed there\r\n     */\r\n    checkCanPlaceEntity(entity, offset = null, blueprint = false) {\r\n        // Compute area of the building\r\n        const rect = entity.components.StaticMapEntity.getTileSpaceBounds();\r\n        if (offset) {\r\n            rect.x += offset.x;\r\n            rect.y += offset.y;\r\n        }\r\n\r\n        // Check the whole area of the building\r\n        for (let x = rect.x; x < rect.x + rect.w; ++x) {\r\n            for (let y = rect.y; y < rect.y + rect.h; ++y) {\r\n                // Check if there is any direct collision\r\n                const otherEntity = this.root.map.getLayerContentXY(x, y, entity.layer);\r\n                if (otherEntity) {\r\n                    const metaClass = otherEntity.components.StaticMapEntity.getMetaBuilding();\r\n                    const staticComp = otherEntity.components.StaticMapEntity;\r\n                    const data = getBuildingDataFromCode(staticComp.code);\r\n                    if (!metaClass.getIsReplaceable(data.variant)) {\r\n                        // This one is a direct blocker\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Perform additional placement checks\r\n        if (this.root.signals.prePlacementCheck.dispatch(entity, offset, blueprint) === STOP_PROPAGATION) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attempts to place the given building\r\n     * @param {object} param0\r\n     * @param {Vector} param0.origin\r\n     * @param {number} param0.rotation\r\n     * @param {number} param0.originalRotation\r\n     * @param {number} param0.rotationVariant\r\n     * @param {string} param0.variant\r\n     * @param {MetaBuilding} param0.building\r\n     * @returns {Entity}\r\n     */\r\n    tryPlaceBuilding({ origin, rotation, rotationVariant, originalRotation, variant, building }) {\r\n        const entity = building.createEntity({\r\n            root: this.root,\r\n            origin,\r\n            rotation,\r\n            originalRotation,\r\n            rotationVariant,\r\n            variant,\r\n        });\r\n        if (this.checkCanPlaceEntity(entity)) {\r\n            this.freeEntityAreaBeforeBuild(entity);\r\n            this.root.map.placeStaticEntity(entity);\r\n            this.root.entityMgr.registerEntity(entity);\r\n            return entity;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Removes all entities with a RemovableMapEntityComponent which need to get\r\n     * removed before placing this entity\r\n     * @param {Entity} entity\r\n     */\r\n    freeEntityAreaBeforeBuild(entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const rect = staticComp.getTileSpaceBounds();\r\n        // Remove any removeable colliding entities on the same layer\r\n        for (let x = rect.x; x < rect.x + rect.w; ++x) {\r\n            for (let y = rect.y; y < rect.y + rect.h; ++y) {\r\n                const contents = this.root.map.getLayerContentXY(x, y, entity.layer);\r\n                if (contents) {\r\n                    const staticComp = contents.components.StaticMapEntity;\r\n                    const data = getBuildingDataFromCode(staticComp.code);\r\n                    assertAlways(\r\n                        contents.components.StaticMapEntity.getMetaBuilding().getIsReplaceable(data.variant),\r\n                        \"Tried to replace non-repleaceable entity\"\r\n                    );\r\n                    if (!this.tryDeleteBuilding(contents)) {\r\n                        assertAlways(false, \"Tried to replace non-repleaceable entity #2\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Perform other callbacks\r\n        this.root.signals.freeEntityAreaBeforeBuild.dispatch(entity);\r\n    }\r\n\r\n    /**\r\n     * Performs a bulk operation, not updating caches in the meantime\r\n     * @param {function} operation\r\n     */\r\n    performBulkOperation(operation) {\r\n        logger.warn(\"Running bulk operation ...\");\r\n        assert(!this.root.bulkOperationRunning, \"Can not run two bulk operations twice\");\r\n        this.root.bulkOperationRunning = true;\r\n        const now = performance.now();\r\n        const returnValue = operation();\r\n        const duration = performance.now() - now;\r\n        logger.log(\"Done in\", round2Digits(duration), \"ms\");\r\n        assert(this.root.bulkOperationRunning, \"Bulk operation = false while bulk operation was running\");\r\n        this.root.bulkOperationRunning = false;\r\n        this.root.signals.bulkOperationFinished.dispatch();\r\n        return returnValue;\r\n    }\r\n\r\n    /**\r\n     * Returns whether the given building can get removed\r\n     * @param {Entity} building\r\n     */\r\n    canDeleteBuilding(building) {\r\n        const staticComp = building.components.StaticMapEntity;\r\n        const data = getBuildingDataFromCode(staticComp.code);\r\n        return staticComp.getMetaBuilding().getIsRemovable(data.variant);\r\n    }\r\n\r\n    /**\r\n     * Tries to delete the given building\r\n     * @param {Entity} building\r\n     */\r\n    tryDeleteBuilding(building) {\r\n        if (!this.canDeleteBuilding(building)) {\r\n            return false;\r\n        }\r\n        this.root.map.removeStaticEntity(building);\r\n        this.root.entityMgr.destroyEntity(building);\r\n        this.root.entityMgr.processDestroyList();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Computes the flag for a given tile\r\n     * @param {object} param0\r\n     * @param {MetaWireBuilding.wireVariants} param0.wireVariant\r\n     * @param {Vector} param0.tile The tile to check at\r\n     * @param {enumDirection} param0.edge The edge to check for\r\n     */\r\n    computeWireEdgeStatus({ wireVariant, tile, edge }) {\r\n        const offset = enumDirectionToVector[edge];\r\n        const targetTile = tile.add(offset);\r\n\r\n        // Search for relevant pins\r\n        const pinEntities = this.root.map.getLayersContentsMultipleXY(targetTile.x, targetTile.y);\r\n\r\n        // Go over all entities which could have a pin\r\n        for (let i = 0; i < pinEntities.length; ++i) {\r\n            const pinEntity = pinEntities[i];\r\n            const pinComp = pinEntity.components.WiredPins;\r\n            const staticComp = pinEntity.components.StaticMapEntity;\r\n\r\n            // Skip those who don't have pins\r\n            if (!pinComp) {\r\n                continue;\r\n            }\r\n\r\n            // Go over all pins\r\n            const pins = pinComp.slots;\r\n            for (let k = 0; k < pinComp.slots.length; ++k) {\r\n                const pinSlot = pins[k];\r\n                const pinLocation = staticComp.localTileToWorld(pinSlot.pos);\r\n                const pinDirection = staticComp.localDirectionToWorld(pinSlot.direction);\r\n\r\n                // Check if the pin has the right location\r\n                if (!pinLocation.equals(targetTile)) {\r\n                    continue;\r\n                }\r\n\r\n                // Check if the pin has the right direction\r\n                if (pinDirection !== enumInvertedDirections[edge]) {\r\n                    continue;\r\n                }\r\n\r\n                // Found a pin!\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Now check if there's a connectable entity on the wires layer\r\n        const targetEntity = this.root.map.getTileContent(targetTile, \"wires\");\r\n        if (!targetEntity) {\r\n            return false;\r\n        }\r\n\r\n        const targetStaticComp = targetEntity.components.StaticMapEntity;\r\n\r\n        // Check if its a crossing\r\n        const wireTunnelComp = targetEntity.components.WireTunnel;\r\n        if (wireTunnelComp) {\r\n            return true;\r\n        }\r\n\r\n        // Check if its a wire\r\n        const wiresComp = targetEntity.components.Wire;\r\n        if (!wiresComp) {\r\n            return false;\r\n        }\r\n\r\n        // It's connected if its the same variant\r\n        return wiresComp.variant === wireVariant;\r\n    }\r\n\r\n    /**\r\n     * Returns all wire networks this entity participates in on the given tile\r\n     * @param {Entity} entity\r\n     * @param {Vector} tile\r\n     * @returns {Array<WireNetwork>|null} Null if the entity is never able to be connected at the given tile\r\n     */\r\n    getEntityWireNetworks(entity, tile) {\r\n        let canConnectAtAll = false;\r\n\r\n        /** @type {Set<WireNetwork>} */\r\n        const networks = new Set();\r\n\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const wireComp = entity.components.Wire;\r\n        if (wireComp) {\r\n            canConnectAtAll = true;\r\n            if (wireComp.linkedNetwork) {\r\n                networks.add(wireComp.linkedNetwork);\r\n            }\r\n        }\r\n\r\n        const tunnelComp = entity.components.WireTunnel;\r\n        if (tunnelComp) {\r\n            canConnectAtAll = true;\r\n            for (let i = 0; i < tunnelComp.linkedNetworks.length; ++i) {\r\n                networks.add(tunnelComp.linkedNetworks[i]);\r\n            }\r\n        }\r\n\r\n        const pinsComp = entity.components.WiredPins;\r\n        if (pinsComp) {\r\n            const slots = pinsComp.slots;\r\n            for (let i = 0; i < slots.length; ++i) {\r\n                const slot = slots[i];\r\n                const slotLocalPos = staticComp.localTileToWorld(slot.pos);\r\n                if (slotLocalPos.equals(tile)) {\r\n                    canConnectAtAll = true;\r\n                    if (slot.linkedNetwork) {\r\n                        networks.add(slot.linkedNetwork);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!canConnectAtAll) {\r\n            return null;\r\n        }\r\n\r\n        return Array.from(networks);\r\n    }\r\n\r\n    /**\r\n     * Returns if the entities tile *and* his overlay matrix is intersected\r\n     * @param {Entity} entity\r\n     * @param {Vector} worldPos\r\n     */\r\n    getIsEntityIntersectedWithMatrix(entity, worldPos) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const tile = worldPos.toTileSpace();\r\n\r\n        if (!staticComp.getTileSpaceBounds().containsPoint(tile.x, tile.y)) {\r\n            // No intersection at all\r\n            return;\r\n        }\r\n\r\n        const data = getBuildingDataFromCode(staticComp.code);\r\n        const overlayMatrix = data.metaInstance.getSpecialOverlayRenderMatrix(\r\n            staticComp.rotation,\r\n            data.rotationVariant,\r\n            data.variant,\r\n            entity\r\n        );\r\n        // Always the same\r\n        if (!overlayMatrix) {\r\n            return true;\r\n        }\r\n\r\n        const localPosition = worldPos\r\n            .divideScalar(globalConfig.tileSize)\r\n            .modScalar(1)\r\n            .multiplyScalar(CHUNK_OVERLAY_RES)\r\n            .floor();\r\n\r\n        return !!overlayMatrix[localPosition.x + localPosition.y * 3];\r\n    }\r\n\r\n    g(tile, edge) {}\r\n\r\n    /**\r\n     * Returns the acceptors and ejectors which affect the current tile\r\n     * @param {Vector} tile\r\n     * @returns {AcceptorsAndEjectorsAffectingTile}\r\n     */\r\n    getEjectorsAndAcceptorsAtTile(tile) {\r\n        /** @type {EjectorsAffectingTile} */\r\n        let ejectors = [];\r\n        /** @type {AcceptorsAffectingTile} */\r\n        let acceptors = [];\r\n\r\n        // Well .. please ignore this code! :D\r\n        for (let dx = -1; dx <= 1; ++dx) {\r\n            for (let dy = -1; dy <= 1; ++dy) {\r\n                if (Math.abs(dx) + Math.abs(dy) !== 1) {\r\n                    continue;\r\n                }\r\n\r\n                const entity = this.root.map.getLayerContentXY(tile.x + dx, tile.y + dy, \"regular\");\r\n                if (entity) {\r\n                    let ejectorSlots = [];\r\n                    let acceptorSlots = [];\r\n\r\n                    const staticComp = entity.components.StaticMapEntity;\r\n                    const itemEjector = entity.components.ItemEjector;\r\n                    const itemAcceptor = entity.components.ItemAcceptor;\r\n                    const beltComp = entity.components.Belt;\r\n\r\n                    if (itemEjector) {\r\n                        ejectorSlots = itemEjector.slots.slice();\r\n                    }\r\n\r\n                    if (itemAcceptor) {\r\n                        acceptorSlots = itemAcceptor.slots.slice();\r\n                    }\r\n\r\n                    if (beltComp) {\r\n                        const fakeEjectorSlot = beltComp.getFakeEjectorSlot();\r\n                        const fakeAcceptorSlot = beltComp.getFakeAcceptorSlot();\r\n                        ejectorSlots.push(fakeEjectorSlot);\r\n                        acceptorSlots.push(fakeAcceptorSlot);\r\n                    }\r\n\r\n                    for (let ejectorSlot = 0; ejectorSlot < ejectorSlots.length; ++ejectorSlot) {\r\n                        const slot = ejectorSlots[ejectorSlot];\r\n                        const wsTile = staticComp.localTileToWorld(slot.pos);\r\n                        const wsDirection = staticComp.localDirectionToWorld(slot.direction);\r\n                        const targetTile = wsTile.add(enumDirectionToVector[wsDirection]);\r\n                        if (targetTile.equals(tile)) {\r\n                            ejectors.push({\r\n                                entity,\r\n                                slot,\r\n                                fromTile: wsTile,\r\n                                toDirection: wsDirection,\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    for (let acceptorSlot = 0; acceptorSlot < acceptorSlots.length; ++acceptorSlot) {\r\n                        const slot = acceptorSlots[acceptorSlot];\r\n                        const wsTile = staticComp.localTileToWorld(slot.pos);\r\n                        for (let k = 0; k < slot.directions.length; ++k) {\r\n                            const direction = slot.directions[k];\r\n                            const wsDirection = staticComp.localDirectionToWorld(direction);\r\n\r\n                            const sourceTile = wsTile.add(enumDirectionToVector[wsDirection]);\r\n                            if (sourceTile.equals(tile)) {\r\n                                acceptors.push({\r\n                                    entity,\r\n                                    slot,\r\n                                    toTile: wsTile,\r\n                                    fromDirection: wsDirection,\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { ejectors, acceptors };\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/logic.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2734,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/logic.js",
    "static": true,
    "longname": "js/game/logic.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/logic.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2735,
    "kind": "typedef",
    "name": "EjectorsAffectingTile",
    "memberof": "js/game/logic.js",
    "static": true,
    "longname": "js/game/logic.js~EjectorsAffectingTile",
    "access": "public",
    "description": "Typing helper",
    "type": {
      "types": [
        "Array<{\n entity: Entity,\n slot: import(\"./components/item_ejector\").ItemEjectorSlot,\n fromTile: Vector,\n toDirection: enumDirection\n}>"
      ],
      "optional": false,
      "name": "EjectorsAffectingTile"
    }
  },
  {
    "__docId__": 2736,
    "kind": "typedef",
    "name": "AcceptorsAffectingTile",
    "memberof": "js/game/logic.js",
    "static": true,
    "longname": "js/game/logic.js~AcceptorsAffectingTile",
    "access": "public",
    "description": "Typing helper",
    "type": {
      "types": [
        "Array<{\n entity: Entity,\n slot: import(\"./components/item_acceptor\").ItemAcceptorSlot,\n toTile: Vector,\n fromDirection: enumDirection\n}>"
      ],
      "optional": false,
      "name": "AcceptorsAffectingTile"
    }
  },
  {
    "__docId__": 2737,
    "kind": "typedef",
    "name": "AcceptorsAndEjectorsAffectingTile",
    "memberof": "js/game/logic.js",
    "static": true,
    "longname": "js/game/logic.js~AcceptorsAndEjectorsAffectingTile",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "type": {
      "types": [
        "{\n    acceptors: AcceptorsAffectingTile,\n    ejectors: EjectorsAffectingTile\n}"
      ],
      "optional": false,
      "name": "AcceptorsAndEjectorsAffectingTile"
    }
  },
  {
    "__docId__": 2738,
    "kind": "file",
    "name": "js/game/map.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\nimport { BaseItem } from \"./base_item\";\r\nimport { Entity } from \"./entity\";\r\nimport { MapChunkView } from \"./map_chunk_view\";\r\nimport { GameRoot } from \"./root\";\r\n\r\nexport class BaseMap extends BasicSerializableObject {\r\n    static getId() {\r\n        return \"Map\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            seed: types.uint,\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n        this.root = root;\r\n\r\n        this.seed = 0;\r\n\r\n        /**\r\n         * Mapping of 'X|Y' to chunk\r\n         * @type {Map<string, MapChunkView>} */\r\n        this.chunksById = new Map();\r\n    }\r\n\r\n    /**\r\n     * Returns the given chunk by index\r\n     * @param {number} chunkX\r\n     * @param {number} chunkY\r\n     */\r\n    getChunk(chunkX, chunkY, createIfNotExistent = false) {\r\n        const chunkIdentifier = chunkX + \"|\" + chunkY;\r\n        let storedChunk;\r\n\r\n        if ((storedChunk = this.chunksById.get(chunkIdentifier))) {\r\n            return storedChunk;\r\n        }\r\n\r\n        if (createIfNotExistent) {\r\n            const instance = new MapChunkView(this.root, chunkX, chunkY);\r\n            this.chunksById.set(chunkIdentifier, instance);\r\n            return instance;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Gets or creates a new chunk if not existent for the given tile\r\n     * @param {number} tileX\r\n     * @param {number} tileY\r\n     * @returns {MapChunkView}\r\n     */\r\n    getOrCreateChunkAtTile(tileX, tileY) {\r\n        const chunkX = Math.floor(tileX / globalConfig.mapChunkSize);\r\n        const chunkY = Math.floor(tileY / globalConfig.mapChunkSize);\r\n        return this.getChunk(chunkX, chunkY, true);\r\n    }\r\n\r\n    /**\r\n     * Gets a chunk if not existent for the given tile\r\n     * @param {number} tileX\r\n     * @param {number} tileY\r\n     * @returns {MapChunkView?}\r\n     */\r\n    getChunkAtTileOrNull(tileX, tileY) {\r\n        const chunkX = Math.floor(tileX / globalConfig.mapChunkSize);\r\n        const chunkY = Math.floor(tileY / globalConfig.mapChunkSize);\r\n        return this.getChunk(chunkX, chunkY, false);\r\n    }\r\n\r\n    /**\r\n     * Checks if a given tile is within the map bounds\r\n     * @param {Vector} tile\r\n     * @returns {boolean}\r\n     */\r\n    isValidTile(tile) {\r\n        if (G_IS_DEV) {\r\n            assert(tile instanceof Vector, \"tile is not a vector\");\r\n        }\r\n        return Number.isInteger(tile.x) && Number.isInteger(tile.y);\r\n    }\r\n\r\n    /**\r\n     * Returns the tile content of a given tile\r\n     * @param {Vector} tile\r\n     * @param {Layer} layer\r\n     * @returns {Entity} Entity or null\r\n     */\r\n    getTileContent(tile, layer) {\r\n        if (G_IS_DEV) {\r\n            this.internalCheckTile(tile);\r\n        }\r\n        const chunk = this.getChunkAtTileOrNull(tile.x, tile.y);\r\n        return chunk && chunk.getLayerContentFromWorldCoords(tile.x, tile.y, layer);\r\n    }\r\n\r\n    /**\r\n     * Returns the lower layers content of the given tile\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {BaseItem=}\r\n     */\r\n    getLowerLayerContentXY(x, y) {\r\n        return this.getOrCreateChunkAtTile(x, y).getLowerLayerFromWorldCoords(x, y);\r\n    }\r\n\r\n    /**\r\n     * Returns the tile content of a given tile\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {Layer} layer\r\n     * @returns {Entity} Entity or null\r\n     */\r\n    getLayerContentXY(x, y, layer) {\r\n        const chunk = this.getChunkAtTileOrNull(x, y);\r\n        return chunk && chunk.getLayerContentFromWorldCoords(x, y, layer);\r\n    }\r\n\r\n    /**\r\n     * Returns the tile contents of a given tile\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {Array<Entity>} Entity or null\r\n     */\r\n    getLayersContentsMultipleXY(x, y) {\r\n        const chunk = this.getChunkAtTileOrNull(x, y);\r\n        if (!chunk) {\r\n            return [];\r\n        }\r\n        return chunk.getLayersContentsMultipleFromWorldCoords(x, y);\r\n    }\r\n\r\n    /**\r\n     * Checks if the tile is used\r\n     * @param {Vector} tile\r\n     * @param {Layer} layer\r\n     * @returns {boolean}\r\n     */\r\n    isTileUsed(tile, layer) {\r\n        if (G_IS_DEV) {\r\n            this.internalCheckTile(tile);\r\n        }\r\n        const chunk = this.getChunkAtTileOrNull(tile.x, tile.y);\r\n        return chunk && chunk.getLayerContentFromWorldCoords(tile.x, tile.y, layer) != null;\r\n    }\r\n\r\n    /**\r\n     * Checks if the tile is used\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {Layer} layer\r\n     * @returns {boolean}\r\n     */\r\n    isTileUsedXY(x, y, layer) {\r\n        const chunk = this.getChunkAtTileOrNull(x, y);\r\n        return chunk && chunk.getLayerContentFromWorldCoords(x, y, layer) != null;\r\n    }\r\n\r\n    /**\r\n     * Sets the tiles content\r\n     * @param {Vector} tile\r\n     * @param {Entity} entity\r\n     */\r\n    setTileContent(tile, entity) {\r\n        if (G_IS_DEV) {\r\n            this.internalCheckTile(tile);\r\n        }\r\n\r\n        this.getOrCreateChunkAtTile(tile.x, tile.y).setLayerContentFromWorldCords(\r\n            tile.x,\r\n            tile.y,\r\n            entity,\r\n            entity.layer\r\n        );\r\n\r\n        const staticComponent = entity.components.StaticMapEntity;\r\n        assert(staticComponent, \"Can only place static map entities in tiles\");\r\n    }\r\n\r\n    /**\r\n     * Places an entity with the StaticMapEntity component\r\n     * @param {Entity} entity\r\n     */\r\n    placeStaticEntity(entity) {\r\n        assert(entity.components.StaticMapEntity, \"Entity is not static\");\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const rect = staticComp.getTileSpaceBounds();\r\n        for (let dx = 0; dx < rect.w; ++dx) {\r\n            for (let dy = 0; dy < rect.h; ++dy) {\r\n                const x = rect.x + dx;\r\n                const y = rect.y + dy;\r\n                this.getOrCreateChunkAtTile(x, y).setLayerContentFromWorldCords(x, y, entity, entity.layer);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes an entity with the StaticMapEntity component\r\n     * @param {Entity} entity\r\n     */\r\n    removeStaticEntity(entity) {\r\n        assert(entity.components.StaticMapEntity, \"Entity is not static\");\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const rect = staticComp.getTileSpaceBounds();\r\n        for (let dx = 0; dx < rect.w; ++dx) {\r\n            for (let dy = 0; dy < rect.h; ++dy) {\r\n                const x = rect.x + dx;\r\n                const y = rect.y + dy;\r\n                this.getOrCreateChunkAtTile(x, y).setLayerContentFromWorldCords(x, y, null, entity.layer);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Internal\r\n\r\n    /**\r\n     * Checks a given tile for validty\r\n     * @param {Vector} tile\r\n     */\r\n    internalCheckTile(tile) {\r\n        assert(tile instanceof Vector, \"tile is not a vector: \" + tile);\r\n        assert(tile.x % 1 === 0, \"Tile X is not a valid integer: \" + tile.x);\r\n        assert(tile.y % 1 === 0, \"Tile Y is not a valid integer: \" + tile.y);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/map.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2739,
    "kind": "class",
    "name": "BaseMap",
    "memberof": "js/game/map.js",
    "static": true,
    "longname": "js/game/map.js~BaseMap",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/map.js",
    "importStyle": "{BaseMap}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/serialization.js~BasicSerializableObject"
    ]
  },
  {
    "__docId__": 2740,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/map.js~BaseMap.getId",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2741,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/map.js~BaseMap.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"seed\": *}"
      ]
    }
  },
  {
    "__docId__": 2742,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2743,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/map.js~BaseMap",
    "static": false,
    "longname": "js/game/map.js~BaseMap#root",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2744,
    "kind": "member",
    "name": "seed",
    "memberof": "js/game/map.js~BaseMap",
    "static": false,
    "longname": "js/game/map.js~BaseMap#seed",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2745,
    "kind": "member",
    "name": "chunksById",
    "memberof": "js/game/map.js~BaseMap",
    "static": false,
    "longname": "js/game/map.js~BaseMap#chunksById",
    "access": "public",
    "description": "Mapping of 'X|Y' to chunk",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "Map<string, MapChunkView>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2746,
    "kind": "method",
    "name": "getChunk",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#getChunk",
    "access": "public",
    "description": "Returns the given chunk by index",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "chunkX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "chunkY",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2747,
    "kind": "method",
    "name": "getOrCreateChunkAtTile",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#getOrCreateChunkAtTile",
    "access": "public",
    "description": "Gets or creates a new chunk if not existent for the given tile",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MapChunkView}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tileX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tileY",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MapChunkView"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2748,
    "kind": "method",
    "name": "getChunkAtTileOrNull",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#getChunkAtTileOrNull",
    "access": "public",
    "description": "Gets a chunk if not existent for the given tile",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MapChunkView?}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tileX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tileY",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MapChunkView?"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2749,
    "kind": "method",
    "name": "isValidTile",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#isValidTile",
    "access": "public",
    "description": "Checks if a given tile is within the map bounds",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "tile",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2750,
    "kind": "method",
    "name": "getTileContent",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#getTileContent",
    "access": "public",
    "description": "Returns the tile content of a given tile",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Entity} Entity or null"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "tile",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Entity"
      ],
      "spread": false,
      "description": "Entity or null"
    }
  },
  {
    "__docId__": 2751,
    "kind": "method",
    "name": "getLowerLayerContentXY",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#getLowerLayerContentXY",
    "access": "public",
    "description": "Returns the lower layers content of the given tile",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem=}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem="
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2752,
    "kind": "method",
    "name": "getLayerContentXY",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#getLayerContentXY",
    "access": "public",
    "description": "Returns the tile content of a given tile",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Entity} Entity or null"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Entity"
      ],
      "spread": false,
      "description": "Entity or null"
    }
  },
  {
    "__docId__": 2753,
    "kind": "method",
    "name": "getLayersContentsMultipleXY",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#getLayersContentsMultipleXY",
    "access": "public",
    "description": "Returns the tile contents of a given tile",
    "lineNumber": 136,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<Entity>} Entity or null"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Entity>"
      ],
      "spread": false,
      "description": "Entity or null"
    }
  },
  {
    "__docId__": 2754,
    "kind": "method",
    "name": "isTileUsed",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#isTileUsed",
    "access": "public",
    "description": "Checks if the tile is used",
    "lineNumber": 150,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "tile",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2755,
    "kind": "method",
    "name": "isTileUsedXY",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#isTileUsedXY",
    "access": "public",
    "description": "Checks if the tile is used",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2756,
    "kind": "method",
    "name": "setTileContent",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#setTileContent",
    "access": "public",
    "description": "Sets the tiles content",
    "lineNumber": 175,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "tile",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2757,
    "kind": "method",
    "name": "placeStaticEntity",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#placeStaticEntity",
    "access": "public",
    "description": "Places an entity with the StaticMapEntity component",
    "lineNumber": 195,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2758,
    "kind": "method",
    "name": "removeStaticEntity",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#removeStaticEntity",
    "access": "public",
    "description": "Removes an entity with the StaticMapEntity component",
    "lineNumber": 212,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2759,
    "kind": "method",
    "name": "internalCheckTile",
    "memberof": "js/game/map.js~BaseMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map.js~BaseMap#internalCheckTile",
    "access": "public",
    "description": "Checks a given tile for validty",
    "lineNumber": 231,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "tile",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2760,
    "kind": "file",
    "name": "js/game/map_chunk.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { RandomNumberGenerator } from \"../core/rng\";\r\nimport { clamp, fastArrayDeleteValueIfContained, make2DUndefinedArray } from \"../core/utils\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { BaseItem } from \"./base_item\";\r\nimport { enumColors } from \"./colors\";\r\nimport { Entity } from \"./entity\";\r\nimport { ColorItem } from \"./items/color_item\";\r\nimport { GameRoot } from \"./root\";\r\nimport { enumSubShape } from \"./shape_definition\";\r\nimport { Rectangle } from \"../core/rectangle\";\r\n\r\nconst logger = createLogger(\"map_chunk\");\r\n\r\nexport class MapChunk {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    constructor(root, x, y) {\r\n        this.root = root;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.tileX = x * globalConfig.mapChunkSize;\r\n        this.tileY = y * globalConfig.mapChunkSize;\r\n\r\n        /**\r\n         * Stores the contents of the lower (= map resources) layer\r\n         *  @type {Array<Array<?BaseItem>>}\r\n         */\r\n        this.lowerLayer = make2DUndefinedArray(globalConfig.mapChunkSize, globalConfig.mapChunkSize);\r\n\r\n        /**\r\n         * Stores the contents of the regular layer\r\n         * @type {Array<Array<?Entity>>}\r\n         */\r\n        this.contents = make2DUndefinedArray(globalConfig.mapChunkSize, globalConfig.mapChunkSize);\r\n\r\n        /**\r\n         * Stores the contents of the wires layer\r\n         *  @type {Array<Array<?Entity>>}\r\n         */\r\n        this.wireContents = make2DUndefinedArray(globalConfig.mapChunkSize, globalConfig.mapChunkSize);\r\n\r\n        /**\r\n         * Stores the contents of the layers\r\n         *  @type {Map<string, Array<Array<?Entity>>>}\r\n         */\r\n        this.layersContents = new Map();\r\n\r\n        /** @type {Array<Entity>} */\r\n        this.containedEntities = [];\r\n\r\n        /**\r\n         * World space rectangle, can be used for culling\r\n         */\r\n        this.worldSpaceRectangle = new Rectangle(\r\n            this.tileX * globalConfig.tileSize,\r\n            this.tileY * globalConfig.tileSize,\r\n            globalConfig.mapChunkWorldSize,\r\n            globalConfig.mapChunkWorldSize\r\n        );\r\n\r\n        /**\r\n         * Tile space rectangle, can be used for culling\r\n         */\r\n        this.tileSpaceRectangle = new Rectangle(\r\n            this.tileX,\r\n            this.tileY,\r\n            globalConfig.mapChunkSize,\r\n            globalConfig.mapChunkSize\r\n        );\r\n\r\n        /**\r\n         * Which entities this chunk contains, sorted by layer\r\n         * @type {Record<Layer, Array<Entity>>}\r\n         */\r\n        this.containedEntitiesByLayer = {\r\n            regular: [],\r\n            wires: [],\r\n        };\r\n\r\n        for (let i = 0; i < shapezAPI.ingame.layers.length; i++) {\r\n            const layer = shapezAPI.ingame.layers[i];\r\n            this.containedEntitiesByLayer[layer] = [];\r\n            this.layersContents.set(\r\n                layer,\r\n                make2DUndefinedArray(globalConfig.mapChunkSize, globalConfig.mapChunkSize)\r\n            );\r\n        }\r\n\r\n        /**\r\n         * Store which patches we have so we can render them in the overview\r\n         * @type {Array<{pos: Vector, item: BaseItem, size: number }>}\r\n         */\r\n        this.patches = [];\r\n\r\n        this.generateLowerLayer();\r\n    }\r\n\r\n    /**\r\n     * Generates a patch filled with the given item\r\n     * @param {RandomNumberGenerator} rng\r\n     * @param {number} patchSize\r\n     * @param {any} item\r\n     * @param {number=} overrideX Override the X position of the patch\r\n     * @param {number=} overrideY Override the Y position of the patch\r\n     */\r\n    internalGeneratePatch(rng, patchSize, item, overrideX = null, overrideY = null) {\r\n        const border = Math.ceil(patchSize / 2 + 3);\r\n\r\n        // Find a position within the chunk which is not blocked\r\n        let patchX = rng.nextIntRange(border, globalConfig.mapChunkSize - border - 1);\r\n        let patchY = rng.nextIntRange(border, globalConfig.mapChunkSize - border - 1);\r\n\r\n        if (overrideX !== null) {\r\n            patchX = overrideX;\r\n        }\r\n\r\n        if (overrideY !== null) {\r\n            patchY = overrideY;\r\n        }\r\n\r\n        const avgPos = new Vector(0, 0);\r\n        let patchesDrawn = 0;\r\n\r\n        // Each patch consists of multiple circles\r\n        const numCircles = patchSize;\r\n\r\n        for (let i = 0; i <= numCircles; ++i) {\r\n            // Determine circle parameters\r\n            const circleRadius = Math.min(1 + i, patchSize);\r\n            const circleRadiusSquare = circleRadius * circleRadius;\r\n            const circleOffsetRadius = (numCircles - i) / 2 + 2;\r\n\r\n            // We draw an elipsis actually\r\n            const circleScaleX = rng.nextRange(0.9, 1.1);\r\n            const circleScaleY = rng.nextRange(0.9, 1.1);\r\n\r\n            const circleX = patchX + rng.nextIntRange(-circleOffsetRadius, circleOffsetRadius);\r\n            const circleY = patchY + rng.nextIntRange(-circleOffsetRadius, circleOffsetRadius);\r\n\r\n            for (let dx = -circleRadius * circleScaleX - 2; dx <= circleRadius * circleScaleX + 2; ++dx) {\r\n                for (let dy = -circleRadius * circleScaleY - 2; dy <= circleRadius * circleScaleY + 2; ++dy) {\r\n                    const x = Math.round(circleX + dx);\r\n                    const y = Math.round(circleY + dy);\r\n                    if (x >= 0 && x < globalConfig.mapChunkSize && y >= 0 && y <= globalConfig.mapChunkSize) {\r\n                        const originalDx = dx / circleScaleX;\r\n                        const originalDy = dy / circleScaleY;\r\n                        if (originalDx * originalDx + originalDy * originalDy <= circleRadiusSquare) {\r\n                            if (!this.lowerLayer[x][y]) {\r\n                                this.lowerLayer[x][y] = item;\r\n                                ++patchesDrawn;\r\n                                avgPos.x += x;\r\n                                avgPos.y += y;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // logger.warn(\"Tried to spawn resource out of chunk\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.patches.push({\r\n            pos: avgPos.divideScalar(patchesDrawn),\r\n            item,\r\n            size: patchSize,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Generates the lower layer \"terrain\"\r\n     */\r\n    generateLowerLayer() {\r\n        const rng = new RandomNumberGenerator(this.x + \"|\" + this.y + \"|\" + this.root.map.seed);\r\n\r\n        if (this.generatePredefined(rng)) {\r\n            return;\r\n        }\r\n\r\n        const chunkCenter = new Vector(this.x, this.y).addScalar(0.5);\r\n        const distanceToOriginInChunks = Math.round(chunkCenter.length());\r\n\r\n        for (let i = 0; i < MapChunk.lowerLayers.length; i++) {\r\n            MapChunk.lowerLayers[i](this, rng, distanceToOriginInChunks);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if this chunk has predefined contents, and if so returns true and generates the\r\n     * predefined contents\r\n     * @param {RandomNumberGenerator} rng\r\n     * @returns {boolean}\r\n     */\r\n    generatePredefined(rng) {\r\n        for (let i = 0; i < MapChunk.predefined.length; i++) {\r\n            if (MapChunk.predefined[i](this, rng)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} worldX\r\n     * @param {number} worldY\r\n     * @returns {BaseItem=}\r\n     */\r\n    getLowerLayerFromWorldCoords(worldX, worldY) {\r\n        const localX = worldX - this.tileX;\r\n        const localY = worldY - this.tileY;\r\n        assert(localX >= 0, \"Local X is < 0\");\r\n        assert(localY >= 0, \"Local Y is < 0\");\r\n        assert(localX < globalConfig.mapChunkSize, \"Local X is >= chunk size\");\r\n        assert(localY < globalConfig.mapChunkSize, \"Local Y is >= chunk size\");\r\n        return this.lowerLayer[localX][localY] || null;\r\n    }\r\n\r\n    /**\r\n     * Returns the contents of this chunk from the given world space coordinates\r\n     * @param {number} worldX\r\n     * @param {number} worldY\r\n     * @returns {Entity=}\r\n     */\r\n    getTileContentFromWorldCoords(worldX, worldY) {\r\n        const localX = worldX - this.tileX;\r\n        const localY = worldY - this.tileY;\r\n        assert(localX >= 0, \"Local X is < 0\");\r\n        assert(localY >= 0, \"Local Y is < 0\");\r\n        assert(localX < globalConfig.mapChunkSize, \"Local X is >= chunk size\");\r\n        assert(localY < globalConfig.mapChunkSize, \"Local Y is >= chunk size\");\r\n        return this.contents[localX][localY] || null;\r\n    }\r\n\r\n    /**\r\n     * Returns the contents of this chunk from the given world space coordinates\r\n     * @param {number} worldX\r\n     * @param {number} worldY\r\n     * @param {Layer} layer\r\n     * @returns {Entity=}\r\n     */\r\n    getLayerContentFromWorldCoords(worldX, worldY, layer) {\r\n        const localX = worldX - this.tileX;\r\n        const localY = worldY - this.tileY;\r\n        assert(localX >= 0, \"Local X is < 0\");\r\n        assert(localY >= 0, \"Local Y is < 0\");\r\n        assert(localX < globalConfig.mapChunkSize, \"Local X is >= chunk size\");\r\n        assert(localY < globalConfig.mapChunkSize, \"Local Y is >= chunk size\");\r\n        if (layer === \"regular\") {\r\n            return this.contents[localX][localY] || null;\r\n        } else if (layer === \"wires\") {\r\n            return this.wireContents[localX][localY] || null;\r\n        } else if (this.layersContents.has(layer)) {\r\n            return this.layersContents.get(layer)[localX][localY] || null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the contents of this chunk from the given world space coordinates\r\n     * @param {number} worldX\r\n     * @param {number} worldY\r\n     * @returns {Array<Entity>}\r\n     */\r\n    getLayersContentsMultipleFromWorldCoords(worldX, worldY) {\r\n        const localX = worldX - this.tileX;\r\n        const localY = worldY - this.tileY;\r\n        assert(localX >= 0, \"Local X is < 0\");\r\n        assert(localY >= 0, \"Local Y is < 0\");\r\n        assert(localX < globalConfig.mapChunkSize, \"Local X is >= chunk size\");\r\n        assert(localY < globalConfig.mapChunkSize, \"Local Y is >= chunk size\");\r\n\r\n        const regularContent = this.contents[localX][localY];\r\n        const wireContent = this.wireContents[localX][localY];\r\n\r\n        const result = [];\r\n        if (regularContent) {\r\n            result.push(regularContent);\r\n        }\r\n        if (wireContent) {\r\n            result.push(wireContent);\r\n        }\r\n\r\n        for (const [layer, array] of this.layersContents) {\r\n            if (array[localX][localY]) {\r\n                result.push(array[localX][localY]);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns the chunks contents from the given local coordinates\r\n     * @param {number} localX\r\n     * @param {number} localY\r\n     * @returns {Entity=}\r\n     */\r\n    getTileContentFromLocalCoords(localX, localY) {\r\n        assert(localX >= 0, \"Local X is < 0\");\r\n        assert(localY >= 0, \"Local Y is < 0\");\r\n        assert(localX < globalConfig.mapChunkSize, \"Local X is >= chunk size\");\r\n        assert(localY < globalConfig.mapChunkSize, \"Local Y is >= chunk size\");\r\n\r\n        return this.contents[localX][localY] || null;\r\n    }\r\n\r\n    /**\r\n     * Sets the chunks contents\r\n     * @param {number} tileX\r\n     * @param {number} tileY\r\n     * @param {Entity} contents\r\n     * @param {Layer} layer\r\n     */\r\n    setLayerContentFromWorldCords(tileX, tileY, contents, layer) {\r\n        const localX = tileX - this.tileX;\r\n        const localY = tileY - this.tileY;\r\n        assert(localX >= 0, \"Local X is < 0\");\r\n        assert(localY >= 0, \"Local Y is < 0\");\r\n        assert(localX < globalConfig.mapChunkSize, \"Local X is >= chunk size\");\r\n        assert(localY < globalConfig.mapChunkSize, \"Local Y is >= chunk size\");\r\n\r\n        let oldContents;\r\n        if (layer === \"regular\") {\r\n            oldContents = this.contents[localX][localY];\r\n        } else if (layer === \"wires\") {\r\n            oldContents = this.wireContents[localX][localY];\r\n        } else if (this.layersContents.has(layer)) {\r\n            oldContents = this.layersContents.get(layer)[localX][localY];\r\n        }\r\n\r\n        assert(contents === null || !oldContents, \"Tile already used: \" + tileX + \" / \" + tileY);\r\n\r\n        if (oldContents) {\r\n            // Remove from list (the old contents must be reigstered)\r\n            fastArrayDeleteValueIfContained(this.containedEntities, oldContents);\r\n            fastArrayDeleteValueIfContained(this.containedEntitiesByLayer[layer], oldContents);\r\n        }\r\n\r\n        if (layer === \"regular\") {\r\n            this.contents[localX][localY] = contents;\r\n        } else if (layer === \"wires\") {\r\n            this.wireContents[localX][localY] = contents;\r\n        } else if (this.layersContents.has(layer)) {\r\n            this.layersContents.get(layer)[localX][localY] = contents;\r\n        }\r\n\r\n        if (contents) {\r\n            if (this.containedEntities.indexOf(contents) < 0) {\r\n                this.containedEntities.push(contents);\r\n            }\r\n\r\n            if (this.containedEntitiesByLayer[layer].indexOf(contents) < 0) {\r\n                this.containedEntitiesByLayer[layer].push(contents);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nMapChunk.predefined = [\r\n    (self, rng) => {\r\n        if (self.x === 0 && self.y === 0) {\r\n            self.internalGeneratePatch(rng, 2, ColorItem.ITEM_SINGLETONS[enumColors.red], 7, 7);\r\n            return true;\r\n        }\r\n    },\r\n    (self, rng) => {\r\n        if (self.x === 0 && self.y === 0) {\r\n            self.internalGeneratePatch(rng, 2, ColorItem.ITEM_SINGLETONS[enumColors.red], 7, 7);\r\n            return true;\r\n        }\r\n    },\r\n    (self, rng) => {\r\n        if (self.x === -1 && self.y === 0) {\r\n            const item = self.root.shapeDefinitionMgr.getShapeItemFromShortKey(\"CuCuCuCu\");\r\n            self.internalGeneratePatch(rng, 2, item, globalConfig.mapChunkSize - 9, 7);\r\n            return true;\r\n        }\r\n    },\r\n    (self, rng) => {\r\n        if (self.x === 0 && self.y === -1) {\r\n            const item = self.root.shapeDefinitionMgr.getShapeItemFromShortKey(\"RuRuRuRu\");\r\n            self.internalGeneratePatch(rng, 2, item, 5, globalConfig.mapChunkSize - 7);\r\n            return true;\r\n        }\r\n    },\r\n    (self, rng) => {\r\n        if (self.x === -1 && self.y === -1) {\r\n            self.internalGeneratePatch(rng, 2, ColorItem.ITEM_SINGLETONS[enumColors.green]);\r\n            return true;\r\n        }\r\n    },\r\n    (self, rng) => {\r\n        if (self.x === 5 && self.y === -2) {\r\n            const item = self.root.shapeDefinitionMgr.getShapeItemFromShortKey(\"SuSuSuSu\");\r\n            self.internalGeneratePatch(rng, 2, item, 5, globalConfig.mapChunkSize - 7);\r\n            return true;\r\n        }\r\n    },\r\n];\r\n\r\nMapChunk.lowerLayers = [\r\n    (self, rng, distanceToOriginInChunks) => {\r\n        // Determine how likely it is that there is a color patch\r\n        const colorPatchChance = 0.9 - clamp(distanceToOriginInChunks / 25, 0, 1) * 0.5;\r\n\r\n        if (rng.next() < colorPatchChance / 4) {\r\n            const colorPatchSize = Math.max(2, Math.round(1 + clamp(distanceToOriginInChunks / 8, 0, 4)));\r\n            // First, determine available colors\r\n            let availableColors = [enumColors.red, enumColors.green];\r\n            if (distanceToOriginInChunks > 2) {\r\n                availableColors.push(enumColors.blue);\r\n            }\r\n            self.internalGeneratePatch(\r\n                rng,\r\n                colorPatchSize,\r\n                ColorItem.ITEM_SINGLETONS[rng.choice(availableColors)]\r\n            );\r\n        }\r\n    },\r\n    (self, rng, distanceToOriginInChunks) => {\r\n        /**\r\n         * Chooses a random shape with the given weights\r\n         * @param {RandomNumberGenerator} rng\r\n         * @param {Object.<enumSubShape, number>} weights\r\n         * @returns {enumSubShape}\r\n         */\r\n        var internalGenerateRandomSubShape = (rng, weights) => {\r\n            // @ts-ignore\r\n            const sum = Object.values(weights).reduce((a, b) => a + b, 0);\r\n\r\n            const chosenNumber = rng.nextIntRange(0, sum - 1);\r\n            let accumulated = 0;\r\n            for (const key in weights) {\r\n                const weight = weights[key];\r\n                if (accumulated + weight > chosenNumber) {\r\n                    return key;\r\n                }\r\n                accumulated += weight;\r\n            }\r\n\r\n            logger.error(\"Failed to find matching shape in chunk generation\");\r\n            return enumSubShape.circle;\r\n        };\r\n        /**\r\n         * Generates a shape patch\r\n         * @param {RandomNumberGenerator} rng\r\n         * @param {number} shapePatchSize\r\n         * @param {number} distanceToOriginInChunks\r\n         */\r\n        var internalGenerateShapePatch = (rng, shapePatchSize, distanceToOriginInChunks) => {\r\n            /** @type {[enumSubShape, enumSubShape, enumSubShape, enumSubShape]} */\r\n            let subShapes = null;\r\n\r\n            let weights = {};\r\n\r\n            // Later there is a mix of everything\r\n            weights = {\r\n                [enumSubShape.rect]: 100,\r\n                [enumSubShape.circle]: Math.round(50 + clamp(distanceToOriginInChunks * 2, 0, 50)),\r\n                [enumSubShape.star]: Math.round(20 + clamp(distanceToOriginInChunks, 0, 30)),\r\n                [enumSubShape.windmill]: Math.round(6 + clamp(distanceToOriginInChunks / 2, 0, 20)),\r\n            };\r\n\r\n            if (distanceToOriginInChunks < 7) {\r\n                // Initial chunks can not spawn the good stuff\r\n                weights[enumSubShape.star] = 0;\r\n                weights[enumSubShape.windmill] = 0;\r\n            }\r\n\r\n            if (distanceToOriginInChunks < 10) {\r\n                // Initial chunk patches always have the same shape\r\n                const subShape = internalGenerateRandomSubShape(rng, weights);\r\n                subShapes = [subShape, subShape, subShape, subShape];\r\n            } else if (distanceToOriginInChunks < 15) {\r\n                // Later patches can also have mixed ones\r\n                const subShapeA = internalGenerateRandomSubShape(rng, weights);\r\n                const subShapeB = internalGenerateRandomSubShape(rng, weights);\r\n                subShapes = [subShapeA, subShapeA, subShapeB, subShapeB];\r\n            } else {\r\n                // Finally there is a mix of everything\r\n                subShapes = [\r\n                    internalGenerateRandomSubShape(rng, weights),\r\n                    internalGenerateRandomSubShape(rng, weights),\r\n                    internalGenerateRandomSubShape(rng, weights),\r\n                    internalGenerateRandomSubShape(rng, weights),\r\n                ];\r\n            }\r\n\r\n            // Makes sure windmills never spawn as whole\r\n            let windmillCount = 0;\r\n            for (let i = 0; i < subShapes.length; ++i) {\r\n                if (subShapes[i] === enumSubShape.windmill) {\r\n                    ++windmillCount;\r\n                }\r\n            }\r\n            if (windmillCount > 1) {\r\n                subShapes[0] = enumSubShape.rect;\r\n                subShapes[1] = enumSubShape.rect;\r\n            }\r\n\r\n            const definition = self.root.shapeDefinitionMgr.getDefinitionFromSimpleShapes(subShapes);\r\n            self.internalGeneratePatch(\r\n                rng,\r\n                shapePatchSize,\r\n                self.root.shapeDefinitionMgr.getShapeItemFromDefinition(definition)\r\n            );\r\n        };\r\n\r\n        // Determine how likely it is that there is a shape patch\r\n        const shapePatchChance = 0.9 - clamp(distanceToOriginInChunks / 25, 0, 1) * 0.5;\r\n        if (rng.next() < shapePatchChance / 4) {\r\n            const shapePatchSize = Math.max(2, Math.round(1 + clamp(distanceToOriginInChunks / 8, 0, 4)));\r\n            internalGenerateShapePatch(rng, shapePatchSize, distanceToOriginInChunks);\r\n        }\r\n    },\r\n];\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/map_chunk.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2761,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/map_chunk.js",
    "static": true,
    "longname": "js/game/map_chunk.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/map_chunk.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2762,
    "kind": "class",
    "name": "MapChunk",
    "memberof": "js/game/map_chunk.js",
    "static": true,
    "longname": "js/game/map_chunk.js~MapChunk",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/map_chunk.js",
    "importStyle": "{MapChunk}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 2763,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2764,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#root",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2765,
    "kind": "member",
    "name": "x",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#x",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2766,
    "kind": "member",
    "name": "y",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#y",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2767,
    "kind": "member",
    "name": "tileX",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#tileX",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2768,
    "kind": "member",
    "name": "tileY",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#tileY",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2769,
    "kind": "member",
    "name": "lowerLayer",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#lowerLayer",
    "access": "public",
    "description": "Stores the contents of the lower (= map resources) layer",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<?BaseItem>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2770,
    "kind": "member",
    "name": "contents",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#contents",
    "access": "public",
    "description": "Stores the contents of the regular layer",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<?Entity>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2771,
    "kind": "member",
    "name": "wireContents",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#wireContents",
    "access": "public",
    "description": "Stores the contents of the wires layer",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<?Entity>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2772,
    "kind": "member",
    "name": "layersContents",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#layersContents",
    "access": "public",
    "description": "Stores the contents of the layers",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "Map<string, Array<Array<?Entity>>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2773,
    "kind": "member",
    "name": "containedEntities",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#containedEntities",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "Array<Entity>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2774,
    "kind": "member",
    "name": "worldSpaceRectangle",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#worldSpaceRectangle",
    "access": "public",
    "description": "World space rectangle, can be used for culling",
    "lineNumber": 60,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2775,
    "kind": "member",
    "name": "tileSpaceRectangle",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#tileSpaceRectangle",
    "access": "public",
    "description": "Tile space rectangle, can be used for culling",
    "lineNumber": 70,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2776,
    "kind": "member",
    "name": "containedEntitiesByLayer",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#containedEntitiesByLayer",
    "access": "public",
    "description": "Which entities this chunk contains, sorted by layer",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "Record<Layer, Array<Entity>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2777,
    "kind": "member",
    "name": "patches",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#patches",
    "access": "public",
    "description": "Store which patches we have so we can render them in the overview",
    "lineNumber": 99,
    "type": {
      "nullable": null,
      "types": [
        "Array<{pos: Vector, item: BaseItem, size: number }>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2778,
    "kind": "method",
    "name": "internalGeneratePatch",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#internalGeneratePatch",
    "access": "public",
    "description": "Generates a patch filled with the given item",
    "lineNumber": 112,
    "params": [
      {
        "nullable": null,
        "types": [
          "RandomNumberGenerator"
        ],
        "spread": false,
        "optional": false,
        "name": "rng",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "patchSize",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "overrideX",
        "description": "Override the X position of the patch"
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "overrideY",
        "description": "Override the Y position of the patch"
      }
    ],
    "return": null
  },
  {
    "__docId__": 2779,
    "kind": "method",
    "name": "generateLowerLayer",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#generateLowerLayer",
    "access": "public",
    "description": "Generates the lower layer \"terrain\"",
    "lineNumber": 178,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2780,
    "kind": "method",
    "name": "generatePredefined",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#generatePredefined",
    "access": "public",
    "description": "Checks if this chunk has predefined contents, and if so returns true and generates the\npredefined contents",
    "lineNumber": 199,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RandomNumberGenerator"
        ],
        "spread": false,
        "optional": false,
        "name": "rng",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2781,
    "kind": "method",
    "name": "getLowerLayerFromWorldCoords",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#getLowerLayerFromWorldCoords",
    "access": "public",
    "description": "",
    "lineNumber": 214,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem=}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "worldX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "worldY",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem="
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2782,
    "kind": "method",
    "name": "getTileContentFromWorldCoords",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#getTileContentFromWorldCoords",
    "access": "public",
    "description": "Returns the contents of this chunk from the given world space coordinates",
    "lineNumber": 230,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Entity=}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "worldX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "worldY",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Entity="
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2783,
    "kind": "method",
    "name": "getLayerContentFromWorldCoords",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#getLayerContentFromWorldCoords",
    "access": "public",
    "description": "Returns the contents of this chunk from the given world space coordinates",
    "lineNumber": 247,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Entity=}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "worldX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "worldY",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Entity="
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2784,
    "kind": "method",
    "name": "getLayersContentsMultipleFromWorldCoords",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#getLayersContentsMultipleFromWorldCoords",
    "access": "public",
    "description": "Returns the contents of this chunk from the given world space coordinates",
    "lineNumber": 269,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<Entity>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "worldX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "worldY",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Entity>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2785,
    "kind": "method",
    "name": "getTileContentFromLocalCoords",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#getTileContentFromLocalCoords",
    "access": "public",
    "description": "Returns the chunks contents from the given local coordinates",
    "lineNumber": 303,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Entity=}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "localX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "localY",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Entity="
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2786,
    "kind": "method",
    "name": "setLayerContentFromWorldCords",
    "memberof": "js/game/map_chunk.js~MapChunk",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk.js~MapChunk#setLayerContentFromWorldCords",
    "access": "public",
    "description": "Sets the chunks contents",
    "lineNumber": 319,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tileX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tileY",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "contents",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2787,
    "kind": "file",
    "name": "js/game/map_chunk_view.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { getBuildingDataFromCode } from \"./building_codes\";\r\nimport { Entity } from \"./entity\";\r\nimport { MapChunk } from \"./map_chunk\";\r\nimport { GameRoot } from \"./root\";\r\nimport { THEME } from \"./theme\";\r\nimport { drawSpriteClipped } from \"../core/draw_utils\";\r\n\r\nexport const CHUNK_OVERLAY_RES = 3;\r\n\r\nexport class MapChunkView extends MapChunk {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    constructor(root, x, y) {\r\n        super(root, x, y);\r\n\r\n        /**\r\n         * Whenever something changes, we increase this number - so we know we need to redraw\r\n         */\r\n        this.renderIteration = 0;\r\n\r\n        this.markDirty();\r\n    }\r\n\r\n    /**\r\n     * Marks this chunk as dirty, rerendering all caches\r\n     */\r\n    markDirty() {\r\n        ++this.renderIteration;\r\n        this.renderKey = this.x + \"/\" + this.y + \"@\" + this.renderIteration;\r\n    }\r\n\r\n    /**\r\n     * Draws the background layer\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawBackgroundLayer(parameters) {\r\n        const systemUpdateOrder = JSON.parse(JSON.stringify(this.root.systemMgr.systemUpdateOrder));\r\n        const systems = this.root.systemMgr.systems;\r\n        for (let i = 0; i < systemUpdateOrder.length; i++) {\r\n            const system = systems[systemUpdateOrder[i]];\r\n            if (typeof system.drawChunk_BackgroundLayer !== \"function\") continue;\r\n            system.drawChunk_BackgroundLayer(parameters, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the dynamic foreground layer\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawForegroundDynamicLayer(parameters) {\r\n        const systemUpdateOrder = JSON.parse(JSON.stringify(this.root.systemMgr.systemUpdateOrder));\r\n        const systems = this.root.systemMgr.systems;\r\n        for (let i = 0; i < systemUpdateOrder.length; i++) {\r\n            const system = systems[systemUpdateOrder[i]];\r\n            if (typeof system.drawChunk_ForegroundDynamicLayer !== \"function\") continue;\r\n            system.drawChunk_ForegroundDynamicLayer(parameters, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the static foreground layer\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawForegroundStaticLayer(parameters) {\r\n        const systemUpdateOrder = JSON.parse(JSON.stringify(this.root.systemMgr.systemUpdateOrder));\r\n        const systems = this.root.systemMgr.systems;\r\n        for (let i = 0; i < systemUpdateOrder.length; i++) {\r\n            const system = systems[systemUpdateOrder[i]];\r\n            if (typeof system.drawChunk_ForegroundStaticLayer !== \"function\") continue;\r\n            system.drawChunk_ForegroundStaticLayer(parameters, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Overlay\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawOverlay(parameters) {\r\n        const overlaySize = globalConfig.mapChunkSize * CHUNK_OVERLAY_RES;\r\n        const sprite = this.root.buffers.getForKey({\r\n            key: \"chunk@\" + this.root.currentLayer,\r\n            subKey: this.renderKey,\r\n            w: overlaySize,\r\n            h: overlaySize,\r\n            dpi: 1,\r\n            redrawMethod: this.generateOverlayBuffer.bind(this),\r\n        });\r\n\r\n        const dims = globalConfig.mapChunkWorldSize;\r\n        const extrude = 0.05;\r\n\r\n        // Draw chunk \"pixel\" art\r\n        parameters.context.imageSmoothingEnabled = false;\r\n        drawSpriteClipped({\r\n            parameters,\r\n            sprite,\r\n            x: this.x * dims - extrude,\r\n            y: this.y * dims - extrude,\r\n            w: dims + 2 * extrude,\r\n            h: dims + 2 * extrude,\r\n            originalW: overlaySize,\r\n            originalH: overlaySize,\r\n        });\r\n\r\n        parameters.context.imageSmoothingEnabled = true;\r\n        const resourcesScale = this.root.app.settings.getAllSettings().mapResourcesScale;\r\n\r\n        // Draw patch items\r\n        if (this.root.currentLayer === \"regular\" && resourcesScale > 0.05) {\r\n            const diameter = (70 / Math.pow(parameters.zoomLevel, 0.35)) * (0.2 + 2 * resourcesScale);\r\n\r\n            for (let i = 0; i < this.patches.length; ++i) {\r\n                const patch = this.patches[i];\r\n                if (patch.item.getItemType && patch.item.getItemType() === \"shape\") {\r\n                    const destX = this.x * dims + patch.pos.x * globalConfig.tileSize;\r\n                    const destY = this.y * dims + patch.pos.y * globalConfig.tileSize;\r\n                    patch.item.drawItemCenteredClipped(destX, destY, parameters, diameter);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {HTMLCanvasElement} canvas\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} w\r\n     * @param {number} h\r\n     * @param {number} dpi\r\n     */\r\n    generateOverlayBuffer(canvas, context, w, h, dpi) {\r\n        context.fillStyle =\r\n            this.containedEntities.length > 0 ?\r\n            THEME.map.chunkOverview.filled :\r\n            THEME.map.chunkOverview.empty;\r\n        context.fillRect(0, 0, w, h);\r\n\r\n        if (this.root.app.settings.getAllSettings().displayChunkBorders) {\r\n            context.fillStyle = THEME.map.chunkBorders;\r\n            context.fillRect(0, 0, w, 1);\r\n            context.fillRect(0, 1, 1, h);\r\n        }\r\n\r\n        for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n            const lowerArray = this.lowerLayer[x];\r\n            const upperArray = this.contents[x];\r\n            for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n                const upperContent = upperArray[y];\r\n                if (upperContent) {\r\n                    const staticComp = upperContent.components.StaticMapEntity;\r\n                    const data = getBuildingDataFromCode(staticComp.code);\r\n                    const metaBuilding = data.metaInstance;\r\n\r\n                    const overlayMatrix = metaBuilding.getSpecialOverlayRenderMatrix(\r\n                        staticComp.rotation,\r\n                        data.rotationVariant,\r\n                        data.variant,\r\n                        upperContent\r\n                    );\r\n\r\n                    if (overlayMatrix) {\r\n                        // Draw lower content first since it \"shines\" through\r\n                        const lowerContent = lowerArray[y];\r\n                        if (lowerContent) {\r\n                            context.fillStyle = lowerContent.getBackgroundColorAsResource();\r\n                            context.fillRect(\r\n                                x * CHUNK_OVERLAY_RES,\r\n                                y * CHUNK_OVERLAY_RES,\r\n                                CHUNK_OVERLAY_RES,\r\n                                CHUNK_OVERLAY_RES\r\n                            );\r\n                        }\r\n\r\n                        context.fillStyle = metaBuilding.getSilhouetteColor(\r\n                            data.variant,\r\n                            data.rotationVariant\r\n                        );\r\n                        for (let dx = 0; dx < 3; ++dx) {\r\n                            for (let dy = 0; dy < 3; ++dy) {\r\n                                const isFilled = overlayMatrix[dx + dy * 3];\r\n                                if (isFilled) {\r\n                                    context.fillRect(\r\n                                        x * CHUNK_OVERLAY_RES + dx,\r\n                                        y * CHUNK_OVERLAY_RES + dy,\r\n                                        1,\r\n                                        1\r\n                                    );\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        continue;\r\n                    } else {\r\n                        context.fillStyle = metaBuilding.getSilhouetteColor(\r\n                            data.variant,\r\n                            data.rotationVariant\r\n                        );\r\n                        context.fillRect(\r\n                            x * CHUNK_OVERLAY_RES,\r\n                            y * CHUNK_OVERLAY_RES,\r\n                            CHUNK_OVERLAY_RES,\r\n                            CHUNK_OVERLAY_RES\r\n                        );\r\n\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                const lowerContent = lowerArray[y];\r\n                if (lowerContent) {\r\n                    if (lowerContent.getBackgroundColorAsResource) {\r\n                        context.fillStyle = lowerContent.getBackgroundColorAsResource();\r\n                    } else {\r\n                        // @ts-ignore\r\n                        context.fillStyle = lowerContent;\r\n                    }\r\n                    context.fillRect(\r\n                        x * CHUNK_OVERLAY_RES,\r\n                        y * CHUNK_OVERLAY_RES,\r\n                        CHUNK_OVERLAY_RES,\r\n                        CHUNK_OVERLAY_RES\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.root.currentLayer === \"wires\") {\r\n            // Draw layers overlay\r\n\r\n            context.fillStyle = THEME.map.wires.overlayColor;\r\n            context.fillRect(0, 0, w, h);\r\n\r\n            for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n                const wiresArray = this.wireContents[x];\r\n                for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n                    const content = wiresArray[y];\r\n                    if (!content) {\r\n                        continue;\r\n                    }\r\n                    MapChunkView.drawSingleOverviewTile({\r\n                        context,\r\n                        x: x * CHUNK_OVERLAY_RES,\r\n                        y: y * CHUNK_OVERLAY_RES,\r\n                        entity: content,\r\n                        tileSizePixels: CHUNK_OVERLAY_RES,\r\n                    });\r\n                }\r\n            }\r\n        } else if (this.root.currentLayer !== \"regular\") {\r\n            for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n                const array = this.layersContents[this.root.currentLayer][x];\r\n                for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n                    const content = array[y];\r\n                    if (!content) {\r\n                        continue;\r\n                    }\r\n                    MapChunkView.drawSingleOverviewTile({\r\n                        context,\r\n                        x: x * CHUNK_OVERLAY_RES,\r\n                        y: y * CHUNK_OVERLAY_RES,\r\n                        entity: content,\r\n                        tileSizePixels: CHUNK_OVERLAY_RES,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {object} param0\r\n     * @param {CanvasRenderingContext2D} param0.context\r\n     * @param {number} param0.x\r\n     * @param {number} param0.y\r\n     * @param {Entity} param0.entity\r\n     * @param {number} param0.tileSizePixels\r\n     * @param {string=} param0.overrideColor Optionally override the color to be rendered\r\n     */\r\n    static drawSingleOverviewTile({ context, x, y, entity, tileSizePixels, overrideColor = null }) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const data = getBuildingDataFromCode(staticComp.code);\r\n        const metaBuilding = data.metaInstance;\r\n        const overlayMatrix = metaBuilding.getSpecialOverlayRenderMatrix(\r\n            staticComp.rotation,\r\n            data.rotationVariant,\r\n            data.variant,\r\n            entity\r\n        );\r\n        context.fillStyle =\r\n            overrideColor || metaBuilding.getSilhouetteColor(data.variant, data.rotationVariant);\r\n        if (overlayMatrix) {\r\n            for (let dx = 0; dx < 3; ++dx) {\r\n                for (let dy = 0; dy < 3; ++dy) {\r\n                    const isFilled = overlayMatrix[dx + dy * 3];\r\n                    if (isFilled) {\r\n                        context.fillRect(\r\n                            x + (dx * tileSizePixels) / CHUNK_OVERLAY_RES,\r\n                            y + (dy * tileSizePixels) / CHUNK_OVERLAY_RES,\r\n                            tileSizePixels / CHUNK_OVERLAY_RES,\r\n                            tileSizePixels / CHUNK_OVERLAY_RES\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            context.fillRect(x, y, tileSizePixels, tileSizePixels);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the wires layer\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawWiresForegroundLayer(parameters) {\r\n        const systemUpdateOrder = JSON.parse(JSON.stringify(this.root.systemMgr.systemUpdateOrder));\r\n        const systems = this.root.systemMgr.systems;\r\n        for (let i = 0; i < systemUpdateOrder.length; i++) {\r\n            const system = systems[systemUpdateOrder[i]];\r\n            if (typeof system.drawChunk_WiresForegroundLayer !== \"function\") continue;\r\n            system.drawChunk_WiresForegroundLayer(parameters, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the layer\r\n     * @param {DrawParameters} parameters\r\n     * @param {Layer} layer\r\n     */\r\n    drawForegroundLayer(parameters, layer) {\r\n        const systemUpdateOrder = JSON.parse(JSON.stringify(this.root.systemMgr.systemUpdateOrder));\r\n        const systems = this.root.systemMgr.systems;\r\n        for (let i = 0; i < systemUpdateOrder.length; i++) {\r\n            const system = systems[systemUpdateOrder[i]];\r\n            if (typeof system.drawChunk_ForegroundLayer !== \"function\") continue;\r\n            system.drawChunk_ForegroundLayer(parameters, this, layer);\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/map_chunk_view.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2788,
    "kind": "variable",
    "name": "CHUNK_OVERLAY_RES",
    "memberof": "js/game/map_chunk_view.js",
    "static": true,
    "longname": "js/game/map_chunk_view.js~CHUNK_OVERLAY_RES",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/map_chunk_view.js",
    "importStyle": "{CHUNK_OVERLAY_RES}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2789,
    "kind": "class",
    "name": "MapChunkView",
    "memberof": "js/game/map_chunk_view.js",
    "static": true,
    "longname": "js/game/map_chunk_view.js~MapChunkView",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/map_chunk_view.js",
    "importStyle": "{MapChunkView}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/map_chunk.js~MapChunk"
    ]
  },
  {
    "__docId__": 2790,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/map_chunk_view.js~MapChunkView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk_view.js~MapChunkView#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2791,
    "kind": "member",
    "name": "renderIteration",
    "memberof": "js/game/map_chunk_view.js~MapChunkView",
    "static": false,
    "longname": "js/game/map_chunk_view.js~MapChunkView#renderIteration",
    "access": "public",
    "description": "Whenever something changes, we increase this number - so we know we need to redraw",
    "lineNumber": 25,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2792,
    "kind": "method",
    "name": "markDirty",
    "memberof": "js/game/map_chunk_view.js~MapChunkView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk_view.js~MapChunkView#markDirty",
    "access": "public",
    "description": "Marks this chunk as dirty, rerendering all caches",
    "lineNumber": 33,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2793,
    "kind": "member",
    "name": "renderKey",
    "memberof": "js/game/map_chunk_view.js~MapChunkView",
    "static": false,
    "longname": "js/game/map_chunk_view.js~MapChunkView#renderKey",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2794,
    "kind": "method",
    "name": "drawBackgroundLayer",
    "memberof": "js/game/map_chunk_view.js~MapChunkView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk_view.js~MapChunkView#drawBackgroundLayer",
    "access": "public",
    "description": "Draws the background layer",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2795,
    "kind": "method",
    "name": "drawForegroundDynamicLayer",
    "memberof": "js/game/map_chunk_view.js~MapChunkView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk_view.js~MapChunkView#drawForegroundDynamicLayer",
    "access": "public",
    "description": "Draws the dynamic foreground layer",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2796,
    "kind": "method",
    "name": "drawForegroundStaticLayer",
    "memberof": "js/game/map_chunk_view.js~MapChunkView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk_view.js~MapChunkView#drawForegroundStaticLayer",
    "access": "public",
    "description": "Draws the static foreground layer",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2797,
    "kind": "method",
    "name": "drawOverlay",
    "memberof": "js/game/map_chunk_view.js~MapChunkView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk_view.js~MapChunkView#drawOverlay",
    "access": "public",
    "description": "Overlay",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2798,
    "kind": "method",
    "name": "generateOverlayBuffer",
    "memberof": "js/game/map_chunk_view.js~MapChunkView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk_view.js~MapChunkView#generateOverlayBuffer",
    "access": "public",
    "description": "",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "canvas",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dpi",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2799,
    "kind": "method",
    "name": "drawSingleOverviewTile",
    "memberof": "js/game/map_chunk_view.js~MapChunkView",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/map_chunk_view.js~MapChunkView.drawSingleOverviewTile",
    "access": "public",
    "description": "",
    "lineNumber": 284,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.tileSizePixels",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.overrideColor",
        "description": "Optionally override the color to be rendered"
      }
    ],
    "return": null
  },
  {
    "__docId__": 2800,
    "kind": "method",
    "name": "drawWiresForegroundLayer",
    "memberof": "js/game/map_chunk_view.js~MapChunkView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk_view.js~MapChunkView#drawWiresForegroundLayer",
    "access": "public",
    "description": "Draws the wires layer",
    "lineNumber": 319,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2801,
    "kind": "method",
    "name": "drawForegroundLayer",
    "memberof": "js/game/map_chunk_view.js~MapChunkView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_chunk_view.js~MapChunkView#drawForegroundLayer",
    "access": "public",
    "description": "Draws the layer",
    "lineNumber": 334,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2802,
    "kind": "file",
    "name": "js/game/map_view.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { BaseMap } from \"./map\";\r\nimport { freeCanvas, makeOffscreenBuffer } from \"../core/buffer_utils\";\r\nimport { Entity } from \"./entity\";\r\nimport { THEME } from \"./theme\";\r\nimport { MapChunkView } from \"./map_chunk_view\";\r\n\r\n/**\r\n * This is the view of the map, it extends the map which is the raw model and allows\r\n * to draw it\r\n */\r\nexport class MapView extends BaseMap {\r\n    constructor(root) {\r\n        super(root);\r\n\r\n        /**\r\n         * DPI of the background cache images, required in some places\r\n         */\r\n        this.backgroundCacheDPI = 2;\r\n\r\n        /**\r\n         * The cached background sprite, containing the flat background\r\n         * @type {HTMLCanvasElement} */\r\n        this.cachedBackgroundCanvas = null;\r\n\r\n        /** @type {CanvasRenderingContext2D} */\r\n        this.cachedBackgroundContext = null;\r\n        this.internalInitializeCachedBackgroundCanvases();\r\n        this.root.signals.aboutToDestruct.add(this.cleanup, this);\r\n\r\n        this.root.signals.entityAdded.add(this.onEntityChanged, this);\r\n        this.root.signals.entityDestroyed.add(this.onEntityChanged, this);\r\n        this.root.signals.entityChanged.add(this.onEntityChanged, this);\r\n    }\r\n\r\n    cleanup() {\r\n        freeCanvas(this.cachedBackgroundCanvas);\r\n        this.cachedBackgroundCanvas = null;\r\n    }\r\n\r\n    /**\r\n     * Called when an entity was added, removed or changed\r\n     * @param {Entity} entity\r\n     */\r\n    onEntityChanged(entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        if (staticComp) {\r\n            const rect = staticComp.getTileSpaceBounds();\r\n            for (let x = rect.x; x <= rect.right(); ++x) {\r\n                for (let y = rect.y; y <= rect.bottom(); ++y) {\r\n                    this.root.map.getOrCreateChunkAtTile(x, y).markDirty();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws all static entities like buildings etc.\r\n     * @param {DrawParameters} drawParameters\r\n     */\r\n    drawStaticEntityDebugOverlays(drawParameters) {\r\n        if (G_IS_DEV && (globalConfig.debug.showAcceptorEjectors || globalConfig.debug.showEntityBounds)) {\r\n            const cullRange = drawParameters.visibleRect.toTileCullRectangle();\r\n            const top = cullRange.top();\r\n            const right = cullRange.right();\r\n            const bottom = cullRange.bottom();\r\n            const left = cullRange.left();\r\n\r\n            const border = 1;\r\n\r\n            const minY = top - border;\r\n            const maxY = bottom + border;\r\n            const minX = left - border;\r\n            const maxX = right + border - 1;\r\n\r\n            // Render y from top down for proper blending\r\n            for (let y = minY; y <= maxY; ++y) {\r\n                for (let x = minX; x <= maxX; ++x) {\r\n                    // const content = this.tiles[x][y];\r\n                    const chunk = this.getChunkAtTileOrNull(x, y);\r\n                    if (!chunk) {\r\n                        continue;\r\n                    }\r\n                    const content = chunk.getTileContentFromWorldCoords(x, y);\r\n                    if (content) {\r\n                        let isBorder = x <= left - 1 || x >= right + 1 || y <= top - 1 || y >= bottom + 1;\r\n                        if (!isBorder) {\r\n                            content.drawDebugOverlays(drawParameters);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes all canvases used for background rendering\r\n     */\r\n    internalInitializeCachedBackgroundCanvases() {\r\n        // Background canvas\r\n        const dims = globalConfig.tileSize;\r\n        const dpi = this.backgroundCacheDPI;\r\n        const [canvas, context] = makeOffscreenBuffer(dims * dpi, dims * dpi, {\r\n            smooth: false,\r\n            label: \"map-cached-bg\",\r\n        });\r\n        context.scale(dpi, dpi);\r\n\r\n        context.fillStyle = THEME.map.background;\r\n        context.fillRect(0, 0, dims, dims);\r\n\r\n        const borderWidth = THEME.map.gridLineWidth;\r\n        context.fillStyle = THEME.map.grid;\r\n        context.fillRect(0, 0, dims, borderWidth);\r\n        context.fillRect(0, borderWidth, borderWidth, dims);\r\n\r\n        context.fillRect(dims - borderWidth, borderWidth, borderWidth, dims - 2 * borderWidth);\r\n        context.fillRect(borderWidth, dims - borderWidth, dims, borderWidth);\r\n\r\n        this.cachedBackgroundCanvas = canvas;\r\n        this.cachedBackgroundContext = context;\r\n    }\r\n\r\n    /**\r\n     * Draws the maps foreground\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawForeground(parameters) {\r\n        this.drawVisibleChunks(parameters, MapChunkView.prototype.drawForegroundDynamicLayer);\r\n        this.drawVisibleChunks(parameters, MapChunkView.prototype.drawForegroundStaticLayer);\r\n    }\r\n\r\n    /**\r\n     * Calls a given method on all given chunks\r\n     * @param {DrawParameters} parameters\r\n     * @param {function} method\r\n     * @param {string=} layer\r\n     */\r\n    drawVisibleChunks(parameters, method, layer) {\r\n        const cullRange = parameters.visibleRect.allScaled(1 / globalConfig.tileSize);\r\n        const top = cullRange.top();\r\n        const right = cullRange.right();\r\n        const bottom = cullRange.bottom();\r\n        const left = cullRange.left();\r\n\r\n        const border = 0;\r\n        const minY = top - border;\r\n        const maxY = bottom + border;\r\n        const minX = left - border;\r\n        const maxX = right + border;\r\n\r\n        const chunkStartX = Math.floor(minX / globalConfig.mapChunkSize);\r\n        const chunkStartY = Math.floor(minY / globalConfig.mapChunkSize);\r\n\r\n        const chunkEndX = Math.floor(maxX / globalConfig.mapChunkSize);\r\n        const chunkEndY = Math.floor(maxY / globalConfig.mapChunkSize);\r\n\r\n        // Render y from top down for proper blending\r\n        for (let chunkX = chunkStartX; chunkX <= chunkEndX; ++chunkX) {\r\n            for (let chunkY = chunkStartY; chunkY <= chunkEndY; ++chunkY) {\r\n                const chunk = this.root.map.getChunk(chunkX, chunkY, true);\r\n                if (layer) method.call(chunk, parameters, layer);\r\n                else method.call(chunk, parameters);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the wires foreground\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawWiresForegroundLayer(parameters) {\r\n        this.drawVisibleChunks(parameters, MapChunkView.prototype.drawWiresForegroundLayer);\r\n    }\r\n\r\n    /**\r\n     * Draws the layer foreground\r\n     * @param {DrawParameters} parameters\r\n     * @param {Layer} layer\r\n     */\r\n    drawForegroundLayer(parameters, layer) {\r\n        this.drawVisibleChunks(parameters, MapChunkView.prototype.drawForegroundLayer, layer);\r\n    }\r\n\r\n    /**\r\n     * Draws the map overlay\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawOverlay(parameters) {\r\n        this.drawVisibleChunks(parameters, MapChunkView.prototype.drawOverlay);\r\n    }\r\n\r\n    /**\r\n     * Draws the map background\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawBackground(parameters) {\r\n        // Render tile grid\r\n        if (!this.root.app.settings.getAllSettings().disableTileGrid) {\r\n            const dpi = this.backgroundCacheDPI;\r\n            parameters.context.scale(1 / dpi, 1 / dpi);\r\n\r\n            parameters.context.fillStyle = parameters.context.createPattern(\r\n                this.cachedBackgroundCanvas,\r\n                \"repeat\"\r\n            );\r\n            parameters.context.fillRect(\r\n                parameters.visibleRect.x * dpi,\r\n                parameters.visibleRect.y * dpi,\r\n                parameters.visibleRect.w * dpi,\r\n                parameters.visibleRect.h * dpi\r\n            );\r\n            parameters.context.scale(dpi, dpi);\r\n        }\r\n\r\n        this.drawVisibleChunks(parameters, MapChunkView.prototype.drawBackgroundLayer);\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/map_view.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2803,
    "kind": "class",
    "name": "MapView",
    "memberof": "js/game/map_view.js",
    "static": true,
    "longname": "js/game/map_view.js~MapView",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/map_view.js",
    "importStyle": "{MapView}",
    "description": "This is the view of the map, it extends the map which is the raw model and allows\nto draw it",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "js/game/map.js~BaseMap"
    ]
  },
  {
    "__docId__": 2804,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/map_view.js~MapView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_view.js~MapView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 2805,
    "kind": "member",
    "name": "backgroundCacheDPI",
    "memberof": "js/game/map_view.js~MapView",
    "static": false,
    "longname": "js/game/map_view.js~MapView#backgroundCacheDPI",
    "access": "public",
    "description": "DPI of the background cache images, required in some places",
    "lineNumber": 20,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2806,
    "kind": "member",
    "name": "cachedBackgroundCanvas",
    "memberof": "js/game/map_view.js~MapView",
    "static": false,
    "longname": "js/game/map_view.js~MapView#cachedBackgroundCanvas",
    "access": "public",
    "description": "The cached background sprite, containing the flat background",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2807,
    "kind": "member",
    "name": "cachedBackgroundContext",
    "memberof": "js/game/map_view.js~MapView",
    "static": false,
    "longname": "js/game/map_view.js~MapView#cachedBackgroundContext",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "CanvasRenderingContext2D"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2808,
    "kind": "method",
    "name": "cleanup",
    "memberof": "js/game/map_view.js~MapView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_view.js~MapView#cleanup",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2810,
    "kind": "method",
    "name": "onEntityChanged",
    "memberof": "js/game/map_view.js~MapView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_view.js~MapView#onEntityChanged",
    "access": "public",
    "description": "Called when an entity was added, removed or changed",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2811,
    "kind": "method",
    "name": "drawStaticEntityDebugOverlays",
    "memberof": "js/game/map_view.js~MapView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_view.js~MapView#drawStaticEntityDebugOverlays",
    "access": "public",
    "description": "Draws all static entities like buildings etc.",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "drawParameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2812,
    "kind": "method",
    "name": "internalInitializeCachedBackgroundCanvases",
    "memberof": "js/game/map_view.js~MapView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_view.js~MapView#internalInitializeCachedBackgroundCanvases",
    "access": "public",
    "description": "Initializes all canvases used for background rendering",
    "lineNumber": 100,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2815,
    "kind": "method",
    "name": "drawForeground",
    "memberof": "js/game/map_view.js~MapView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_view.js~MapView#drawForeground",
    "access": "public",
    "description": "Draws the maps foreground",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2816,
    "kind": "method",
    "name": "drawVisibleChunks",
    "memberof": "js/game/map_view.js~MapView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_view.js~MapView#drawVisibleChunks",
    "access": "public",
    "description": "Calls a given method on all given chunks",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2817,
    "kind": "method",
    "name": "drawWiresForegroundLayer",
    "memberof": "js/game/map_view.js~MapView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_view.js~MapView#drawWiresForegroundLayer",
    "access": "public",
    "description": "Draws the wires foreground",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2818,
    "kind": "method",
    "name": "drawForegroundLayer",
    "memberof": "js/game/map_view.js~MapView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_view.js~MapView#drawForegroundLayer",
    "access": "public",
    "description": "Draws the layer foreground",
    "lineNumber": 182,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2819,
    "kind": "method",
    "name": "drawOverlay",
    "memberof": "js/game/map_view.js~MapView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_view.js~MapView#drawOverlay",
    "access": "public",
    "description": "Draws the map overlay",
    "lineNumber": 190,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2820,
    "kind": "method",
    "name": "drawBackground",
    "memberof": "js/game/map_view.js~MapView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/map_view.js~MapView#drawBackground",
    "access": "public",
    "description": "Draws the map background",
    "lineNumber": 198,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2821,
    "kind": "file",
    "name": "js/game/meta_building.js",
    "content": "import { Loader } from \"../core/loader\";\r\nimport { AtlasSprite } from \"../core/sprites\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { SOUNDS } from \"../platform/sound\";\r\nimport { StaticMapEntityComponent } from \"./components/static_map_entity\";\r\nimport { Entity } from \"./entity\";\r\nimport { GameRoot } from \"./root\";\r\nimport { getCodeFromBuildingData } from \"./building_codes\";\r\n\r\nexport const defaultBuildingVariant = \"default\";\r\n\r\nexport class MetaBuilding {\r\n    /**\r\n     *\r\n     * @param {string} id Building id\r\n     */\r\n    constructor(id) {\r\n        this.id = id;\r\n    }\r\n\r\n    /**\r\n     * Returns the id of this building\r\n     */\r\n    getId() {\r\n        return this.id;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Layer}\r\n     */\r\n    getLayer(root, variant = defaultBuildingVariant) {\r\n        return \"regular\";\r\n    }\r\n\r\n    /**\r\n     * Should return the dimensions of the building\r\n     * @param {string} variant\r\n     */\r\n    getDimensions(variant = defaultBuildingVariant) {\r\n        return new Vector(1, 1);\r\n    }\r\n\r\n    /**\r\n     * Returns whether the building has the direction lock switch available\r\n     */\r\n    getHasDirectionLockAvailable() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Whether to stay in placement mode after having placed a building\r\n     */\r\n    getStayInPlacementMode() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Can return a special interlaved 9 elements overlay matrix for rendering\r\n     * @param {number} rotation\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @param {Entity} entity\r\n     * @returns {Array<number>|null}\r\n     */\r\n    getSpecialOverlayRenderMatrix(rotation, rotationVariant, variant, entity) {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Should return additional statistics about this building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Returns whether this building can get replaced\r\n     */\r\n    getIsReplaceable(variant = defaultBuildingVariant) {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Whether to flip the orientation after a building has been placed - useful\r\n     * for tunnels.\r\n     */\r\n    getFlipOrientationAfterPlacement() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Whether to show a preview of the layer when placing the building\r\n     * @param {string} variant\r\n     */\r\n    getShowLayerPreview(variant) {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Whether to rotate automatically in the dragging direction while placing\r\n     * @param {string} variant\r\n     */\r\n    getRotateAutomaticallyWhilePlacing(variant = defaultBuildingVariant) {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns whether this building is removable\r\n     * @param {string} variant\r\n     * @returns {boolean}\r\n     */\r\n    getIsRemovable(variant = defaultBuildingVariant) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns the placement sound\r\n     * @param {string} variant\r\n     * @returns {string}\r\n     */\r\n    getPlacementSound(variant = defaultBuildingVariant) {\r\n        return SOUNDS.placeBuilding;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        return [defaultBuildingVariant];\r\n    }\r\n\r\n    /**\r\n     * Returns a preview sprite\r\n     * @returns {AtlasSprite}\r\n     */\r\n    getPreviewSprite(rotationVariant = 0, variant = defaultBuildingVariant) {\r\n        return Loader.getSprite(\r\n            \"sprites/buildings/\" +\r\n            this.id +\r\n            (variant === defaultBuildingVariant ? \"\" : \"-\" + variant) +\r\n            \".png\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns a sprite for blueprints\r\n     * @returns {AtlasSprite}\r\n     */\r\n    getBlueprintSprite(rotationVariant = 0, variant = defaultBuildingVariant) {\r\n        return Loader.getSprite(\r\n            \"sprites/blueprints/\" +\r\n            this.id +\r\n            (variant === defaultBuildingVariant ? \"\" : \"-\" + variant) +\r\n            \".png\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns whether this building is rotateable\r\n     * @param {string} variant\r\n     * @returns {boolean}\r\n     */\r\n    getIsRotateable(variant) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns whether this building is unlocked for the given game\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Should return a silhouette color for the map overview or null if not set\r\n     * @param {string} variant\r\n     * @param {number} rotationVariant\r\n     */\r\n    getSilhouetteColor(variant, rotationVariant) {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Should return false if the pins are already included in the sprite of the building\r\n     * @param {string} variant\r\n     * @returns {boolean}\r\n     */\r\n    getRenderPins(variant = defaultBuildingVariant) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Creates the entity without placing it\r\n     * @param {object} param0\r\n     * @param {GameRoot} param0.root\r\n     * @param {Vector} param0.origin Origin tile\r\n     * @param {number=} param0.rotation Rotation\r\n     * @param {number} param0.originalRotation Original Rotation\r\n     * @param {number} param0.rotationVariant Rotation variant\r\n     * @param {string} param0.variant\r\n     */\r\n    createEntity({ root, origin, rotation, originalRotation, rotationVariant, variant }) {\r\n        const entity = new Entity(root);\r\n        entity.layer = this.getLayer(root, variant);\r\n        entity.addComponent(\r\n            new StaticMapEntityComponent({\r\n                origin: new Vector(origin.x, origin.y),\r\n                rotation,\r\n                originalRotation,\r\n                tileSize: this.getDimensions(variant).copy(),\r\n                code: getCodeFromBuildingData(this, variant, rotationVariant),\r\n            })\r\n        );\r\n        this.setupEntityComponents(entity, root);\r\n        this.updateVariants(entity, rotationVariant, variant);\r\n        return entity;\r\n    }\r\n\r\n    /**\r\n     * Returns the sprite for a given variant\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @returns {AtlasSprite}\r\n     */\r\n    getSprite(rotationVariant, variant) {\r\n        return Loader.getSprite(\r\n            \"sprites/buildings/\" +\r\n            this.id +\r\n            (variant === defaultBuildingVariant ? \"\" : \"-\" + variant) +\r\n            \".png\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Should compute the optimal rotation variant on the given tile\r\n     * @param {object} param0\r\n     * @param {GameRoot} param0.root\r\n     * @param {Vector} param0.tile\r\n     * @param {number} param0.rotation\r\n     * @param {string} param0.variant\r\n     * @param {Layer} param0.layer\r\n     * @return {{ rotation: number, rotationVariant: number, connectedEntities?: Array<Entity> }}\r\n     */\r\n    computeOptimalDirectionAndRotationVariantAtTile({ root, tile, rotation, variant, layer }) {\r\n        if (!this.getIsRotateable(variant)) {\r\n            return {\r\n                rotation: 0,\r\n                rotationVariant: 0,\r\n            };\r\n        }\r\n        return {\r\n            rotation,\r\n            rotationVariant: 0,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Should update the entity to match the given variants\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {}\r\n\r\n    // PRIVATE INTERFACE\r\n\r\n    /**\r\n     * Should setup the entity components\r\n     * @param {Entity} entity\r\n     * @param {GameRoot} root\r\n     */\r\n    setupEntityComponents(entity, root) {\r\n        abstract;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/meta_building.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2822,
    "kind": "variable",
    "name": "defaultBuildingVariant",
    "memberof": "js/game/meta_building.js",
    "static": true,
    "longname": "js/game/meta_building.js~defaultBuildingVariant",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/meta_building.js",
    "importStyle": "{defaultBuildingVariant}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2823,
    "kind": "class",
    "name": "MetaBuilding",
    "memberof": "js/game/meta_building.js",
    "static": true,
    "longname": "js/game/meta_building.js~MetaBuilding",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/meta_building.js",
    "importStyle": "{MetaBuilding}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 2824,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Building id"
      }
    ]
  },
  {
    "__docId__": 2825,
    "kind": "member",
    "name": "id",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#id",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2826,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getId",
    "access": "public",
    "description": "Returns the id of this building",
    "lineNumber": 24,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2827,
    "kind": "method",
    "name": "getLayer",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getLayer",
    "access": "public",
    "description": "Returns the edit layer of the building",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2828,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getDimensions",
    "access": "public",
    "description": "Should return the dimensions of the building",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2829,
    "kind": "method",
    "name": "getHasDirectionLockAvailable",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getHasDirectionLockAvailable",
    "access": "public",
    "description": "Returns whether the building has the direction lock switch available",
    "lineNumber": 49,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2830,
    "kind": "method",
    "name": "getStayInPlacementMode",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getStayInPlacementMode",
    "access": "public",
    "description": "Whether to stay in placement mode after having placed a building",
    "lineNumber": 56,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2831,
    "kind": "method",
    "name": "getSpecialOverlayRenderMatrix",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getSpecialOverlayRenderMatrix",
    "access": "public",
    "description": "Can return a special interlaved 9 elements overlay matrix for rendering",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2832,
    "kind": "method",
    "name": "getAdditionalStatistics",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getAdditionalStatistics",
    "access": "public",
    "description": "Should return additional statistics about this building",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<[string, string]>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<[string, string]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2833,
    "kind": "method",
    "name": "getIsReplaceable",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getIsReplaceable",
    "access": "public",
    "description": "Returns whether this building can get replaced",
    "lineNumber": 85,
    "params": [
      {
        "name": "variant",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "defaultBuildingVariant",
        "defaultValue": "defaultBuildingVariant"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2834,
    "kind": "method",
    "name": "getFlipOrientationAfterPlacement",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getFlipOrientationAfterPlacement",
    "access": "public",
    "description": "Whether to flip the orientation after a building has been placed - useful\nfor tunnels.",
    "lineNumber": 93,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2835,
    "kind": "method",
    "name": "getShowLayerPreview",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getShowLayerPreview",
    "access": "public",
    "description": "Whether to show a preview of the layer when placing the building",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2836,
    "kind": "method",
    "name": "getRotateAutomaticallyWhilePlacing",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getRotateAutomaticallyWhilePlacing",
    "access": "public",
    "description": "Whether to rotate automatically in the dragging direction while placing",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2837,
    "kind": "method",
    "name": "getIsRemovable",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getIsRemovable",
    "access": "public",
    "description": "Returns whether this building is removable",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2838,
    "kind": "method",
    "name": "getPlacementSound",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getPlacementSound",
    "access": "public",
    "description": "Returns the placement sound",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2839,
    "kind": "method",
    "name": "getAvailableVariants",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getAvailableVariants",
    "access": "public",
    "description": "",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 2840,
    "kind": "method",
    "name": "getPreviewSprite",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getPreviewSprite",
    "access": "public",
    "description": "Returns a preview sprite",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AtlasSprite}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AtlasSprite"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "rotationVariant",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "variant",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "defaultBuildingVariant",
        "defaultValue": "defaultBuildingVariant"
      }
    ]
  },
  {
    "__docId__": 2841,
    "kind": "method",
    "name": "getBlueprintSprite",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getBlueprintSprite",
    "access": "public",
    "description": "Returns a sprite for blueprints",
    "lineNumber": 155,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AtlasSprite}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AtlasSprite"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "rotationVariant",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "variant",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "defaultBuildingVariant",
        "defaultValue": "defaultBuildingVariant"
      }
    ]
  },
  {
    "__docId__": 2842,
    "kind": "method",
    "name": "getIsRotateable",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getIsRotateable",
    "access": "public",
    "description": "Returns whether this building is rotateable",
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2843,
    "kind": "method",
    "name": "getIsUnlocked",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getIsUnlocked",
    "access": "public",
    "description": "Returns whether this building is unlocked for the given game",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2844,
    "kind": "method",
    "name": "getSilhouetteColor",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getSilhouetteColor",
    "access": "public",
    "description": "Should return a silhouette color for the map overview or null if not set",
    "lineNumber": 186,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2845,
    "kind": "method",
    "name": "getRenderPins",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getRenderPins",
    "access": "public",
    "description": "Should return false if the pins are already included in the sprite of the building",
    "lineNumber": 195,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2846,
    "kind": "method",
    "name": "createEntity",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#createEntity",
    "access": "public",
    "description": "Creates the entity without placing it",
    "lineNumber": 209,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.origin",
        "description": "Origin tile"
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.rotation",
        "description": "Rotation"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.originalRotation",
        "description": "Original Rotation"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.rotationVariant",
        "description": "Rotation variant"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.variant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2847,
    "kind": "method",
    "name": "getSprite",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#getSprite",
    "access": "public",
    "description": "Returns the sprite for a given variant",
    "lineNumber": 232,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AtlasSprite}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AtlasSprite"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2848,
    "kind": "method",
    "name": "computeOptimalDirectionAndRotationVariantAtTile",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#computeOptimalDirectionAndRotationVariantAtTile",
    "access": "public",
    "description": "Should compute the optimal rotation variant on the given tile",
    "lineNumber": 251,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.tile",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.layer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{ rotation: number, rotationVariant: number, connectedEntities?: Array<Entity> }"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2849,
    "kind": "method",
    "name": "updateVariants",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#updateVariants",
    "access": "public",
    "description": "Should update the entity to match the given variants",
    "lineNumber": 270,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2850,
    "kind": "method",
    "name": "setupEntityComponents",
    "memberof": "js/game/meta_building.js~MetaBuilding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/meta_building.js~MetaBuilding#setupEntityComponents",
    "access": "public",
    "description": "Should setup the entity components",
    "lineNumber": 279,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2851,
    "kind": "file",
    "name": "js/game/meta_building_registry.js",
    "content": "import { gMetaBuildingRegistry } from \"../core/global_registries\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { T } from \"../translations\";\r\nimport { MetaAnalyzerBuilding } from \"./buildings/analyzer\";\r\nimport { MetaBalancerBuilding } from \"./buildings/balancer\";\r\nimport { MetaBeltBuilding } from \"./buildings/belt\";\r\nimport { MetaComparatorBuilding } from \"./buildings/comparator\";\r\nimport { MetaConstantSignalBuilding } from \"./buildings/constant_signal\";\r\nimport { MetaCutterBuilding } from \"./buildings/cutter\";\r\nimport { MetaDisplayBuilding } from \"./buildings/display\";\r\nimport { MetaFilterBuilding } from \"./buildings/filter\";\r\nimport { MetaHubBuilding } from \"./buildings/hub\";\r\nimport { MetaItemProducerBuilding } from \"./buildings/item_producer\";\r\nimport { MetaLeverBuilding } from \"./buildings/lever\";\r\nimport { MetaLogicGateBuilding } from \"./buildings/logic_gate\";\r\nimport { MetaMinerBuilding } from \"./buildings/miner\";\r\nimport { MetaMixerBuilding } from \"./buildings/mixer\";\r\nimport { MetaPainterBuilding } from \"./buildings/painter\";\r\nimport { MetaReaderBuilding } from \"./buildings/reader\";\r\nimport { MetaRotaterBuilding } from \"./buildings/rotater\";\r\nimport { MetaStackerBuilding } from \"./buildings/stacker\";\r\nimport { MetaStorageBuilding } from \"./buildings/storage\";\r\nimport { MetaTransistorBuilding } from \"./buildings/transistor\";\r\nimport { MetaTrashBuilding } from \"./buildings/trash\";\r\nimport { MetaUndergroundBeltBuilding } from \"./buildings/underground_belt\";\r\nimport { MetaVirtualProcessorBuilding } from \"./buildings/virtual_processor\";\r\nimport { MetaWireBuilding } from \"./buildings/wire\";\r\nimport { MetaWireTunnelBuilding } from \"./buildings/wire_tunnel\";\r\nimport { gBuildingVariants, registerBuildingVariant } from \"./building_codes\";\r\nimport { KEYMAPPINGS } from \"./key_action_mapper\";\r\nimport { defaultBuildingVariant } from \"./meta_building\";\r\n\r\nconst logger = createLogger(\"building_registry\");\r\n\r\nexport function addVanillaBuildingsToAPI() {\r\n    var vanillaBuildings = [\r\n        MetaAnalyzerBuilding,\r\n        MetaBalancerBuilding,\r\n        MetaBeltBuilding,\r\n        MetaComparatorBuilding,\r\n        MetaConstantSignalBuilding,\r\n        MetaCutterBuilding,\r\n        MetaDisplayBuilding,\r\n        MetaFilterBuilding,\r\n        MetaHubBuilding,\r\n        MetaItemProducerBuilding,\r\n        MetaLeverBuilding,\r\n        MetaLogicGateBuilding,\r\n        MetaMinerBuilding,\r\n        MetaMixerBuilding,\r\n        MetaPainterBuilding,\r\n        MetaReaderBuilding,\r\n        MetaRotaterBuilding,\r\n        MetaStackerBuilding,\r\n        MetaStorageBuilding,\r\n        MetaTransistorBuilding,\r\n        MetaTrashBuilding,\r\n        MetaUndergroundBeltBuilding,\r\n        MetaVirtualProcessorBuilding,\r\n        MetaWireBuilding,\r\n        MetaWireTunnelBuilding,\r\n    ];\r\n\r\n    for (let i = 0; i < vanillaBuildings.length; i++) {\r\n        shapezAPI.ingame.buildings[new vanillaBuildings[i]().getId()] = vanillaBuildings[i];\r\n    }\r\n}\r\n\r\nexport function initMetaBuildingRegistry() {\r\n    for (const buildingClassKey in shapezAPI.ingame.buildings) {\r\n        const buildingClass = shapezAPI.ingame.buildings[buildingClassKey];\r\n        gMetaBuildingRegistry.register(buildingClass);\r\n\r\n        if (buildingClass.rotationVariants) {\r\n            for (const rotationVariant in buildingClass.rotationVariants) {\r\n                if (!buildingClass.rotationVariants.hasOwnProperty(rotationVariant)) continue;\r\n                registerBuildingVariant(\r\n                    buildingClass,\r\n                    defaultBuildingVariant,\r\n                    buildingClass.rotationVariants[rotationVariant]\r\n                );\r\n            }\r\n        } else {\r\n            registerBuildingVariant(buildingClass, defaultBuildingVariant);\r\n        }\r\n\r\n        if (buildingClass.variants) {\r\n            for (const variant in buildingClass.variants) {\r\n                if (!buildingClass.variants.hasOwnProperty(variant)) continue;\r\n                if (buildingClass.rotationVariants) {\r\n                    for (const rotationVariant in buildingClass.rotationVariants) {\r\n                        if (!buildingClass.rotationVariants.hasOwnProperty(rotationVariant)) continue;\r\n                        registerBuildingVariant(\r\n                            buildingClass,\r\n                            buildingClass.variants[variant],\r\n                            buildingClass.rotationVariants[rotationVariant]\r\n                        );\r\n                    }\r\n                } else {\r\n                    registerBuildingVariant(buildingClass, buildingClass.variants[variant]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // gMetaBuildingRegistry.register(MetaStackerBuilding);\r\n    // gMetaBuildingRegistry.register(MetaMixerBuilding);\r\n    // gMetaBuildingRegistry.register(MetaPainterBuilding);\r\n    // gMetaBuildingRegistry.register(MetaTrashBuilding);\r\n    // gMetaBuildingRegistry.register(MetaStorageBuilding);\r\n    // gMetaBuildingRegistry.register(MetaUndergroundBeltBuilding);\r\n    // gMetaBuildingRegistry.register(MetaHubBuilding);\r\n    // gMetaBuildingRegistry.register(MetaWireBuilding);\r\n    // gMetaBuildingRegistry.register(MetaConstantSignalBuilding);\r\n    // gMetaBuildingRegistry.register(MetaLogicGateBuilding);\r\n    // gMetaBuildingRegistry.register(MetaLeverBuilding);\r\n    // gMetaBuildingRegistry.register(MetaFilterBuilding);\r\n    // gMetaBuildingRegistry.register(MetaWireTunnelBuilding);\r\n    // gMetaBuildingRegistry.register(MetaDisplayBuilding);\r\n    // gMetaBuildingRegistry.register(MetaVirtualProcessorBuilding);\r\n    // gMetaBuildingRegistry.register(MetaReaderBuilding);\r\n    // gMetaBuildingRegistry.register(MetaTransistorBuilding);\r\n    // gMetaBuildingRegistry.register(MetaComparatorBuilding);\r\n    // gMetaBuildingRegistry.register(MetaItemProducerBuilding);\r\n\r\n    // Propagate instances\r\n    for (const key in gBuildingVariants) {\r\n        gBuildingVariants[key].metaInstance = gMetaBuildingRegistry.findByClass(\r\n            gBuildingVariants[key].metaClass\r\n        );\r\n    }\r\n\r\n    for (const key in gBuildingVariants) {\r\n        const variant = gBuildingVariants[key];\r\n        assert(variant.metaClass, \"Variant has no meta: \" + key);\r\n\r\n        if (typeof variant.rotationVariant === \"undefined\") {\r\n            variant.rotationVariant = 0;\r\n        }\r\n        if (typeof variant.variant === \"undefined\") {\r\n            variant.variant = defaultBuildingVariant;\r\n        }\r\n    }\r\n\r\n    // Check for valid keycodes\r\n    if (G_IS_DEV) {\r\n        gMetaBuildingRegistry.entries.forEach(metaBuilding => {\r\n            const id = metaBuilding.getId();\r\n            if (![\"hub\"].includes(id)) {\r\n                if (!KEYMAPPINGS.buildings[id]) {\r\n                    assertAlways(\r\n                        false,\r\n                        \"Building \" + id + \" has no keybinding assigned! Add it to key_action_mapper.js\"\r\n                    );\r\n                }\r\n\r\n                if (!T.buildings[id]) {\r\n                    assertAlways(false, \"Translation for building \" + id + \" missing!\");\r\n                }\r\n\r\n                if (!T.buildings[id].default) {\r\n                    assertAlways(false, \"Translation for building \" + id + \" missing (default variant)!\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    logger.log(\"Registered\", gMetaBuildingRegistry.getNumEntries(), \"buildings\");\r\n    logger.log(\"Registered\", Object.keys(gBuildingVariants).length, \"building codes\");\r\n}\r\n\r\n/**\r\n * Once all sprites are loaded, propagates the cache\r\n */\r\nexport function initBuildingCodesAfterResourcesLoaded() {\r\n    logger.log(\"Propagating sprite cache\");\r\n    for (const key in gBuildingVariants) {\r\n        const variant = gBuildingVariants[key];\r\n\r\n        variant.sprite = variant.metaInstance.getSprite(variant.rotationVariant, variant.variant);\r\n        variant.blueprintSprite = variant.metaInstance.getBlueprintSprite(\r\n            variant.rotationVariant,\r\n            variant.variant\r\n        );\r\n        variant.silhouetteColor = variant.metaInstance.getSilhouetteColor(\r\n            variant.variant,\r\n            variant.rotationVariant\r\n        );\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/meta_building_registry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2852,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/meta_building_registry.js",
    "static": true,
    "longname": "js/game/meta_building_registry.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/meta_building_registry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2853,
    "kind": "function",
    "name": "addVanillaBuildingsToAPI",
    "memberof": "js/game/meta_building_registry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/meta_building_registry.js~addVanillaBuildingsToAPI",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/meta_building_registry.js",
    "importStyle": "{addVanillaBuildingsToAPI}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2854,
    "kind": "function",
    "name": "initMetaBuildingRegistry",
    "memberof": "js/game/meta_building_registry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/meta_building_registry.js~initMetaBuildingRegistry",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/meta_building_registry.js",
    "importStyle": "{initMetaBuildingRegistry}",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2855,
    "kind": "function",
    "name": "initBuildingCodesAfterResourcesLoaded",
    "memberof": "js/game/meta_building_registry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/meta_building_registry.js~initBuildingCodesAfterResourcesLoaded",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/meta_building_registry.js",
    "importStyle": "{initBuildingCodesAfterResourcesLoaded}",
    "description": "Once all sprites are loaded, propagates the cache",
    "lineNumber": 175,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2856,
    "kind": "file",
    "name": "js/game/modes/regular.js",
    "content": "import { findNiceIntegerValue } from \"../../core/utils\";\r\nimport { GameMode } from \"../game_mode\";\r\nimport { ShapeDefinition } from \"../shape_definition\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nconst rocketShape = \"CbCuCbCu:Sr------:--CrSrCr:CwCwCwCw\";\r\nconst finalGameShape = \"RuCw--Cw:----Ru--\";\r\nconst preparementShape = \"CpRpCp--:SwSwSwSw\";\r\nconst blueprintShape = \"CbCbCbRb:CwCwCwCw\";\r\n\r\n// Tiers need % of the previous tier as requirement too\r\nconst tierGrowth = 2.5;\r\n\r\n/**\r\n * Generates all upgrades\r\n * @returns {Object<string, import(\"../game_mode\").UpgradeTiers>} */\r\nfunction generateUpgrades(limitedVersion = false) {\r\n    const fixedImprovements = [0.5, 0.5, 1, 1, 2, 1, 1];\r\n    const numEndgameUpgrades = limitedVersion ? 0 : 1000 - fixedImprovements.length - 1;\r\n\r\n    function generateInfiniteUnlocks() {\r\n        return new Array(numEndgameUpgrades).fill(null).map((_, i) => ({\r\n            required: [\r\n                { shape: preparementShape, amount: 30000 + i * 10000 },\r\n                { shape: finalGameShape, amount: 20000 + i * 5000 },\r\n                { shape: rocketShape, amount: 20000 + i * 5000 },\r\n            ],\r\n            excludePrevious: true,\r\n        }));\r\n    }\r\n\r\n    // Fill in endgame upgrades\r\n    for (let i = 0; i < numEndgameUpgrades; ++i) {\r\n        if (i < 20) {\r\n            fixedImprovements.push(0.1);\r\n        } else if (i < 50) {\r\n            fixedImprovements.push(0.05);\r\n        } else if (i < 100) {\r\n            fixedImprovements.push(0.025);\r\n        } else {\r\n            fixedImprovements.push(0.0125);\r\n        }\r\n    }\r\n\r\n    const upgrades = {\r\n        belt: [{\r\n                required: [{ shape: \"CuCuCuCu\", amount: 30 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"--CuCu--\", amount: 500 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"CpCpCpCp\", amount: 1000 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"SrSrSrSr:CyCyCyCy\", amount: 6000 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"SrSrSrSr:CyCyCyCy:SwSwSwSw\", amount: 25000 }],\r\n            },\r\n            {\r\n                required: [{ shape: preparementShape, amount: 25000 }],\r\n                excludePrevious: true,\r\n            },\r\n            {\r\n                required: [\r\n                    { shape: preparementShape, amount: 25000 },\r\n                    { shape: finalGameShape, amount: 50000 },\r\n                ],\r\n                excludePrevious: true,\r\n            },\r\n            ...generateInfiniteUnlocks(),\r\n        ],\r\n\r\n        miner: [{\r\n                required: [{ shape: \"RuRuRuRu\", amount: 300 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"Cu------\", amount: 800 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"ScScScSc\", amount: 3500 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"CwCwCwCw:WbWbWbWb\", amount: 23000 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"CbRbRbCb:CwCwCwCw:WbWbWbWb\", amount: 50000 }],\r\n            },\r\n            {\r\n                required: [{ shape: preparementShape, amount: 25000 }],\r\n                excludePrevious: true,\r\n            },\r\n            {\r\n                required: [\r\n                    { shape: preparementShape, amount: 25000 },\r\n                    { shape: finalGameShape, amount: 50000 },\r\n                ],\r\n                excludePrevious: true,\r\n            },\r\n            ...generateInfiniteUnlocks(),\r\n        ],\r\n\r\n        processors: [{\r\n                required: [{ shape: \"SuSuSuSu\", amount: 500 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"RuRu----\", amount: 600 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"CgScScCg\", amount: 3500 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"CwCrCwCr:SgSgSgSg\", amount: 25000 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"WrRgWrRg:CwCrCwCr:SgSgSgSg\", amount: 50000 }],\r\n            },\r\n            {\r\n                required: [{ shape: preparementShape, amount: 25000 }],\r\n                excludePrevious: true,\r\n            },\r\n            {\r\n                required: [\r\n                    { shape: preparementShape, amount: 25000 },\r\n                    { shape: finalGameShape, amount: 50000 },\r\n                ],\r\n                excludePrevious: true,\r\n            },\r\n            ...generateInfiniteUnlocks(),\r\n        ],\r\n\r\n        painting: [{\r\n                required: [{ shape: \"RbRb----\", amount: 600 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"WrWrWrWr\", amount: 3800 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"RpRpRpRp:CwCwCwCw\", amount: 6500 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"WpWpWpWp:CwCwCwCw:WpWpWpWp\", amount: 25000 }],\r\n            },\r\n            {\r\n                required: [{ shape: \"WpWpWpWp:CwCwCwCw:WpWpWpWp:CwCwCwCw\", amount: 50000 }],\r\n            },\r\n            {\r\n                required: [{ shape: preparementShape, amount: 25000 }],\r\n                excludePrevious: true,\r\n            },\r\n            {\r\n                required: [\r\n                    { shape: preparementShape, amount: 25000 },\r\n                    { shape: finalGameShape, amount: 50000 },\r\n                ],\r\n                excludePrevious: true,\r\n            },\r\n            ...generateInfiniteUnlocks(),\r\n        ],\r\n    };\r\n\r\n    // Automatically generate tier levels\r\n    for (const upgradeId in upgrades) {\r\n        const upgradeTiers = upgrades[upgradeId];\r\n\r\n        let currentTierRequirements = [];\r\n        for (let i = 0; i < upgradeTiers.length; ++i) {\r\n            const tierHandle = upgradeTiers[i];\r\n            tierHandle.improvement = fixedImprovements[i];\r\n            const originalRequired = tierHandle.required.slice();\r\n\r\n            for (let k = currentTierRequirements.length - 1; k >= 0; --k) {\r\n                const oldTierRequirement = currentTierRequirements[k];\r\n                if (!tierHandle.excludePrevious) {\r\n                    tierHandle.required.unshift({\r\n                        shape: oldTierRequirement.shape,\r\n                        amount: oldTierRequirement.amount,\r\n                    });\r\n                }\r\n            }\r\n            currentTierRequirements.push(\r\n                ...originalRequired.map(req => ({\r\n                    amount: req.amount,\r\n                    shape: req.shape,\r\n                }))\r\n            );\r\n            currentTierRequirements.forEach(tier => {\r\n                tier.amount = findNiceIntegerValue(tier.amount * tierGrowth);\r\n            });\r\n        }\r\n    }\r\n\r\n    // VALIDATE\r\n    if (G_IS_DEV) {\r\n        for (const upgradeId in upgrades) {\r\n            upgrades[upgradeId].forEach(tier => {\r\n                tier.required.forEach(({ shape }) => {\r\n                    try {\r\n                        ShapeDefinition.fromShortKey(shape);\r\n                    } catch (ex) {\r\n                        throw new Error(\"Invalid upgrade goal: '\" + ex + \"' for shape\" + shape);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    return upgrades;\r\n}\r\n\r\n/**\r\n * Generates the level definitions\r\n * @param {boolean} limitedVersion\r\n */\r\nexport function generateLevelDefinitions(limitedVersion = false) {\r\n    const levelDefinitions = [\r\n        // 1\r\n        // Circle\r\n        {\r\n            shape: \"CuCuCuCu\", // belts t1\r\n            required: 30,\r\n            reward: enumHubGoalRewards.reward_cutter_and_trash,\r\n        },\r\n\r\n        // 2\r\n        // Cutter\r\n        {\r\n            shape: \"----CuCu\", //\r\n            required: 40,\r\n            reward: enumHubGoalRewards.no_reward,\r\n        },\r\n\r\n        // 3\r\n        // Rectangle\r\n        {\r\n            shape: \"RuRuRuRu\", // miners t1\r\n            required: 70,\r\n            reward: enumHubGoalRewards.reward_balancer,\r\n        },\r\n\r\n        // 4\r\n        {\r\n            shape: \"RuRu----\", // processors t2\r\n            required: 70,\r\n            reward: enumHubGoalRewards.reward_rotater,\r\n        },\r\n\r\n        // 5\r\n        // Rotater\r\n        {\r\n            shape: \"Cu----Cu\", // belts t2\r\n            required: 170,\r\n            reward: enumHubGoalRewards.reward_tunnel,\r\n        },\r\n\r\n        // 6\r\n        {\r\n            shape: \"Cu------\", // miners t2\r\n            required: 270,\r\n            reward: enumHubGoalRewards.reward_painter,\r\n        },\r\n\r\n        // 7\r\n        // Painter\r\n        {\r\n            shape: \"CrCrCrCr\", // unused\r\n            required: 300,\r\n            reward: enumHubGoalRewards.reward_rotater_ccw,\r\n        },\r\n\r\n        // 8\r\n        {\r\n            shape: \"RbRb----\", // painter t2\r\n            required: 480,\r\n            reward: enumHubGoalRewards.reward_mixer,\r\n        },\r\n\r\n        // 9\r\n        // Mixing (purple)\r\n        {\r\n            shape: \"CpCpCpCp\", // belts t3\r\n            required: 600,\r\n            reward: enumHubGoalRewards.reward_merger,\r\n        },\r\n\r\n        // 10\r\n        // STACKER: Star shape + cyan\r\n        {\r\n            shape: \"ScScScSc\", // miners t3\r\n            required: 800,\r\n            reward: enumHubGoalRewards.reward_stacker,\r\n        },\r\n\r\n        // 11\r\n        // Chainable miner\r\n        {\r\n            shape: \"CgScScCg\", // processors t3\r\n            required: 1000,\r\n            reward: enumHubGoalRewards.reward_miner_chainable,\r\n        },\r\n\r\n        // 12\r\n        // Blueprints\r\n        {\r\n            shape: \"CbCbCbRb:CwCwCwCw\",\r\n            required: 1000,\r\n            reward: enumHubGoalRewards.reward_blueprints,\r\n        },\r\n\r\n        // 13\r\n        // Tunnel Tier 2\r\n        {\r\n            shape: \"RpRpRpRp:CwCwCwCw\", // painting t3\r\n            required: 3800,\r\n            reward: enumHubGoalRewards.reward_underground_belt_tier_2,\r\n        },\r\n\r\n        // DEMO STOPS HERE\r\n        ...(limitedVersion ?\r\n            [{\r\n                shape: \"RpRpRpRp:CwCwCwCw\",\r\n                required: 0,\r\n                reward: enumHubGoalRewards.reward_demo_end,\r\n            }, ] :\r\n            [\r\n                // 14\r\n                // Belt reader\r\n                {\r\n                    shape: \"--Cg----:--Cr----\", // unused\r\n                    required: 8, // Per second!\r\n                    reward: enumHubGoalRewards.reward_belt_reader,\r\n                    throughputOnly: true,\r\n                },\r\n\r\n                // 15\r\n                // Storage\r\n                {\r\n                    shape: \"SrSrSrSr:CyCyCyCy\", // unused\r\n                    required: 10000,\r\n                    reward: enumHubGoalRewards.reward_storage,\r\n                },\r\n\r\n                // 16\r\n                // Quad Cutter\r\n                {\r\n                    shape: \"SrSrSrSr:CyCyCyCy:SwSwSwSw\", // belts t4 (two variants)\r\n                    required: 6000,\r\n                    reward: enumHubGoalRewards.reward_cutter_quad,\r\n                },\r\n\r\n                // 17\r\n                // Double painter\r\n                {\r\n                    shape: \"CbRbRbCb:CwCwCwCw:WbWbWbWb\", // miner t4 (two variants)\r\n                    required: 20000,\r\n                    reward: enumHubGoalRewards.reward_painter_double,\r\n                },\r\n\r\n                // 18\r\n                // Rotater (180deg)\r\n                {\r\n                    shape: \"Sg----Sg:CgCgCgCg:--CyCy--\", // unused\r\n                    required: 20000,\r\n                    reward: enumHubGoalRewards.reward_rotater_180,\r\n                },\r\n\r\n                // 19\r\n                // Compact splitter\r\n                {\r\n                    shape: \"CpRpCp--:SwSwSwSw\",\r\n                    required: 25000,\r\n                    reward: enumHubGoalRewards.reward_splitter,\r\n                },\r\n\r\n                // 20\r\n                // WIRES\r\n                {\r\n                    shape: finalGameShape,\r\n                    required: 25000,\r\n                    reward: enumHubGoalRewards.reward_wires_painter_and_levers,\r\n                },\r\n\r\n                // 21\r\n                // Filter\r\n                {\r\n                    shape: \"CrCwCrCw:CwCrCwCr:CrCwCrCw:CwCrCwCr\",\r\n                    required: 25000,\r\n                    reward: enumHubGoalRewards.reward_filter,\r\n                },\r\n\r\n                // 22\r\n                // Constant signal\r\n                {\r\n                    shape: \"Cg----Cr:Cw----Cw:Sy------:Cy----Cy\",\r\n                    required: 25000,\r\n                    reward: enumHubGoalRewards.reward_constant_signal,\r\n                },\r\n\r\n                // 23\r\n                // Display\r\n                {\r\n                    shape: \"CcSyCcSy:SyCcSyCc:CcSyCcSy\",\r\n                    required: 25000,\r\n                    reward: enumHubGoalRewards.reward_display,\r\n                },\r\n\r\n                // 24 Logic gates\r\n                {\r\n                    shape: \"CcRcCcRc:RwCwRwCw:Sr--Sw--:CyCyCyCy\",\r\n                    required: 25000,\r\n                    reward: enumHubGoalRewards.reward_logic_gates,\r\n                },\r\n\r\n                // 25 Virtual Processing\r\n                {\r\n                    shape: \"Rg--Rg--:CwRwCwRw:--Rg--Rg\",\r\n                    required: 25000,\r\n                    reward: enumHubGoalRewards.reward_virtual_processing,\r\n                },\r\n\r\n                // 26 Freeplay\r\n                {\r\n                    shape: \"CbCuCbCu:Sr------:--CrSrCr:CwCwCwCw\",\r\n                    required: 50000,\r\n                    reward: enumHubGoalRewards.reward_freeplay,\r\n                },\r\n            ]),\r\n    ];\r\n\r\n    if (G_IS_DEV) {\r\n        levelDefinitions.forEach(({ shape }) => {\r\n            try {\r\n                ShapeDefinition.fromShortKey(shape);\r\n            } catch (ex) {\r\n                throw new Error(\"Invalid tutorial goal: '\" + ex + \"' for shape\" + shape);\r\n            }\r\n        });\r\n    }\r\n\r\n    return levelDefinitions;\r\n}\r\n\r\nconst fullVersionUpgrades = generateUpgrades(false);\r\nconst demoVersionUpgrades = generateUpgrades(true);\r\n\r\nconst fullVersionLevels = generateLevelDefinitions(false);\r\nconst demoVersionLevels = generateLevelDefinitions(true);\r\n\r\nexport class RegularGameMode extends GameMode {\r\n    constructor(root) {\r\n        super(root);\r\n    }\r\n\r\n    static getId() {\r\n        return \"regular\";\r\n    }\r\n\r\n    getUpgrades() {\r\n        return this.root.app.restrictionMgr.getHasExtendedUpgrades() ?\r\n            fullVersionUpgrades :\r\n            demoVersionUpgrades;\r\n    }\r\n\r\n    getIsFreeplayAvailable() {\r\n        return this.root.app.restrictionMgr.getHasExtendedLevelsAndFreeplay();\r\n    }\r\n\r\n    getBlueprintShapeKey() {\r\n        return blueprintShape;\r\n    }\r\n\r\n    getLevelDefinitions() {\r\n        return this.root.app.restrictionMgr.getHasExtendedLevelsAndFreeplay() ?\r\n            fullVersionLevels :\r\n            demoVersionLevels;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/modes/regular.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2857,
    "kind": "variable",
    "name": "rocketShape",
    "memberof": "js/game/modes/regular.js",
    "static": true,
    "longname": "js/game/modes/regular.js~rocketShape",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/modes/regular.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2858,
    "kind": "variable",
    "name": "finalGameShape",
    "memberof": "js/game/modes/regular.js",
    "static": true,
    "longname": "js/game/modes/regular.js~finalGameShape",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/modes/regular.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2859,
    "kind": "variable",
    "name": "preparementShape",
    "memberof": "js/game/modes/regular.js",
    "static": true,
    "longname": "js/game/modes/regular.js~preparementShape",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/modes/regular.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2860,
    "kind": "variable",
    "name": "blueprintShape",
    "memberof": "js/game/modes/regular.js",
    "static": true,
    "longname": "js/game/modes/regular.js~blueprintShape",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/modes/regular.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2861,
    "kind": "variable",
    "name": "tierGrowth",
    "memberof": "js/game/modes/regular.js",
    "static": true,
    "longname": "js/game/modes/regular.js~tierGrowth",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/modes/regular.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2862,
    "kind": "function",
    "name": "generateUpgrades",
    "memberof": "js/game/modes/regular.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/modes/regular.js~generateUpgrades",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/modes/regular.js",
    "importStyle": null,
    "description": "Generates all upgrades",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object<string, import(\"../game_mode\").UpgradeTiers>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object<string, import(\"../game_mode\").UpgradeTiers>"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "limitedVersion",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "ignore": true
  },
  {
    "__docId__": 2863,
    "kind": "function",
    "name": "generateLevelDefinitions",
    "memberof": "js/game/modes/regular.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/modes/regular.js~generateLevelDefinitions",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/modes/regular.js",
    "importStyle": "{generateLevelDefinitions}",
    "description": "Generates the level definitions",
    "lineNumber": 216,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "limitedVersion",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2864,
    "kind": "variable",
    "name": "fullVersionUpgrades",
    "memberof": "js/game/modes/regular.js",
    "static": true,
    "longname": "js/game/modes/regular.js~fullVersionUpgrades",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/modes/regular.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 444,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2865,
    "kind": "variable",
    "name": "demoVersionUpgrades",
    "memberof": "js/game/modes/regular.js",
    "static": true,
    "longname": "js/game/modes/regular.js~demoVersionUpgrades",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/modes/regular.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 445,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2866,
    "kind": "variable",
    "name": "fullVersionLevels",
    "memberof": "js/game/modes/regular.js",
    "static": true,
    "longname": "js/game/modes/regular.js~fullVersionLevels",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/modes/regular.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 447,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2867,
    "kind": "variable",
    "name": "demoVersionLevels",
    "memberof": "js/game/modes/regular.js",
    "static": true,
    "longname": "js/game/modes/regular.js~demoVersionLevels",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/modes/regular.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 448,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2868,
    "kind": "class",
    "name": "RegularGameMode",
    "memberof": "js/game/modes/regular.js",
    "static": true,
    "longname": "js/game/modes/regular.js~RegularGameMode",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/modes/regular.js",
    "importStyle": "{RegularGameMode}",
    "description": null,
    "lineNumber": 450,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_mode.js~GameMode"
    ]
  },
  {
    "__docId__": 2869,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/modes/regular.js~RegularGameMode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/modes/regular.js~RegularGameMode#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 451,
    "undocument": true
  },
  {
    "__docId__": 2870,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/modes/regular.js~RegularGameMode",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/modes/regular.js~RegularGameMode.getId",
    "access": "public",
    "description": null,
    "lineNumber": 455,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2871,
    "kind": "method",
    "name": "getUpgrades",
    "memberof": "js/game/modes/regular.js~RegularGameMode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/modes/regular.js~RegularGameMode#getUpgrades",
    "access": "public",
    "description": null,
    "lineNumber": 459,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2872,
    "kind": "method",
    "name": "getIsFreeplayAvailable",
    "memberof": "js/game/modes/regular.js~RegularGameMode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/modes/regular.js~RegularGameMode#getIsFreeplayAvailable",
    "access": "public",
    "description": null,
    "lineNumber": 465,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2873,
    "kind": "method",
    "name": "getBlueprintShapeKey",
    "memberof": "js/game/modes/regular.js~RegularGameMode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/modes/regular.js~RegularGameMode#getBlueprintShapeKey",
    "access": "public",
    "description": null,
    "lineNumber": 469,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2874,
    "kind": "method",
    "name": "getLevelDefinitions",
    "memberof": "js/game/modes/regular.js~RegularGameMode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/modes/regular.js~RegularGameMode#getLevelDefinitions",
    "access": "public",
    "description": null,
    "lineNumber": 473,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2875,
    "kind": "file",
    "name": "js/game/production_analytics.js",
    "content": "import { GameRoot } from \"./root\";\r\nimport { ShapeDefinition } from \"./shape_definition\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { BaseItem } from \"./base_item\";\r\nimport { ShapeItem } from \"./items/shape_item\";\r\nimport { BasicSerializableObject } from \"../savegame/serialization\";\r\n\r\n/** @enum {string} */\r\nexport const enumAnalyticsDataSource = {\r\n    produced: \"produced\",\r\n    stored: \"stored\",\r\n    delivered: \"delivered\",\r\n};\r\n\r\nexport class ProductionAnalytics extends BasicSerializableObject {\r\n    static getId() {\r\n        return \"ProductionAnalytics\";\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n        this.root = root;\r\n\r\n        this.history = {\r\n            [enumAnalyticsDataSource.produced]: [],\r\n            [enumAnalyticsDataSource.stored]: [],\r\n            [enumAnalyticsDataSource.delivered]: [],\r\n        };\r\n\r\n        for (let i = 0; i < globalConfig.statisticsGraphSlices; ++i) {\r\n            this.startNewSlice();\r\n        }\r\n\r\n        this.root.signals.shapeDelivered.add(this.onShapeDelivered, this);\r\n        this.root.signals.itemProduced.add(this.onItemProduced, this);\r\n\r\n        this.lastAnalyticsSlice = 0;\r\n    }\r\n\r\n    /**\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    onShapeDelivered(definition) {\r\n        const key = definition.getHash();\r\n        const entry = this.history[enumAnalyticsDataSource.delivered];\r\n        entry[entry.length - 1][key] = (entry[entry.length - 1][key] || 0) + 1;\r\n    }\r\n\r\n    /**\r\n     * @param {BaseItem} item\r\n     */\r\n    onItemProduced(item) {\r\n        if (item.getItemType && item.getItemType() === \"shape\") {\r\n            const definition = /** @type {ShapeItem} */ (item).definition;\r\n            const key = definition.getHash();\r\n            const entry = this.history[enumAnalyticsDataSource.produced];\r\n            entry[entry.length - 1][key] = (entry[entry.length - 1][key] || 0) + 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts a new time slice\r\n     */\r\n    startNewSlice() {\r\n        for (const key in this.history) {\r\n            if (key === enumAnalyticsDataSource.stored) {\r\n                // Copy stored data\r\n                this.history[key].push(Object.assign({}, this.root.hubGoals.storedShapes));\r\n            } else {\r\n                this.history[key].push({});\r\n            }\r\n            while (this.history[key].length > globalConfig.statisticsGraphSlices) {\r\n                this.history[key].shift();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the current rate of a given shape\r\n     * @param {enumAnalyticsDataSource} dataSource\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    getCurrentShapeRate(dataSource, definition) {\r\n        const slices = this.history[dataSource];\r\n        return slices[slices.length - 2][definition.getHash()] || 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the rate of a given shape, <historyOffset> frames ago\r\n     * @param {enumAnalyticsDataSource} dataSource\r\n     * @param {ShapeDefinition} definition\r\n     * @param {number} historyOffset\r\n     */\r\n    getPastShapeRate(dataSource, definition, historyOffset) {\r\n        assertAlways(\r\n            historyOffset >= 0 && historyOffset < globalConfig.statisticsGraphSlices - 1,\r\n            \"Invalid slice offset: \" + historyOffset\r\n        );\r\n\r\n        const slices = this.history[dataSource];\r\n        return slices[slices.length - 2 - historyOffset][definition.getHash()] || 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the rates of all shapes\r\n     * @param {enumAnalyticsDataSource} dataSource\r\n     */\r\n    getCurrentShapeRates(dataSource) {\r\n        const slices = this.history[dataSource];\r\n\r\n        // First, copy current slice\r\n        const baseValues = Object.assign({}, slices[slices.length - 2]);\r\n\r\n        // Add past values\r\n        for (let i = 0; i < 10; ++i) {\r\n            const pastValues = slices[slices.length - i - 3];\r\n            for (const key in pastValues) {\r\n                baseValues[key] = baseValues[key] || 0;\r\n            }\r\n        }\r\n\r\n        return baseValues;\r\n    }\r\n\r\n    update() {\r\n        if (this.root.time.now() - this.lastAnalyticsSlice > globalConfig.analyticsSliceDurationSeconds) {\r\n            this.lastAnalyticsSlice = this.root.time.now();\r\n            this.startNewSlice();\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/production_analytics.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2876,
    "kind": "variable",
    "name": "enumAnalyticsDataSource",
    "memberof": "js/game/production_analytics.js",
    "static": true,
    "longname": "js/game/production_analytics.js~enumAnalyticsDataSource",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/production_analytics.js",
    "importStyle": "{enumAnalyticsDataSource}",
    "description": null,
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"produced\": string, \"stored\": string, \"delivered\": string}"
      ]
    }
  },
  {
    "__docId__": 2877,
    "kind": "class",
    "name": "ProductionAnalytics",
    "memberof": "js/game/production_analytics.js",
    "static": true,
    "longname": "js/game/production_analytics.js~ProductionAnalytics",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/production_analytics.js",
    "importStyle": "{ProductionAnalytics}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/serialization.js~BasicSerializableObject"
    ]
  },
  {
    "__docId__": 2878,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/production_analytics.js~ProductionAnalytics",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/production_analytics.js~ProductionAnalytics.getId",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2879,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/production_analytics.js~ProductionAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/production_analytics.js~ProductionAnalytics#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2880,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/production_analytics.js~ProductionAnalytics",
    "static": false,
    "longname": "js/game/production_analytics.js~ProductionAnalytics#root",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2881,
    "kind": "member",
    "name": "history",
    "memberof": "js/game/production_analytics.js~ProductionAnalytics",
    "static": false,
    "longname": "js/game/production_analytics.js~ProductionAnalytics#history",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "{\"undefined\": *}"
      ]
    }
  },
  {
    "__docId__": 2882,
    "kind": "member",
    "name": "lastAnalyticsSlice",
    "memberof": "js/game/production_analytics.js~ProductionAnalytics",
    "static": false,
    "longname": "js/game/production_analytics.js~ProductionAnalytics#lastAnalyticsSlice",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2883,
    "kind": "method",
    "name": "onShapeDelivered",
    "memberof": "js/game/production_analytics.js~ProductionAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/production_analytics.js~ProductionAnalytics#onShapeDelivered",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2884,
    "kind": "method",
    "name": "onItemProduced",
    "memberof": "js/game/production_analytics.js~ProductionAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/production_analytics.js~ProductionAnalytics#onItemProduced",
    "access": "public",
    "description": "",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2885,
    "kind": "method",
    "name": "startNewSlice",
    "memberof": "js/game/production_analytics.js~ProductionAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/production_analytics.js~ProductionAnalytics#startNewSlice",
    "access": "public",
    "description": "Starts a new time slice",
    "lineNumber": 67,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2886,
    "kind": "method",
    "name": "getCurrentShapeRate",
    "memberof": "js/game/production_analytics.js~ProductionAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/production_analytics.js~ProductionAnalytics#getCurrentShapeRate",
    "access": "public",
    "description": "Returns the current rate of a given shape",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "enumAnalyticsDataSource"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSource",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2887,
    "kind": "method",
    "name": "getPastShapeRate",
    "memberof": "js/game/production_analytics.js~ProductionAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/production_analytics.js~ProductionAnalytics#getPastShapeRate",
    "access": "public",
    "description": "Returns the rate of a given shape, <historyOffset> frames ago",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "enumAnalyticsDataSource"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSource",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "historyOffset",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2888,
    "kind": "method",
    "name": "getCurrentShapeRates",
    "memberof": "js/game/production_analytics.js~ProductionAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/production_analytics.js~ProductionAnalytics#getCurrentShapeRates",
    "access": "public",
    "description": "Returns the rates of all shapes",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "enumAnalyticsDataSource"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSource",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2889,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/production_analytics.js~ProductionAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/production_analytics.js~ProductionAnalytics#update",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2891,
    "kind": "file",
    "name": "js/game/root.js",
    "content": "/* eslint-disable no-unused-vars */\r\nimport { Signal } from \"../core/signal\";\r\nimport { RandomNumberGenerator } from \"../core/rng\";\r\nimport { createLogger } from \"../core/logging\";\r\n\r\n// Type hints\r\n/* typehints:start */\r\nimport { GameTime } from \"./time/game_time\";\r\nimport { EntityManager } from \"./entity_manager\";\r\nimport { GameSystemManager } from \"./game_system_manager\";\r\nimport { GameHUD } from \"./hud/hud\";\r\nimport { MapView } from \"./map_view\";\r\nimport { Camera } from \"./camera\";\r\nimport { InGameState } from \"../states/ingame\";\r\nimport { AutomaticSave } from \"./automatic_save\";\r\nimport { Application } from \"../application\";\r\nimport { SoundProxy } from \"./sound_proxy\";\r\nimport { Savegame } from \"../savegame/savegame\";\r\nimport { GameLogic } from \"./logic\";\r\nimport { ShapeDefinitionManager } from \"./shape_definition_manager\";\r\nimport { HubGoals } from \"./hub_goals\";\r\nimport { BufferMaintainer } from \"../core/buffer_maintainer\";\r\nimport { ProductionAnalytics } from \"./production_analytics\";\r\nimport { Entity } from \"./entity\";\r\nimport { ShapeDefinition } from \"./shape_definition\";\r\nimport { BaseItem } from \"./base_item\";\r\nimport { DynamicTickrate } from \"./dynamic_tickrate\";\r\nimport { KeyActionMapper } from \"./key_action_mapper\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { GameMode } from \"./game_mode\";\r\n/* typehints:end */\r\n\r\nconst logger = createLogger(\"game/root\");\r\n\r\n/** @type {Array<Layer>} */\r\nexport const layers = [\"regular\", \"wires\"];\r\n\r\n/**\r\n * The game root is basically the whole game state at a given point,\r\n * combining all important classes. We don't have globals, but this\r\n * class is passed to almost all game classes.\r\n */\r\nexport class GameRoot {\r\n    /**\r\n     * Constructs a new game root\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        this.app = app;\r\n\r\n        /** @type {Savegame} */\r\n        this.savegame = null;\r\n\r\n        /** @type {InGameState} */\r\n        this.gameState = null;\r\n\r\n        /** @type {KeyActionMapper} */\r\n        this.keyMapper = null;\r\n\r\n        // Store game dimensions\r\n        this.gameWidth = 500;\r\n        this.gameHeight = 500;\r\n\r\n        // Stores whether the current session is a fresh game (true), or was continued (false)\r\n        /** @type {boolean} */\r\n        this.gameIsFresh = true;\r\n\r\n        // Stores whether the logic is already initialized\r\n        /** @type {boolean} */\r\n        this.logicInitialized = false;\r\n\r\n        // Stores whether the game is already initialized, that is, all systems etc have been created\r\n        /** @type {boolean} */\r\n        this.gameInitialized = false;\r\n\r\n        /**\r\n         * Whether a bulk operation is running\r\n         */\r\n        this.bulkOperationRunning = false;\r\n\r\n        //////// Other properties ///////\r\n\r\n        /** @type {Camera} */\r\n        this.camera = null;\r\n\r\n        /** @type {HTMLCanvasElement} */\r\n        this.canvas = null;\r\n\r\n        /** @type {CanvasRenderingContext2D} */\r\n        this.context = null;\r\n\r\n        /** @type {MapView} */\r\n        this.map = null;\r\n\r\n        /** @type {GameLogic} */\r\n        this.logic = null;\r\n\r\n        /** @type {EntityManager} */\r\n        this.entityMgr = null;\r\n\r\n        /** @type {GameHUD} */\r\n        this.hud = null;\r\n\r\n        /** @type {GameSystemManager} */\r\n        this.systemMgr = null;\r\n\r\n        /** @type {GameTime} */\r\n        this.time = null;\r\n\r\n        /** @type {HubGoals} */\r\n        this.hubGoals = null;\r\n\r\n        /** @type {BufferMaintainer} */\r\n        this.buffers = null;\r\n\r\n        /** @type {AutomaticSave} */\r\n        this.automaticSave = null;\r\n\r\n        /** @type {SoundProxy} */\r\n        this.soundProxy = null;\r\n\r\n        /** @type {ShapeDefinitionManager} */\r\n        this.shapeDefinitionMgr = null;\r\n\r\n        /** @type {ProductionAnalytics} */\r\n        this.productionAnalytics = null;\r\n\r\n        /** @type {DynamicTickrate} */\r\n        this.dynamicTickrate = null;\r\n\r\n        /** @type {Layer} */\r\n        this.currentLayer = \"regular\";\r\n\r\n        /** @type {GameMode} */\r\n        this.gameMode = null;\r\n\r\n        this.signals = {\r\n            // Entities\r\n            entityManuallyPlaced: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n            entityAdded: /** @type {TypedSignal<[Entity, Boolean]>} */ (new Signal()),\r\n            entityChanged: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n            entityGotNewComponent: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n            entityComponentRemoved: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n            entityQueuedForDestroy: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n            entityDestroyed: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n\r\n            // Global\r\n            resized: /** @type {TypedSignal<[number, number]>} */ (new Signal()),\r\n            readyToRender: /** @type {TypedSignal<[]>} */ (new Signal()),\r\n            aboutToDestruct: /** @type {TypedSignal<[]>} */ new Signal(),\r\n\r\n            // Game Hooks\r\n            gameSaved: /** @type {TypedSignal<[]>} */ (new Signal()), // Game got saved\r\n            gameRestored: /** @type {TypedSignal<[]>} */ (new Signal()), // Game got restored\r\n\r\n            gameFrameStarted: /** @type {TypedSignal<[]>} */ (new Signal()), // New frame\r\n\r\n            storyGoalCompleted: /** @type {TypedSignal<[number, string]>} */ (new Signal()),\r\n            upgradePurchased: /** @type {TypedSignal<[string]>} */ (new Signal()),\r\n\r\n            // Called right after game is initialized\r\n            postLoadHook: /** @type {TypedSignal<[]>} */ (new Signal()),\r\n\r\n            shapeDelivered: /** @type {TypedSignal<[ShapeDefinition]>} */ (new Signal()),\r\n            itemProduced: /** @type {TypedSignal<[BaseItem]>} */ (new Signal()),\r\n\r\n            bulkOperationFinished: /** @type {TypedSignal<[]>} */ (new Signal()),\r\n\r\n            editModeChanged: /** @type {TypedSignal<[Layer]>} */ (new Signal()),\r\n\r\n            // Called to check if an entity can be placed, second parameter is an additional offset.\r\n            // Use to introduce additional placement checks\r\n            prePlacementCheck: /** @type {TypedSignal<[Entity, Vector, Boolean]>} */ (new Signal()),\r\n\r\n            // Called before actually placing an entity, use to perform additional logic\r\n            // for freeing space before actually placing.\r\n            freeEntityAreaBeforeBuild: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n        };\r\n\r\n        // RNG's\r\n        /** @type {Object.<string, Object.<string, RandomNumberGenerator>>} */\r\n        this.rngs = {};\r\n\r\n        // Work queue\r\n        this.queue = {\r\n            requireRedraw: false,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Destructs the game root\r\n     */\r\n    destruct() {\r\n        logger.log(\"destructing root\");\r\n        this.signals.aboutToDestruct.dispatch();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * Resets the whole root and removes all properties\r\n     */\r\n    reset() {\r\n        if (this.signals) {\r\n            // Destruct all signals\r\n            for (let i = 0; i < this.signals.length; ++i) {\r\n                this.signals[i].removeAll();\r\n            }\r\n        }\r\n\r\n        if (this.hud) {\r\n            this.hud.cleanup();\r\n        }\r\n        if (this.camera) {\r\n            this.camera.cleanup();\r\n        }\r\n\r\n        // Finally free all properties\r\n        for (let prop in this) {\r\n            if (this.hasOwnProperty(prop)) {\r\n                delete this[prop];\r\n            }\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/root.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2892,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/root.js",
    "static": true,
    "longname": "js/game/root.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/root.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2893,
    "kind": "variable",
    "name": "layers",
    "memberof": "js/game/root.js",
    "static": true,
    "longname": "js/game/root.js~layers",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/root.js",
    "importStyle": "{layers}",
    "description": null,
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Array<Layer>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2894,
    "kind": "class",
    "name": "GameRoot",
    "memberof": "js/game/root.js",
    "static": true,
    "longname": "js/game/root.js~GameRoot",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/root.js",
    "importStyle": "{GameRoot}",
    "description": "The game root is basically the whole game state at a given point,\ncombining all important classes. We don't have globals, but this\nclass is passed to almost all game classes.",
    "lineNumber": 43,
    "interface": false
  },
  {
    "__docId__": 2895,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/root.js~GameRoot",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/root.js~GameRoot#constructor",
    "access": "public",
    "description": "Constructs a new game root",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2896,
    "kind": "member",
    "name": "app",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#app",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2897,
    "kind": "member",
    "name": "savegame",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#savegame",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "Savegame"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2898,
    "kind": "member",
    "name": "gameState",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#gameState",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "InGameState"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2899,
    "kind": "member",
    "name": "keyMapper",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#keyMapper",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "KeyActionMapper"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2900,
    "kind": "member",
    "name": "gameWidth",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#gameWidth",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2901,
    "kind": "member",
    "name": "gameHeight",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#gameHeight",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 2902,
    "kind": "member",
    "name": "gameIsFresh",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#gameIsFresh",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2903,
    "kind": "member",
    "name": "logicInitialized",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#logicInitialized",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2904,
    "kind": "member",
    "name": "gameInitialized",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#gameInitialized",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2905,
    "kind": "member",
    "name": "bulkOperationRunning",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#bulkOperationRunning",
    "access": "public",
    "description": "Whether a bulk operation is running",
    "lineNumber": 79,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2906,
    "kind": "member",
    "name": "camera",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#camera",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "Camera"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2907,
    "kind": "member",
    "name": "canvas",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#canvas",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2908,
    "kind": "member",
    "name": "context",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#context",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "type": {
      "nullable": null,
      "types": [
        "CanvasRenderingContext2D"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2909,
    "kind": "member",
    "name": "map",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#map",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "MapView"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2910,
    "kind": "member",
    "name": "logic",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#logic",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "GameLogic"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2911,
    "kind": "member",
    "name": "entityMgr",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#entityMgr",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "type": {
      "nullable": null,
      "types": [
        "EntityManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2912,
    "kind": "member",
    "name": "hud",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#hud",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "GameHUD"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2913,
    "kind": "member",
    "name": "systemMgr",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#systemMgr",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "type": {
      "nullable": null,
      "types": [
        "GameSystemManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2914,
    "kind": "member",
    "name": "time",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#time",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "GameTime"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2915,
    "kind": "member",
    "name": "hubGoals",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#hubGoals",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "type": {
      "nullable": null,
      "types": [
        "HubGoals"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2916,
    "kind": "member",
    "name": "buffers",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#buffers",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "type": {
      "nullable": null,
      "types": [
        "BufferMaintainer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2917,
    "kind": "member",
    "name": "automaticSave",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#automaticSave",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "type": {
      "nullable": null,
      "types": [
        "AutomaticSave"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2918,
    "kind": "member",
    "name": "soundProxy",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#soundProxy",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "type": {
      "nullable": null,
      "types": [
        "SoundProxy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2919,
    "kind": "member",
    "name": "shapeDefinitionMgr",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#shapeDefinitionMgr",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "type": {
      "nullable": null,
      "types": [
        "ShapeDefinitionManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2920,
    "kind": "member",
    "name": "productionAnalytics",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#productionAnalytics",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "type": {
      "nullable": null,
      "types": [
        "ProductionAnalytics"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2921,
    "kind": "member",
    "name": "dynamicTickrate",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#dynamicTickrate",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "type": {
      "nullable": null,
      "types": [
        "DynamicTickrate"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2922,
    "kind": "member",
    "name": "currentLayer",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#currentLayer",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "type": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2923,
    "kind": "member",
    "name": "gameMode",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#gameMode",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "type": {
      "nullable": null,
      "types": [
        "GameMode"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2924,
    "kind": "member",
    "name": "signals",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#signals",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "type": {
      "types": [
        "{\"entityManuallyPlaced\": *, \"entityAdded\": *, \"entityChanged\": *, \"entityGotNewComponent\": *, \"entityComponentRemoved\": *, \"entityQueuedForDestroy\": *, \"entityDestroyed\": *, \"resized\": *, \"readyToRender\": *, \"aboutToDestruct\": *, \"gameSaved\": *, \"gameRestored\": *, \"gameFrameStarted\": *, \"storyGoalCompleted\": *, \"upgradePurchased\": *, \"postLoadHook\": *, \"shapeDelivered\": *, \"itemProduced\": *, \"bulkOperationFinished\": *, \"editModeChanged\": *, \"prePlacementCheck\": *, \"freeEntityAreaBeforeBuild\": *}"
      ]
    }
  },
  {
    "__docId__": 2925,
    "kind": "member",
    "name": "rngs",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#rngs",
    "access": "public",
    "description": null,
    "lineNumber": 182,
    "type": {
      "nullable": null,
      "types": [
        "Object.<string, Object.<string, RandomNumberGenerator>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2926,
    "kind": "member",
    "name": "queue",
    "memberof": "js/game/root.js~GameRoot",
    "static": false,
    "longname": "js/game/root.js~GameRoot#queue",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "type": {
      "types": [
        "{\"requireRedraw\": *}"
      ]
    }
  },
  {
    "__docId__": 2927,
    "kind": "method",
    "name": "destruct",
    "memberof": "js/game/root.js~GameRoot",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/root.js~GameRoot#destruct",
    "access": "public",
    "description": "Destructs the game root",
    "lineNumber": 193,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2928,
    "kind": "method",
    "name": "reset",
    "memberof": "js/game/root.js~GameRoot",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/root.js~GameRoot#reset",
    "access": "public",
    "description": "Resets the whole root and removes all properties",
    "lineNumber": 203,
    "params": [],
    "return": null
  },
  {
    "__docId__": 2929,
    "kind": "file",
    "name": "js/game/shape_definition.js",
    "content": "import { makeOffscreenBuffer } from \"../core/buffer_utils\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { smoothenDpi } from \"../core/dpi_manager\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\nimport { enumColors, enumColorsToHexCode, enumColorToShortcode, enumShortcodeToColor } from \"./colors\";\r\nimport { THEME } from \"./theme\";\r\n\r\n/**\r\n * @typedef {{\r\n *   subShape: enumSubShape,\r\n *   color: enumColors,\r\n * }} ShapeLayerItem\r\n */\r\n\r\n/**\r\n * Order is Q1 (tr), Q2(br), Q3(bl), Q4(tl)\r\n * @typedef {[ShapeLayerItem?, ShapeLayerItem?, ShapeLayerItem?, ShapeLayerItem?]} ShapeLayer\r\n */\r\n\r\nconst arrayQuadrantIndexToOffset = [\r\n    new Vector(1, -1), // tr\r\n    new Vector(1, 1), // br\r\n    new Vector(-1, 1), // bl\r\n    new Vector(-1, -1), // tl\r\n];\r\n\r\n/** @enum {string} */\r\nexport const enumSubShape = {\r\n    rect: \"rect\",\r\n    circle: \"circle\",\r\n    star: \"star\",\r\n    windmill: \"windmill\",\r\n};\r\n\r\n/** @enum {string} */\r\nexport const enumSubShapeToShortcode = {\r\n    [enumSubShape.rect]: \"R\",\r\n    [enumSubShape.circle]: \"C\",\r\n    [enumSubShape.star]: \"S\",\r\n    [enumSubShape.windmill]: \"W\",\r\n};\r\n\r\n/** @enum {enumSubShape} */\r\nexport const enumShortcodeToSubShape = {};\r\nfor (const key in enumSubShapeToShortcode) {\r\n    enumShortcodeToSubShape[enumSubShapeToShortcode[key]] = key;\r\n}\r\n\r\n/**\r\n * Converts the given parameters to a valid shape definition\r\n * @param {*} layers\r\n * @returns {Array<import(\"./shape_definition\").ShapeLayer>}\r\n */\r\nexport function createSimpleShape(layers) {\r\n    layers.forEach(layer => {\r\n        layer.forEach(item => {\r\n            if (item) {\r\n                item.color = item.color || enumColors.uncolored;\r\n            }\r\n        });\r\n    });\r\n    return layers;\r\n}\r\n\r\n/**\r\n * Cache which shapes are valid short keys and which not\r\n * @type {Map<string, boolean>}\r\n */\r\nconst SHORT_KEY_CACHE = new Map();\r\n\r\nexport class ShapeDefinition extends BasicSerializableObject {\r\n    static getId() {\r\n        return \"ShapeDefinition\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {};\r\n    }\r\n\r\n    deserialize(data) {\r\n        const errorCode = super.deserialize(data);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n        const definition = ShapeDefinition.fromShortKey(data);\r\n        this.layers = /** @type {Array<ShapeLayer>} */ (definition.layers);\r\n    }\r\n\r\n    serialize() {\r\n        return this.getHash();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {Array<ShapeLayer>=} param0.layers\r\n     */\r\n    constructor({ layers = [] }) {\r\n        super();\r\n\r\n        /**\r\n         * The layers from bottom to top\r\n         * @type {Array<ShapeLayer>}\r\n         */\r\n        this.layers = layers;\r\n\r\n        /** @type {string} */\r\n        this.cachedHash = null;\r\n\r\n        // Set on demand\r\n        this.bufferGenerator = null;\r\n    }\r\n\r\n    /**\r\n     * Generates the definition from the given short key\r\n     * @param {string} key\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    static fromShortKey(key) {\r\n        const sourceLayers = key.split(\":\");\r\n        let layers = [];\r\n        for (let i = 0; i < sourceLayers.length; ++i) {\r\n            const text = sourceLayers[i];\r\n            assert(text.length === 8, \"Invalid shape short key: \" + key);\r\n\r\n            /** @type {ShapeLayer} */\r\n            const quads = [null, null, null, null];\r\n            for (let quad = 0; quad < 4; ++quad) {\r\n                const shapeText = text[quad * 2 + 0];\r\n                const subShape = enumShortcodeToSubShape[shapeText];\r\n                const color = enumShortcodeToColor[text[quad * 2 + 1]];\r\n                if (subShape) {\r\n                    assert(color, \"Invalid shape short key:\", key);\r\n                    quads[quad] = {\r\n                        subShape,\r\n                        color,\r\n                    };\r\n                } else if (shapeText !== \"-\") {\r\n                    assert(false, \"Invalid shape key: \" + shapeText);\r\n                }\r\n            }\r\n            layers.push(quads);\r\n        }\r\n\r\n        const definition = new ShapeDefinition({ layers });\r\n        // We know the hash so save some work\r\n        definition.cachedHash = key;\r\n        return definition;\r\n    }\r\n\r\n    /**\r\n     * Checks if a given string is a valid short key\r\n     * @param {string} key\r\n     * @returns {boolean}\r\n     */\r\n    static isValidShortKey(key) {\r\n        if (SHORT_KEY_CACHE.has(key)) {\r\n            return SHORT_KEY_CACHE.get(key);\r\n        }\r\n\r\n        const result = ShapeDefinition.isValidShortKeyInternal(key);\r\n        SHORT_KEY_CACHE.set(key, result);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * INTERNAL\r\n     * Checks if a given string is a valid short key\r\n     * @param {string} key\r\n     * @returns {boolean}\r\n     */\r\n    static isValidShortKeyInternal(key) {\r\n        const sourceLayers = key.split(\":\");\r\n        let layers = [];\r\n        for (let i = 0; i < sourceLayers.length; ++i) {\r\n            const text = sourceLayers[i];\r\n            if (text.length !== 8) {\r\n                return false;\r\n            }\r\n\r\n            /** @type {ShapeLayer} */\r\n            const quads = [null, null, null, null];\r\n            let anyFilled = false;\r\n            for (let quad = 0; quad < 4; ++quad) {\r\n                const shapeText = text[quad * 2 + 0];\r\n                const colorText = text[quad * 2 + 1];\r\n                const subShape = enumShortcodeToSubShape[shapeText];\r\n                const color = enumShortcodeToColor[colorText];\r\n\r\n                // Valid shape\r\n                if (subShape) {\r\n                    if (!color) {\r\n                        // Invalid color\r\n                        return false;\r\n                    }\r\n                    quads[quad] = {\r\n                        subShape,\r\n                        color,\r\n                    };\r\n                    anyFilled = true;\r\n                } else if (shapeText === \"-\") {\r\n                    // Make sure color is empty then, too\r\n                    if (colorText !== \"-\") {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    // Invalid shape key\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (!anyFilled) {\r\n                // Empty layer\r\n                return false;\r\n            }\r\n            layers.push(quads);\r\n        }\r\n\r\n        if (layers.length === 0 || layers.length > 4) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Internal method to clone the shape definition\r\n     * @returns {Array<ShapeLayer>}\r\n     */\r\n    internalCloneLayers() {\r\n        return JSON.parse(JSON.stringify(this.layers));\r\n    }\r\n\r\n    /**\r\n     * Returns if the definition is entirely empty^\r\n     * @returns {boolean}\r\n     */\r\n    isEntirelyEmpty() {\r\n        return this.layers.length === 0;\r\n    }\r\n\r\n    /**\r\n     * Returns a unique id for this shape\r\n     * @returns {string}\r\n     */\r\n    getHash() {\r\n        if (this.cachedHash) {\r\n            return this.cachedHash;\r\n        }\r\n\r\n        let id = \"\";\r\n        for (let layerIndex = 0; layerIndex < this.layers.length; ++layerIndex) {\r\n            const layer = this.layers[layerIndex];\r\n\r\n            for (let quadrant = 0; quadrant < layer.length; ++quadrant) {\r\n                const item = layer[quadrant];\r\n                if (item) {\r\n                    id += enumSubShapeToShortcode[item.subShape] + enumColorToShortcode[item.color];\r\n                } else {\r\n                    id += \"--\";\r\n                }\r\n            }\r\n\r\n            if (layerIndex < this.layers.length - 1) {\r\n                id += \":\";\r\n            }\r\n        }\r\n        this.cachedHash = id;\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Draws the shape definition\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {DrawParameters} parameters\r\n     * @param {number=} diameter\r\n     */\r\n    drawCentered(x, y, parameters, diameter = 20, background = true) {\r\n        const dpi = smoothenDpi(globalConfig.shapesSharpness * parameters.zoomLevel);\r\n\r\n        if (!this.bufferGenerator) {\r\n            this.bufferGenerator = this.internalGenerateShapeBuffer.bind(this);\r\n        }\r\n\r\n        const key = diameter + \"/\" + dpi + \"/\" + this.cachedHash;\r\n        const canvas = parameters.root.buffers.getForKey({\r\n            key: \"shapedef\",\r\n            subKey: key,\r\n            w: diameter,\r\n            h: diameter,\r\n            dpi,\r\n            redrawMethod: this.bufferGenerator,\r\n            additionalParams: background,\r\n        });\r\n        parameters.context.drawImage(canvas, x - diameter / 2, y - diameter / 2, diameter, diameter);\r\n    }\r\n\r\n    /**\r\n     * Draws the item to a canvas\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} size\r\n     */\r\n    drawFullSizeOnCanvas(context, size, background = true) {\r\n        this.internalGenerateShapeBuffer(null, context, size, size, 1, background);\r\n    }\r\n\r\n    /**\r\n     * Generates this shape as a canvas\r\n     * @param {number} size\r\n     */\r\n    generateAsCanvas(size = 120, background = true) {\r\n        const [canvas, context] = makeOffscreenBuffer(size, size, {\r\n            smooth: true,\r\n            label: \"definition-canvas-cache-\" + this.getHash(),\r\n            reusable: false,\r\n        });\r\n\r\n        this.internalGenerateShapeBuffer(canvas, context, size, size, 1, background);\r\n        return canvas;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {HTMLCanvasElement} canvas\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} w\r\n     * @param {number} h\r\n     * @param {number} dpi\r\n     */\r\n    internalGenerateShapeBuffer(canvas, context, w, h, dpi, background = true) {\r\n        context.translate((w * dpi) / 2, (h * dpi) / 2);\r\n        context.scale((dpi * w) / 23, (dpi * h) / 23);\r\n\r\n        context.fillStyle = \"#e9ecf7\";\r\n\r\n        const quadrantSize = 10;\r\n        const quadrantHalfSize = quadrantSize / 2;\r\n\r\n        if (background) {\r\n            context.fillStyle = THEME.items.circleBackground;\r\n            context.beginCircle(0, 0, quadrantSize * 1.15);\r\n            context.fill();\r\n        }\r\n\r\n        for (let layerIndex = 0; layerIndex < this.layers.length; ++layerIndex) {\r\n            const quadrants = this.layers[layerIndex];\r\n\r\n            const layerScale = Math.max(0.1, 0.9 - layerIndex * 0.22);\r\n\r\n            for (let quadrantIndex = 0; quadrantIndex < 4; ++quadrantIndex) {\r\n                if (!quadrants[quadrantIndex]) {\r\n                    continue;\r\n                }\r\n                const { subShape, color } = quadrants[quadrantIndex];\r\n\r\n                const quadrantPos = arrayQuadrantIndexToOffset[quadrantIndex];\r\n                const centerQuadrantX = quadrantPos.x * quadrantHalfSize;\r\n                const centerQuadrantY = quadrantPos.y * quadrantHalfSize;\r\n\r\n                const rotation = Math.radians(quadrantIndex * 90);\r\n\r\n                context.translate(centerQuadrantX, centerQuadrantY);\r\n                context.rotate(rotation);\r\n\r\n                context.fillStyle = enumColorsToHexCode[color];\r\n                context.strokeStyle = THEME.items.outline;\r\n                context.lineWidth = THEME.items.outlineWidth;\r\n\r\n                const insetPadding = 0.0;\r\n\r\n                switch (subShape) {\r\n                    case enumSubShape.rect:\r\n                        {\r\n                            context.beginPath();\r\n                            const dims = quadrantSize * layerScale;\r\n                            context.rect(\r\n                                insetPadding + -quadrantHalfSize, -insetPadding + quadrantHalfSize - dims,\r\n                                dims,\r\n                                dims\r\n                            );\r\n\r\n                            break;\r\n                        }\r\n                    case enumSubShape.star:\r\n                        {\r\n                            context.beginPath();\r\n                            const dims = quadrantSize * layerScale;\r\n\r\n                            let originX = insetPadding - quadrantHalfSize;\r\n                            let originY = -insetPadding + quadrantHalfSize - dims;\r\n\r\n                            const moveInwards = dims * 0.4;\r\n                            context.moveTo(originX, originY + moveInwards);\r\n                            context.lineTo(originX + dims, originY);\r\n                            context.lineTo(originX + dims - moveInwards, originY + dims);\r\n                            context.lineTo(originX, originY + dims);\r\n                            context.closePath();\r\n                            break;\r\n                        }\r\n\r\n                    case enumSubShape.windmill:\r\n                        {\r\n                            context.beginPath();\r\n                            const dims = quadrantSize * layerScale;\r\n\r\n                            let originX = insetPadding - quadrantHalfSize;\r\n                            let originY = -insetPadding + quadrantHalfSize - dims;\r\n                            const moveInwards = dims * 0.4;\r\n                            context.moveTo(originX, originY + moveInwards);\r\n                            context.lineTo(originX + dims, originY);\r\n                            context.lineTo(originX + dims, originY + dims);\r\n                            context.lineTo(originX, originY + dims);\r\n                            context.closePath();\r\n                            break;\r\n                        }\r\n\r\n                    case enumSubShape.circle:\r\n                        {\r\n                            context.beginPath();\r\n                            context.moveTo(insetPadding + -quadrantHalfSize, -insetPadding + quadrantHalfSize);\r\n                            context.arc(\r\n                                insetPadding + -quadrantHalfSize, -insetPadding + quadrantHalfSize,\r\n                                quadrantSize * layerScale, -Math.PI * 0.5,\r\n                                0\r\n                            );\r\n                            context.closePath();\r\n                            break;\r\n                        }\r\n\r\n                    default:\r\n                        {\r\n                            assertAlways(false, \"Unkown sub shape: \" + subShape);\r\n                        }\r\n                }\r\n\r\n                context.fill();\r\n                context.stroke();\r\n\r\n                context.rotate(-rotation);\r\n                context.translate(-centerQuadrantX, -centerQuadrantY);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a definition with only the given quadrants\r\n     * @param {Array<number>} includeQuadrants\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    cloneFilteredByQuadrants(includeQuadrants) {\r\n        const newLayers = this.internalCloneLayers();\r\n        for (let layerIndex = 0; layerIndex < newLayers.length; ++layerIndex) {\r\n            const quadrants = newLayers[layerIndex];\r\n            let anyContents = false;\r\n            for (let quadrantIndex = 0; quadrantIndex < 4; ++quadrantIndex) {\r\n                if (includeQuadrants.indexOf(quadrantIndex) < 0) {\r\n                    quadrants[quadrantIndex] = null;\r\n                } else if (quadrants[quadrantIndex]) {\r\n                    anyContents = true;\r\n                }\r\n            }\r\n\r\n            // Check if the layer is entirely empty\r\n            if (!anyContents) {\r\n                newLayers.splice(layerIndex, 1);\r\n                layerIndex -= 1;\r\n            }\r\n        }\r\n        return new ShapeDefinition({ layers: newLayers });\r\n    }\r\n\r\n    /**\r\n     * Returns a definition which was rotated clockwise\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    cloneRotateCW() {\r\n        const newLayers = this.internalCloneLayers();\r\n        for (let layerIndex = 0; layerIndex < newLayers.length; ++layerIndex) {\r\n            const quadrants = newLayers[layerIndex];\r\n            quadrants.unshift(quadrants[3]);\r\n            quadrants.pop();\r\n        }\r\n        return new ShapeDefinition({ layers: newLayers });\r\n    }\r\n\r\n    /**\r\n     * Returns a definition which was rotated counter clockwise\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    cloneRotateCCW() {\r\n        const newLayers = this.internalCloneLayers();\r\n        for (let layerIndex = 0; layerIndex < newLayers.length; ++layerIndex) {\r\n            const quadrants = newLayers[layerIndex];\r\n            quadrants.push(quadrants[0]);\r\n            quadrants.shift();\r\n        }\r\n        return new ShapeDefinition({ layers: newLayers });\r\n    }\r\n\r\n    /**\r\n     * Returns a definition which was rotated 180 degrees\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    cloneRotate180() {\r\n        const newLayers = this.internalCloneLayers();\r\n        for (let layerIndex = 0; layerIndex < newLayers.length; ++layerIndex) {\r\n            const quadrants = newLayers[layerIndex];\r\n            quadrants.push(quadrants.shift(), quadrants.shift());\r\n        }\r\n        return new ShapeDefinition({ layers: newLayers });\r\n    }\r\n\r\n    /**\r\n     * Stacks the given shape definition on top.\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    cloneAndStackWith(definition) {\r\n        if (this.isEntirelyEmpty() || definition.isEntirelyEmpty()) {\r\n            assert(false, \"Can not stack entirely empty definition\");\r\n        }\r\n\r\n        const bottomShapeLayers = this.layers;\r\n        const bottomShapeHighestLayerByQuad = [-1, -1, -1, -1];\r\n\r\n        for (let layer = bottomShapeLayers.length - 1; layer >= 0; --layer) {\r\n            const shapeLayer = bottomShapeLayers[layer];\r\n            for (let quad = 0; quad < 4; ++quad) {\r\n                const shapeQuad = shapeLayer[quad];\r\n                if (shapeQuad !== null && bottomShapeHighestLayerByQuad[quad] < layer) {\r\n                    bottomShapeHighestLayerByQuad[quad] = layer;\r\n                }\r\n            }\r\n        }\r\n\r\n        const topShapeLayers = definition.layers;\r\n        const topShapeLowestLayerByQuad = [4, 4, 4, 4];\r\n\r\n        for (let layer = 0; layer < topShapeLayers.length; ++layer) {\r\n            const shapeLayer = topShapeLayers[layer];\r\n            for (let quad = 0; quad < 4; ++quad) {\r\n                const shapeQuad = shapeLayer[quad];\r\n                if (shapeQuad !== null && topShapeLowestLayerByQuad[quad] > layer) {\r\n                    topShapeLowestLayerByQuad[quad] = layer;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * We want to find the number `layerToMergeAt` such that when the top shape is placed at that\r\n         * layer, the smallest gap between shapes is only 1. Instead of doing a guess-and-check method to\r\n         * find the appropriate layer, we just calculate all the gaps assuming a merge at layer 0, even\r\n         * though they go negative, and calculating the number to add to it so the minimum gap is 1 (ends\r\n         * up being 1 - minimum).\r\n         */\r\n        const gapsBetweenShapes = [];\r\n        for (let quad = 0; quad < 4; ++quad) {\r\n            gapsBetweenShapes.push(topShapeLowestLayerByQuad[quad] - bottomShapeHighestLayerByQuad[quad]);\r\n        }\r\n        const smallestGapBetweenShapes = Math.min(...gapsBetweenShapes);\r\n        // Can't merge at a layer lower than 0\r\n        const layerToMergeAt = Math.max(1 - smallestGapBetweenShapes, 0);\r\n\r\n        const mergedLayers = this.internalCloneLayers();\r\n        for (let layer = mergedLayers.length; layer < layerToMergeAt + topShapeLayers.length; ++layer) {\r\n            mergedLayers.push([null, null, null, null]);\r\n        }\r\n\r\n        for (let layer = 0; layer < topShapeLayers.length; ++layer) {\r\n            const layerMergingAt = layerToMergeAt + layer;\r\n            const bottomShapeLayer = mergedLayers[layerMergingAt];\r\n            const topShapeLayer = topShapeLayers[layer];\r\n            for (let quad = 0; quad < 4; quad++) {\r\n                assert(!(bottomShapeLayer[quad] && topShapeLayer[quad]), \"Shape merge: Sub shape got lost\");\r\n                bottomShapeLayer[quad] = bottomShapeLayer[quad] || topShapeLayer[quad];\r\n            }\r\n        }\r\n\r\n        // Limit to 4 layers at max\r\n        mergedLayers.splice(4);\r\n\r\n        return new ShapeDefinition({ layers: mergedLayers });\r\n    }\r\n\r\n    /**\r\n     * Clones the shape and colors everything in the given color\r\n     * @param {enumColors} color\r\n     */\r\n    cloneAndPaintWith(color) {\r\n        const newLayers = this.internalCloneLayers();\r\n\r\n        for (let layerIndex = 0; layerIndex < newLayers.length; ++layerIndex) {\r\n            const quadrants = newLayers[layerIndex];\r\n            for (let quadrantIndex = 0; quadrantIndex < 4; ++quadrantIndex) {\r\n                const item = quadrants[quadrantIndex];\r\n                if (item) {\r\n                    item.color = color;\r\n                }\r\n            }\r\n        }\r\n        return new ShapeDefinition({ layers: newLayers });\r\n    }\r\n\r\n    /**\r\n     * Clones the shape and colors everything in the given colors\r\n     * @param {[enumColors, enumColors, enumColors, enumColors]} colors\r\n     */\r\n    cloneAndPaintWith4Colors(colors) {\r\n        const newLayers = this.internalCloneLayers();\r\n\r\n        for (let layerIndex = 0; layerIndex < newLayers.length; ++layerIndex) {\r\n            const quadrants = newLayers[layerIndex];\r\n            for (let quadrantIndex = 0; quadrantIndex < 4; ++quadrantIndex) {\r\n                const item = quadrants[quadrantIndex];\r\n                if (item) {\r\n                    item.color = colors[quadrantIndex] || item.color;\r\n                }\r\n            }\r\n        }\r\n        return new ShapeDefinition({ layers: newLayers });\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/shape_definition.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2930,
    "kind": "typedef",
    "name": "ShapeLayerItem",
    "memberof": "js/game/shape_definition.js",
    "static": true,
    "longname": "js/game/shape_definition.js~ShapeLayerItem",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "{\n  subShape: enumSubShape,\n  color: enumColors,\n}"
      ],
      "optional": false,
      "name": "ShapeLayerItem"
    }
  },
  {
    "__docId__": 2931,
    "kind": "typedef",
    "name": "ShapeLayer",
    "memberof": "js/game/shape_definition.js",
    "static": true,
    "longname": "js/game/shape_definition.js~ShapeLayer",
    "access": "public",
    "description": "Order is Q1 (tr), Q2(br), Q3(bl), Q4(tl)",
    "lineNumber": 22,
    "type": {
      "types": [
        "[ShapeLayerItem?, ShapeLayerItem?, ShapeLayerItem?, ShapeLayerItem?]"
      ],
      "optional": false,
      "name": "ShapeLayer"
    }
  },
  {
    "__docId__": 2932,
    "kind": "variable",
    "name": "enumSubShape",
    "memberof": "js/game/shape_definition.js",
    "static": true,
    "longname": "js/game/shape_definition.js~enumSubShape",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/shape_definition.js",
    "importStyle": "{enumSubShape}",
    "description": null,
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"rect\": string, \"circle\": string, \"star\": string, \"windmill\": string}"
      ]
    }
  },
  {
    "__docId__": 2933,
    "kind": "variable",
    "name": "enumSubShapeToShortcode",
    "memberof": "js/game/shape_definition.js",
    "static": true,
    "longname": "js/game/shape_definition.js~enumSubShapeToShortcode",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/shape_definition.js",
    "importStyle": "{enumSubShapeToShortcode}",
    "description": null,
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"undefined\": string}"
      ]
    }
  },
  {
    "__docId__": 2934,
    "kind": "variable",
    "name": "enumShortcodeToSubShape",
    "memberof": "js/game/shape_definition.js",
    "static": true,
    "longname": "js/game/shape_definition.js~enumShortcodeToSubShape",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/shape_definition.js",
    "importStyle": "{enumShortcodeToSubShape}",
    "description": null,
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{enumSubShape}"
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 2935,
    "kind": "function",
    "name": "createSimpleShape",
    "memberof": "js/game/shape_definition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/shape_definition.js~createSimpleShape",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/shape_definition.js",
    "importStyle": "{createSimpleShape}",
    "description": "Converts the given parameters to a valid shape definition",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<import(\"./shape_definition\").ShapeLayer>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "layers",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<import(\"./shape_definition\").ShapeLayer>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2936,
    "kind": "variable",
    "name": "SHORT_KEY_CACHE",
    "memberof": "js/game/shape_definition.js",
    "static": true,
    "longname": "js/game/shape_definition.js~SHORT_KEY_CACHE",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/shape_definition.js",
    "importStyle": null,
    "description": "Cache which shapes are valid short keys and which not",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "Map<string, boolean>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 2937,
    "kind": "class",
    "name": "ShapeDefinition",
    "memberof": "js/game/shape_definition.js",
    "static": true,
    "longname": "js/game/shape_definition.js~ShapeDefinition",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/shape_definition.js",
    "importStyle": "{ShapeDefinition}",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/serialization.js~BasicSerializableObject"
    ]
  },
  {
    "__docId__": 2938,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/shape_definition.js~ShapeDefinition.getId",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2939,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/shape_definition.js~ShapeDefinition.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 2940,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#deserialize",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2941,
    "kind": "member",
    "name": "layers",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#layers",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2942,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2943,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<ShapeLayer>="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.layers",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2945,
    "kind": "member",
    "name": "cachedHash",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#cachedHash",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2946,
    "kind": "member",
    "name": "bufferGenerator",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#bufferGenerator",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2947,
    "kind": "method",
    "name": "fromShortKey",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/shape_definition.js~ShapeDefinition.fromShortKey",
    "access": "public",
    "description": "Generates the definition from the given short key",
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2948,
    "kind": "method",
    "name": "isValidShortKey",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/shape_definition.js~ShapeDefinition.isValidShortKey",
    "access": "public",
    "description": "Checks if a given string is a valid short key",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2949,
    "kind": "method",
    "name": "isValidShortKeyInternal",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/shape_definition.js~ShapeDefinition.isValidShortKeyInternal",
    "access": "public",
    "description": "INTERNAL\nChecks if a given string is a valid short key",
    "lineNumber": 174,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2950,
    "kind": "method",
    "name": "internalCloneLayers",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#internalCloneLayers",
    "access": "public",
    "description": "Internal method to clone the shape definition",
    "lineNumber": 232,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<ShapeLayer>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<ShapeLayer>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 2951,
    "kind": "method",
    "name": "isEntirelyEmpty",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#isEntirelyEmpty",
    "access": "public",
    "description": "Returns if the definition is entirely empty^",
    "lineNumber": 240,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 2952,
    "kind": "method",
    "name": "getHash",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#getHash",
    "access": "public",
    "description": "Returns a unique id for this shape",
    "lineNumber": 248,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 2954,
    "kind": "method",
    "name": "drawCentered",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#drawCentered",
    "access": "public",
    "description": "Draws the shape definition",
    "lineNumber": 281,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "diameter",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2956,
    "kind": "method",
    "name": "drawFullSizeOnCanvas",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#drawFullSizeOnCanvas",
    "access": "public",
    "description": "Draws the item to a canvas",
    "lineNumber": 306,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2957,
    "kind": "method",
    "name": "generateAsCanvas",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#generateAsCanvas",
    "access": "public",
    "description": "Generates this shape as a canvas",
    "lineNumber": 314,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2958,
    "kind": "method",
    "name": "internalGenerateShapeBuffer",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#internalGenerateShapeBuffer",
    "access": "public",
    "description": "",
    "lineNumber": 333,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "canvas",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dpi",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2959,
    "kind": "method",
    "name": "cloneFilteredByQuadrants",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#cloneFilteredByQuadrants",
    "access": "public",
    "description": "Returns a definition with only the given quadrants",
    "lineNumber": 453,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<number>"
        ],
        "spread": false,
        "optional": false,
        "name": "includeQuadrants",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2960,
    "kind": "method",
    "name": "cloneRotateCW",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#cloneRotateCW",
    "access": "public",
    "description": "Returns a definition which was rotated clockwise",
    "lineNumber": 479,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 2961,
    "kind": "method",
    "name": "cloneRotateCCW",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#cloneRotateCCW",
    "access": "public",
    "description": "Returns a definition which was rotated counter clockwise",
    "lineNumber": 493,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 2962,
    "kind": "method",
    "name": "cloneRotate180",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#cloneRotate180",
    "access": "public",
    "description": "Returns a definition which was rotated 180 degrees",
    "lineNumber": 507,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 2963,
    "kind": "method",
    "name": "cloneAndStackWith",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#cloneAndStackWith",
    "access": "public",
    "description": "Stacks the given shape definition on top.",
    "lineNumber": 520,
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2964,
    "kind": "method",
    "name": "cloneAndPaintWith",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#cloneAndPaintWith",
    "access": "public",
    "description": "Clones the shape and colors everything in the given color",
    "lineNumber": 591,
    "params": [
      {
        "nullable": null,
        "types": [
          "enumColors"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2965,
    "kind": "method",
    "name": "cloneAndPaintWith4Colors",
    "memberof": "js/game/shape_definition.js~ShapeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition.js~ShapeDefinition#cloneAndPaintWith4Colors",
    "access": "public",
    "description": "Clones the shape and colors everything in the given colors",
    "lineNumber": 610,
    "params": [
      {
        "nullable": null,
        "types": [
          "[enumColors, enumColors, enumColors, enumColors]"
        ],
        "spread": false,
        "optional": false,
        "name": "colors",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2966,
    "kind": "file",
    "name": "js/game/shape_definition_manager.js",
    "content": "import { createLogger } from \"../core/logging\";\r\nimport { BasicSerializableObject } from \"../savegame/serialization\";\r\nimport { enumColors } from \"./colors\";\r\nimport { ShapeItem } from \"./items/shape_item\";\r\nimport { GameRoot } from \"./root\";\r\nimport { enumSubShape, ShapeDefinition } from \"./shape_definition\";\r\n\r\nconst logger = createLogger(\"shape_definition_manager\");\r\n\r\nexport class ShapeDefinitionManager extends BasicSerializableObject {\r\n    static getId() {\r\n        return \"ShapeDefinitionManager\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n        this.root = root;\r\n\r\n        /**\r\n         * Store a cache from key -> definition\r\n         * @type {Object<string, ShapeDefinition>}\r\n         */\r\n        this.shapeKeyToDefinition = {};\r\n\r\n        /**\r\n         * Store a cache from key -> item\r\n         */\r\n        this.shapeKeyToItem = {};\r\n\r\n        // Caches operations in the form of 'operation/def1[/def2]'\r\n        /** @type {Object.<string, Array<ShapeDefinition>|ShapeDefinition>} */\r\n        this.operationCache = {};\r\n    }\r\n\r\n    /**\r\n     * Returns a shape instance from a given short key\r\n     * @param {string} hash\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    getShapeFromShortKey(hash) {\r\n        const cached = this.shapeKeyToDefinition[hash];\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        return (this.shapeKeyToDefinition[hash] = ShapeDefinition.fromShortKey(hash));\r\n    }\r\n\r\n    /**\r\n     * Returns a item instance from a given short key\r\n     * @param {string} hash\r\n     * @returns {ShapeItem}\r\n     */\r\n    getShapeItemFromShortKey(hash) {\r\n        const cached = this.shapeKeyToItem[hash];\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        const definition = this.getShapeFromShortKey(hash);\r\n        return (this.shapeKeyToItem[hash] = new ShapeItem(definition));\r\n    }\r\n\r\n    /**\r\n     * Returns a shape item for a given definition\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {ShapeItem}\r\n     */\r\n    getShapeItemFromDefinition(definition) {\r\n        return this.getShapeItemFromShortKey(definition.getHash());\r\n    }\r\n\r\n    /**\r\n     * Registers a new shape definition\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    registerShapeDefinition(definition) {\r\n        const id = definition.getHash();\r\n        assert(!this.shapeKeyToDefinition[id], \"Shape Definition \" + id + \" already exists\");\r\n        this.shapeKeyToDefinition[id] = definition;\r\n        // logger.log(\"Registered shape with key\", id);\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for splitting a shape definition in two halfs\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {[ShapeDefinition, ShapeDefinition]}\r\n     */\r\n    shapeActionCutHalf(definition) {\r\n        const key = \"cut/\" + definition.getHash();\r\n        if (this.operationCache[key]) {\r\n            return /** @type {[ShapeDefinition, ShapeDefinition]} */ (this.operationCache[key]);\r\n        }\r\n        const rightSide = definition.cloneFilteredByQuadrants([2, 3]);\r\n        const leftSide = definition.cloneFilteredByQuadrants([0, 1]);\r\n\r\n        return /** @type {[ShapeDefinition, ShapeDefinition]} */ (this.operationCache[key] = [\r\n            this.registerOrReturnHandle(rightSide),\r\n            this.registerOrReturnHandle(leftSide),\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for splitting a shape definition in four quads\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {[ShapeDefinition, ShapeDefinition, ShapeDefinition, ShapeDefinition]}\r\n     */\r\n    shapeActionCutQuad(definition) {\r\n        const key = \"cut-quad/\" + definition.getHash();\r\n        if (this.operationCache[key]) {\r\n            return /** @type {[ShapeDefinition, ShapeDefinition, ShapeDefinition, ShapeDefinition]} */ (this\r\n                .operationCache[key]);\r\n        }\r\n\r\n        return /** @type {[ShapeDefinition, ShapeDefinition, ShapeDefinition, ShapeDefinition]} */ (this.operationCache[\r\n            key\r\n        ] = [\r\n            this.registerOrReturnHandle(definition.cloneFilteredByQuadrants([0])),\r\n            this.registerOrReturnHandle(definition.cloneFilteredByQuadrants([1])),\r\n            this.registerOrReturnHandle(definition.cloneFilteredByQuadrants([2])),\r\n            this.registerOrReturnHandle(definition.cloneFilteredByQuadrants([3])),\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for rotating a shape clockwise\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    shapeActionRotateCW(definition) {\r\n        const key = \"rotate-cw/\" + definition.getHash();\r\n        if (this.operationCache[key]) {\r\n            return /** @type {ShapeDefinition} */ (this.operationCache[key]);\r\n        }\r\n\r\n        const rotated = definition.cloneRotateCW();\r\n\r\n        return /** @type {ShapeDefinition} */ (this.operationCache[key] = this.registerOrReturnHandle(\r\n            rotated\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for rotating a shape counter clockwise\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    shapeActionRotateCCW(definition) {\r\n        const key = \"rotate-ccw/\" + definition.getHash();\r\n        if (this.operationCache[key]) {\r\n            return /** @type {ShapeDefinition} */ (this.operationCache[key]);\r\n        }\r\n\r\n        const rotated = definition.cloneRotateCCW();\r\n\r\n        return /** @type {ShapeDefinition} */ (this.operationCache[key] = this.registerOrReturnHandle(\r\n            rotated\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for rotating a shape FL\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    shapeActionRotate180(definition) {\r\n        const key = \"rotate-fl/\" + definition.getHash();\r\n        if (this.operationCache[key]) {\r\n            return /** @type {ShapeDefinition} */ (this.operationCache[key]);\r\n        }\r\n\r\n        const rotated = definition.cloneRotate180();\r\n\r\n        return /** @type {ShapeDefinition} */ (this.operationCache[key] = this.registerOrReturnHandle(\r\n            rotated\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for stacking the upper definition onto the lower one\r\n     * @param {ShapeDefinition} lowerDefinition\r\n     * @param {ShapeDefinition} upperDefinition\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    shapeActionStack(lowerDefinition, upperDefinition) {\r\n        const key = \"stack/\" + lowerDefinition.getHash() + \"/\" + upperDefinition.getHash();\r\n        if (this.operationCache[key]) {\r\n            return /** @type {ShapeDefinition} */ (this.operationCache[key]);\r\n        }\r\n        const stacked = lowerDefinition.cloneAndStackWith(upperDefinition);\r\n        return /** @type {ShapeDefinition} */ (this.operationCache[key] = this.registerOrReturnHandle(\r\n            stacked\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for painting it with the given color\r\n     * @param {ShapeDefinition} definition\r\n     * @param {enumColors} color\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    shapeActionPaintWith(definition, color) {\r\n        const key = \"paint/\" + definition.getHash() + \"/\" + color;\r\n        if (this.operationCache[key]) {\r\n            return /** @type {ShapeDefinition} */ (this.operationCache[key]);\r\n        }\r\n        const colorized = definition.cloneAndPaintWith(color);\r\n        return /** @type {ShapeDefinition} */ (this.operationCache[key] = this.registerOrReturnHandle(\r\n            colorized\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for painting it with the 4 colors\r\n     * @param {ShapeDefinition} definition\r\n     * @param {[enumColors, enumColors, enumColors, enumColors]} colors\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    shapeActionPaintWith4Colors(definition, colors) {\r\n        const key = \"paint4/\" + definition.getHash() + \"/\" + colors.join(\",\");\r\n        if (this.operationCache[key]) {\r\n            return /** @type {ShapeDefinition} */ (this.operationCache[key]);\r\n        }\r\n        const colorized = definition.cloneAndPaintWith4Colors(colors);\r\n        return /** @type {ShapeDefinition} */ (this.operationCache[key] = this.registerOrReturnHandle(\r\n            colorized\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Checks if we already have cached this definition, and if so throws it away and returns the already\r\n     * cached variant\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    registerOrReturnHandle(definition) {\r\n        const id = definition.getHash();\r\n        if (this.shapeKeyToDefinition[id]) {\r\n            return this.shapeKeyToDefinition[id];\r\n        }\r\n        this.shapeKeyToDefinition[id] = definition;\r\n        // logger.log(\"Registered shape with key (2)\", id);\r\n        return definition;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {[enumSubShape, enumSubShape, enumSubShape, enumSubShape]} subShapes\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    getDefinitionFromSimpleShapes(subShapes, color = enumColors.uncolored) {\r\n        const shapeLayer = /** @type {import(\"./shape_definition\").ShapeLayer} */ (subShapes.map(\r\n            subShape => ({ subShape, color })\r\n        ));\r\n\r\n        return this.registerOrReturnHandle(new ShapeDefinition({ layers: [shapeLayer] }));\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/shape_definition_manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2967,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/shape_definition_manager.js",
    "static": true,
    "longname": "js/game/shape_definition_manager.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/shape_definition_manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2968,
    "kind": "class",
    "name": "ShapeDefinitionManager",
    "memberof": "js/game/shape_definition_manager.js",
    "static": true,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/shape_definition_manager.js",
    "importStyle": "{ShapeDefinitionManager}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/serialization.js~BasicSerializableObject"
    ]
  },
  {
    "__docId__": 2969,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager.getId",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2970,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2971,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#root",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2972,
    "kind": "member",
    "name": "shapeKeyToDefinition",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#shapeKeyToDefinition",
    "access": "public",
    "description": "Store a cache from key -> definition",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "Object<string, ShapeDefinition>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2973,
    "kind": "member",
    "name": "shapeKeyToItem",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#shapeKeyToItem",
    "access": "public",
    "description": "Store a cache from key -> item",
    "lineNumber": 32,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 2974,
    "kind": "member",
    "name": "operationCache",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#operationCache",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Object.<string, Array<ShapeDefinition>|ShapeDefinition>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2975,
    "kind": "method",
    "name": "getShapeFromShortKey",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#getShapeFromShortKey",
    "access": "public",
    "description": "Returns a shape instance from a given short key",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "hash",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2976,
    "kind": "method",
    "name": "getShapeItemFromShortKey",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#getShapeItemFromShortKey",
    "access": "public",
    "description": "Returns a item instance from a given short key",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeItem}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "hash",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeItem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2977,
    "kind": "method",
    "name": "getShapeItemFromDefinition",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#getShapeItemFromDefinition",
    "access": "public",
    "description": "Returns a shape item for a given definition",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeItem}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeItem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2978,
    "kind": "method",
    "name": "registerShapeDefinition",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#registerShapeDefinition",
    "access": "public",
    "description": "Registers a new shape definition",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 2979,
    "kind": "method",
    "name": "shapeActionCutHalf",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#shapeActionCutHalf",
    "access": "public",
    "description": "Generates a definition for splitting a shape definition in two halfs",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[ShapeDefinition, ShapeDefinition]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[ShapeDefinition, ShapeDefinition]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2980,
    "kind": "method",
    "name": "shapeActionCutQuad",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#shapeActionCutQuad",
    "access": "public",
    "description": "Generates a definition for splitting a shape definition in four quads",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[ShapeDefinition, ShapeDefinition, ShapeDefinition, ShapeDefinition]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[ShapeDefinition, ShapeDefinition, ShapeDefinition, ShapeDefinition]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2981,
    "kind": "method",
    "name": "shapeActionRotateCW",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#shapeActionRotateCW",
    "access": "public",
    "description": "Generates a definition for rotating a shape clockwise",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2982,
    "kind": "method",
    "name": "shapeActionRotateCCW",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#shapeActionRotateCCW",
    "access": "public",
    "description": "Generates a definition for rotating a shape counter clockwise",
    "lineNumber": 150,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2983,
    "kind": "method",
    "name": "shapeActionRotate180",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#shapeActionRotate180",
    "access": "public",
    "description": "Generates a definition for rotating a shape FL",
    "lineNumber": 168,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2984,
    "kind": "method",
    "name": "shapeActionStack",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#shapeActionStack",
    "access": "public",
    "description": "Generates a definition for stacking the upper definition onto the lower one",
    "lineNumber": 187,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "lowerDefinition",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "upperDefinition",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2985,
    "kind": "method",
    "name": "shapeActionPaintWith",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#shapeActionPaintWith",
    "access": "public",
    "description": "Generates a definition for painting it with the given color",
    "lineNumber": 204,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumColors"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2986,
    "kind": "method",
    "name": "shapeActionPaintWith4Colors",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#shapeActionPaintWith4Colors",
    "access": "public",
    "description": "Generates a definition for painting it with the 4 colors",
    "lineNumber": 221,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[enumColors, enumColors, enumColors, enumColors]"
        ],
        "spread": false,
        "optional": false,
        "name": "colors",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2987,
    "kind": "method",
    "name": "registerOrReturnHandle",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#registerOrReturnHandle",
    "access": "public",
    "description": "Checks if we already have cached this definition, and if so throws it away and returns the already\ncached variant",
    "lineNumber": 237,
    "params": [
      {
        "nullable": null,
        "types": [
          "ShapeDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2988,
    "kind": "method",
    "name": "getDefinitionFromSimpleShapes",
    "memberof": "js/game/shape_definition_manager.js~ShapeDefinitionManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/shape_definition_manager.js~ShapeDefinitionManager#getDefinitionFromSimpleShapes",
    "access": "public",
    "description": "",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ShapeDefinition}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "[enumSubShape, enumSubShape, enumSubShape, enumSubShape]"
        ],
        "spread": false,
        "optional": false,
        "name": "subShapes",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ShapeDefinition"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2989,
    "kind": "file",
    "name": "js/game/sound_proxy.js",
    "content": "/* typehints:start */\r\nimport { GameRoot } from \"./root\";\r\n/* typehints:end */\r\n\r\nimport { Vector } from \"../core/vector\";\r\nimport { SOUNDS } from \"../platform/sound\";\r\n\r\nconst avgSoundDurationSeconds = 0.1;\r\nconst maxOngoingSounds = 2;\r\nconst maxOngoingUiSounds = 5;\r\n\r\n// Proxy to the application sound instance\r\nexport class SoundProxy {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n\r\n        // Store a list of sounds and when we started them\r\n        this.playing3DSounds = [];\r\n        this.playingUiSounds = [];\r\n    }\r\n\r\n    /**\r\n     * Plays a new ui sound\r\n     * @param {string} id Sound ID\r\n     */\r\n    playUi(id) {\r\n        assert(typeof id === \"string\", \"Not a valid sound id: \" + id);\r\n        this.internalUpdateOngoingSounds();\r\n        if (this.playingUiSounds.length > maxOngoingUiSounds) {\r\n            // Too many ongoing sounds\r\n            return false;\r\n        }\r\n\r\n        this.root.app.sound.playUiSound(id);\r\n        this.playingUiSounds.push(this.root.time.realtimeNow());\r\n    }\r\n\r\n    /**\r\n     * Plays the ui click sound\r\n     */\r\n    playUiClick() {\r\n        this.playUi(SOUNDS.uiClick);\r\n    }\r\n\r\n    /**\r\n     * Plays the ui error sound\r\n     */\r\n    playUiError() {\r\n        this.playUi(SOUNDS.uiError);\r\n    }\r\n\r\n    /**\r\n     * Plays a 3D sound whose volume is scaled based on where it was emitted\r\n     * @param {string} id Sound ID\r\n     * @param {Vector} pos World space position\r\n     */\r\n    play3D(id, pos) {\r\n        assert(typeof id === \"string\", \"Not a valid sound id: \" + id);\r\n        assert(pos instanceof Vector, \"Invalid sound position\");\r\n        this.internalUpdateOngoingSounds();\r\n\r\n        if (this.playing3DSounds.length > maxOngoingSounds) {\r\n            // Too many ongoing sounds\r\n            return false;\r\n        }\r\n\r\n        this.root.app.sound.play3DSound(id, pos, this.root);\r\n        this.playing3DSounds.push(this.root.time.realtimeNow());\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Updates the list of ongoing sounds\r\n     */\r\n    internalUpdateOngoingSounds() {\r\n        const now = this.root.time.realtimeNow();\r\n        for (let i = 0; i < this.playing3DSounds.length; ++i) {\r\n            if (now - this.playing3DSounds[i] > avgSoundDurationSeconds) {\r\n                this.playing3DSounds.splice(i, 1);\r\n                i -= 1;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.playingUiSounds.length; ++i) {\r\n            if (now - this.playingUiSounds[i] > avgSoundDurationSeconds) {\r\n                this.playingUiSounds.splice(i, 1);\r\n                i -= 1;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/sound_proxy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2990,
    "kind": "variable",
    "name": "avgSoundDurationSeconds",
    "memberof": "js/game/sound_proxy.js",
    "static": true,
    "longname": "js/game/sound_proxy.js~avgSoundDurationSeconds",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/sound_proxy.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2991,
    "kind": "variable",
    "name": "maxOngoingSounds",
    "memberof": "js/game/sound_proxy.js",
    "static": true,
    "longname": "js/game/sound_proxy.js~maxOngoingSounds",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/sound_proxy.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2992,
    "kind": "variable",
    "name": "maxOngoingUiSounds",
    "memberof": "js/game/sound_proxy.js",
    "static": true,
    "longname": "js/game/sound_proxy.js~maxOngoingUiSounds",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/sound_proxy.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 2993,
    "kind": "class",
    "name": "SoundProxy",
    "memberof": "js/game/sound_proxy.js",
    "static": true,
    "longname": "js/game/sound_proxy.js~SoundProxy",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/sound_proxy.js",
    "importStyle": "{SoundProxy}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 2994,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/sound_proxy.js~SoundProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/sound_proxy.js~SoundProxy#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 2995,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/sound_proxy.js~SoundProxy",
    "static": false,
    "longname": "js/game/sound_proxy.js~SoundProxy#root",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2996,
    "kind": "member",
    "name": "playing3DSounds",
    "memberof": "js/game/sound_proxy.js~SoundProxy",
    "static": false,
    "longname": "js/game/sound_proxy.js~SoundProxy#playing3DSounds",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 2997,
    "kind": "member",
    "name": "playingUiSounds",
    "memberof": "js/game/sound_proxy.js~SoundProxy",
    "static": false,
    "longname": "js/game/sound_proxy.js~SoundProxy#playingUiSounds",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 2998,
    "kind": "method",
    "name": "playUi",
    "memberof": "js/game/sound_proxy.js~SoundProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/sound_proxy.js~SoundProxy#playUi",
    "access": "public",
    "description": "Plays a new ui sound",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Sound ID"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 2999,
    "kind": "method",
    "name": "playUiClick",
    "memberof": "js/game/sound_proxy.js~SoundProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/sound_proxy.js~SoundProxy#playUiClick",
    "access": "public",
    "description": "Plays the ui click sound",
    "lineNumber": 44,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3000,
    "kind": "method",
    "name": "playUiError",
    "memberof": "js/game/sound_proxy.js~SoundProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/sound_proxy.js~SoundProxy#playUiError",
    "access": "public",
    "description": "Plays the ui error sound",
    "lineNumber": 51,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3001,
    "kind": "method",
    "name": "play3D",
    "memberof": "js/game/sound_proxy.js~SoundProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/sound_proxy.js~SoundProxy#play3D",
    "access": "public",
    "description": "Plays a 3D sound whose volume is scaled based on where it was emitted",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Sound ID"
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": "World space position"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3002,
    "kind": "method",
    "name": "internalUpdateOngoingSounds",
    "memberof": "js/game/sound_proxy.js~SoundProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/sound_proxy.js~SoundProxy#internalUpdateOngoingSounds",
    "access": "public",
    "description": "Updates the list of ongoing sounds",
    "lineNumber": 78,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3003,
    "kind": "file",
    "name": "js/game/systems/belt.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { gMetaBuildingRegistry } from \"../../core/global_registries\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { AtlasSprite } from \"../../core/sprites\";\r\nimport { fastArrayDeleteValue } from \"../../core/utils\";\r\nimport { enumDirection, enumDirectionToVector, enumInvertedDirections, Vector } from \"../../core/vector\";\r\nimport { BeltPath } from \"../belt_path\";\r\nimport { MetaBeltBuilding } from \"../buildings/belt\";\r\nimport { getCodeFromBuildingData } from \"../building_codes\";\r\nimport { BeltComponent } from \"../components/belt\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\nimport { defaultBuildingVariant } from \"../meta_building\";\r\n\r\nexport const BELT_ANIM_COUNT = 14;\r\n\r\nconst logger = createLogger(\"belt\");\r\n\r\n/**\r\n * Manages all belts\r\n */\r\nexport class BeltSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [BeltComponent]);\r\n        /**\r\n         * @type {Object.<enumDirection, Array<AtlasSprite>>}\r\n         */\r\n        this.beltSprites = {\r\n            [enumDirection.top]: Loader.getSprite(\"sprites/belt/built/forward_0.png\"),\r\n            [enumDirection.left]: Loader.getSprite(\"sprites/belt/built/left_0.png\"),\r\n            [enumDirection.right]: Loader.getSprite(\"sprites/belt/built/right_0.png\"),\r\n        };\r\n\r\n        /**\r\n         * @type {Object.<enumDirection, Array<AtlasSprite>>}\r\n         */\r\n        this.beltAnimations = {\r\n            [enumDirection.top]: [],\r\n            [enumDirection.left]: [],\r\n            [enumDirection.right]: [],\r\n        };\r\n\r\n        for (let i = 0; i < BELT_ANIM_COUNT; ++i) {\r\n            this.beltAnimations[enumDirection.top].push(\r\n                Loader.getSprite(\"sprites/belt/built/forward_\" + i + \".png\")\r\n            );\r\n            this.beltAnimations[enumDirection.left].push(\r\n                Loader.getSprite(\"sprites/belt/built/left_\" + i + \".png\")\r\n            );\r\n            this.beltAnimations[enumDirection.right].push(\r\n                Loader.getSprite(\"sprites/belt/built/right_\" + i + \".png\")\r\n            );\r\n        }\r\n\r\n        this.root.signals.entityDestroyed.add(this.onEntityDestroyed, this);\r\n        this.root.signals.entityDestroyed.add(this.updateSurroundingBeltPlacement, this);\r\n\r\n        // Notice: These must come *after* the entity destroyed signals\r\n        this.root.signals.entityAdded.add(this.onEntityAdded, this);\r\n        this.root.signals.entityAdded.add(this.updateSurroundingBeltPlacement, this);\r\n\r\n        /** @type {Array<BeltPath>} */\r\n        this.beltPaths = [];\r\n    }\r\n\r\n    static getId() {\r\n        return \"belt\";\r\n    }\r\n\r\n    /**\r\n     * Serializes all belt paths\r\n     * @returns {Array<object>}\r\n     */\r\n    serializePaths() {\r\n        let data = [];\r\n        for (let i = 0; i < this.beltPaths.length; ++i) {\r\n            data.push(this.beltPaths[i].serialize());\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Deserializes all belt paths\r\n     * @param {Array<any>} data\r\n     */\r\n    deserializePaths(data) {\r\n        if (!Array.isArray(data)) {\r\n            return \"Belt paths are not an array: \" + typeof data;\r\n        }\r\n\r\n        for (let i = 0; i < data.length; ++i) {\r\n            const path = BeltPath.fromSerialized(this.root, data[i]);\r\n            // If path is a string, that means its an error\r\n            if (!(path instanceof BeltPath)) {\r\n                return \"Failed to create path from belt data: \" + path;\r\n            }\r\n            this.beltPaths.push(path);\r\n        }\r\n\r\n        if (this.beltPaths.length === 0) {\r\n            // Old savegames might not have paths yet\r\n            logger.warn(\"Recomputing belt paths (most likely the savegame is old or empty)\");\r\n            this.recomputeAllBeltPaths();\r\n        } else {\r\n            logger.warn(\"Restored\", this.beltPaths.length, \"belt paths\");\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_verifyBeltPaths();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the belt placement after an entity has been added / deleted\r\n     * @param {Entity} entity\r\n     */\r\n    updateSurroundingBeltPlacement(entity) {\r\n        if (!this.root.gameInitialized) {\r\n            return;\r\n        }\r\n\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        if (!staticComp) {\r\n            return;\r\n        }\r\n\r\n        const metaBelt = gMetaBuildingRegistry.findByClass(MetaBeltBuilding);\r\n        // Compute affected area\r\n        const originalRect = staticComp.getTileSpaceBounds();\r\n        const affectedArea = originalRect.expandedInAllDirections(1);\r\n\r\n        /** @type {Set<BeltPath>} */\r\n        const changedPaths = new Set();\r\n\r\n        for (let x = affectedArea.x; x < affectedArea.right(); ++x) {\r\n            for (let y = affectedArea.y; y < affectedArea.bottom(); ++y) {\r\n                if (originalRect.containsPoint(x, y)) {\r\n                    // Make sure we don't update the original entity\r\n                    continue;\r\n                }\r\n\r\n                const targetEntities = this.root.map.getLayersContentsMultipleXY(x, y);\r\n                for (let i = 0; i < targetEntities.length; ++i) {\r\n                    const targetEntity = targetEntities[i];\r\n\r\n                    const targetBeltComp = targetEntity.components.Belt;\r\n                    const targetStaticComp = targetEntity.components.StaticMapEntity;\r\n\r\n                    if (!targetBeltComp) {\r\n                        // Not a belt\r\n                        continue;\r\n                    }\r\n\r\n                    const {\r\n                        rotation,\r\n                        rotationVariant,\r\n                    } = metaBelt.computeOptimalDirectionAndRotationVariantAtTile({\r\n                        root: this.root,\r\n                        tile: new Vector(x, y),\r\n                        rotation: targetStaticComp.originalRotation,\r\n                        variant: defaultBuildingVariant,\r\n                        layer: targetEntity.layer,\r\n                    });\r\n\r\n                    // Compute delta to see if anything changed\r\n                    const newDirection = MetaBeltBuilding.variantToRotation[rotationVariant];\r\n\r\n                    if (targetStaticComp.rotation !== rotation || newDirection !== targetBeltComp.direction) {\r\n                        const originalPath = targetBeltComp.assignedPath;\r\n\r\n                        // Ok, first remove it from its current path\r\n                        this.deleteEntityFromPath(targetBeltComp.assignedPath, targetEntity);\r\n\r\n                        // Change stuff\r\n                        targetStaticComp.rotation = rotation;\r\n                        metaBelt.updateVariants(targetEntity, rotationVariant, defaultBuildingVariant);\r\n\r\n                        // Update code as well\r\n                        targetStaticComp.code = getCodeFromBuildingData(\r\n                            metaBelt,\r\n                            defaultBuildingVariant,\r\n                            rotationVariant\r\n                        );\r\n\r\n                        // Update the original path since it might have picked up the entit1y\r\n                        originalPath.onPathChanged();\r\n\r\n                        // Now add it again\r\n                        this.addEntityToPaths(targetEntity);\r\n\r\n                        // Sanity\r\n                        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n                            this.debug_verifyBeltPaths();\r\n                        }\r\n\r\n                        // Make sure the chunks know about the update\r\n                        this.root.signals.entityChanged.dispatch(targetEntity);\r\n                    }\r\n\r\n                    if (targetBeltComp.assignedPath) {\r\n                        changedPaths.add(targetBeltComp.assignedPath);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // notify all paths *afterwards* to avoid multi-updates\r\n        changedPaths.forEach(path => path.onSurroundingsChanged());\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_verifyBeltPaths();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when an entity got destroyed\r\n     * @param {Entity} entity\r\n     */\r\n    onEntityDestroyed(entity) {\r\n        if (!this.root.gameInitialized) {\r\n            return;\r\n        }\r\n\r\n        if (!entity.components.Belt) {\r\n            return;\r\n        }\r\n\r\n        const assignedPath = entity.components.Belt.assignedPath;\r\n        assert(assignedPath, \"Entity has no belt path assigned\");\r\n        this.deleteEntityFromPath(assignedPath, entity);\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_verifyBeltPaths();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attempts to delete the belt from its current path\r\n     * @param {BeltPath} path\r\n     * @param {Entity} entity\r\n     */\r\n    deleteEntityFromPath(path, entity) {\r\n        if (path.entityPath.length === 1) {\r\n            // This is a single entity path, easy to do, simply erase whole path\r\n            fastArrayDeleteValue(this.beltPaths, path);\r\n            return;\r\n        }\r\n\r\n        // Notice: Since there might be circular references, it is important to check\r\n        // which role the entity has\r\n        if (path.isStartEntity(entity)) {\r\n            // We tried to delete the start\r\n            path.deleteEntityOnStart(entity);\r\n        } else if (path.isEndEntity(entity)) {\r\n            // We tried to delete the end\r\n            path.deleteEntityOnEnd(entity);\r\n        } else {\r\n            // We tried to delete something inbetween\r\n            const newPath = path.deleteEntityOnPathSplitIntoTwo(entity);\r\n            this.beltPaths.push(newPath);\r\n        }\r\n\r\n        // Sanity\r\n        entity.components.Belt.assignedPath = null;\r\n    }\r\n\r\n    /**\r\n     * Adds the given entity to the appropriate paths\r\n     * @param {Entity} entity\r\n     */\r\n    addEntityToPaths(entity) {\r\n        const fromEntity = this.findSupplyingEntity(entity);\r\n        const toEntity = this.findFollowUpEntity(entity);\r\n\r\n        // Check if we can add the entity to the previous path\r\n        if (fromEntity) {\r\n            const fromPath = fromEntity.components.Belt.assignedPath;\r\n            fromPath.extendOnEnd(entity);\r\n\r\n            // Check if we now can extend the current path by the next path\r\n            if (toEntity) {\r\n                const toPath = toEntity.components.Belt.assignedPath;\r\n\r\n                if (fromPath === toPath) {\r\n                    // This is a circular dependency -> Ignore\r\n                } else {\r\n                    fromPath.extendByPath(toPath);\r\n\r\n                    // Delete now obsolete path\r\n                    fastArrayDeleteValue(this.beltPaths, toPath);\r\n                }\r\n            }\r\n        } else {\r\n            if (toEntity) {\r\n                // Prepend it to the other path\r\n                const toPath = toEntity.components.Belt.assignedPath;\r\n                toPath.extendOnBeginning(entity);\r\n            } else {\r\n                // This is an empty belt path\r\n                const path = new BeltPath(this.root, [entity]);\r\n                this.beltPaths.push(path);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when an entity got added\r\n     * @param {Entity} entity\r\n     */\r\n    onEntityAdded(entity) {\r\n        if (!this.root.gameInitialized) {\r\n            return;\r\n        }\r\n\r\n        if (!entity.components.Belt) {\r\n            return;\r\n        }\r\n\r\n        this.addEntityToPaths(entity);\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_verifyBeltPaths();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws all belt paths\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawBeltItems(parameters) {\r\n        for (let i = 0; i < this.beltPaths.length; ++i) {\r\n            this.beltPaths[i].draw(parameters);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Verifies all belt paths\r\n     */\r\n    debug_verifyBeltPaths() {\r\n        for (let i = 0; i < this.beltPaths.length; ++i) {\r\n            this.beltPaths[i].debug_checkIntegrity(\"general-verify\");\r\n        }\r\n\r\n        const belts = this.root.entityMgr.getAllWithComponent(BeltComponent);\r\n        for (let i = 0; i < belts.length; ++i) {\r\n            const path = belts[i].components.Belt.assignedPath;\r\n            if (!path) {\r\n                throw new Error(\"Belt has no path: \" + belts[i].uid);\r\n            }\r\n            if (this.beltPaths.indexOf(path) < 0) {\r\n                throw new Error(\"Path of entity not contained: \" + belts[i].uid);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds the follow up entity for a given belt. Used for building the dependencies\r\n     * @param {Entity} entity\r\n     * @returns {Entity|null}\r\n     */\r\n    findFollowUpEntity(entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const beltComp = entity.components.Belt;\r\n\r\n        const followUpDirection = staticComp.localDirectionToWorld(beltComp.direction);\r\n        const followUpVector = enumDirectionToVector[followUpDirection];\r\n\r\n        const followUpTile = staticComp.origin.add(followUpVector);\r\n        const followUpEntity = this.root.map.getLayerContentXY(followUpTile.x, followUpTile.y, entity.layer);\r\n\r\n        // Check if there's a belt at the tile we point to\r\n        if (followUpEntity) {\r\n            const followUpBeltComp = followUpEntity.components.Belt;\r\n            if (followUpBeltComp) {\r\n                const followUpStatic = followUpEntity.components.StaticMapEntity;\r\n\r\n                const acceptedDirection = followUpStatic.localDirectionToWorld(enumDirection.top);\r\n                if (acceptedDirection === followUpDirection) {\r\n                    return followUpEntity;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Finds the supplying belt for a given belt. Used for building the dependencies\r\n     * @param {Entity} entity\r\n     * @returns {Entity|null}\r\n     */\r\n    findSupplyingEntity(entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n\r\n        const supplyDirection = staticComp.localDirectionToWorld(enumDirection.bottom);\r\n        const supplyVector = enumDirectionToVector[supplyDirection];\r\n\r\n        const supplyTile = staticComp.origin.add(supplyVector);\r\n        const supplyEntity = this.root.map.getLayerContentXY(supplyTile.x, supplyTile.y, entity.layer);\r\n\r\n        // Check if there's a belt at the tile we point to\r\n        if (supplyEntity) {\r\n            const supplyBeltComp = supplyEntity.components.Belt;\r\n            if (supplyBeltComp) {\r\n                const supplyStatic = supplyEntity.components.StaticMapEntity;\r\n                const otherDirection = supplyStatic.localDirectionToWorld(\r\n                    enumInvertedDirections[supplyBeltComp.direction]\r\n                );\r\n\r\n                if (otherDirection === supplyDirection) {\r\n                    return supplyEntity;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Recomputes the belt path network. Only required for old savegames\r\n     */\r\n    recomputeAllBeltPaths() {\r\n        logger.warn(\"Recomputing all belt paths\");\r\n        const visitedUids = new Set();\r\n\r\n        const result = [];\r\n\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            if (visitedUids.has(entity.uid)) {\r\n                continue;\r\n            }\r\n\r\n            // Mark entity as visited\r\n            visitedUids.add(entity.uid);\r\n\r\n            // Compute path, start with entity and find precedors / successors\r\n            const path = [entity];\r\n\r\n            // Prevent infinite loops\r\n            let maxIter = 99999;\r\n\r\n            // Find precedors\r\n            let prevEntity = this.findSupplyingEntity(entity);\r\n            while (prevEntity && --maxIter > 0) {\r\n                if (visitedUids.has(prevEntity.uid)) {\r\n                    break;\r\n                }\r\n                path.unshift(prevEntity);\r\n                visitedUids.add(prevEntity.uid);\r\n                prevEntity = this.findSupplyingEntity(prevEntity);\r\n            }\r\n\r\n            // Find succedors\r\n            let nextEntity = this.findFollowUpEntity(entity);\r\n            while (nextEntity && --maxIter > 0) {\r\n                if (visitedUids.has(nextEntity.uid)) {\r\n                    break;\r\n                }\r\n\r\n                path.push(nextEntity);\r\n                visitedUids.add(nextEntity.uid);\r\n                nextEntity = this.findFollowUpEntity(nextEntity);\r\n            }\r\n\r\n            assert(maxIter > 1, \"Ran out of iterations\");\r\n            result.push(new BeltPath(this.root, path));\r\n        }\r\n\r\n        logger.log(\"Found\", this.beltPaths.length, \"belt paths\");\r\n        this.beltPaths = result;\r\n    }\r\n\r\n    /**\r\n     * Updates all belts\r\n     */\r\n    update() {\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_verifyBeltPaths();\r\n        }\r\n\r\n        for (let i = 0; i < this.beltPaths.length; ++i) {\r\n            this.beltPaths[i].update();\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_verifyBeltPaths();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws a given chunk\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_BackgroundLayer(parameters, chunk) {\r\n        // Limit speed to avoid belts going backwards\r\n        const speedMultiplier = Math.min(this.root.hubGoals.getBeltBaseSpeed(), 10);\r\n\r\n        // SYNC with systems/item_acceptor.js:drawEntityUnderlays!\r\n        // 126 / 42 is the exact animation speed of the png animation\r\n        const animationIndex = Math.floor(\r\n            ((this.root.time.realtimeNow() * speedMultiplier * BELT_ANIM_COUNT * 126) / 42) *\r\n            globalConfig.itemSpacingOnBelts\r\n        );\r\n        const contents = chunk.containedEntitiesByLayer.regular;\r\n\r\n        if (this.root.app.settings.getAllSettings().simplifiedBelts) {\r\n            // POTATO Mode: Only show items when belt is hovered\r\n            let hoveredBeltPath = null;\r\n            const mousePos = this.root.app.mousePosition;\r\n            if (mousePos && this.root.currentLayer === \"regular\") {\r\n                const tile = this.root.camera.screenToWorld(mousePos).toTileSpace();\r\n                const contents = this.root.map.getLayerContentXY(tile.x, tile.y, \"regular\");\r\n                if (contents && contents.components.Belt) {\r\n                    hoveredBeltPath = contents.components.Belt.assignedPath;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < contents.length; ++i) {\r\n                const entity = contents[i];\r\n                if (entity.components.Belt) {\r\n                    const direction = entity.components.Belt.direction;\r\n                    let sprite = this.beltAnimations[direction][0];\r\n\r\n                    if (entity.components.Belt.assignedPath === hoveredBeltPath) {\r\n                        sprite = this.beltAnimations[direction][animationIndex % BELT_ANIM_COUNT];\r\n                    }\r\n\r\n                    // Culling happens within the static map entity component\r\n                    entity.components.StaticMapEntity.drawSpriteOnBoundsClipped(parameters, sprite, 0);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < contents.length; ++i) {\r\n                const entity = contents[i];\r\n                if (entity.components.Belt) {\r\n                    const direction = entity.components.Belt.direction;\r\n                    const sprite = this.beltAnimations[direction][animationIndex % BELT_ANIM_COUNT];\r\n\r\n                    // Culling happens within the static map entity component\r\n                    entity.components.StaticMapEntity.drawSpriteOnBoundsClipped(parameters, sprite, 0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the belt path debug overlays\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawBeltPathDebug(parameters) {\r\n        for (let i = 0; i < this.beltPaths.length; ++i) {\r\n            this.beltPaths[i].drawDebug(parameters);\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/belt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3004,
    "kind": "variable",
    "name": "BELT_ANIM_COUNT",
    "memberof": "js/game/systems/belt.js",
    "static": true,
    "longname": "js/game/systems/belt.js~BELT_ANIM_COUNT",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/belt.js",
    "importStyle": "{BELT_ANIM_COUNT}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3005,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/systems/belt.js",
    "static": true,
    "longname": "js/game/systems/belt.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/systems/belt.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3006,
    "kind": "class",
    "name": "BeltSystem",
    "memberof": "js/game/systems/belt.js",
    "static": true,
    "longname": "js/game/systems/belt.js~BeltSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/belt.js",
    "importStyle": "{BeltSystem}",
    "description": "Manages all belts",
    "lineNumber": 25,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3007,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 3008,
    "kind": "member",
    "name": "beltSprites",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#beltSprites",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "Object.<enumDirection, Array<AtlasSprite>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3009,
    "kind": "member",
    "name": "beltAnimations",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#beltAnimations",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Object.<enumDirection, Array<AtlasSprite>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3010,
    "kind": "member",
    "name": "beltPaths",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#beltPaths",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "Array<BeltPath>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3011,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/belt.js~BeltSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3012,
    "kind": "method",
    "name": "serializePaths",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#serializePaths",
    "access": "public",
    "description": "Serializes all belt paths",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<object>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<object>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3013,
    "kind": "method",
    "name": "deserializePaths",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#deserializePaths",
    "access": "public",
    "description": "Deserializes all belt paths",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3014,
    "kind": "method",
    "name": "updateSurroundingBeltPlacement",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#updateSurroundingBeltPlacement",
    "access": "public",
    "description": "Updates the belt placement after an entity has been added / deleted",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3015,
    "kind": "method",
    "name": "onEntityDestroyed",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#onEntityDestroyed",
    "access": "public",
    "description": "Called when an entity got destroyed",
    "lineNumber": 222,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3016,
    "kind": "method",
    "name": "deleteEntityFromPath",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#deleteEntityFromPath",
    "access": "public",
    "description": "Attempts to delete the belt from its current path",
    "lineNumber": 244,
    "params": [
      {
        "nullable": null,
        "types": [
          "BeltPath"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3017,
    "kind": "method",
    "name": "addEntityToPaths",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#addEntityToPaths",
    "access": "public",
    "description": "Adds the given entity to the appropriate paths",
    "lineNumber": 273,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3018,
    "kind": "method",
    "name": "onEntityAdded",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#onEntityAdded",
    "access": "public",
    "description": "Called when an entity got added",
    "lineNumber": 312,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3019,
    "kind": "method",
    "name": "drawBeltItems",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#drawBeltItems",
    "access": "public",
    "description": "Draws all belt paths",
    "lineNumber": 331,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3020,
    "kind": "method",
    "name": "debug_verifyBeltPaths",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#debug_verifyBeltPaths",
    "access": "public",
    "description": "Verifies all belt paths",
    "lineNumber": 340,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3021,
    "kind": "method",
    "name": "findFollowUpEntity",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#findFollowUpEntity",
    "access": "public",
    "description": "Finds the follow up entity for a given belt. Used for building the dependencies",
    "lineNumber": 362,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Entity|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Entity",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3022,
    "kind": "method",
    "name": "findSupplyingEntity",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#findSupplyingEntity",
    "access": "public",
    "description": "Finds the supplying belt for a given belt. Used for building the dependencies",
    "lineNumber": 393,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Entity|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Entity",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3023,
    "kind": "method",
    "name": "recomputeAllBeltPaths",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#recomputeAllBeltPaths",
    "access": "public",
    "description": "Recomputes the belt path network. Only required for old savegames",
    "lineNumber": 423,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3025,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#update",
    "access": "public",
    "description": "Updates all belts",
    "lineNumber": 478,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3026,
    "kind": "method",
    "name": "drawChunk_BackgroundLayer",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#drawChunk_BackgroundLayer",
    "access": "public",
    "description": "Draws a given chunk",
    "lineNumber": 497,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3027,
    "kind": "method",
    "name": "drawBeltPathDebug",
    "memberof": "js/game/systems/belt.js~BeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt.js~BeltSystem#drawBeltPathDebug",
    "access": "public",
    "description": "Draws the belt path debug overlays",
    "lineNumber": 553,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3028,
    "kind": "file",
    "name": "js/game/systems/belt_reader.js",
    "content": "import { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { BeltReaderComponent } from \"../components/belt_reader\";\r\nimport { globalConfig } from \"../../core/config\";\r\nimport { BOOL_TRUE_SINGLETON, BOOL_FALSE_SINGLETON } from \"../items/boolean_item\";\r\n\r\nexport class BeltReaderSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [BeltReaderComponent]);\r\n    }\r\n\r\n    static getId() {\r\n        return \"beltReader\";\r\n    }\r\n\r\n    update() {\r\n        const now = this.root.time.now();\r\n        const minimumTime = now - globalConfig.readerAnalyzeIntervalSeconds;\r\n        const minimumTimeForThroughput = now - 1;\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n\r\n            const readerComp = entity.components.BeltReader;\r\n            const pinsComp = entity.components.WiredPins;\r\n\r\n            // Remove outdated items\r\n            while (readerComp.lastItemTimes[0] < minimumTime) {\r\n                readerComp.lastItemTimes.shift();\r\n            }\r\n\r\n            pinsComp.slots[1].value = readerComp.lastItem;\r\n            pinsComp.slots[0].value =\r\n                (readerComp.lastItemTimes[readerComp.lastItemTimes.length - 1] || 0) >\r\n                minimumTimeForThroughput ?\r\n                BOOL_TRUE_SINGLETON :\r\n                BOOL_FALSE_SINGLETON;\r\n\r\n            if (now - readerComp.lastThroughputComputation > 0.5) {\r\n                // Compute throughput\r\n                readerComp.lastThroughputComputation = now;\r\n\r\n                let throughput = 0;\r\n                if (readerComp.lastItemTimes.length < 2) {\r\n                    throughput = 0;\r\n                } else {\r\n                    let averageSpacing = 0;\r\n                    let averageSpacingNum = 0;\r\n                    for (let i = 0; i < readerComp.lastItemTimes.length - 1; ++i) {\r\n                        averageSpacing += readerComp.lastItemTimes[i + 1] - readerComp.lastItemTimes[i];\r\n                        ++averageSpacingNum;\r\n                    }\r\n\r\n                    throughput = 1 / (averageSpacing / averageSpacingNum);\r\n                }\r\n\r\n                readerComp.lastThroughput = Math.min(globalConfig.beltSpeedItemsPerSecond * 23.9, throughput);\r\n            }\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/belt_reader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3029,
    "kind": "class",
    "name": "BeltReaderSystem",
    "memberof": "js/game/systems/belt_reader.js",
    "static": true,
    "longname": "js/game/systems/belt_reader.js~BeltReaderSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/belt_reader.js",
    "importStyle": "{BeltReaderSystem}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3030,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/belt_reader.js~BeltReaderSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt_reader.js~BeltReaderSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 3031,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/belt_reader.js~BeltReaderSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/belt_reader.js~BeltReaderSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3032,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/belt_reader.js~BeltReaderSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt_reader.js~BeltReaderSystem#update",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3033,
    "kind": "file",
    "name": "js/game/systems/belt_underlays.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { Rectangle } from \"../../core/rectangle\";\r\nimport { FULL_CLIP_RECT } from \"../../core/sprites\";\r\nimport { StaleAreaDetector } from \"../../core/stale_area_detector\";\r\nimport {\r\n    enumDirection,\r\n    enumDirectionToAngle,\r\n    enumDirectionToVector,\r\n    enumInvertedDirections,\r\n    Vector,\r\n} from \"../../core/vector\";\r\nimport { BeltComponent } from \"../components/belt\";\r\nimport { BeltUnderlaysComponent, enumClippedBeltUnderlayType } from \"../components/belt_underlays\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\nimport { BELT_ANIM_COUNT } from \"./belt\";\r\n\r\n/**\r\n * Mapping from underlay type to clip rect\r\n * @type {Object<enumClippedBeltUnderlayType, Rectangle>}\r\n */\r\nconst enumUnderlayTypeToClipRect = {\r\n    [enumClippedBeltUnderlayType.none]: null,\r\n    [enumClippedBeltUnderlayType.full]: FULL_CLIP_RECT,\r\n    [enumClippedBeltUnderlayType.topOnly]: new Rectangle(0, 0, 1, 0.5),\r\n    [enumClippedBeltUnderlayType.bottomOnly]: new Rectangle(0, 0.5, 1, 0.5),\r\n};\r\n\r\nexport class BeltUnderlaysSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [BeltUnderlaysComponent]);\r\n\r\n        this.underlayBeltSprites = [];\r\n\r\n        for (let i = 0; i < BELT_ANIM_COUNT; ++i) {\r\n            this.underlayBeltSprites.push(Loader.getSprite(\"sprites/belt/built/forward_\" + i + \".png\"));\r\n        }\r\n\r\n        // Automatically recompute areas\r\n        this.staleArea = new StaleAreaDetector({\r\n            root,\r\n            name: \"belt-underlay\",\r\n            recomputeMethod: this.recomputeStaleArea.bind(this),\r\n        });\r\n\r\n        this.staleArea.recomputeOnComponentsChanged(\r\n            [BeltUnderlaysComponent, BeltComponent, ItemAcceptorComponent, ItemEjectorComponent],\r\n            1\r\n        );\r\n    }\r\n\r\n    static getId() {\r\n        return \"beltUnderlays\";\r\n    }\r\n\r\n    update() {\r\n        this.staleArea.update();\r\n    }\r\n\r\n    /**\r\n     * Called when an area changed - Resets all caches in the given area\r\n     * @param {Rectangle} area\r\n     */\r\n    recomputeStaleArea(area) {\r\n        for (let x = 0; x < area.w; ++x) {\r\n            for (let y = 0; y < area.h; ++y) {\r\n                const tileX = area.x + x;\r\n                const tileY = area.y + y;\r\n                const entity = this.root.map.getLayerContentXY(tileX, tileY, \"regular\");\r\n                if (entity) {\r\n                    const underlayComp = entity.components.BeltUnderlays;\r\n                    if (underlayComp) {\r\n                        for (let i = 0; i < underlayComp.underlays.length; ++i) {\r\n                            underlayComp.underlays[i].cachedType = null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if a given tile is connected and has an acceptor\r\n     * @param {Vector} tile\r\n     * @param {enumDirection} fromDirection\r\n     * @returns {boolean}\r\n     */\r\n    checkIsAcceptorConnected(tile, fromDirection) {\r\n        const contents = this.root.map.getLayerContentXY(tile.x, tile.y, \"regular\");\r\n        if (!contents) {\r\n            return false;\r\n        }\r\n\r\n        const staticComp = contents.components.StaticMapEntity;\r\n\r\n        // Check if its a belt, since then its simple\r\n        const beltComp = contents.components.Belt;\r\n        if (beltComp) {\r\n            return staticComp.localDirectionToWorld(enumDirection.bottom) === fromDirection;\r\n        }\r\n\r\n        // Check if there's an item acceptor\r\n        const acceptorComp = contents.components.ItemAcceptor;\r\n        if (acceptorComp) {\r\n            // Check each slot to see if its connected\r\n            for (let i = 0; i < acceptorComp.slots.length; ++i) {\r\n                const slot = acceptorComp.slots[i];\r\n                const slotTile = staticComp.localTileToWorld(slot.pos);\r\n\r\n                // Step 1: Check if the tile matches\r\n                if (!slotTile.equals(tile)) {\r\n                    continue;\r\n                }\r\n\r\n                // Step 2: Check if any of the directions matches\r\n                for (let j = 0; j < slot.directions.length; ++j) {\r\n                    const slotDirection = staticComp.localDirectionToWorld(slot.directions[j]);\r\n                    if (slotDirection === fromDirection) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks if a given tile is connected and has an ejector\r\n     * @param {Vector} tile\r\n     * @param {enumDirection} toDirection\r\n     * @returns {boolean}\r\n     */\r\n    checkIsEjectorConnected(tile, toDirection) {\r\n        const contents = this.root.map.getLayerContentXY(tile.x, tile.y, \"regular\");\r\n        if (!contents) {\r\n            return false;\r\n        }\r\n\r\n        const staticComp = contents.components.StaticMapEntity;\r\n\r\n        // Check if its a belt, since then its simple\r\n        const beltComp = contents.components.Belt;\r\n        if (beltComp) {\r\n            return staticComp.localDirectionToWorld(beltComp.direction) === toDirection;\r\n        }\r\n\r\n        // Check for an ejector\r\n        const ejectorComp = contents.components.ItemEjector;\r\n        if (ejectorComp) {\r\n            // Check each slot to see if its connected\r\n            for (let i = 0; i < ejectorComp.slots.length; ++i) {\r\n                const slot = ejectorComp.slots[i];\r\n                const slotTile = staticComp.localTileToWorld(slot.pos);\r\n\r\n                // Step 1: Check if the tile matches\r\n                if (!slotTile.equals(tile)) {\r\n                    continue;\r\n                }\r\n\r\n                // Step 2: Check if the direction matches\r\n                const slotDirection = staticComp.localDirectionToWorld(slot.direction);\r\n                if (slotDirection === toDirection) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Computes the flag for a given tile\r\n     * @param {Entity} entity\r\n     * @param {import(\"../components/belt_underlays\").BeltUnderlayTile} underlayTile\r\n     * @returns {enumClippedBeltUnderlayType} The type of the underlay\r\n     */\r\n    computeBeltUnderlayType(entity, underlayTile) {\r\n        if (underlayTile.cachedType) {\r\n            return underlayTile.cachedType;\r\n        }\r\n\r\n        const staticComp = entity.components.StaticMapEntity;\r\n\r\n        const transformedPos = staticComp.localTileToWorld(underlayTile.pos);\r\n        const destX = transformedPos.x * globalConfig.tileSize;\r\n        const destY = transformedPos.y * globalConfig.tileSize;\r\n\r\n        // Extract direction and angle\r\n        const worldDirection = staticComp.localDirectionToWorld(underlayTile.direction);\r\n        const worldDirectionVector = enumDirectionToVector[worldDirection];\r\n\r\n        // Figure out if there is anything connected at the top\r\n        const connectedTop = this.checkIsAcceptorConnected(\r\n            transformedPos.add(worldDirectionVector),\r\n            enumInvertedDirections[worldDirection]\r\n        );\r\n\r\n        // Figure out if there is anything connected at the bottom\r\n        const connectedBottom = this.checkIsEjectorConnected(\r\n            transformedPos.sub(worldDirectionVector),\r\n            worldDirection\r\n        );\r\n\r\n        let flag = enumClippedBeltUnderlayType.none;\r\n\r\n        if (connectedTop && connectedBottom) {\r\n            flag = enumClippedBeltUnderlayType.full;\r\n        } else if (connectedTop) {\r\n            flag = enumClippedBeltUnderlayType.topOnly;\r\n        } else if (connectedBottom) {\r\n            flag = enumClippedBeltUnderlayType.bottomOnly;\r\n        }\r\n\r\n        return (underlayTile.cachedType = flag);\r\n    }\r\n\r\n    /**\r\n     * Draws a given chunk\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_BackgroundLayer(parameters, chunk) {\r\n        // Limit speed to avoid belts going backwards\r\n        const speedMultiplier = Math.min(this.root.hubGoals.getBeltBaseSpeed(), 10);\r\n\r\n        const contents = chunk.containedEntitiesByLayer.regular;\r\n        for (let i = 0; i < contents.length; ++i) {\r\n            const entity = contents[i];\r\n            const underlayComp = entity.components.BeltUnderlays;\r\n            if (!underlayComp) {\r\n                continue;\r\n            }\r\n\r\n            const staticComp = entity.components.StaticMapEntity;\r\n            const underlays = underlayComp.underlays;\r\n            for (let i = 0; i < underlays.length; ++i) {\r\n                // Extract underlay parameters\r\n                const { pos, direction } = underlays[i];\r\n                const transformedPos = staticComp.localTileToWorld(pos);\r\n                const destX = transformedPos.x * globalConfig.tileSize;\r\n                const destY = transformedPos.y * globalConfig.tileSize;\r\n\r\n                // Culling, Part 1: Check if the chunk contains the tile\r\n                if (!chunk.tileSpaceRectangle.containsPoint(transformedPos.x, transformedPos.y)) {\r\n                    continue;\r\n                }\r\n\r\n                // Culling, Part 2: Check if the overlay is visible\r\n                if (!parameters.visibleRect.containsRect4Params(\r\n                        destX,\r\n                        destY,\r\n                        globalConfig.tileSize,\r\n                        globalConfig.tileSize\r\n                    )) {\r\n                    continue;\r\n                }\r\n\r\n                // Extract direction and angle\r\n                const worldDirection = staticComp.localDirectionToWorld(direction);\r\n                const angle = enumDirectionToAngle[worldDirection];\r\n\r\n                const underlayType = this.computeBeltUnderlayType(entity, underlays[i]);\r\n                const clipRect = enumUnderlayTypeToClipRect[underlayType];\r\n                if (!clipRect) {\r\n                    // Empty\r\n                    continue;\r\n                }\r\n\r\n                // Actually draw the sprite\r\n                const x = destX + globalConfig.halfTileSize;\r\n                const y = destY + globalConfig.halfTileSize;\r\n                const angleRadians = Math.radians(angle);\r\n\r\n                // SYNC with systems/belt.js:drawSingleEntity!\r\n                const animationIndex = Math.floor(\r\n                    ((this.root.time.realtimeNow() * speedMultiplier * BELT_ANIM_COUNT * 126) / 42) *\r\n                    globalConfig.itemSpacingOnBelts\r\n                );\r\n                parameters.context.translate(x, y);\r\n                parameters.context.rotate(angleRadians);\r\n                this.underlayBeltSprites[\r\n                    animationIndex % this.underlayBeltSprites.length\r\n                ].drawCachedWithClipRect(\r\n                    parameters, -globalConfig.halfTileSize, -globalConfig.halfTileSize,\r\n                    globalConfig.tileSize,\r\n                    globalConfig.tileSize,\r\n                    clipRect\r\n                );\r\n                parameters.context.rotate(-angleRadians);\r\n                parameters.context.translate(-x, -y);\r\n            }\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/belt_underlays.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3034,
    "kind": "variable",
    "name": "enumUnderlayTypeToClipRect",
    "memberof": "js/game/systems/belt_underlays.js",
    "static": true,
    "longname": "js/game/systems/belt_underlays.js~enumUnderlayTypeToClipRect",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/systems/belt_underlays.js",
    "importStyle": null,
    "description": "Mapping from underlay type to clip rect",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "Object<enumClippedBeltUnderlayType, Rectangle>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 3035,
    "kind": "class",
    "name": "BeltUnderlaysSystem",
    "memberof": "js/game/systems/belt_underlays.js",
    "static": true,
    "longname": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/belt_underlays.js",
    "importStyle": "{BeltUnderlaysSystem}",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3036,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 3037,
    "kind": "member",
    "name": "underlayBeltSprites",
    "memberof": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem",
    "static": false,
    "longname": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem#underlayBeltSprites",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 3038,
    "kind": "member",
    "name": "staleArea",
    "memberof": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem",
    "static": false,
    "longname": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem#staleArea",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3039,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3040,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem#update",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3041,
    "kind": "method",
    "name": "recomputeStaleArea",
    "memberof": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem#recomputeStaleArea",
    "access": "public",
    "description": "Called when an area changed - Resets all caches in the given area",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "Rectangle"
        ],
        "spread": false,
        "optional": false,
        "name": "area",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3042,
    "kind": "method",
    "name": "checkIsAcceptorConnected",
    "memberof": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem#checkIsAcceptorConnected",
    "access": "public",
    "description": "Checks if a given tile is connected and has an acceptor",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "tile",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumDirection"
        ],
        "spread": false,
        "optional": false,
        "name": "fromDirection",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3043,
    "kind": "method",
    "name": "checkIsEjectorConnected",
    "memberof": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem#checkIsEjectorConnected",
    "access": "public",
    "description": "Checks if a given tile is connected and has an ejector",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "tile",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "enumDirection"
        ],
        "spread": false,
        "optional": false,
        "name": "toDirection",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3044,
    "kind": "method",
    "name": "computeBeltUnderlayType",
    "memberof": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem#computeBeltUnderlayType",
    "access": "public",
    "description": "Computes the flag for a given tile",
    "lineNumber": 183,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{enumClippedBeltUnderlayType} The type of the underlay"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "import(\"../components/belt_underlays\").BeltUnderlayTile"
        ],
        "spread": false,
        "optional": false,
        "name": "underlayTile",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "enumClippedBeltUnderlayType"
      ],
      "spread": false,
      "description": "The type of the underlay"
    }
  },
  {
    "__docId__": 3045,
    "kind": "method",
    "name": "drawChunk_BackgroundLayer",
    "memberof": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/belt_underlays.js~BeltUnderlaysSystem#drawChunk_BackgroundLayer",
    "access": "public",
    "description": "Draws a given chunk",
    "lineNumber": 228,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3046,
    "kind": "file",
    "name": "js/game/systems/constant_signal.js",
    "content": "import trim from \"trim\";\r\nimport { THIRDPARTY_URLS } from \"../../core/config\";\r\nimport { DialogWithForm } from \"../../core/modal_dialog_elements\";\r\nimport { FormElementInput, FormElementItemChooser } from \"../../core/modal_dialog_forms\";\r\nimport { fillInLinkIntoTranslation } from \"../../core/utils\";\r\nimport { T } from \"../../translations\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { enumColors } from \"../colors\";\r\nimport { ConstantSignalComponent } from \"../components/constant_signal\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { BOOL_FALSE_SINGLETON, BOOL_TRUE_SINGLETON } from \"../items/boolean_item\";\r\nimport { ColorItem } from \"../items/color_item\";\r\nimport { ShapeDefinition } from \"../shape_definition\";\r\n\r\nexport class ConstantSignalSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [ConstantSignalComponent]);\r\n\r\n        this.root.signals.entityManuallyPlaced.add(entity =>\r\n            this.editConstantSignal(entity, { deleteOnCancel: true })\r\n        );\r\n    }\r\n\r\n    static getId() {\r\n        return \"constantSignal\";\r\n    }\r\n\r\n    update() {\r\n        // Set signals\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            const pinsComp = entity.components.WiredPins;\r\n            const signalComp = entity.components.ConstantSignal;\r\n            pinsComp.slots[0].value = signalComp.signal;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Asks the entity to enter a valid signal code\r\n     * @param {Entity} entity\r\n     * @param {object} param0\r\n     * @param {boolean=} param0.deleteOnCancel\r\n     */\r\n    editConstantSignal(entity, { deleteOnCancel = true }) {\r\n        if (!entity.components.ConstantSignal) {\r\n            return;\r\n        }\r\n\r\n        // Ok, query, but also save the uid because it could get stale\r\n        const uid = entity.uid;\r\n\r\n        const signalValueInput = new FormElementInput({\r\n            id: \"signalValue\",\r\n            label: fillInLinkIntoTranslation(T.dialogs.editSignal.descShortKey, THIRDPARTY_URLS.shapeViewer),\r\n            placeholder: \"\",\r\n            defaultValue: \"\",\r\n            validator: val => this.parseSignalCode(val),\r\n        });\r\n\r\n        const itemInput = new FormElementItemChooser({\r\n            id: \"signalItem\",\r\n            label: null,\r\n            items: [\r\n                BOOL_FALSE_SINGLETON,\r\n                BOOL_TRUE_SINGLETON,\r\n                ...Object.values(ColorItem.ITEM_SINGLETONS),\r\n                this.root.shapeDefinitionMgr.getShapeItemFromDefinition(\r\n                    this.root.hubGoals.currentGoal.definition\r\n                ),\r\n                this.root.shapeDefinitionMgr.getShapeItemFromShortKey(\r\n                    this.root.gameMode.getBlueprintShapeKey()\r\n                ),\r\n                ...this.root.hud.parts.pinnedShapes.pinnedShapes.map(key =>\r\n                    this.root.shapeDefinitionMgr.getShapeItemFromShortKey(key)\r\n                ),\r\n            ],\r\n        });\r\n\r\n        const dialog = new DialogWithForm({\r\n            app: this.root.app,\r\n            title: T.dialogs.editSignal.title,\r\n            desc: T.dialogs.editSignal.descItems,\r\n            formElements: [itemInput, signalValueInput],\r\n            buttons: [\"cancel:bad:escape\", \"ok:good:enter\"],\r\n            closeButton: false,\r\n        });\r\n        this.root.hud.parts.dialogs.internalShowDialog(dialog);\r\n\r\n        // When confirmed, set the signal\r\n        const closeHandler = () => {\r\n            if (!this.root || !this.root.entityMgr) {\r\n                // Game got stopped\r\n                return;\r\n            }\r\n\r\n            const entityRef = this.root.entityMgr.findByUid(uid, false);\r\n            if (!entityRef) {\r\n                // outdated\r\n                return;\r\n            }\r\n\r\n            const constantComp = entityRef.components.ConstantSignal;\r\n            if (!constantComp) {\r\n                // no longer interesting\r\n                return;\r\n            }\r\n\r\n            if (itemInput.chosenItem) {\r\n                constantComp.signal = itemInput.chosenItem;\r\n            } else {\r\n                constantComp.signal = this.parseSignalCode(signalValueInput.getValue());\r\n            }\r\n        };\r\n\r\n        dialog.buttonSignals.ok.add(closeHandler);\r\n        dialog.valueChosen.add(closeHandler);\r\n\r\n        // When cancelled, destroy the entity again\r\n        if (deleteOnCancel) {\r\n            dialog.buttonSignals.cancel.add(() => {\r\n                if (!this.root || !this.root.entityMgr) {\r\n                    // Game got stopped\r\n                    return;\r\n                }\r\n\r\n                const entityRef = this.root.entityMgr.findByUid(uid, false);\r\n                if (!entityRef) {\r\n                    // outdated\r\n                    return;\r\n                }\r\n\r\n                const constantComp = entityRef.components.ConstantSignal;\r\n                if (!constantComp) {\r\n                    // no longer interesting\r\n                    return;\r\n                }\r\n\r\n                this.root.logic.tryDeleteBuilding(entityRef);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tries to parse a signal code\r\n     * @param {string} code\r\n     * @returns {BaseItem}\r\n     */\r\n    parseSignalCode(code) {\r\n        if (!this.root || !this.root.shapeDefinitionMgr) {\r\n            // Stale reference\r\n            return null;\r\n        }\r\n\r\n        code = trim(code);\r\n        const codeLower = code.toLowerCase();\r\n\r\n        if (enumColors[codeLower]) {\r\n            return ColorItem.ITEM_SINGLETONS[codeLower];\r\n        }\r\n        if (code === \"1\" || codeLower === \"true\") {\r\n            return BOOL_TRUE_SINGLETON;\r\n        }\r\n\r\n        if (code === \"0\" || codeLower === \"false\") {\r\n            return BOOL_FALSE_SINGLETON;\r\n        }\r\n\r\n        if (ShapeDefinition.isValidShortKey(code)) {\r\n            return this.root.shapeDefinitionMgr.getShapeItemFromShortKey(code);\r\n        }\r\n\r\n        return null;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/constant_signal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3047,
    "kind": "class",
    "name": "ConstantSignalSystem",
    "memberof": "js/game/systems/constant_signal.js",
    "static": true,
    "longname": "js/game/systems/constant_signal.js~ConstantSignalSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/constant_signal.js",
    "importStyle": "{ConstantSignalSystem}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3048,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/constant_signal.js~ConstantSignalSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/constant_signal.js~ConstantSignalSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 3049,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/constant_signal.js~ConstantSignalSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/constant_signal.js~ConstantSignalSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3050,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/constant_signal.js~ConstantSignalSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/constant_signal.js~ConstantSignalSystem#update",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3051,
    "kind": "method",
    "name": "editConstantSignal",
    "memberof": "js/game/systems/constant_signal.js~ConstantSignalSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/constant_signal.js~ConstantSignalSystem#editConstantSignal",
    "access": "public",
    "description": "Asks the entity to enter a valid signal code",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.deleteOnCancel",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3052,
    "kind": "method",
    "name": "parseSignalCode",
    "memberof": "js/game/systems/constant_signal.js~ConstantSignalSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/constant_signal.js~ConstantSignalSystem#parseSignalCode",
    "access": "public",
    "description": "Tries to parse a signal code",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3053,
    "kind": "file",
    "name": "js/game/systems/display.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { enumColors } from \"../colors\";\r\nimport { DisplayComponent } from \"../components/display\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { isTrueItem } from \"../items/boolean_item\";\r\nimport { ColorItem } from \"../items/color_item\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\n\r\nexport class DisplaySystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [DisplayComponent]);\r\n\r\n        /** @type {Object<string, import(\"../../core/draw_utils\").AtlasSprite>} */\r\n        this.displaySprites = {};\r\n\r\n        for (const colorId in enumColors) {\r\n            if (colorId === enumColors.uncolored) {\r\n                continue;\r\n            }\r\n            DisplaySystem.displaySprites[colorId] = Loader.getSprite(\r\n                \"sprites/wires/display/\" + colorId + \".png\"\r\n            );\r\n        }\r\n    }\r\n\r\n    static getId() {\r\n        return \"display\";\r\n    }\r\n\r\n    /**\r\n     * Returns the color / value a display should show\r\n     * @param {BaseItem} value\r\n     * @returns {BaseItem}\r\n     */\r\n    getDisplayItem(value) {\r\n        if (!value) {\r\n            return null;\r\n        }\r\n\r\n        return DisplaySystem.displayItemType[value.getItemType()](value);\r\n    }\r\n\r\n    /**\r\n     * Draws a given chunk\r\n     * @param {import(\"../../core/draw_utils\").DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_ForegroundStaticLayer(parameters, chunk) {\r\n        const contents = chunk.containedEntitiesByLayer.regular;\r\n        for (let i = 0; i < contents.length; ++i) {\r\n            const entity = contents[i];\r\n            if (entity && entity.components.Display) {\r\n                const pinsComp = entity.components.WiredPins;\r\n                const network = pinsComp.slots[0].linkedNetwork;\r\n\r\n                if (!network || !network.hasValue()) {\r\n                    continue;\r\n                }\r\n\r\n                const value = this.getDisplayItem(network.currentValue);\r\n\r\n                if (!value) {\r\n                    continue;\r\n                }\r\n\r\n                const origin = entity.components.StaticMapEntity.origin;\r\n                DisplaySystem.displayItem[value.getItemType()](parameters, value, origin, globalConfig);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nDisplaySystem.displaySprites = [];\r\n\r\nDisplaySystem.displayItemType = {\r\n    boolean: value => (isTrueItem(value) ? ColorItem.ITEM_SINGLETONS[enumColors.white] : null),\r\n\r\n    color: value =>\r\n        /**@type {ColorItem} */\r\n        (value).color === enumColors.uncolored ? null : /**@type {ColorItem} */ (value),\r\n\r\n    shape: value => value,\r\n};\r\n\r\nDisplaySystem.displayItem = {\r\n    color: (parameters, value, origin, globalConfig) =>\r\n        DisplaySystem.displaySprites[ /** @type {ColorItem} */ (value).color].drawCachedCentered(\r\n            parameters,\r\n            (origin.x + 0.5) * globalConfig.tileSize,\r\n            (origin.y + 0.5) * globalConfig.tileSize,\r\n            globalConfig.tileSize\r\n        ),\r\n\r\n    shape: (parameters, value, origin, globalConfig) =>\r\n        value.drawItemCenteredClipped(\r\n            (origin.x + 0.5) * globalConfig.tileSize,\r\n            (origin.y + 0.5) * globalConfig.tileSize,\r\n            parameters,\r\n            DisplaySystem.shapeRadius(),\r\n            DisplaySystem.shapeBackground()\r\n        ),\r\n};\r\n\r\nDisplaySystem.shapeRadius = () => 30;\r\nDisplaySystem.shapeBackground = () => true;",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/display.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3054,
    "kind": "class",
    "name": "DisplaySystem",
    "memberof": "js/game/systems/display.js",
    "static": true,
    "longname": "js/game/systems/display.js~DisplaySystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/display.js",
    "importStyle": "{DisplaySystem}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3055,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/display.js~DisplaySystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/display.js~DisplaySystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 3056,
    "kind": "member",
    "name": "displaySprites",
    "memberof": "js/game/systems/display.js~DisplaySystem",
    "static": false,
    "longname": "js/game/systems/display.js~DisplaySystem#displaySprites",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Object<string, import(\"../../core/draw_utils\").AtlasSprite>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3057,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/display.js~DisplaySystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/display.js~DisplaySystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3058,
    "kind": "method",
    "name": "getDisplayItem",
    "memberof": "js/game/systems/display.js~DisplaySystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/display.js~DisplaySystem#getDisplayItem",
    "access": "public",
    "description": "Returns the color / value a display should show",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3059,
    "kind": "method",
    "name": "drawChunk_ForegroundStaticLayer",
    "memberof": "js/game/systems/display.js~DisplaySystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/display.js~DisplaySystem#drawChunk_ForegroundStaticLayer",
    "access": "public",
    "description": "Draws a given chunk",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../../core/draw_utils\").DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3060,
    "kind": "file",
    "name": "js/game/systems/filter.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { FilterComponent } from \"../components/filter\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { BOOL_TRUE_SINGLETON } from \"../items/boolean_item\";\r\n\r\nconst MAX_ITEMS_IN_QUEUE = 2;\r\n\r\nexport class FilterSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [FilterComponent]);\r\n    }\r\n\r\n    static getId() {\r\n        return \"filter\";\r\n    }\r\n\r\n    update() {\r\n        const progress =\r\n            this.root.dynamicTickrate.deltaSeconds *\r\n            this.root.hubGoals.getBeltBaseSpeed() *\r\n            globalConfig.itemSpacingOnBelts;\r\n\r\n        const requiredProgress = 1 - progress;\r\n\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            const filterComp = entity.components.Filter;\r\n            const ejectorComp = entity.components.ItemEjector;\r\n\r\n            // Process payloads\r\n            const slotsAndLists = [filterComp.pendingItemsToLeaveThrough, filterComp.pendingItemsToReject];\r\n            for (let slotIndex = 0; slotIndex < slotsAndLists.length; ++slotIndex) {\r\n                const pendingItems = slotsAndLists[slotIndex];\r\n\r\n                for (let j = 0; j < pendingItems.length; ++j) {\r\n                    const nextItem = pendingItems[j];\r\n                    // Advance next item\r\n                    nextItem.progress = Math.min(requiredProgress, nextItem.progress + progress);\r\n                    // Check if it's ready to eject\r\n                    if (nextItem.progress >= requiredProgress - 1e-5) {\r\n                        if (ejectorComp.tryEject(slotIndex, nextItem.item)) {\r\n                            pendingItems.shift();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     * @param {number} slot\r\n     * @param {BaseItem} item\r\n     */\r\n    tryAcceptItem(entity, slot, item) {\r\n        const network = entity.components.WiredPins.slots[0].linkedNetwork;\r\n        if (!network || !network.hasValue()) {\r\n            // Filter is not connected\r\n            return false;\r\n        }\r\n\r\n        const value = network.currentValue;\r\n        const filterComp = entity.components.Filter;\r\n        assert(filterComp, \"entity is no filter\");\r\n\r\n        // Figure out which list we have to check\r\n        let listToCheck = FilterSystem.listToCheck(entity, slot, item, filterComp, value);\r\n\r\n        if (listToCheck.length >= MAX_ITEMS_IN_QUEUE) {\r\n            // Busy\r\n            return false;\r\n        }\r\n\r\n        // Actually accept item\r\n        listToCheck.push({\r\n            item,\r\n            progress: 0.0,\r\n        });\r\n        return true;\r\n    }\r\n}\r\n\r\nFilterSystem.listToCheck = (entity, slot, item, filterComp, networkValue) =>\r\n    networkValue.equals(BOOL_TRUE_SINGLETON) || networkValue.equals(item) ?\r\n    filterComp.pendingItemsToLeaveThrough :\r\n    filterComp.pendingItemsToReject;",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/filter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3061,
    "kind": "variable",
    "name": "MAX_ITEMS_IN_QUEUE",
    "memberof": "js/game/systems/filter.js",
    "static": true,
    "longname": "js/game/systems/filter.js~MAX_ITEMS_IN_QUEUE",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/systems/filter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3062,
    "kind": "class",
    "name": "FilterSystem",
    "memberof": "js/game/systems/filter.js",
    "static": true,
    "longname": "js/game/systems/filter.js~FilterSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/filter.js",
    "importStyle": "{FilterSystem}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3063,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/filter.js~FilterSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/filter.js~FilterSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 3064,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/filter.js~FilterSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/filter.js~FilterSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3065,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/filter.js~FilterSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/filter.js~FilterSystem#update",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3066,
    "kind": "method",
    "name": "tryAcceptItem",
    "memberof": "js/game/systems/filter.js~FilterSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/filter.js~FilterSystem#tryAcceptItem",
    "access": "public",
    "description": "",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "slot",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3067,
    "kind": "file",
    "name": "js/game/systems/hub.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { smoothenDpi } from \"../../core/dpi_manager\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { drawSpriteClipped } from \"../../core/draw_utils\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { Rectangle } from \"../../core/rectangle\";\r\nimport { ORIGINAL_SPRITE_SCALE } from \"../../core/sprites\";\r\nimport { formatBigNumber } from \"../../core/utils\";\r\nimport { T } from \"../../translations\";\r\nimport { HubComponent } from \"../components/hub\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\n\r\nconst HUB_SIZE_TILES = 4;\r\nconst HUB_SIZE_PIXELS = HUB_SIZE_TILES * globalConfig.tileSize;\r\n\r\nexport class HubSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [HubComponent]);\r\n\r\n        this.hubSprite = Loader.getSprite(\"sprites/buildings/hub.png\");\r\n    }\r\n\r\n    static getId() {\r\n        return \"hub\";\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            this.drawEntity(parameters, this.allEntities[i]);\r\n        }\r\n    }\r\n\r\n    update() {\r\n            for (let i = 0; i < this.allEntities.length; ++i) {\r\n                // Set hub goal\r\n                const entity = this.allEntities[i];\r\n                const pinsComp = entity.components.WiredPins;\r\n                pinsComp.slots[0].value = this.root.shapeDefinitionMgr.getShapeItemFromDefinition(\r\n                    this.root.hubGoals.currentGoal.definition\r\n                );\r\n            }\r\n        }\r\n        /**\r\n         *\r\n         * @param {HTMLCanvasElement} canvas\r\n         * @param {CanvasRenderingContext2D} context\r\n         * @param {number} w\r\n         * @param {number} h\r\n         * @param {number} dpi\r\n         */\r\n    redrawHubBaseTexture(canvas, context, w, h, dpi) {\r\n        // This method is quite ugly, please ignore it!\r\n\r\n        context.scale(dpi, dpi);\r\n\r\n        const parameters = new DrawParameters({\r\n            context,\r\n            visibleRect: new Rectangle(0, 0, w, h),\r\n            desiredAtlasScale: ORIGINAL_SPRITE_SCALE,\r\n            zoomLevel: dpi * 0.75,\r\n            root: this.root,\r\n        });\r\n\r\n        context.clearRect(0, 0, w, h);\r\n\r\n        this.hubSprite.draw(context, 0, 0, w, h);\r\n\r\n        if (this.root.hubGoals.isEndOfDemoReached()) {\r\n            // End of demo\r\n            context.font = \"bold 12px GameFont\";\r\n            context.fillStyle = \"#fd0752\";\r\n            context.textAlign = \"center\";\r\n            context.fillText(T.buildings.hub.endOfDemo.toUpperCase(), w / 2, h / 2 + 6);\r\n            context.textAlign = \"left\";\r\n\r\n            return;\r\n        }\r\n\r\n        const definition = this.root.hubGoals.currentGoal.definition;\r\n        definition.drawCentered(45, 58, parameters, 36);\r\n\r\n        const goals = this.root.hubGoals.currentGoal;\r\n\r\n        const textOffsetX = 70;\r\n        const textOffsetY = 61;\r\n\r\n        if (goals.throughputOnly) {\r\n            // Throughput\r\n            const deliveredText = T.ingame.statistics.shapesDisplayUnits.second.replace(\r\n                \"<shapes>\",\r\n                formatBigNumber(goals.required)\r\n            );\r\n\r\n            context.font = \"bold 12px GameFont\";\r\n            context.fillStyle = \"#64666e\";\r\n            context.textAlign = \"left\";\r\n            context.fillText(deliveredText, textOffsetX, textOffsetY);\r\n        } else {\r\n            // Deliver count\r\n            const delivered = this.root.hubGoals.getCurrentGoalDelivered();\r\n            const deliveredText = \"\" + formatBigNumber(delivered);\r\n\r\n            if (delivered > 9999) {\r\n                context.font = \"bold 16px GameFont\";\r\n            } else if (delivered > 999) {\r\n                context.font = \"bold 20px GameFont\";\r\n            } else {\r\n                context.font = \"bold 25px GameFont\";\r\n            }\r\n            context.fillStyle = \"#64666e\";\r\n            context.textAlign = \"left\";\r\n            context.fillText(deliveredText, textOffsetX, textOffsetY);\r\n\r\n            // Required\r\n            context.font = \"13px GameFont\";\r\n            context.fillStyle = \"#a4a6b0\";\r\n            context.fillText(\"/ \" + formatBigNumber(goals.required), textOffsetX, textOffsetY + 13);\r\n        }\r\n\r\n        // Reward\r\n        const rewardText = T.storyRewards[goals.reward].title.toUpperCase();\r\n        if (rewardText.length > 12) {\r\n            context.font = \"bold 8px GameFont\";\r\n        } else {\r\n            context.font = \"bold 10px GameFont\";\r\n        }\r\n        context.fillStyle = \"#fd0752\";\r\n        context.textAlign = \"center\";\r\n\r\n        context.fillText(rewardText, HUB_SIZE_PIXELS / 2, 105);\r\n\r\n        // Level \"8\"\r\n        context.font = \"bold 10px GameFont\";\r\n        context.fillStyle = \"#fff\";\r\n        context.fillText(\"\" + this.root.hubGoals.level, 27, 32);\r\n\r\n        // \"LVL\"\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"#fff\";\r\n        context.font = \"bold 6px GameFont\";\r\n        context.fillText(T.buildings.hub.levelShortcut, 27, 22);\r\n\r\n        // \"Deliver\"\r\n        context.fillStyle = \"#64666e\";\r\n        context.font = \"bold 10px GameFont\";\r\n        context.fillText(T.buildings.hub.deliver.toUpperCase(), HUB_SIZE_PIXELS / 2, 30);\r\n\r\n        // \"To unlock\"\r\n        const unlockText = T.buildings.hub.toUnlock.toUpperCase();\r\n        if (unlockText.length > 15) {\r\n            context.font = \"bold 8px GameFont\";\r\n        } else {\r\n            context.font = \"bold 10px GameFont\";\r\n        }\r\n        context.fillText(T.buildings.hub.toUnlock.toUpperCase(), HUB_SIZE_PIXELS / 2, 92);\r\n\r\n        context.textAlign = \"left\";\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     * @param {Entity} entity\r\n     */\r\n    drawEntity(parameters, entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        if (!staticComp.shouldBeDrawn(parameters)) {\r\n            return;\r\n        }\r\n\r\n        // Deliver count\r\n        const delivered = this.root.hubGoals.getCurrentGoalDelivered();\r\n        const deliveredText = \"\" + formatBigNumber(delivered);\r\n\r\n        const dpi = smoothenDpi(globalConfig.shapesSharpness * parameters.zoomLevel);\r\n        const canvas = parameters.root.buffers.getForKey({\r\n            key: \"hub\",\r\n            subKey: dpi + \"/\" + this.root.hubGoals.level + \"/\" + deliveredText,\r\n            w: globalConfig.tileSize * 4,\r\n            h: globalConfig.tileSize * 4,\r\n            dpi,\r\n            redrawMethod: this.redrawHubBaseTexture.bind(this),\r\n        });\r\n\r\n        const extrude = 8;\r\n        drawSpriteClipped({\r\n            parameters,\r\n            sprite: canvas,\r\n            x: staticComp.origin.x * globalConfig.tileSize - extrude,\r\n            y: staticComp.origin.y * globalConfig.tileSize - extrude,\r\n            w: HUB_SIZE_PIXELS + 2 * extrude,\r\n            h: HUB_SIZE_PIXELS + 2 * extrude,\r\n            originalW: HUB_SIZE_PIXELS * dpi,\r\n            originalH: HUB_SIZE_PIXELS * dpi,\r\n        });\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/hub.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3068,
    "kind": "variable",
    "name": "HUB_SIZE_TILES",
    "memberof": "js/game/systems/hub.js",
    "static": true,
    "longname": "js/game/systems/hub.js~HUB_SIZE_TILES",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/systems/hub.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3069,
    "kind": "variable",
    "name": "HUB_SIZE_PIXELS",
    "memberof": "js/game/systems/hub.js",
    "static": true,
    "longname": "js/game/systems/hub.js~HUB_SIZE_PIXELS",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/systems/hub.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3070,
    "kind": "class",
    "name": "HubSystem",
    "memberof": "js/game/systems/hub.js",
    "static": true,
    "longname": "js/game/systems/hub.js~HubSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/hub.js",
    "importStyle": "{HubSystem}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3071,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/hub.js~HubSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/hub.js~HubSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 3072,
    "kind": "member",
    "name": "hubSprite",
    "memberof": "js/game/systems/hub.js~HubSystem",
    "static": false,
    "longname": "js/game/systems/hub.js~HubSystem#hubSprite",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3073,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/hub.js~HubSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/hub.js~HubSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3074,
    "kind": "method",
    "name": "draw",
    "memberof": "js/game/systems/hub.js~HubSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/hub.js~HubSystem#draw",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3075,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/hub.js~HubSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/hub.js~HubSystem#update",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3076,
    "kind": "method",
    "name": "redrawHubBaseTexture",
    "memberof": "js/game/systems/hub.js~HubSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/hub.js~HubSystem#redrawHubBaseTexture",
    "access": "public",
    "description": "",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "canvas",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dpi",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3077,
    "kind": "method",
    "name": "drawEntity",
    "memberof": "js/game/systems/hub.js~HubSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/hub.js~HubSystem#drawEntity",
    "access": "public",
    "description": "",
    "lineNumber": 168,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3078,
    "kind": "file",
    "name": "js/game/systems/item_acceptor.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { fastArrayDelete } from \"../../core/utils\";\r\nimport { enumDirectionToVector } from \"../../core/vector\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\n\r\nexport class ItemAcceptorSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [ItemAcceptorComponent]);\r\n\r\n        // Well ... it's better to be verbose I guess?\r\n        this.accumulatedTicksWhileInMapOverview = 0;\r\n    }\r\n    static getId() {\r\n        return \"itemAcceptor\";\r\n    }\r\n\r\n    update() {\r\n        if (this.root.app.settings.getAllSettings().simplifiedBelts) {\r\n            // Disabled in potato mode\r\n            return;\r\n        }\r\n\r\n        // This system doesn't render anything while in map overview,\r\n        // so simply accumulate ticks\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            ++this.accumulatedTicksWhileInMapOverview;\r\n            return;\r\n        }\r\n\r\n        // Compute how much ticks we missed\r\n        const numTicks = 1 + this.accumulatedTicksWhileInMapOverview;\r\n        const progress =\r\n            this.root.dynamicTickrate.deltaSeconds *\r\n            2 *\r\n            this.root.hubGoals.getBeltBaseSpeed() *\r\n            globalConfig.itemSpacingOnBelts * // * 2 because its only a half tile\r\n            numTicks;\r\n\r\n        // Reset accumulated ticks\r\n        this.accumulatedTicksWhileInMapOverview = 0;\r\n\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            const aceptorComp = entity.components.ItemAcceptor;\r\n            const animations = aceptorComp.itemConsumptionAnimations;\r\n\r\n            // Process item consumption animations to avoid items popping from the belts\r\n            for (let animIndex = 0; animIndex < animations.length; ++animIndex) {\r\n                const anim = animations[animIndex];\r\n                anim.animProgress += progress;\r\n                if (anim.animProgress > 1) {\r\n                    fastArrayDelete(animations, animIndex);\r\n                    animIndex -= 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_ForegroundDynamicLayer(parameters, chunk) {\r\n        if (this.root.app.settings.getAllSettings().simplifiedBelts) {\r\n            // Disabled in potato mode\r\n            return;\r\n        }\r\n\r\n        const contents = chunk.containedEntitiesByLayer.regular;\r\n        for (let i = 0; i < contents.length; ++i) {\r\n            const entity = contents[i];\r\n            const acceptorComp = entity.components.ItemAcceptor;\r\n            if (!acceptorComp) {\r\n                continue;\r\n            }\r\n\r\n            const staticComp = entity.components.StaticMapEntity;\r\n            for (let animIndex = 0; animIndex < acceptorComp.itemConsumptionAnimations.length; ++animIndex) {\r\n                const { item, slotIndex, animProgress, direction } = acceptorComp.itemConsumptionAnimations[\r\n                    animIndex\r\n                ];\r\n\r\n                const slotData = acceptorComp.slots[slotIndex];\r\n                const realSlotPos = staticComp.localTileToWorld(slotData.pos);\r\n\r\n                if (!chunk.tileSpaceRectangle.containsPoint(realSlotPos.x, realSlotPos.y)) {\r\n                    // Not within this chunk\r\n                    continue;\r\n                }\r\n\r\n                const fadeOutDirection = enumDirectionToVector[staticComp.localDirectionToWorld(direction)];\r\n                const finalTile = realSlotPos.subScalars(\r\n                    fadeOutDirection.x * (animProgress / 2 - 0.5),\r\n                    fadeOutDirection.y * (animProgress / 2 - 0.5)\r\n                );\r\n\r\n                item.drawItemCenteredClipped(\r\n                    (finalTile.x + 0.5) * globalConfig.tileSize,\r\n                    (finalTile.y + 0.5) * globalConfig.tileSize,\r\n                    parameters,\r\n                    globalConfig.defaultItemDiameter\r\n                );\r\n            }\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/item_acceptor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3079,
    "kind": "class",
    "name": "ItemAcceptorSystem",
    "memberof": "js/game/systems/item_acceptor.js",
    "static": true,
    "longname": "js/game/systems/item_acceptor.js~ItemAcceptorSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/item_acceptor.js",
    "importStyle": "{ItemAcceptorSystem}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3080,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/item_acceptor.js~ItemAcceptorSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_acceptor.js~ItemAcceptorSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 3081,
    "kind": "member",
    "name": "accumulatedTicksWhileInMapOverview",
    "memberof": "js/game/systems/item_acceptor.js~ItemAcceptorSystem",
    "static": false,
    "longname": "js/game/systems/item_acceptor.js~ItemAcceptorSystem#accumulatedTicksWhileInMapOverview",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3082,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/item_acceptor.js~ItemAcceptorSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/item_acceptor.js~ItemAcceptorSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3083,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/item_acceptor.js~ItemAcceptorSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_acceptor.js~ItemAcceptorSystem#update",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3085,
    "kind": "method",
    "name": "drawChunk_ForegroundDynamicLayer",
    "memberof": "js/game/systems/item_acceptor.js~ItemAcceptorSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_acceptor.js~ItemAcceptorSystem#drawChunk_ForegroundDynamicLayer",
    "access": "public",
    "description": "",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3086,
    "kind": "file",
    "name": "js/game/systems/item_ejector.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { Rectangle } from \"../../core/rectangle\";\r\nimport { StaleAreaDetector } from \"../../core/stale_area_detector\";\r\nimport { enumDirection, enumDirectionToVector } from \"../../core/vector\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { BeltComponent } from \"../components/belt\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\n\r\nconst logger = createLogger(\"systems/ejector\");\r\n\r\nexport class ItemEjectorSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [ItemEjectorComponent]);\r\n\r\n        this.staleAreaDetector = new StaleAreaDetector({\r\n            root: this.root,\r\n            name: \"item-ejector\",\r\n            recomputeMethod: this.recomputeArea.bind(this),\r\n        });\r\n\r\n        this.staleAreaDetector.recomputeOnComponentsChanged(\r\n            [ItemEjectorComponent, ItemAcceptorComponent, BeltComponent],\r\n            1\r\n        );\r\n\r\n        this.root.signals.postLoadHook.add(this.recomputeCacheFull, this);\r\n    }\r\n\r\n    static getId() {\r\n        return \"itemEjector\";\r\n    }\r\n\r\n    /**\r\n     * Recomputes an area after it changed\r\n     * @param {Rectangle} area\r\n     */\r\n    recomputeArea(area) {\r\n        /** @type {Set<number>} */\r\n        const seenUids = new Set();\r\n        for (let x = 0; x < area.w; ++x) {\r\n            for (let y = 0; y < area.h; ++y) {\r\n                const tileX = area.x + x;\r\n                const tileY = area.y + y;\r\n                // @NOTICE: Item ejector currently only supports regular layer\r\n                const contents = this.root.map.getLayerContentXY(tileX, tileY, \"regular\");\r\n                if (contents && contents.components.ItemEjector) {\r\n                    if (!seenUids.has(contents.uid)) {\r\n                        seenUids.add(contents.uid);\r\n                        this.recomputeSingleEntityCache(contents);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recomputes the whole cache after the game has loaded\r\n     */\r\n    recomputeCacheFull() {\r\n        logger.log(\"Full cache recompute in post load hook\");\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            this.recomputeSingleEntityCache(entity);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     */\r\n    recomputeSingleEntityCache(entity) {\r\n        const ejectorComp = entity.components.ItemEjector;\r\n        const staticComp = entity.components.StaticMapEntity;\r\n\r\n        for (let slotIndex = 0; slotIndex < ejectorComp.slots.length; ++slotIndex) {\r\n            const ejectorSlot = ejectorComp.slots[slotIndex];\r\n\r\n            // Clear the old cache.\r\n            ejectorSlot.cachedDestSlot = null;\r\n            ejectorSlot.cachedTargetEntity = null;\r\n            ejectorSlot.cachedBeltPath = null;\r\n\r\n            // Figure out where and into which direction we eject items\r\n            const ejectSlotWsTile = staticComp.localTileToWorld(ejectorSlot.pos);\r\n            const ejectSlotWsDirection = staticComp.localDirectionToWorld(ejectorSlot.direction);\r\n            const ejectSlotWsDirectionVector = enumDirectionToVector[ejectSlotWsDirection];\r\n            const ejectSlotTargetWsTile = ejectSlotWsTile.add(ejectSlotWsDirectionVector);\r\n\r\n            // Try to find the given acceptor component to take the item\r\n            // Since there can be cross layer dependencies, check on all layers\r\n            const targetEntities = this.root.map.getLayersContentsMultipleXY(\r\n                ejectSlotTargetWsTile.x,\r\n                ejectSlotTargetWsTile.y\r\n            );\r\n\r\n            for (let i = 0; i < targetEntities.length; ++i) {\r\n                const targetEntity = targetEntities[i];\r\n\r\n                const targetStaticComp = targetEntity.components.StaticMapEntity;\r\n                const targetBeltComp = targetEntity.components.Belt;\r\n\r\n                // Check for belts (special case)\r\n                if (targetBeltComp) {\r\n                    const beltAcceptingDirection = targetStaticComp.localDirectionToWorld(enumDirection.top);\r\n                    if (ejectSlotWsDirection === beltAcceptingDirection) {\r\n                        ejectorSlot.cachedTargetEntity = targetEntity;\r\n                        ejectorSlot.cachedBeltPath = targetBeltComp.assignedPath;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // Check for item acceptors\r\n                const targetAcceptorComp = targetEntity.components.ItemAcceptor;\r\n                if (!targetAcceptorComp) {\r\n                    // Entity doesn't accept items\r\n                    continue;\r\n                }\r\n\r\n                const matchingSlot = targetAcceptorComp.findMatchingSlot(\r\n                    targetStaticComp.worldToLocalTile(ejectSlotTargetWsTile),\r\n                    targetStaticComp.worldDirectionToLocal(ejectSlotWsDirection)\r\n                );\r\n\r\n                if (!matchingSlot) {\r\n                    // No matching slot found\r\n                    continue;\r\n                }\r\n\r\n                // A slot can always be connected to one other slot only\r\n                ejectorSlot.cachedTargetEntity = targetEntity;\r\n                ejectorSlot.cachedDestSlot = matchingSlot;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        this.staleAreaDetector.update();\r\n\r\n        // Precompute effective belt speed\r\n        let progressGrowth = 2 * this.root.dynamicTickrate.deltaSeconds;\r\n\r\n        if (G_IS_DEV && globalConfig.debug.instantBelts) {\r\n            progressGrowth = 1;\r\n        }\r\n\r\n        // Go over all cache entries\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const sourceEntity = this.allEntities[i];\r\n            const sourceEjectorComp = sourceEntity.components.ItemEjector;\r\n\r\n            const slots = sourceEjectorComp.slots;\r\n            for (let j = 0; j < slots.length; ++j) {\r\n                const sourceSlot = slots[j];\r\n                const item = sourceSlot.item;\r\n                if (!item) {\r\n                    // No item available to be ejected\r\n                    continue;\r\n                }\r\n\r\n                // Advance items on the slot\r\n                sourceSlot.progress = Math.min(\r\n                    1,\r\n                    sourceSlot.progress +\r\n                        progressGrowth *\r\n                            this.root.hubGoals.getBeltBaseSpeed() *\r\n                            globalConfig.itemSpacingOnBelts\r\n                );\r\n\r\n                if (G_IS_DEV && globalConfig.debug.disableEjectorProcessing) {\r\n                    sourceSlot.progress = 1.0;\r\n                }\r\n\r\n                // Check if we are still in the process of ejecting, can't proceed then\r\n                if (sourceSlot.progress < 1.0) {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we are ejecting to a belt path\r\n                const destPath = sourceSlot.cachedBeltPath;\r\n                if (destPath) {\r\n                    // Try passing the item over\r\n                    if (destPath.tryAcceptItem(item)) {\r\n                        sourceSlot.item = null;\r\n                    }\r\n\r\n                    // Always stop here, since there can *either* be a belt path *or*\r\n                    // a slot\r\n                    continue;\r\n                }\r\n\r\n                // Check if the target acceptor can actually accept this item\r\n                const destEntity = sourceSlot.cachedTargetEntity;\r\n                const destSlot = sourceSlot.cachedDestSlot;\r\n                if (destSlot) {\r\n                    const targetAcceptorComp = destEntity.components.ItemAcceptor;\r\n                    if (!targetAcceptorComp.canAcceptItem(destSlot.index, item)) {\r\n                        continue;\r\n                    }\r\n\r\n                    // Try to hand over the item\r\n                    if (this.tryPassOverItem(item, destEntity, destSlot.index)) {\r\n                        // Handover successful, clear slot\r\n                        if (!this.root.app.settings.getAllSettings().simplifiedBelts) {\r\n                            targetAcceptorComp.onItemAccepted(\r\n                                destSlot.index,\r\n                                destSlot.acceptedDirection,\r\n                                item\r\n                            );\r\n                        }\r\n                        sourceSlot.item = null;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {BaseItem} item\r\n     * @param {Entity} receiver\r\n     * @param {number} slotIndex\r\n     */\r\n    tryPassOverItem(item, receiver, slotIndex) {\r\n        // Try figuring out how what to do with the item\r\n        // @TODO: Kinda hacky. How to solve this properly? Don't want to go through inheritance hell.\r\n\r\n        for (const compId in ItemEjectorSystem.tryPassOverItemComponents) {\r\n            if (!ItemEjectorSystem.tryPassOverItemComponents.hasOwnProperty(compId)) continue;\r\n            if (!receiver.components[compId]) continue;\r\n\r\n            return ItemEjectorSystem.tryPassOverItemComponents[compId](\r\n                receiver.components[compId],\r\n                item,\r\n                receiver,\r\n                slotIndex,\r\n                this\r\n            );\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_ForegroundDynamicLayer(parameters, chunk) {\r\n        if (this.root.app.settings.getAllSettings().simplifiedBelts) {\r\n            // Disabled in potato mode\r\n            return;\r\n        }\r\n\r\n        const contents = chunk.containedEntitiesByLayer.regular;\r\n\r\n        for (let i = 0; i < contents.length; ++i) {\r\n            const entity = contents[i];\r\n            const ejectorComp = entity.components.ItemEjector;\r\n            if (!ejectorComp) {\r\n                continue;\r\n            }\r\n\r\n            const staticComp = entity.components.StaticMapEntity;\r\n\r\n            for (let i = 0; i < ejectorComp.slots.length; ++i) {\r\n                const slot = ejectorComp.slots[i];\r\n                const ejectedItem = slot.item;\r\n\r\n                if (!ejectedItem) {\r\n                    // No item\r\n                    continue;\r\n                }\r\n\r\n                if (!ejectorComp.renderFloatingItems && !slot.cachedTargetEntity) {\r\n                    // Not connected to any building\r\n                    continue;\r\n                }\r\n\r\n                // Limit the progress to the maximum available space on the next belt (also see #1000)\r\n                let progress = slot.progress;\r\n                const nextBeltPath = slot.cachedBeltPath;\r\n                if (nextBeltPath) {\r\n                    /*\r\n                    If you imagine the track between the center of the building and the center of the first belt as\r\n                    a range from 0 to 1:\r\n\r\n                           Building              Belt\r\n                    |         X         |         X         |\r\n                    |         0...................1         |\r\n\r\n                    And for example the first item on belt has a distance of 0.4 to the beginning of the belt:\r\n\r\n                           Building              Belt\r\n                    |         X         |         X         |\r\n                    |         0...................1         |\r\n                                               ^ item\r\n\r\n                    Then the space towards this first item is always 0.5 (the distance from the center of the building to the beginning of the belt)\r\n                    PLUS the spacing to the item, so in this case 0.5 + 0.4 = 0.9:\r\n\r\n                    Building              Belt\r\n                    |         X         |         X         |\r\n                    |         0...................1         |\r\n                                               ^ item @ 0.9\r\n\r\n                    Since items must not get clashed, we need to substract some spacing (lets assume it is 0.6, exact value see globalConfig.itemSpacingOnBelts),\r\n                    So we do 0.9 - globalConfig.itemSpacingOnBelts = 0.3\r\n\r\n                    Building              Belt\r\n                    |         X         |         X         |\r\n                    |         0...................1         |\r\n                                    ^           ^ item @ 0.9\r\n                                    ^ max progress = 0.3\r\n\r\n                    Because now our range actually only goes to the end of the building, and not towards the center of the building, we need to multiply\r\n                    all values by 2:\r\n\r\n                    Building              Belt\r\n                    |         X         |         X         |\r\n                    |         0.........1.........2         |\r\n                                    ^           ^ item @ 1.8\r\n                                    ^ max progress = 0.6\r\n\r\n                    And that's it! If you summarize the calculations from above into a formula, you get the one below.\r\n                    */\r\n\r\n                    const maxProgress =\r\n                        (0.5 + nextBeltPath.spacingToFirstItem - globalConfig.itemSpacingOnBelts) * 2;\r\n                    progress = Math.min(maxProgress, progress);\r\n                }\r\n\r\n                // Skip if the item would barely be visible\r\n                if (progress < 0.05) {\r\n                    continue;\r\n                }\r\n\r\n                const realPosition = staticComp.localTileToWorld(slot.pos);\r\n                if (!chunk.tileSpaceRectangle.containsPoint(realPosition.x, realPosition.y)) {\r\n                    // Not within this chunk\r\n                    continue;\r\n                }\r\n\r\n                const realDirection = staticComp.localDirectionToWorld(slot.direction);\r\n                const realDirectionVector = enumDirectionToVector[realDirection];\r\n\r\n                const tileX = realPosition.x + 0.5 + realDirectionVector.x * 0.5 * progress;\r\n                const tileY = realPosition.y + 0.5 + realDirectionVector.y * 0.5 * progress;\r\n\r\n                const worldX = tileX * globalConfig.tileSize;\r\n                const worldY = tileY * globalConfig.tileSize;\r\n\r\n                ejectedItem.drawItemCenteredClipped(\r\n                    worldX,\r\n                    worldY,\r\n                    parameters,\r\n                    globalConfig.defaultItemDiameter\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nItemEjectorSystem.tryPassOverItemComponents = {\r\n    Belt: (comp, item, receiver, slotIndex, itemEjector) => {\r\n        const path = comp.assignedPath;\r\n        assert(path, \"belt has no path\");\r\n        if (path.tryAcceptItem(item)) {\r\n            return true;\r\n        }\r\n        // Belt can have nothing else\r\n        return false;\r\n    },\r\n\r\n    ItemProcessor: (comp, item, receiver, slotIndex, itemEjector) => {\r\n        // Check for potential filters\r\n        if (!itemEjector.root.systemMgr.systems.itemProcessor.checkRequirements(receiver, item, slotIndex)) {\r\n            return false;\r\n        }\r\n\r\n        // Its an item processor ..\r\n        if (comp.tryTakeItem(item, slotIndex)) {\r\n            return true;\r\n        }\r\n        // Item processor can have nothing else\r\n        return false;\r\n    },\r\n\r\n    UndergroundBelt: (comp, item, receiver, slotIndex, itemEjector) => {\r\n        // Its an underground belt. yay.\r\n        if (comp.tryAcceptExternalItem(item, itemEjector.root.hubGoals.getUndergroundBeltBaseSpeed())) {\r\n            return true;\r\n        }\r\n\r\n        // Underground belt can have nothing else\r\n        return false;\r\n    },\r\n\r\n    Storage: (comp, item, receiver, slotIndex, itemEjector) => {\r\n        // It's a storage\r\n        if (comp.canAcceptItem(item)) {\r\n            comp.takeItem(item);\r\n            return true;\r\n        }\r\n\r\n        // Storage can't have anything else\r\n        return false;\r\n    },\r\n\r\n    Filter: (comp, item, receiver, slotIndex, itemEjector) => {\r\n        // It's a filter! Unfortunately the filter has to know a lot about it's\r\n        // surrounding state and components, so it can't be within the component itself.\r\n        if (itemEjector.root.systemMgr.systems.filter.tryAcceptItem(receiver, slotIndex, item)) {\r\n            return true;\r\n        }\r\n    },\r\n};\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/item_ejector.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3087,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/systems/item_ejector.js",
    "static": true,
    "longname": "js/game/systems/item_ejector.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/systems/item_ejector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3088,
    "kind": "class",
    "name": "ItemEjectorSystem",
    "memberof": "js/game/systems/item_ejector.js",
    "static": true,
    "longname": "js/game/systems/item_ejector.js~ItemEjectorSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/item_ejector.js",
    "importStyle": "{ItemEjectorSystem}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3089,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/item_ejector.js~ItemEjectorSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_ejector.js~ItemEjectorSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 3090,
    "kind": "member",
    "name": "staleAreaDetector",
    "memberof": "js/game/systems/item_ejector.js~ItemEjectorSystem",
    "static": false,
    "longname": "js/game/systems/item_ejector.js~ItemEjectorSystem#staleAreaDetector",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3091,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/item_ejector.js~ItemEjectorSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/item_ejector.js~ItemEjectorSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3092,
    "kind": "method",
    "name": "recomputeArea",
    "memberof": "js/game/systems/item_ejector.js~ItemEjectorSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_ejector.js~ItemEjectorSystem#recomputeArea",
    "access": "public",
    "description": "Recomputes an area after it changed",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "Rectangle"
        ],
        "spread": false,
        "optional": false,
        "name": "area",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3093,
    "kind": "method",
    "name": "recomputeCacheFull",
    "memberof": "js/game/systems/item_ejector.js~ItemEjectorSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_ejector.js~ItemEjectorSystem#recomputeCacheFull",
    "access": "public",
    "description": "Recomputes the whole cache after the game has loaded",
    "lineNumber": 65,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3094,
    "kind": "method",
    "name": "recomputeSingleEntityCache",
    "memberof": "js/game/systems/item_ejector.js~ItemEjectorSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_ejector.js~ItemEjectorSystem#recomputeSingleEntityCache",
    "access": "public",
    "description": "",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3095,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/item_ejector.js~ItemEjectorSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_ejector.js~ItemEjectorSystem#update",
    "access": "public",
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3096,
    "kind": "method",
    "name": "tryPassOverItem",
    "memberof": "js/game/systems/item_ejector.js~ItemEjectorSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_ejector.js~ItemEjectorSystem#tryPassOverItem",
    "access": "public",
    "description": "",
    "lineNumber": 230,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "receiver",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "slotIndex",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3097,
    "kind": "method",
    "name": "drawChunk_ForegroundDynamicLayer",
    "memberof": "js/game/systems/item_ejector.js~ItemEjectorSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_ejector.js~ItemEjectorSystem#drawChunk_ForegroundDynamicLayer",
    "access": "public",
    "description": "",
    "lineNumber": 254,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3098,
    "kind": "file",
    "name": "js/game/systems/item_processor.js",
    "content": "// @ts-nocheck\r\nimport { BaseItem } from \"../base_item\";\r\nimport { enumColorMixingResults, enumColors } from \"../colors\";\r\nimport {\r\n    enumItemProcessorRequirements,\r\n    enumItemProcessorTypes,\r\n    ItemProcessorComponent,\r\n} from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { BOOL_TRUE_SINGLETON, isTruthyItem } from \"../items/boolean_item\";\r\nimport { ColorItem } from \"../items/color_item\";\r\nimport { ShapeItem } from \"../items/shape_item\";\r\n\r\n/**\r\n * We need to allow queuing charges, otherwise the throughput will stall\r\n */\r\nconst MAX_QUEUED_CHARGES = 2;\r\n\r\n/**\r\n * Whole data for a produced item\r\n *\r\n * @typedef {{\r\n *   item: BaseItem,\r\n *   preferredSlot?: number,\r\n *   requiredSlot?: number,\r\n *   doNotTrack?: boolean\r\n * }} ProducedItem\r\n */\r\n\r\n/**\r\n * Type of a processor implementation\r\n * @typedef {{\r\n *   entity: Entity,\r\n *   items: Array<{ item: BaseItem, sourceSlot: number }>,\r\n *   itemsBySlot: Object<number, BaseItem>,\r\n *   outItems: Array<ProducedItem>\r\n *   }} ProcessorImplementationPayload\r\n */\r\n\r\nexport class ItemProcessorSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [ItemProcessorComponent]);\r\n\r\n        /**\r\n         * @type {Object<enumItemProcessorTypes, function(ProcessorImplementationPayload) : string>}\r\n         */\r\n        this.handlers = {\r\n            [enumItemProcessorTypes.balancer]: this.process_BALANCER,\r\n            [enumItemProcessorTypes.cutter]: this.process_CUTTER,\r\n            [enumItemProcessorTypes.cutterQuad]: this.process_CUTTER_QUAD,\r\n            [enumItemProcessorTypes.rotater]: this.process_ROTATER,\r\n            [enumItemProcessorTypes.rotaterCCW]: this.process_ROTATER_CCW,\r\n            [enumItemProcessorTypes.rotater180]: this.process_ROTATER_180,\r\n            [enumItemProcessorTypes.stacker]: this.process_STACKER,\r\n            [enumItemProcessorTypes.trash]: this.process_TRASH,\r\n            [enumItemProcessorTypes.mixer]: this.process_MIXER,\r\n            [enumItemProcessorTypes.painter]: this.process_PAINTER,\r\n            [enumItemProcessorTypes.painterDouble]: this.process_PAINTER_DOUBLE,\r\n            [enumItemProcessorTypes.painterQuad]: this.process_PAINTER_QUAD,\r\n            [enumItemProcessorTypes.hub]: this.process_HUB,\r\n            [enumItemProcessorTypes.reader]: this.process_READER,\r\n        };\r\n\r\n        // Bind all handlers\r\n        for (const key in this.handlers) {\r\n            this.handlers[key] = this.handlers[key].bind(this);\r\n        }\r\n    }\r\n\r\n    static getId() {\r\n        return \"itemProcessor\";\r\n    }\r\n\r\n    update() {\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n\r\n            const processorComp = entity.components.ItemProcessor;\r\n            const ejectorComp = entity.components.ItemEjector;\r\n\r\n            const currentCharge = processorComp.ongoingCharges[0];\r\n\r\n            if (currentCharge) {\r\n                // Process next charge\r\n                if (currentCharge.remainingTime > 0.0) {\r\n                    currentCharge.remainingTime -= this.root.dynamicTickrate.deltaSeconds;\r\n                    if (currentCharge.remainingTime < 0.0) {\r\n                        // Add bonus time, this is the time we spent too much\r\n                        processorComp.bonusTime += -currentCharge.remainingTime;\r\n                    }\r\n                }\r\n\r\n                // Check if it finished\r\n                if (currentCharge.remainingTime <= 0.0) {\r\n                    const itemsToEject = currentCharge.items;\r\n\r\n                    // Go over all items and try to eject them\r\n                    for (let j = 0; j < itemsToEject.length; ++j) {\r\n                        const { item, requiredSlot, preferredSlot } = itemsToEject[j];\r\n\r\n                        assert(ejectorComp, \"To eject items, the building needs to have an ejector\");\r\n\r\n                        let slot = null;\r\n                        if (requiredSlot !== null && requiredSlot !== undefined) {\r\n                            // We have a slot override, check if that is free\r\n                            if (ejectorComp.canEjectOnSlot(requiredSlot)) {\r\n                                slot = requiredSlot;\r\n                            }\r\n                        } else if (preferredSlot !== null && preferredSlot !== undefined) {\r\n                            // We have a slot preference, try using it but otherwise use a free slot\r\n                            if (ejectorComp.canEjectOnSlot(preferredSlot)) {\r\n                                slot = preferredSlot;\r\n                            } else {\r\n                                slot = ejectorComp.getFirstFreeSlot();\r\n                            }\r\n                        } else {\r\n                            // We can eject on any slot\r\n                            slot = ejectorComp.getFirstFreeSlot();\r\n                        }\r\n\r\n                        if (slot !== null) {\r\n                            // Alright, we can actually eject\r\n                            if (!ejectorComp.tryEject(slot, item)) {\r\n                                assert(false, \"Failed to eject\");\r\n                            } else {\r\n                                itemsToEject.splice(j, 1);\r\n                                j -= 1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // If the charge was entirely emptied to the outputs, start the next charge\r\n                    if (itemsToEject.length === 0) {\r\n                        processorComp.ongoingCharges.shift();\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check if we have an empty queue and can start a new charge\r\n            if (processorComp.ongoingCharges.length < MAX_QUEUED_CHARGES) {\r\n                if (this.canProcess(entity)) {\r\n                    this.startNewCharge(entity);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if the entity should accept the given item on the given slot.\r\n     * This should only be called with matching items! I.e. if a color item is expected\r\n     * on the given slot, then only a color item must be passed.\r\n     * @param {Entity} entity\r\n     * @param {BaseItem} item The item to accept\r\n     * @param {number} slotIndex The slot index\r\n     * @returns {boolean}\r\n     */\r\n    checkRequirements(entity, item, slotIndex) {\r\n        const itemProcessorComp = entity.components.ItemProcessor;\r\n        const pinsComp = entity.components.WiredPins;\r\n\r\n        switch (itemProcessorComp.processingRequirement) {\r\n            case enumItemProcessorRequirements.painterQuad:\r\n                {\r\n                    if (slotIndex === 0) {\r\n                        // Always accept the shape\r\n                        return true;\r\n                    }\r\n\r\n                    // Check the network value at the given slot\r\n                    const network = pinsComp.slots[slotIndex - 1].linkedNetwork;\r\n                    const slotIsEnabled = network && network.hasValue() && isTruthyItem(network.currentValue);\r\n                    if (!slotIsEnabled) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                // By default, everything is accepted\r\n            default:\r\n                return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks whether it's possible to process something\r\n     * @param {Entity} entity\r\n     */\r\n    canProcess(entity) {\r\n        const processorComp = entity.components.ItemProcessor;\r\n\r\n        switch (processorComp.processingRequirement) {\r\n            // DEFAULT\r\n            // By default, we can start processing once all inputs are there\r\n            case null:\r\n                {\r\n                    return processorComp.inputSlots.length >= processorComp.inputsPerCharge;\r\n                }\r\n\r\n                // QUAD PAINTER\r\n                // For the quad painter, it might be possible to start processing earlier\r\n            case enumItemProcessorRequirements.painterQuad:\r\n                {\r\n                    const pinsComp = entity.components.WiredPins;\r\n\r\n                    /** @type {Object.<number, { item: BaseItem, sourceSlot: number }>} */\r\n                    const itemsBySlot = {};\r\n                    for (let i = 0; i < processorComp.inputSlots.length; ++i) {\r\n                        itemsBySlot[processorComp.inputSlots[i].sourceSlot] = processorComp.inputSlots[i];\r\n                    }\r\n\r\n                    // First slot is the shape, so if it's not there we can't do anything\r\n                    if (!itemsBySlot[0]) {\r\n                        return false;\r\n                    }\r\n\r\n                    const shapeItem = /** @type {ShapeItem} */ (itemsBySlot[0].item);\r\n                    const slotStatus = [];\r\n\r\n                    // Check which slots are enabled\r\n                    for (let i = 0; i < 4; ++i) {\r\n                        // Extract the network value on the Nth pin\r\n                        const network = pinsComp.slots[i].linkedNetwork;\r\n                        const networkValue = network && network.hasValue() ? network.currentValue : null;\r\n\r\n                        // If there is no \"1\" on that slot, don't paint there\r\n                        if (!isTruthyItem(networkValue)) {\r\n                            slotStatus.push(false);\r\n                            continue;\r\n                        }\r\n\r\n                        slotStatus.push(true);\r\n                    }\r\n\r\n                    // All slots are disabled\r\n                    if (!slotStatus.includes(true)) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Check if all colors of the enabled slots are there\r\n                    for (let i = 0; i < slotStatus.length; ++i) {\r\n                        if (slotStatus[i] && !itemsBySlot[1 + i]) {\r\n                            // A slot which is enabled wasn't enabled. Make sure if there is anything on the quadrant,\r\n                            // it is not possible to paint, but if there is nothing we can ignore it\r\n                            for (let j = 0; j < 4; ++j) {\r\n                                const layer = shapeItem.definition.layers[j];\r\n                                if (layer && layer[i]) {\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n\r\n            default:\r\n                assertAlways(false, \"Unknown requirement for \" + processorComp.processingRequirement);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts a new charge for the entity\r\n     * @param {Entity} entity\r\n     */\r\n    startNewCharge(entity) {\r\n        const processorComp = entity.components.ItemProcessor;\r\n\r\n        // First, take items\r\n        const items = processorComp.inputSlots;\r\n        processorComp.inputSlots = [];\r\n\r\n        /** @type {Object<string, BaseItem>} */\r\n        const itemsBySlot = {};\r\n        for (let i = 0; i < items.length; ++i) {\r\n            itemsBySlot[items[i].sourceSlot] = items[i].item;\r\n        }\r\n\r\n        /** @type {Array<ProducedItem>} */\r\n        const outItems = [];\r\n\r\n        /** @type {function(payload: ProcessorImplementationPayload) : void} */\r\n        const handler = this.handlers[processorComp.type];\r\n        assert(handler, \"No handler for processor type defined: \" + processorComp.type);\r\n\r\n        // Call implementation\r\n        handler({\r\n            entity,\r\n            items,\r\n            itemsBySlot,\r\n            outItems,\r\n        });\r\n\r\n        // Track produced items\r\n        for (let i = 0; i < outItems.length; ++i) {\r\n            if (!outItems[i].doNotTrack) {\r\n                this.root.signals.itemProduced.dispatch(outItems[i].item);\r\n            }\r\n        }\r\n\r\n        // Queue Charge\r\n        const baseSpeed = this.root.hubGoals.getProcessorBaseSpeed(processorComp.type);\r\n        const originalTime = 1 / baseSpeed;\r\n\r\n        const bonusTimeToApply = Math.min(originalTime, processorComp.bonusTime);\r\n        const timeToProcess = originalTime - bonusTimeToApply;\r\n\r\n        processorComp.bonusTime -= bonusTimeToApply;\r\n        processorComp.ongoingCharges.push({\r\n            items: outItems,\r\n            remainingTime: timeToProcess,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_BALANCER(payload) {\r\n        assert(\r\n            payload.entity.components.ItemEjector,\r\n            \"To be a balancer, the building needs to have an ejector\"\r\n        );\r\n        const availableSlots = payload.entity.components.ItemEjector.slots.length;\r\n        const processorComp = payload.entity.components.ItemProcessor;\r\n\r\n        const nextSlot = processorComp.nextOutputSlot++ % availableSlots;\r\n\r\n        for (let i = 0; i < payload.items.length; ++i) {\r\n            payload.outItems.push({\r\n                item: payload.items[i].item,\r\n                preferredSlot: (nextSlot + i) % availableSlots,\r\n                doNotTrack: true,\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_CUTTER(payload) {\r\n        const inputItem = /** @type {ShapeItem} */ (payload.items[0].item);\r\n        assert(inputItem instanceof ShapeItem, \"Input for cut is not a shape\");\r\n        const inputDefinition = inputItem.definition;\r\n\r\n        const cutDefinitions = this.root.shapeDefinitionMgr.shapeActionCutHalf(inputDefinition);\r\n\r\n        for (let i = 0; i < cutDefinitions.length; ++i) {\r\n            const definition = cutDefinitions[i];\r\n            if (!definition.isEntirelyEmpty()) {\r\n                payload.outItems.push({\r\n                    item: this.root.shapeDefinitionMgr.getShapeItemFromDefinition(definition),\r\n                    requiredSlot: i,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_CUTTER_QUAD(payload) {\r\n        const inputItem = /** @type {ShapeItem} */ (payload.items[0].item);\r\n        assert(inputItem instanceof ShapeItem, \"Input for cut is not a shape\");\r\n        const inputDefinition = inputItem.definition;\r\n\r\n        const cutDefinitions = this.root.shapeDefinitionMgr.shapeActionCutQuad(inputDefinition);\r\n\r\n        for (let i = 0; i < cutDefinitions.length; ++i) {\r\n            const definition = cutDefinitions[i];\r\n            if (!definition.isEntirelyEmpty()) {\r\n                payload.outItems.push({\r\n                    item: this.root.shapeDefinitionMgr.getShapeItemFromDefinition(definition),\r\n                    requiredSlot: i,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_ROTATER(payload) {\r\n        const inputItem = /** @type {ShapeItem} */ (payload.items[0].item);\r\n        assert(inputItem instanceof ShapeItem, \"Input for rotation is not a shape\");\r\n        const inputDefinition = inputItem.definition;\r\n\r\n        const rotatedDefinition = this.root.shapeDefinitionMgr.shapeActionRotateCW(inputDefinition);\r\n        payload.outItems.push({\r\n            item: this.root.shapeDefinitionMgr.getShapeItemFromDefinition(rotatedDefinition),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_ROTATER_CCW(payload) {\r\n        const inputItem = /** @type {ShapeItem} */ (payload.items[0].item);\r\n        assert(inputItem instanceof ShapeItem, \"Input for rotation is not a shape\");\r\n        const inputDefinition = inputItem.definition;\r\n\r\n        const rotatedDefinition = this.root.shapeDefinitionMgr.shapeActionRotateCCW(inputDefinition);\r\n        payload.outItems.push({\r\n            item: this.root.shapeDefinitionMgr.getShapeItemFromDefinition(rotatedDefinition),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_ROTATER_180(payload) {\r\n        const inputItem = /** @type {ShapeItem} */ (payload.items[0].item);\r\n        assert(inputItem instanceof ShapeItem, \"Input for rotation is not a shape\");\r\n        const inputDefinition = inputItem.definition;\r\n\r\n        const rotatedDefinition = this.root.shapeDefinitionMgr.shapeActionRotate180(inputDefinition);\r\n        payload.outItems.push({\r\n            item: this.root.shapeDefinitionMgr.getShapeItemFromDefinition(rotatedDefinition),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_STACKER(payload) {\r\n        const lowerItem = /** @type {ShapeItem} */ (payload.itemsBySlot[0]);\r\n        const upperItem = /** @type {ShapeItem} */ (payload.itemsBySlot[1]);\r\n\r\n        assert(lowerItem instanceof ShapeItem, \"Input for lower stack is not a shape\");\r\n        assert(upperItem instanceof ShapeItem, \"Input for upper stack is not a shape\");\r\n\r\n        const stackedDefinition = this.root.shapeDefinitionMgr.shapeActionStack(\r\n            lowerItem.definition,\r\n            upperItem.definition\r\n        );\r\n        payload.outItems.push({\r\n            item: this.root.shapeDefinitionMgr.getShapeItemFromDefinition(stackedDefinition),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_TRASH(payload) {\r\n        // Do nothing ..\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_MIXER(payload) {\r\n        // Find both colors and combine them\r\n        const item1 = /** @type {ColorItem} */ (payload.items[0].item);\r\n        const item2 = /** @type {ColorItem} */ (payload.items[1].item);\r\n        assert(item1 instanceof ColorItem, \"Input for color mixer is not a color\");\r\n        assert(item2 instanceof ColorItem, \"Input for color mixer is not a color\");\r\n\r\n        const color1 = item1.color;\r\n        const color2 = item2.color;\r\n\r\n        // Try finding mixer color, and if we can't mix it we simply return the same color\r\n        const mixedColor = enumColorMixingResults[color1][color2];\r\n        let resultColor = color1;\r\n        if (mixedColor) {\r\n            resultColor = mixedColor;\r\n        }\r\n        payload.outItems.push({\r\n            item: ColorItem.ITEM_SINGLETONS[resultColor],\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_PAINTER(payload) {\r\n        const shapeItem = /** @type {ShapeItem} */ (payload.itemsBySlot[0]);\r\n        const colorItem = /** @type {ColorItem} */ (payload.itemsBySlot[1]);\r\n\r\n        const colorizedDefinition = this.root.shapeDefinitionMgr.shapeActionPaintWith(\r\n            shapeItem.definition,\r\n            colorItem.color\r\n        );\r\n\r\n        payload.outItems.push({\r\n            item: this.root.shapeDefinitionMgr.getShapeItemFromDefinition(colorizedDefinition),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_PAINTER_DOUBLE(payload) {\r\n        const shapeItem1 = /** @type {ShapeItem} */ (payload.itemsBySlot[0]);\r\n        const shapeItem2 = /** @type {ShapeItem} */ (payload.itemsBySlot[1]);\r\n        const colorItem = /** @type {ColorItem} */ (payload.itemsBySlot[2]);\r\n\r\n        assert(shapeItem1 instanceof ShapeItem, \"Input for painter is not a shape\");\r\n        assert(shapeItem2 instanceof ShapeItem, \"Input for painter is not a shape\");\r\n        assert(colorItem instanceof ColorItem, \"Input for painter is not a color\");\r\n\r\n        const colorizedDefinition1 = this.root.shapeDefinitionMgr.shapeActionPaintWith(\r\n            shapeItem1.definition,\r\n            colorItem.color\r\n        );\r\n\r\n        const colorizedDefinition2 = this.root.shapeDefinitionMgr.shapeActionPaintWith(\r\n            shapeItem2.definition,\r\n            colorItem.color\r\n        );\r\n        payload.outItems.push({\r\n            item: this.root.shapeDefinitionMgr.getShapeItemFromDefinition(colorizedDefinition1),\r\n        });\r\n\r\n        payload.outItems.push({\r\n            item: this.root.shapeDefinitionMgr.getShapeItemFromDefinition(colorizedDefinition2),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_PAINTER_QUAD(payload) {\r\n        const shapeItem = /** @type {ShapeItem} */ (payload.itemsBySlot[0]);\r\n        assert(shapeItem instanceof ShapeItem, \"Input for painter is not a shape\");\r\n\r\n        /** @type {Array<enumColors>} */\r\n        const colors = [null, null, null, null];\r\n        for (let i = 0; i < 4; ++i) {\r\n            if (payload.itemsBySlot[i + 1]) {\r\n                colors[i] = /** @type {ColorItem} */ (payload.itemsBySlot[i + 1]).color;\r\n            }\r\n        }\r\n\r\n        const colorizedDefinition = this.root.shapeDefinitionMgr.shapeActionPaintWith4Colors(\r\n            shapeItem.definition,\r\n            /** @type {[string, string, string, string]} */\r\n            (colors)\r\n        );\r\n\r\n        payload.outItems.push({\r\n            item: this.root.shapeDefinitionMgr.getShapeItemFromDefinition(colorizedDefinition),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_READER(payload) {\r\n        // Pass through the item\r\n        const item = payload.itemsBySlot[0];\r\n        payload.outItems.push({\r\n            item,\r\n            doNotTrack: true,\r\n        });\r\n\r\n        // Track the item\r\n        const readerComp = payload.entity.components.BeltReader;\r\n        readerComp.lastItemTimes.push(this.root.time.now());\r\n        readerComp.lastItem = item;\r\n    }\r\n\r\n    /**\r\n     * @param {ProcessorImplementationPayload} payload\r\n     */\r\n    process_HUB(payload) {\r\n        const hubComponent = payload.entity.components.Hub;\r\n        assert(hubComponent, \"Hub item processor has no hub component\");\r\n\r\n        for (let i = 0; i < payload.items.length; ++i) {\r\n            const item = /** @type {ShapeItem} */ (payload.items[i].item);\r\n            this.root.hubGoals.handleDefinitionDelivered(item.definition);\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/item_processor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3099,
    "kind": "variable",
    "name": "MAX_QUEUED_CHARGES",
    "memberof": "js/game/systems/item_processor.js",
    "static": true,
    "longname": "js/game/systems/item_processor.js~MAX_QUEUED_CHARGES",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/systems/item_processor.js",
    "importStyle": null,
    "description": "We need to allow queuing charges, otherwise the throughput will stall",
    "lineNumber": 18,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3100,
    "kind": "typedef",
    "name": "ProducedItem",
    "memberof": "js/game/systems/item_processor.js",
    "static": true,
    "longname": "js/game/systems/item_processor.js~ProducedItem",
    "access": "public",
    "description": "Whole data for a produced item",
    "type": {
      "types": [
        "{\n  item: BaseItem,\n  preferredSlot?: number,\n  requiredSlot?: number,\n  doNotTrack?: boolean\n}"
      ],
      "optional": false,
      "name": "ProducedItem"
    }
  },
  {
    "__docId__": 3101,
    "kind": "typedef",
    "name": "ProcessorImplementationPayload",
    "memberof": "js/game/systems/item_processor.js",
    "static": true,
    "longname": "js/game/systems/item_processor.js~ProcessorImplementationPayload",
    "access": "public",
    "description": "Type of a processor implementation",
    "lineNumber": 41,
    "type": {
      "types": [
        "{\n  entity: Entity,\n  items: Array<{ item: BaseItem, sourceSlot: number }>,\n  itemsBySlot: Object<number, BaseItem>,\n  outItems: Array<ProducedItem>\n  }"
      ],
      "optional": false,
      "name": "ProcessorImplementationPayload"
    }
  },
  {
    "__docId__": 3102,
    "kind": "file",
    "name": "js/game/systems/item_processor_overlays.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { round1DigitLocalized, smoothPulse } from \"../../core/utils\";\r\nimport { enumItemProcessorRequirements, enumItemProcessorTypes } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystem } from \"../game_system\";\r\nimport { isTruthyItem } from \"../items/boolean_item\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\n\r\nexport class ItemProcessorOverlaysSystem extends GameSystem {\r\n    constructor(root) {\r\n        super(root);\r\n\r\n        this.spriteDisabled = Loader.getSprite(\"sprites/misc/processor_disabled.png\");\r\n        this.spriteDisconnected = Loader.getSprite(\"sprites/misc/processor_disconnected.png\");\r\n\r\n        this.readerOverlaySprite = Loader.getSprite(\"sprites/misc/reader_overlay.png\");\r\n\r\n        this.drawnUids = new Set();\r\n        this.root.signals.gameFrameStarted.add(this.clearDrawnUids, this);\r\n    }\r\n\r\n    static getId() {\r\n        return \"itemProcessorOverlays\";\r\n    }\r\n\r\n    clearDrawnUids() {\r\n        this.drawnUids.clear();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {import(\"../../core/draw_utils\").DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_ForegroundStaticLayer(parameters, chunk) {\r\n        const contents = chunk.containedEntitiesByLayer.regular;\r\n        for (let i = 0; i < contents.length; ++i) {\r\n            const entity = contents[i];\r\n            const processorComp = entity.components.ItemProcessor;\r\n            const filterComp = entity.components.Filter;\r\n\r\n            // Draw processor overlays\r\n            if (processorComp) {\r\n                const requirement = processorComp.processingRequirement;\r\n                if (!requirement && processorComp.type !== enumItemProcessorTypes.reader) {\r\n                    continue;\r\n                }\r\n\r\n                if (this.drawnUids.has(entity.uid)) {\r\n                    continue;\r\n                }\r\n                this.drawnUids.add(entity.uid);\r\n\r\n                switch (requirement) {\r\n                    case enumItemProcessorRequirements.painterQuad:\r\n                        {\r\n                            this.drawConnectedSlotRequirement(parameters, entity, { drawIfFalse: true });\r\n                            break;\r\n                        }\r\n                }\r\n\r\n                if (processorComp.type === enumItemProcessorTypes.reader) {\r\n                    this.drawReaderOverlays(parameters, entity);\r\n                }\r\n            }\r\n\r\n            // Draw filter overlays\r\n            else if (filterComp) {\r\n                if (this.drawnUids.has(entity.uid)) {\r\n                    continue;\r\n                }\r\n                this.drawnUids.add(entity.uid);\r\n\r\n                this.drawConnectedSlotRequirement(parameters, entity, { drawIfFalse: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {import(\"../../core/draw_utils\").DrawParameters} parameters\r\n     * @param {Entity} entity\r\n     */\r\n    drawReaderOverlays(parameters, entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const readerComp = entity.components.BeltReader;\r\n\r\n        this.readerOverlaySprite.drawCachedCentered(\r\n            parameters,\r\n            (staticComp.origin.x + 0.5) * globalConfig.tileSize,\r\n            (staticComp.origin.y + 0.5) * globalConfig.tileSize,\r\n            globalConfig.tileSize\r\n        );\r\n\r\n        parameters.context.fillStyle = \"#333439\";\r\n        parameters.context.textAlign = \"center\";\r\n        parameters.context.font = \"bold 10px GameFont\";\r\n        parameters.context.fillText(\r\n            round1DigitLocalized(readerComp.lastThroughput),\r\n            (staticComp.origin.x + 0.5) * globalConfig.tileSize,\r\n            (staticComp.origin.y + 0.62) * globalConfig.tileSize\r\n        );\r\n\r\n        parameters.context.textAlign = \"left\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {import(\"../../core/draw_utils\").DrawParameters} parameters\r\n     * @param {Entity} entity\r\n     * @param {object} param0\r\n     * @param {boolean=} param0.drawIfFalse\r\n     */\r\n    drawConnectedSlotRequirement(parameters, entity, { drawIfFalse = true }) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const pinsComp = entity.components.WiredPins;\r\n\r\n        let anySlotConnected = false;\r\n\r\n        // Check if any slot has a value\r\n        for (let i = 0; i < pinsComp.slots.length; ++i) {\r\n            const slot = pinsComp.slots[i];\r\n            const network = slot.linkedNetwork;\r\n            if (network && network.hasValue()) {\r\n                anySlotConnected = true;\r\n\r\n                if (isTruthyItem(network.currentValue) || !drawIfFalse) {\r\n                    // No need to draw anything\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        const pulse = smoothPulse(this.root.time.now());\r\n        parameters.context.globalAlpha = 0.6 + 0.4 * pulse;\r\n        const sprite = anySlotConnected ? this.spriteDisabled : this.spriteDisconnected;\r\n        sprite.drawCachedCentered(\r\n            parameters,\r\n            (staticComp.origin.x + 0.5) * globalConfig.tileSize,\r\n            (staticComp.origin.y + 0.5) * globalConfig.tileSize,\r\n            globalConfig.tileSize * (0.7 + 0.2 * pulse)\r\n        );\r\n\r\n        parameters.context.globalAlpha = 1;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/item_processor_overlays.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3103,
    "kind": "class",
    "name": "ItemProcessorOverlaysSystem",
    "memberof": "js/game/systems/item_processor_overlays.js",
    "static": true,
    "longname": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/item_processor_overlays.js",
    "importStyle": "{ItemProcessorOverlaysSystem}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system.js~GameSystem"
    ]
  },
  {
    "__docId__": 3104,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 3105,
    "kind": "member",
    "name": "spriteDisabled",
    "memberof": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem",
    "static": false,
    "longname": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem#spriteDisabled",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3106,
    "kind": "member",
    "name": "spriteDisconnected",
    "memberof": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem",
    "static": false,
    "longname": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem#spriteDisconnected",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3107,
    "kind": "member",
    "name": "readerOverlaySprite",
    "memberof": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem",
    "static": false,
    "longname": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem#readerOverlaySprite",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3108,
    "kind": "member",
    "name": "drawnUids",
    "memberof": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem",
    "static": false,
    "longname": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem#drawnUids",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3109,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3110,
    "kind": "method",
    "name": "clearDrawnUids",
    "memberof": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem#clearDrawnUids",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3111,
    "kind": "method",
    "name": "drawChunk_ForegroundStaticLayer",
    "memberof": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem#drawChunk_ForegroundStaticLayer",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../../core/draw_utils\").DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3112,
    "kind": "method",
    "name": "drawReaderOverlays",
    "memberof": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem#drawReaderOverlays",
    "access": "public",
    "description": "",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../../core/draw_utils\").DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3113,
    "kind": "method",
    "name": "drawConnectedSlotRequirement",
    "memberof": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_processor_overlays.js~ItemProcessorOverlaysSystem#drawConnectedSlotRequirement",
    "access": "public",
    "description": "",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../../core/draw_utils\").DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "param0.drawIfFalse",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3114,
    "kind": "file",
    "name": "js/game/systems/item_producer.js",
    "content": "import { ItemProducerComponent } from \"../components/item_producer\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\n\r\nexport class ItemProducerSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [ItemProducerComponent]);\r\n    }\r\n\r\n    static getId() {\r\n        return \"itemProducer\";\r\n    }\r\n\r\n    update() {\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            const pinsComp = entity.components.WiredPins;\r\n            const pin = pinsComp.slots[0];\r\n            const network = pin.linkedNetwork;\r\n\r\n            if (!network || !network.hasValue()) {\r\n                continue;\r\n            }\r\n\r\n            const ejectorComp = entity.components.ItemEjector;\r\n            ejectorComp.tryEject(0, network.currentValue);\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/item_producer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3115,
    "kind": "class",
    "name": "ItemProducerSystem",
    "memberof": "js/game/systems/item_producer.js",
    "static": true,
    "longname": "js/game/systems/item_producer.js~ItemProducerSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/item_producer.js",
    "importStyle": "{ItemProducerSystem}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3116,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/item_producer.js~ItemProducerSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_producer.js~ItemProducerSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 3117,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/item_producer.js~ItemProducerSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/item_producer.js~ItemProducerSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3118,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/item_producer.js~ItemProducerSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/item_producer.js~ItemProducerSystem#update",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3119,
    "kind": "file",
    "name": "js/game/systems/lever.js",
    "content": "import { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { LeverComponent } from \"../components/lever\";\r\nimport { BOOL_TRUE_SINGLETON, BOOL_FALSE_SINGLETON } from \"../items/boolean_item\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\nimport { globalConfig } from \"../../core/config\";\r\nimport { Loader } from \"../../core/loader\";\r\n\r\nexport class LeverSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [LeverComponent]);\r\n\r\n        this.spriteOn = Loader.getSprite(\"sprites/wires/lever_on.png\");\r\n        this.spriteOff = Loader.getSprite(\"sprites/buildings/lever.png\");\r\n    }\r\n\r\n    static getId() {\r\n        return \"lever\";\r\n    }\r\n\r\n    update() {\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n\r\n            const leverComp = entity.components.Lever;\r\n            const pinsComp = entity.components.WiredPins;\r\n\r\n            // Simply sync the status to the first slot\r\n            pinsComp.slots[0].value = leverComp.toggled ? BOOL_TRUE_SINGLETON : BOOL_FALSE_SINGLETON;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws a given chunk\r\n     * @param {import(\"../../core/draw_utils\").DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_ForegroundStaticLayer(parameters, chunk) {\r\n        const contents = chunk.containedEntitiesByLayer.regular;\r\n        for (let i = 0; i < contents.length; ++i) {\r\n            const entity = contents[i];\r\n            const leverComp = entity.components.Lever;\r\n            if (leverComp) {\r\n                const sprite = leverComp.toggled ? this.spriteOn : this.spriteOff;\r\n                entity.components.StaticMapEntity.drawSpriteOnBoundsClipped(parameters, sprite);\r\n            }\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/lever.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3120,
    "kind": "class",
    "name": "LeverSystem",
    "memberof": "js/game/systems/lever.js",
    "static": true,
    "longname": "js/game/systems/lever.js~LeverSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/lever.js",
    "importStyle": "{LeverSystem}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3121,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/lever.js~LeverSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/lever.js~LeverSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 3122,
    "kind": "member",
    "name": "spriteOn",
    "memberof": "js/game/systems/lever.js~LeverSystem",
    "static": false,
    "longname": "js/game/systems/lever.js~LeverSystem#spriteOn",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3123,
    "kind": "member",
    "name": "spriteOff",
    "memberof": "js/game/systems/lever.js~LeverSystem",
    "static": false,
    "longname": "js/game/systems/lever.js~LeverSystem#spriteOff",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3124,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/lever.js~LeverSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/lever.js~LeverSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3125,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/lever.js~LeverSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/lever.js~LeverSystem#update",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3126,
    "kind": "method",
    "name": "drawChunk_ForegroundStaticLayer",
    "memberof": "js/game/systems/lever.js~LeverSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/lever.js~LeverSystem#drawChunk_ForegroundStaticLayer",
    "access": "public",
    "description": "Draws a given chunk",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../../core/draw_utils\").DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3127,
    "kind": "file",
    "name": "js/game/systems/logic_gate.js",
    "content": "import { BaseItem } from \"../base_item\";\r\nimport { enumColors } from \"../colors\";\r\nimport { enumLogicGateType, LogicGateComponent } from \"../components/logic_gate\";\r\nimport { enumPinSlotType } from \"../components/wired_pins\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { BOOL_FALSE_SINGLETON, BOOL_TRUE_SINGLETON, BooleanItem, isTruthyItem } from \"../items/boolean_item\";\r\nimport { ColorItem } from \"../items/color_item\";\r\nimport { ShapeItem } from \"../items/shape_item\";\r\nimport { ShapeDefinition } from \"../shape_definition\";\r\n\r\nexport class LogicGateSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [LogicGateComponent]);\r\n\r\n        this.boundOperations = {\r\n            [enumLogicGateType.and]: this.compute_AND.bind(this),\r\n            [enumLogicGateType.not]: this.compute_NOT.bind(this),\r\n            [enumLogicGateType.xor]: this.compute_XOR.bind(this),\r\n            [enumLogicGateType.or]: this.compute_OR.bind(this),\r\n            [enumLogicGateType.transistor]: this.compute_IF.bind(this),\r\n\r\n            [enumLogicGateType.rotater]: this.compute_ROTATE.bind(this),\r\n            [enumLogicGateType.analyzer]: this.compute_ANALYZE.bind(this),\r\n            [enumLogicGateType.cutter]: this.compute_CUT.bind(this),\r\n            [enumLogicGateType.unstacker]: this.compute_UNSTACK.bind(this),\r\n            [enumLogicGateType.compare]: this.compute_COMPARE.bind(this),\r\n            [enumLogicGateType.stacker]: this.compute_STACKER.bind(this),\r\n            [enumLogicGateType.painter]: this.compute_PAINTER.bind(this),\r\n        };\r\n    }\r\n\r\n    static getId() {\r\n        return \"logicGate\";\r\n    }\r\n\r\n    update() {\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            const logicComp = entity.components.LogicGate;\r\n            const slotComp = entity.components.WiredPins;\r\n\r\n            const slotValues = [];\r\n\r\n            // Store if any conflict was found\r\n            let anyConflict = false;\r\n\r\n            // Gather inputs from all connected networks\r\n            for (let i = 0; i < slotComp.slots.length; ++i) {\r\n                const slot = slotComp.slots[i];\r\n                if (slot.type !== enumPinSlotType.logicalAcceptor) {\r\n                    continue;\r\n                }\r\n                const network = slot.linkedNetwork;\r\n                if (network) {\r\n                    if (network.valueConflict) {\r\n                        anyConflict = true;\r\n                        break;\r\n                    }\r\n                    slotValues.push(network.currentValue);\r\n                } else {\r\n                    slotValues.push(null);\r\n                }\r\n            }\r\n\r\n            // Handle conflicts\r\n            if (anyConflict) {\r\n                for (let i = 0; i < slotComp.slots.length; ++i) {\r\n                    const slot = slotComp.slots[i];\r\n                    if (slot.type !== enumPinSlotType.logicalEjector) {\r\n                        continue;\r\n                    }\r\n                    slot.value = null;\r\n                }\r\n                continue;\r\n            }\r\n\r\n            // Compute actual result\r\n            const result = this.boundOperations[logicComp.type](slotValues);\r\n\r\n            if (Array.isArray(result)) {\r\n                let resultIndex = 0;\r\n                for (let i = 0; i < slotComp.slots.length; ++i) {\r\n                    const slot = slotComp.slots[i];\r\n                    if (slot.type !== enumPinSlotType.logicalEjector) {\r\n                        continue;\r\n                    }\r\n                    slot.value = result[resultIndex++];\r\n                }\r\n            } else {\r\n                // @TODO: For now we hardcode the value to always be slot 0\r\n                assert(\r\n                    slotValues.length === slotComp.slots.length - 1,\r\n                    \"Bad slot config, should have N acceptor slots and 1 ejector\"\r\n                );\r\n                assert(slotComp.slots[0].type === enumPinSlotType.logicalEjector, \"Slot 0 should be ejector\");\r\n                slotComp.slots[0].value = result;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Array<BaseItem|null>} parameters\r\n     * @returns {BaseItem}\r\n     */\r\n    compute_AND(parameters) {\r\n        assert(parameters.length === 2, \"bad parameter count for AND\");\r\n        return isTruthyItem(parameters[0]) && isTruthyItem(parameters[1]) ?\r\n            BOOL_TRUE_SINGLETON :\r\n            BOOL_FALSE_SINGLETON;\r\n    }\r\n\r\n    /**\r\n     * @param {Array<BaseItem|null>} parameters\r\n     * @returns {BaseItem}\r\n     */\r\n    compute_NOT(parameters) {\r\n        return isTruthyItem(parameters[0]) ? BOOL_FALSE_SINGLETON : BOOL_TRUE_SINGLETON;\r\n    }\r\n\r\n    /**\r\n     * @param {Array<BaseItem|null>} parameters\r\n     * @returns {BaseItem}\r\n     */\r\n    compute_XOR(parameters) {\r\n        assert(parameters.length === 2, \"bad parameter count for XOR\");\r\n        return isTruthyItem(parameters[0]) !== isTruthyItem(parameters[1]) ?\r\n            BOOL_TRUE_SINGLETON :\r\n            BOOL_FALSE_SINGLETON;\r\n    }\r\n\r\n    /**\r\n     * @param {Array<BaseItem|null>} parameters\r\n     * @returns {BaseItem}\r\n     */\r\n    compute_OR(parameters) {\r\n        assert(parameters.length === 2, \"bad parameter count for OR\");\r\n        return isTruthyItem(parameters[0]) || isTruthyItem(parameters[1]) ?\r\n            BOOL_TRUE_SINGLETON :\r\n            BOOL_FALSE_SINGLETON;\r\n    }\r\n\r\n    /**\r\n     * @param {Array<BaseItem|null>} parameters\r\n     * @returns {BaseItem}\r\n     */\r\n    compute_IF(parameters) {\r\n        assert(parameters.length === 2, \"bad parameter count for IF\");\r\n        const flag = parameters[0];\r\n        const value = parameters[1];\r\n\r\n        // pass through item\r\n        if (isTruthyItem(flag)) {\r\n            return value;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @param {Array<BaseItem|null>} parameters\r\n     * @returns {BaseItem}\r\n     */\r\n    compute_ROTATE(parameters) {\r\n        const item = parameters[0];\r\n        if (!item || item.getItemType() !== \"shape\") {\r\n            // Not a shape\r\n            return null;\r\n        }\r\n\r\n        const definition = /** @type {ShapeItem} */ (item).definition;\r\n        const rotatedDefinitionCW = this.root.shapeDefinitionMgr.shapeActionRotateCW(definition);\r\n        return this.root.shapeDefinitionMgr.getShapeItemFromDefinition(rotatedDefinitionCW);\r\n    }\r\n\r\n    /**\r\n     * @param {Array<BaseItem|null>} parameters\r\n     * @returns {[BaseItem, BaseItem]}\r\n     */\r\n    compute_ANALYZE(parameters) {\r\n        const item = parameters[0];\r\n        if (!item || item.getItemType() !== \"shape\") {\r\n            // Not a shape\r\n            return [null, null];\r\n        }\r\n\r\n        const definition = /** @type {ShapeItem} */ (item).definition;\r\n        const lowerLayer = /** @type {import(\"../shape_definition\").ShapeLayer} */ (definition.layers[0]);\r\n        if (!lowerLayer) {\r\n            return [null, null];\r\n        }\r\n\r\n        const topRightContent = lowerLayer[0];\r\n\r\n        if (!topRightContent || topRightContent.subShape === null) {\r\n            return [null, null];\r\n        }\r\n\r\n        const newDefinition = new ShapeDefinition({\r\n            layers: [\r\n                [\r\n                    { subShape: topRightContent.subShape, color: enumColors.uncolored },\r\n                    { subShape: topRightContent.subShape, color: enumColors.uncolored },\r\n                    { subShape: topRightContent.subShape, color: enumColors.uncolored },\r\n                    { subShape: topRightContent.subShape, color: enumColors.uncolored },\r\n                ],\r\n            ],\r\n        });\r\n\r\n        return [\r\n            ColorItem.ITEM_SINGLETONS[topRightContent.color],\r\n            this.root.shapeDefinitionMgr.getShapeItemFromDefinition(newDefinition),\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * @param {Array<BaseItem|null>} parameters\r\n     * @returns {[BaseItem, BaseItem]}\r\n     */\r\n    compute_CUT(parameters) {\r\n        const item = parameters[0];\r\n        if (!item || item.getItemType() !== \"shape\") {\r\n            // Not a shape\r\n            return [null, null];\r\n        }\r\n\r\n        const definition = /** @type {ShapeItem} */ (item).definition;\r\n        const result = this.root.shapeDefinitionMgr.shapeActionCutHalf(definition);\r\n        return [\r\n            result[0].isEntirelyEmpty() ?\r\n            null :\r\n            this.root.shapeDefinitionMgr.getShapeItemFromDefinition(result[0]),\r\n            result[1].isEntirelyEmpty() ?\r\n            null :\r\n            this.root.shapeDefinitionMgr.getShapeItemFromDefinition(result[1]),\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * @param {Array<BaseItem|null>} parameters\r\n     * @returns {[BaseItem, BaseItem]}\r\n     */\r\n    compute_UNSTACK(parameters) {\r\n        const item = parameters[0];\r\n        if (!item || item.getItemType() !== \"shape\") {\r\n            // Not a shape\r\n            return [null, null];\r\n        }\r\n\r\n        const definition = /** @type {ShapeItem} */ (item).definition;\r\n        const layers = /** @type {Array<import(\"../shape_definition\").ShapeLayer>}  */ (definition.layers);\r\n\r\n        const upperLayerDefinition = new ShapeDefinition({\r\n            layers: [layers[layers.length - 1]],\r\n        });\r\n\r\n        const lowerLayers = layers.slice(0, layers.length - 1);\r\n        const lowerLayerDefinition =\r\n            lowerLayers.length > 0 ? new ShapeDefinition({ layers: lowerLayers }) : null;\r\n\r\n        return [\r\n            lowerLayerDefinition ?\r\n            this.root.shapeDefinitionMgr.getShapeItemFromDefinition(lowerLayerDefinition) :\r\n            null,\r\n            this.root.shapeDefinitionMgr.getShapeItemFromDefinition(upperLayerDefinition),\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * @param {Array<BaseItem|null>} parameters\r\n     * @returns {BaseItem}\r\n     */\r\n    compute_STACKER(parameters) {\r\n        const lowerItem = parameters[0];\r\n        const upperItem = parameters[1];\r\n\r\n        if (!lowerItem || !upperItem) {\r\n            // Empty\r\n            return null;\r\n        }\r\n\r\n        if (lowerItem.getItemType() !== \"shape\" || upperItem.getItemType() !== \"shape\") {\r\n            // Bad type\r\n            return null;\r\n        }\r\n\r\n        const stackedShape = this.root.shapeDefinitionMgr.shapeActionStack(\r\n            /** @type {ShapeItem} */\r\n            (lowerItem).definition,\r\n            /** @type {ShapeItem} */\r\n            (upperItem).definition\r\n        );\r\n\r\n        return this.root.shapeDefinitionMgr.getShapeItemFromDefinition(stackedShape);\r\n    }\r\n\r\n    /**\r\n     * @param {Array<BaseItem|null>} parameters\r\n     * @returns {BaseItem}\r\n     */\r\n    compute_PAINTER(parameters) {\r\n        const shape = parameters[0];\r\n        const color = parameters[1];\r\n\r\n        if (!shape || !color) {\r\n            // Empty\r\n            return null;\r\n        }\r\n\r\n        if (shape.getItemType() !== \"shape\" || color.getItemType() !== \"color\") {\r\n            // Bad type\r\n            return null;\r\n        }\r\n\r\n        const coloredShape = this.root.shapeDefinitionMgr.shapeActionPaintWith(\r\n            /** @type {ShapeItem} */\r\n            (shape).definition,\r\n            /** @type {ColorItem} */\r\n            (color).color\r\n        );\r\n\r\n        return this.root.shapeDefinitionMgr.getShapeItemFromDefinition(coloredShape);\r\n    }\r\n\r\n    /**\r\n     * @param {Array<BaseItem|null>} parameters\r\n     * @returns {BaseItem}\r\n     */\r\n    compute_COMPARE(parameters) {\r\n        const itemA = parameters[0];\r\n        const itemB = parameters[1];\r\n\r\n        if (!itemA || !itemB) {\r\n            // Empty\r\n            return null;\r\n        }\r\n\r\n        if (itemA.getItemType() !== itemB.getItemType()) {\r\n            // Not the same type\r\n            return BOOL_FALSE_SINGLETON;\r\n        }\r\n\r\n        switch (itemA.getItemType()) {\r\n            case \"shape\":\r\n                {\r\n                    return /** @type {ShapeItem} */ (itemA).definition.getHash() ===\r\n                        /** @type {ShapeItem} */\r\n                        (itemB).definition.getHash() ?\r\n                        BOOL_TRUE_SINGLETON :\r\n                        BOOL_FALSE_SINGLETON;\r\n                }\r\n            case \"color\":\r\n                {\r\n                    return /** @type {ColorItem} */ (itemA).color === /** @type {ColorItem} */ (itemB).color ?\r\n                        BOOL_TRUE_SINGLETON :\r\n                        BOOL_FALSE_SINGLETON;\r\n                }\r\n\r\n            case \"boolean\":\r\n                {\r\n                    return /** @type {BooleanItem} */ (itemA).value === /** @type {BooleanItem} */ (itemB).value ?\r\n                        BOOL_TRUE_SINGLETON :\r\n                        BOOL_FALSE_SINGLETON;\r\n                }\r\n\r\n            default:\r\n                {\r\n                    assertAlways(false, \"Bad item type: \" + itemA.getItemType());\r\n                }\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/logic_gate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3128,
    "kind": "class",
    "name": "LogicGateSystem",
    "memberof": "js/game/systems/logic_gate.js",
    "static": true,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/logic_gate.js",
    "importStyle": "{LogicGateSystem}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3129,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 3130,
    "kind": "member",
    "name": "boundOperations",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#boundOperations",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "{\"undefined\": *}"
      ]
    }
  },
  {
    "__docId__": 3131,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3132,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#update",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3133,
    "kind": "method",
    "name": "compute_AND",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#compute_AND",
    "access": "public",
    "description": "",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<BaseItem|null>"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3134,
    "kind": "method",
    "name": "compute_NOT",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#compute_NOT",
    "access": "public",
    "description": "",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<BaseItem|null>"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3135,
    "kind": "method",
    "name": "compute_XOR",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#compute_XOR",
    "access": "public",
    "description": "",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<BaseItem|null>"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3136,
    "kind": "method",
    "name": "compute_OR",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#compute_OR",
    "access": "public",
    "description": "",
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<BaseItem|null>"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3137,
    "kind": "method",
    "name": "compute_IF",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#compute_IF",
    "access": "public",
    "description": "",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<BaseItem|null>"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3138,
    "kind": "method",
    "name": "compute_ROTATE",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#compute_ROTATE",
    "access": "public",
    "description": "",
    "lineNumber": 163,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<BaseItem|null>"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3139,
    "kind": "method",
    "name": "compute_ANALYZE",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#compute_ANALYZE",
    "access": "public",
    "description": "",
    "lineNumber": 179,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[BaseItem, BaseItem]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<BaseItem|null>"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[BaseItem, BaseItem]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3140,
    "kind": "method",
    "name": "compute_CUT",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#compute_CUT",
    "access": "public",
    "description": "",
    "lineNumber": 219,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[BaseItem, BaseItem]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<BaseItem|null>"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[BaseItem, BaseItem]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3141,
    "kind": "method",
    "name": "compute_UNSTACK",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#compute_UNSTACK",
    "access": "public",
    "description": "",
    "lineNumber": 242,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[BaseItem, BaseItem]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<BaseItem|null>"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[BaseItem, BaseItem]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3142,
    "kind": "method",
    "name": "compute_STACKER",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#compute_STACKER",
    "access": "public",
    "description": "",
    "lineNumber": 272,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<BaseItem|null>"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3143,
    "kind": "method",
    "name": "compute_PAINTER",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#compute_PAINTER",
    "access": "public",
    "description": "",
    "lineNumber": 300,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<BaseItem|null>"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3144,
    "kind": "method",
    "name": "compute_COMPARE",
    "memberof": "js/game/systems/logic_gate.js~LogicGateSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/logic_gate.js~LogicGateSystem#compute_COMPARE",
    "access": "public",
    "description": "",
    "lineNumber": 328,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseItem}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<BaseItem|null>"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3145,
    "kind": "file",
    "name": "js/game/systems/map_resources.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { GameSystem } from \"../game_system\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\nimport { THEME } from \"../theme\";\r\nimport { drawSpriteClipped } from \"../../core/draw_utils\";\r\n\r\nexport class MapResourcesSystem extends GameSystem {\r\n    static getId() {\r\n        return \"mapResources\";\r\n    }\r\n\r\n    /**\r\n     * Draws the map resources\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_BackgroundLayer(parameters, chunk) {\r\n        const basicChunkBackground = this.root.buffers.getForKey({\r\n            key: \"mapresourcebg\",\r\n            subKey: chunk.renderKey,\r\n            w: globalConfig.mapChunkSize,\r\n            h: globalConfig.mapChunkSize,\r\n            dpi: 1,\r\n            redrawMethod: this.generateChunkBackground.bind(this, chunk),\r\n        });\r\n\r\n        parameters.context.imageSmoothingEnabled = false;\r\n        drawSpriteClipped({\r\n            parameters,\r\n            sprite: basicChunkBackground,\r\n            x: chunk.tileX * globalConfig.tileSize,\r\n            y: chunk.tileY * globalConfig.tileSize,\r\n            w: globalConfig.mapChunkWorldSize,\r\n            h: globalConfig.mapChunkWorldSize,\r\n            originalW: globalConfig.mapChunkSize,\r\n            originalH: globalConfig.mapChunkSize,\r\n        });\r\n        parameters.context.imageSmoothingEnabled = true;\r\n\r\n        parameters.context.globalAlpha = 0.5;\r\n\r\n        if (this.root.app.settings.getAllSettings().lowQualityMapResources) {\r\n            // LOW QUALITY: Draw patch items only\r\n            for (let i = 0; i < chunk.patches.length; ++i) {\r\n                const patch = chunk.patches[i];\r\n                const destX = chunk.x * globalConfig.mapChunkWorldSize + patch.pos.x * globalConfig.tileSize;\r\n                const destY = chunk.y * globalConfig.mapChunkWorldSize + patch.pos.y * globalConfig.tileSize;\r\n                const diameter = Math.min(80, 40 / parameters.zoomLevel);\r\n\r\n                if (patch.item.drawItemCenteredClipped) {\r\n                    patch.item.drawItemCenteredClipped(destX, destY, parameters, diameter);\r\n                }\r\n            }\r\n        } else {\r\n            // HIGH QUALITY: Draw all items\r\n            const layer = chunk.lowerLayer;\r\n            const layerEntities = chunk.contents;\r\n            for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n                const row = layer[x];\r\n                const rowEntities = layerEntities[x];\r\n                const worldX = (chunk.tileX + x) * globalConfig.tileSize;\r\n                for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n                    const lowerItem = row[y];\r\n\r\n                    const entity = rowEntities[y];\r\n                    if (entity) {\r\n                        // Don't draw if there is an entity above\r\n                        continue;\r\n                    }\r\n\r\n                    if (lowerItem) {\r\n                        const worldY = (chunk.tileY + y) * globalConfig.tileSize;\r\n\r\n                        const destX = worldX + globalConfig.halfTileSize;\r\n                        const destY = worldY + globalConfig.halfTileSize;\r\n\r\n                        if (lowerItem.drawItemCenteredClipped) {\r\n                            lowerItem.drawItemCenteredClipped(\r\n                                destX,\r\n                                destY,\r\n                                parameters,\r\n                                globalConfig.defaultItemDiameter\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parameters.context.globalAlpha = 1;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {MapChunkView} chunk\r\n     * @param {HTMLCanvasElement} canvas\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} w\r\n     * @param {number} h\r\n     * @param {number} dpi\r\n     */\r\n    generateChunkBackground(chunk, canvas, context, w, h, dpi) {\r\n        if (this.root.app.settings.getAllSettings().disableTileGrid) {\r\n            // The map doesn't draw a background, so we have to\r\n            context.fillStyle = THEME.map.background;\r\n            context.fillRect(0, 0, w, h);\r\n        } else {\r\n            context.clearRect(0, 0, w, h);\r\n        }\r\n\r\n        context.globalAlpha = 0.5;\r\n        const layer = chunk.lowerLayer;\r\n        for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n            const row = layer[x];\r\n            for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n                const item = row[y];\r\n                if (item) {\r\n                    if (item.getBackgroundColorAsResource) {\r\n                        context.fillStyle = item.getBackgroundColorAsResource();\r\n                    } else {\r\n                        // @ts-ignore\r\n                        context.fillStyle = item;\r\n                    }\r\n                    context.fillRect(x, y, 1, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.root.app.settings.getAllSettings().displayChunkBorders) {\r\n            context.fillStyle = THEME.map.chunkBorders;\r\n            context.fillRect(0, 0, w, 1);\r\n            context.fillRect(0, 1, 1, h);\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/map_resources.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3146,
    "kind": "class",
    "name": "MapResourcesSystem",
    "memberof": "js/game/systems/map_resources.js",
    "static": true,
    "longname": "js/game/systems/map_resources.js~MapResourcesSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/map_resources.js",
    "importStyle": "{MapResourcesSystem}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system.js~GameSystem"
    ]
  },
  {
    "__docId__": 3147,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/map_resources.js~MapResourcesSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/map_resources.js~MapResourcesSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3148,
    "kind": "method",
    "name": "drawChunk_BackgroundLayer",
    "memberof": "js/game/systems/map_resources.js~MapResourcesSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/map_resources.js~MapResourcesSystem#drawChunk_BackgroundLayer",
    "access": "public",
    "description": "Draws the map resources",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3149,
    "kind": "method",
    "name": "generateChunkBackground",
    "memberof": "js/game/systems/map_resources.js~MapResourcesSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/map_resources.js~MapResourcesSystem#generateChunkBackground",
    "access": "public",
    "description": "",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "canvas",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dpi",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3150,
    "kind": "file",
    "name": "js/game/systems/miner.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { enumDirectionToVector } from \"../../core/vector\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { MinerComponent } from \"../components/miner\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\n\r\nexport class MinerSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [MinerComponent]);\r\n\r\n        this.needsRecompute = true;\r\n\r\n        this.root.signals.entityAdded.add(this.onEntityChanged, this);\r\n        this.root.signals.entityChanged.add(this.onEntityChanged, this);\r\n        this.root.signals.entityDestroyed.add(this.onEntityChanged, this);\r\n    }\r\n\r\n    static getId() {\r\n        return \"miner\";\r\n    }\r\n\r\n    /**\r\n     * Called whenever an entity got changed\r\n     * @param {Entity} entity\r\n     */\r\n    onEntityChanged(entity) {\r\n        const minerComp = entity.components.Miner;\r\n        if (minerComp && minerComp.chainable) {\r\n            // Miner component, need to recompute\r\n            this.needsRecompute = true;\r\n        }\r\n    }\r\n\r\n    update() {\r\n        let miningSpeed = this.root.hubGoals.getMinerBaseSpeed();\r\n        if (G_IS_DEV && globalConfig.debug.instantMiners) {\r\n            miningSpeed *= 100;\r\n        }\r\n\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            const minerComp = entity.components.Miner;\r\n\r\n            // Reset everything on recompute\r\n            if (this.needsRecompute) {\r\n                minerComp.cachedChainedMiner = null;\r\n            }\r\n\r\n            // Check if miner is above an actual tile\r\n            if (!minerComp.cachedMinedItem) {\r\n                const staticComp = entity.components.StaticMapEntity;\r\n                const tileBelow = this.root.map.getLowerLayerContentXY(\r\n                    staticComp.origin.x,\r\n                    staticComp.origin.y\r\n                );\r\n                if (!tileBelow || typeof tileBelow != \"object\") {\r\n                    continue;\r\n                }\r\n                minerComp.cachedMinedItem = tileBelow;\r\n            }\r\n\r\n            // First, try to get rid of chained items\r\n            if (minerComp.itemChainBuffer.length > 0) {\r\n                if (this.tryPerformMinerEject(entity, minerComp.itemChainBuffer[0])) {\r\n                    minerComp.itemChainBuffer.shift();\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            const mineDuration = 1 / miningSpeed;\r\n            const timeSinceMine = this.root.time.now() - minerComp.lastMiningTime;\r\n            if (timeSinceMine > mineDuration) {\r\n                // Store how much we overflowed\r\n                const buffer = Math.min(timeSinceMine - mineDuration, this.root.dynamicTickrate.deltaSeconds);\r\n\r\n                if (this.tryPerformMinerEject(entity, minerComp.cachedMinedItem)) {\r\n                    // Analytics hook\r\n                    this.root.signals.itemProduced.dispatch(minerComp.cachedMinedItem);\r\n                    // Store mining time\r\n                    minerComp.lastMiningTime = this.root.time.now() - buffer;\r\n                }\r\n            }\r\n        }\r\n\r\n        // After this frame we are done\r\n        this.needsRecompute = false;\r\n    }\r\n\r\n    /**\r\n     * Finds the target chained miner for a given entity\r\n     * @param {Entity} entity\r\n     * @returns {Entity|false} The chained entity or null if not found\r\n     */\r\n    findChainedMiner(entity) {\r\n        const ejectComp = entity.components.ItemEjector;\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const contentsBelow = this.root.map.getLowerLayerContentXY(staticComp.origin.x, staticComp.origin.y);\r\n        if (!contentsBelow) {\r\n            // This miner has no contents\r\n            return null;\r\n        }\r\n\r\n        const ejectingSlot = ejectComp.slots[0];\r\n        const ejectingPos = staticComp.localTileToWorld(ejectingSlot.pos);\r\n        const ejectingDirection = staticComp.localDirectionToWorld(ejectingSlot.direction);\r\n\r\n        const targetTile = ejectingPos.add(enumDirectionToVector[ejectingDirection]);\r\n        const targetContents = this.root.map.getTileContent(targetTile, \"regular\");\r\n\r\n        // Check if we are connected to another miner and thus do not eject directly\r\n        if (targetContents) {\r\n            const targetMinerComp = targetContents.components.Miner;\r\n            if (targetMinerComp && targetMinerComp.chainable) {\r\n                const targetLowerLayer = this.root.map.getLowerLayerContentXY(targetTile.x, targetTile.y);\r\n                if (targetLowerLayer) {\r\n                    return targetContents;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     * @param {BaseItem} item\r\n     */\r\n    tryPerformMinerEject(entity, item) {\r\n        const minerComp = entity.components.Miner;\r\n        const ejectComp = entity.components.ItemEjector;\r\n\r\n        // Check if we are a chained miner\r\n        if (minerComp.chainable) {\r\n            const targetEntity = minerComp.cachedChainedMiner;\r\n\r\n            // Check if the cache has to get recomputed\r\n            if (targetEntity === null) {\r\n                minerComp.cachedChainedMiner = this.findChainedMiner(entity);\r\n            }\r\n\r\n            // Check if we now have a target\r\n            if (targetEntity) {\r\n                const targetMinerComp = targetEntity.components.Miner;\r\n                if (targetMinerComp.tryAcceptChainedItem(item)) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Seems we are a regular miner or at the end of a row, try actually ejecting\r\n        if (ejectComp.tryEject(0, item)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_ForegroundDynamicLayer(parameters, chunk) {\r\n        const contents = chunk.containedEntitiesByLayer.regular;\r\n\r\n        for (let i = 0; i < contents.length; ++i) {\r\n            const entity = contents[i];\r\n            const minerComp = entity.components.Miner;\r\n            if (!minerComp) {\r\n                continue;\r\n            }\r\n\r\n            const staticComp = entity.components.StaticMapEntity;\r\n            if (!minerComp.cachedMinedItem || typeof minerComp.cachedMinedItem != \"object\") {\r\n                continue;\r\n            }\r\n\r\n            // Draw the item background - this is to hide the ejected item animation from\r\n            // the item ejector\r\n\r\n            const padding = 3;\r\n            const destX = staticComp.origin.x * globalConfig.tileSize + padding;\r\n            const destY = staticComp.origin.y * globalConfig.tileSize + padding;\r\n            const dimensions = globalConfig.tileSize - 2 * padding;\r\n\r\n            if (parameters.visibleRect.containsRect4Params(destX, destY, dimensions, dimensions)) {\r\n                parameters.context.fillStyle = minerComp.cachedMinedItem.getBackgroundColorAsResource();\r\n                parameters.context.fillRect(destX, destY, dimensions, dimensions);\r\n            }\r\n\r\n            minerComp.cachedMinedItem.drawItemCenteredClipped(\r\n                (0.5 + staticComp.origin.x) * globalConfig.tileSize,\r\n                (0.5 + staticComp.origin.y) * globalConfig.tileSize,\r\n                parameters,\r\n                globalConfig.defaultItemDiameter\r\n            );\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/miner.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3151,
    "kind": "class",
    "name": "MinerSystem",
    "memberof": "js/game/systems/miner.js",
    "static": true,
    "longname": "js/game/systems/miner.js~MinerSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/miner.js",
    "importStyle": "{MinerSystem}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3152,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/miner.js~MinerSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/miner.js~MinerSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 3153,
    "kind": "member",
    "name": "needsRecompute",
    "memberof": "js/game/systems/miner.js~MinerSystem",
    "static": false,
    "longname": "js/game/systems/miner.js~MinerSystem#needsRecompute",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3154,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/miner.js~MinerSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/miner.js~MinerSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3155,
    "kind": "method",
    "name": "onEntityChanged",
    "memberof": "js/game/systems/miner.js~MinerSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/miner.js~MinerSystem#onEntityChanged",
    "access": "public",
    "description": "Called whenever an entity got changed",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3157,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/miner.js~MinerSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/miner.js~MinerSystem#update",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3159,
    "kind": "method",
    "name": "findChainedMiner",
    "memberof": "js/game/systems/miner.js~MinerSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/miner.js~MinerSystem#findChainedMiner",
    "access": "public",
    "description": "Finds the target chained miner for a given entity",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Entity|false} The chained entity or null if not found"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Entity",
        "false"
      ],
      "spread": false,
      "description": "The chained entity or null if not found"
    }
  },
  {
    "__docId__": 3160,
    "kind": "method",
    "name": "tryPerformMinerEject",
    "memberof": "js/game/systems/miner.js~MinerSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/miner.js~MinerSystem#tryPerformMinerEject",
    "access": "public",
    "description": "",
    "lineNumber": 132,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BaseItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3161,
    "kind": "method",
    "name": "drawChunk_ForegroundDynamicLayer",
    "memberof": "js/game/systems/miner.js~MinerSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/miner.js~MinerSystem#drawChunk_ForegroundDynamicLayer",
    "access": "public",
    "description": "",
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3162,
    "kind": "file",
    "name": "js/game/systems/static_map_entity.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { GameSystem } from \"../game_system\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\n\r\nexport class StaticMapEntitySystem extends GameSystem {\r\n    constructor(root) {\r\n        super(root);\r\n\r\n        /** @type {Set<number>} */\r\n        this.drawnUids = new Set();\r\n\r\n        this.root.signals.gameFrameStarted.add(this.clearUidList, this);\r\n    }\r\n\r\n    static getId() {\r\n        return \"staticMapEntities\";\r\n    }\r\n\r\n    /**\r\n     * Clears the uid list when a new frame started\r\n     */\r\n    clearUidList() {\r\n        this.drawnUids.clear();\r\n    }\r\n\r\n    /**\r\n     * Draws the static entities\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_ForegroundStaticLayer(parameters, chunk) {\r\n        if (G_IS_DEV && globalConfig.debug.doNotRenderStatics) {\r\n            return;\r\n        }\r\n\r\n        const contents = chunk.containedEntitiesByLayer.regular;\r\n        for (let i = 0; i < contents.length; ++i) {\r\n            const entity = contents[i];\r\n\r\n            const staticComp = entity.components.StaticMapEntity;\r\n            const sprite = staticComp.getSprite();\r\n            if (sprite) {\r\n                // Avoid drawing an entity twice which has been drawn for\r\n                // another chunk already\r\n                if (this.drawnUids.has(entity.uid)) {\r\n                    continue;\r\n                }\r\n\r\n                this.drawnUids.add(entity.uid);\r\n                staticComp.drawSpriteOnBoundsClipped(parameters, sprite, 2);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the static wire entities\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_WiresForegroundLayer(parameters, chunk) {\r\n        if (G_IS_DEV && globalConfig.debug.doNotRenderStatics) {\r\n            return;\r\n        }\r\n\r\n        const drawnUids = new Set();\r\n        const contents = chunk.wireContents;\r\n        for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n            for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n                const entity = contents[x][y];\r\n                if (entity) {\r\n                    if (drawnUids.has(entity.uid)) {\r\n                        continue;\r\n                    }\r\n                    drawnUids.add(entity.uid);\r\n                    const staticComp = entity.components.StaticMapEntity;\r\n\r\n                    const sprite = staticComp.getSprite();\r\n                    if (sprite) {\r\n                        staticComp.drawSpriteOnBoundsClipped(parameters, sprite, 2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the static wire entities\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     * @param {string} layer\r\n     */\r\n    drawChunk_ForegroundLayer(parameters, chunk, layer) {\r\n        const drawnUids = new Set();\r\n        const contents = chunk.layersContents.get(layer);\r\n        for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n            for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n                const entity = contents[x][y];\r\n                if (entity) {\r\n                    if (drawnUids.has(entity.uid)) {\r\n                        continue;\r\n                    }\r\n                    drawnUids.add(entity.uid);\r\n                    const staticComp = entity.components.StaticMapEntity;\r\n\r\n                    const sprite = staticComp.getSprite();\r\n                    if (sprite) {\r\n                        staticComp.drawSpriteOnBoundsClipped(parameters, sprite, 2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/static_map_entity.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3163,
    "kind": "class",
    "name": "StaticMapEntitySystem",
    "memberof": "js/game/systems/static_map_entity.js",
    "static": true,
    "longname": "js/game/systems/static_map_entity.js~StaticMapEntitySystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/static_map_entity.js",
    "importStyle": "{StaticMapEntitySystem}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system.js~GameSystem"
    ]
  },
  {
    "__docId__": 3164,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/static_map_entity.js~StaticMapEntitySystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/static_map_entity.js~StaticMapEntitySystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 3165,
    "kind": "member",
    "name": "drawnUids",
    "memberof": "js/game/systems/static_map_entity.js~StaticMapEntitySystem",
    "static": false,
    "longname": "js/game/systems/static_map_entity.js~StaticMapEntitySystem#drawnUids",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Set<number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3166,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/static_map_entity.js~StaticMapEntitySystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/static_map_entity.js~StaticMapEntitySystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3167,
    "kind": "method",
    "name": "clearUidList",
    "memberof": "js/game/systems/static_map_entity.js~StaticMapEntitySystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/static_map_entity.js~StaticMapEntitySystem#clearUidList",
    "access": "public",
    "description": "Clears the uid list when a new frame started",
    "lineNumber": 23,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3168,
    "kind": "method",
    "name": "drawChunk_ForegroundStaticLayer",
    "memberof": "js/game/systems/static_map_entity.js~StaticMapEntitySystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/static_map_entity.js~StaticMapEntitySystem#drawChunk_ForegroundStaticLayer",
    "access": "public",
    "description": "Draws the static entities",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3169,
    "kind": "method",
    "name": "drawChunk_WiresForegroundLayer",
    "memberof": "js/game/systems/static_map_entity.js~StaticMapEntitySystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/static_map_entity.js~StaticMapEntitySystem#drawChunk_WiresForegroundLayer",
    "access": "public",
    "description": "Draws the static wire entities",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3170,
    "kind": "method",
    "name": "drawChunk_ForegroundLayer",
    "memberof": "js/game/systems/static_map_entity.js~StaticMapEntitySystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/static_map_entity.js~StaticMapEntitySystem#drawChunk_ForegroundLayer",
    "access": "public",
    "description": "Draws the static wire entities",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3171,
    "kind": "file",
    "name": "js/game/systems/storage.js",
    "content": "import { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { StorageComponent } from \"../components/storage\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { formatBigNumber, lerp } from \"../../core/utils\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { BOOL_TRUE_SINGLETON, BOOL_FALSE_SINGLETON } from \"../items/boolean_item\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\n\r\nexport class StorageSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [StorageComponent]);\r\n\r\n        this.storageOverlaySprite = Loader.getSprite(\"sprites/misc/storage_overlay.png\");\r\n\r\n        /**\r\n         * Stores which uids were already drawn to avoid drawing entities twice\r\n         * @type {Set<number>}\r\n         */\r\n        this.drawnUids = new Set();\r\n\r\n        this.root.signals.gameFrameStarted.add(this.clearDrawnUids, this);\r\n    }\r\n\r\n    static getId() {\r\n        return \"storage\";\r\n    }\r\n\r\n    clearDrawnUids() {\r\n        this.drawnUids.clear();\r\n    }\r\n\r\n    update() {\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            const storageComp = entity.components.Storage;\r\n            const pinsComp = entity.components.WiredPins;\r\n\r\n            // Eject from storage\r\n            if (storageComp.storedItem && storageComp.storedCount > 0) {\r\n                const ejectorComp = entity.components.ItemEjector;\r\n\r\n                const nextSlot = ejectorComp.getFirstFreeSlot();\r\n                if (nextSlot !== null) {\r\n                    if (ejectorComp.tryEject(nextSlot, storageComp.storedItem)) {\r\n                        storageComp.storedCount--;\r\n\r\n                        if (storageComp.storedCount === 0) {\r\n                            storageComp.storedItem = null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            let targetAlpha = storageComp.storedCount > 0 ? 1 : 0;\r\n            storageComp.overlayOpacity = lerp(storageComp.overlayOpacity, targetAlpha, 0.05);\r\n\r\n            pinsComp.slots[0].value = storageComp.storedItem;\r\n            pinsComp.slots[1].value = storageComp.getIsFull() ? BOOL_TRUE_SINGLETON : BOOL_FALSE_SINGLETON;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_ForegroundStaticLayer(parameters, chunk) {\r\n        const contents = chunk.containedEntitiesByLayer.regular;\r\n        for (let i = 0; i < contents.length; ++i) {\r\n            const entity = contents[i];\r\n            const storageComp = entity.components.Storage;\r\n            if (!storageComp) {\r\n                continue;\r\n            }\r\n\r\n            const storedItem = storageComp.storedItem;\r\n            if (!storedItem) {\r\n                continue;\r\n            }\r\n\r\n            if (this.drawnUids.has(entity.uid)) {\r\n                continue;\r\n            }\r\n\r\n            this.drawnUids.add(entity.uid);\r\n\r\n            const staticComp = entity.components.StaticMapEntity;\r\n\r\n            const context = parameters.context;\r\n            context.globalAlpha = storageComp.overlayOpacity;\r\n            const center = staticComp.getTileSpaceBounds().getCenter().toWorldSpace();\r\n            storedItem.drawItemCenteredClipped(center.x, center.y, parameters, 30);\r\n\r\n            this.storageOverlaySprite.drawCached(parameters, center.x - 15, center.y + 15, 30, 15);\r\n\r\n            if (parameters.visibleRect.containsCircle(center.x, center.y + 25, 20)) {\r\n                context.font = \"bold 10px GameFont\";\r\n                context.textAlign = \"center\";\r\n                context.fillStyle = \"#64666e\";\r\n                context.fillText(formatBigNumber(storageComp.storedCount), center.x, center.y + 25.5);\r\n                context.textAlign = \"left\";\r\n            }\r\n            context.globalAlpha = 1;\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/storage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3172,
    "kind": "class",
    "name": "StorageSystem",
    "memberof": "js/game/systems/storage.js",
    "static": true,
    "longname": "js/game/systems/storage.js~StorageSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/storage.js",
    "importStyle": "{StorageSystem}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3173,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/storage.js~StorageSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/storage.js~StorageSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 3174,
    "kind": "member",
    "name": "storageOverlaySprite",
    "memberof": "js/game/systems/storage.js~StorageSystem",
    "static": false,
    "longname": "js/game/systems/storage.js~StorageSystem#storageOverlaySprite",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3175,
    "kind": "member",
    "name": "drawnUids",
    "memberof": "js/game/systems/storage.js~StorageSystem",
    "static": false,
    "longname": "js/game/systems/storage.js~StorageSystem#drawnUids",
    "access": "public",
    "description": "Stores which uids were already drawn to avoid drawing entities twice",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Set<number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3176,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/storage.js~StorageSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/storage.js~StorageSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3177,
    "kind": "method",
    "name": "clearDrawnUids",
    "memberof": "js/game/systems/storage.js~StorageSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/storage.js~StorageSystem#clearDrawnUids",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3178,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/storage.js~StorageSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/storage.js~StorageSystem#update",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3179,
    "kind": "method",
    "name": "drawChunk_ForegroundStaticLayer",
    "memberof": "js/game/systems/storage.js~StorageSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/storage.js~StorageSystem#drawChunk_ForegroundStaticLayer",
    "access": "public",
    "description": "",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3180,
    "kind": "file",
    "name": "js/game/systems/underground_belt.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { Rectangle } from \"../../core/rectangle\";\r\nimport { StaleAreaDetector } from \"../../core/stale_area_detector\";\r\nimport { fastArrayDelete } from \"../../core/utils\";\r\nimport {\r\n    enumAngleToDirection,\r\n    enumDirection,\r\n    enumDirectionToAngle,\r\n    enumDirectionToVector,\r\n    enumInvertedDirections,\r\n} from \"../../core/vector\";\r\nimport { enumUndergroundBeltMode, UndergroundBeltComponent } from \"../components/underground_belt\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\n\r\nconst logger = createLogger(\"tunnels\");\r\n\r\nexport class UndergroundBeltSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [UndergroundBeltComponent]);\r\n\r\n        this.beltSprites = {\r\n            [enumUndergroundBeltMode.sender]: Loader.getSprite(\r\n                \"sprites/buildings/underground_belt_entry.png\"\r\n            ),\r\n            [enumUndergroundBeltMode.receiver]: Loader.getSprite(\r\n                \"sprites/buildings/underground_belt_exit.png\"\r\n            ),\r\n        };\r\n\r\n        this.staleAreaWatcher = new StaleAreaDetector({\r\n            root: this.root,\r\n            name: \"underground-belt\",\r\n            recomputeMethod: this.recomputeArea.bind(this),\r\n        });\r\n\r\n        this.root.signals.entityManuallyPlaced.add(this.onEntityManuallyPlaced, this);\r\n\r\n        // NOTICE: Once we remove a tunnel, we need to update the whole area to\r\n        // clear outdated handles\r\n        this.staleAreaWatcher.recomputeOnComponentsChanged(\r\n            [UndergroundBeltComponent],\r\n            globalConfig.undergroundBeltMaxTilesByTier[globalConfig.undergroundBeltMaxTilesByTier.length - 1]\r\n        );\r\n    }\r\n\r\n    static getId() {\r\n        return \"undergroundBelt\";\r\n    }\r\n\r\n    /**\r\n     * Callback when an entity got placed, used to remove belts between underground belts\r\n     * @param {Entity} entity\r\n     */\r\n    onEntityManuallyPlaced(entity) {\r\n        if (!this.root.app.settings.getAllSettings().enableTunnelSmartplace) {\r\n            // Smart-place disabled\r\n            return;\r\n        }\r\n\r\n        const undergroundComp = entity.components.UndergroundBelt;\r\n        if (undergroundComp && undergroundComp.mode === enumUndergroundBeltMode.receiver) {\r\n            const staticComp = entity.components.StaticMapEntity;\r\n            const tile = staticComp.origin;\r\n\r\n            const direction = enumAngleToDirection[staticComp.rotation];\r\n            const inverseDirection = enumInvertedDirections[direction];\r\n            const offset = enumDirectionToVector[inverseDirection];\r\n\r\n            let currentPos = tile.copy();\r\n\r\n            const tier = undergroundComp.tier;\r\n            const range = globalConfig.undergroundBeltMaxTilesByTier[tier];\r\n\r\n            // FIND ENTRANCE\r\n            // Search for the entrance which is farthest apart (this is why we can't reuse logic here)\r\n            let matchingEntrance = null;\r\n            for (let i = 0; i < range; ++i) {\r\n                currentPos.addInplace(offset);\r\n                const contents = this.root.map.getTileContent(currentPos, entity.layer);\r\n                if (!contents) {\r\n                    continue;\r\n                }\r\n\r\n                const contentsUndergroundComp = contents.components.UndergroundBelt;\r\n                const contentsStaticComp = contents.components.StaticMapEntity;\r\n                if (\r\n                    contentsUndergroundComp &&\r\n                    contentsUndergroundComp.tier === undergroundComp.tier &&\r\n                    contentsUndergroundComp.mode === enumUndergroundBeltMode.sender &&\r\n                    enumAngleToDirection[contentsStaticComp.rotation] === direction\r\n                ) {\r\n                    matchingEntrance = {\r\n                        entity: contents,\r\n                        range: i,\r\n                    };\r\n                }\r\n            }\r\n\r\n            if (!matchingEntrance) {\r\n                // Nothing found\r\n                return;\r\n            }\r\n\r\n            // DETECT OBSOLETE BELTS BETWEEN\r\n            // Remove any belts between entrance and exit which have the same direction,\r\n            // but only if they *all* have the right direction\r\n            currentPos = tile.copy();\r\n            let allBeltsMatch = true;\r\n            for (let i = 0; i < matchingEntrance.range; ++i) {\r\n                currentPos.addInplace(offset);\r\n\r\n                const contents = this.root.map.getTileContent(currentPos, entity.layer);\r\n                if (!contents) {\r\n                    allBeltsMatch = false;\r\n                    break;\r\n                }\r\n\r\n                const contentsStaticComp = contents.components.StaticMapEntity;\r\n                const contentsBeltComp = contents.components.Belt;\r\n                if (!contentsBeltComp) {\r\n                    allBeltsMatch = false;\r\n                    break;\r\n                }\r\n\r\n                // It's a belt\r\n                if (\r\n                    contentsBeltComp.direction !== enumDirection.top ||\r\n                    enumAngleToDirection[contentsStaticComp.rotation] !== direction\r\n                ) {\r\n                    allBeltsMatch = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            currentPos = tile.copy();\r\n            if (allBeltsMatch) {\r\n                // All belts between this are obsolete, so drop them\r\n                for (let i = 0; i < matchingEntrance.range; ++i) {\r\n                    currentPos.addInplace(offset);\r\n                    const contents = this.root.map.getTileContent(currentPos, entity.layer);\r\n                    assert(contents, \"Invalid smart underground belt logic\");\r\n                    this.root.logic.tryDeleteBuilding(contents);\r\n                }\r\n            }\r\n\r\n            // REMOVE OBSOLETE TUNNELS\r\n            // Remove any double tunnels, by checking the tile plus the tile above\r\n            currentPos = tile.copy().add(offset);\r\n            for (let i = 0; i < matchingEntrance.range - 1; ++i) {\r\n                const posBefore = currentPos.copy();\r\n                currentPos.addInplace(offset);\r\n\r\n                const entityBefore = this.root.map.getTileContent(posBefore, entity.layer);\r\n                const entityAfter = this.root.map.getTileContent(currentPos, entity.layer);\r\n\r\n                if (!entityBefore || !entityAfter) {\r\n                    continue;\r\n                }\r\n\r\n                const undergroundBefore = entityBefore.components.UndergroundBelt;\r\n                const undergroundAfter = entityAfter.components.UndergroundBelt;\r\n\r\n                if (!undergroundBefore || !undergroundAfter) {\r\n                    // Not an underground belt\r\n                    continue;\r\n                }\r\n\r\n                if (\r\n                    // Both same tier\r\n                    undergroundBefore.tier !== undergroundAfter.tier ||\r\n                    // And same tier as our original entity\r\n                    undergroundBefore.tier !== undergroundComp.tier\r\n                ) {\r\n                    // Mismatching tier\r\n                    continue;\r\n                }\r\n\r\n                if (\r\n                    undergroundBefore.mode !== enumUndergroundBeltMode.sender ||\r\n                    undergroundAfter.mode !== enumUndergroundBeltMode.receiver\r\n                ) {\r\n                    // Not the right mode\r\n                    continue;\r\n                }\r\n\r\n                // Check rotations\r\n                const staticBefore = entityBefore.components.StaticMapEntity;\r\n                const staticAfter = entityAfter.components.StaticMapEntity;\r\n\r\n                if (\r\n                    enumAngleToDirection[staticBefore.rotation] !== direction ||\r\n                    enumAngleToDirection[staticAfter.rotation] !== direction\r\n                ) {\r\n                    // Wrong rotation\r\n                    continue;\r\n                }\r\n\r\n                // All good, can remove\r\n                this.root.logic.tryDeleteBuilding(entityBefore);\r\n                this.root.logic.tryDeleteBuilding(entityAfter);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recomputes the cache in the given area, invalidating all entries there\r\n     * @param {Rectangle} area\r\n     */\r\n    recomputeArea(area) {\r\n        for (let x = area.x; x < area.right(); ++x) {\r\n            for (let y = area.y; y < area.bottom(); ++y) {\r\n                const entities = this.root.map.getLayersContentsMultipleXY(x, y);\r\n                for (let i = 0; i < entities.length; ++i) {\r\n                    const entity = entities[i];\r\n                    const undergroundComp = entity.components.UndergroundBelt;\r\n                    if (!undergroundComp) {\r\n                        continue;\r\n                    }\r\n                    undergroundComp.cachedLinkedEntity = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        this.staleAreaWatcher.update();\r\n\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            const undergroundComp = entity.components.UndergroundBelt;\r\n            if (undergroundComp.mode === enumUndergroundBeltMode.sender) {\r\n                this.handleSender(entity);\r\n            } else {\r\n                this.handleReceiver(entity);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds the receiver for a given sender\r\n     * @param {Entity} entity\r\n     * @returns {import(\"../components/underground_belt\").LinkedUndergroundBelt}\r\n     */\r\n    findRecieverForSender(entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const undergroundComp = entity.components.UndergroundBelt;\r\n        const searchDirection = staticComp.localDirectionToWorld(enumDirection.top);\r\n        const searchVector = enumDirectionToVector[searchDirection];\r\n        const targetRotation = enumDirectionToAngle[searchDirection];\r\n        let currentTile = staticComp.origin;\r\n\r\n        // Search in the direction of the tunnel\r\n        for (\r\n            let searchOffset = 0; searchOffset < globalConfig.undergroundBeltMaxTilesByTier[undergroundComp.tier];\r\n            ++searchOffset\r\n        ) {\r\n            currentTile = currentTile.add(searchVector);\r\n\r\n            const potentialReceiver = this.root.map.getTileContent(currentTile, \"regular\");\r\n            if (!potentialReceiver) {\r\n                // Empty tile\r\n                continue;\r\n            }\r\n            const receiverUndergroundComp = potentialReceiver.components.UndergroundBelt;\r\n            if (!receiverUndergroundComp || receiverUndergroundComp.tier !== undergroundComp.tier) {\r\n                // Not a tunnel, or not on the same tier\r\n                continue;\r\n            }\r\n\r\n            const receiverStaticComp = potentialReceiver.components.StaticMapEntity;\r\n            if (receiverStaticComp.rotation !== targetRotation) {\r\n                // Wrong rotation\r\n                continue;\r\n            }\r\n\r\n            if (receiverUndergroundComp.mode !== enumUndergroundBeltMode.receiver) {\r\n                // Not a receiver, but a sender -> Abort to make sure we don't deliver double\r\n                break;\r\n            }\r\n\r\n            return { entity: potentialReceiver, distance: searchOffset };\r\n        }\r\n\r\n        // None found\r\n        return { entity: null, distance: 0 };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    handleSender(entity) {\r\n        const undergroundComp = entity.components.UndergroundBelt;\r\n\r\n        // Find the current receiver\r\n        let cacheEntry = undergroundComp.cachedLinkedEntity;\r\n        if (!cacheEntry) {\r\n            // Need to recompute cache\r\n            cacheEntry = undergroundComp.cachedLinkedEntity = this.findRecieverForSender(entity);\r\n        }\r\n\r\n        if (!cacheEntry.entity) {\r\n            // If there is no connection to a receiver, ignore this one\r\n            return;\r\n        }\r\n\r\n        // Check if we have any items to eject\r\n        const nextItemAndDuration = undergroundComp.pendingItems[0];\r\n        if (nextItemAndDuration) {\r\n            assert(undergroundComp.pendingItems.length === 1, \"more than 1 pending\");\r\n\r\n            // Check if the receiver can accept it\r\n            if (\r\n                cacheEntry.entity.components.UndergroundBelt.tryAcceptTunneledItem(\r\n                    nextItemAndDuration[0],\r\n                    cacheEntry.distance,\r\n                    this.root.hubGoals.getUndergroundBeltBaseSpeed(),\r\n                    this.root.time.now()\r\n                )\r\n            ) {\r\n                // Drop this item\r\n                fastArrayDelete(undergroundComp.pendingItems, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    handleReceiver(entity) {\r\n        const undergroundComp = entity.components.UndergroundBelt;\r\n\r\n        // Try to eject items, we only check the first one because it is sorted by remaining time\r\n        const nextItemAndDuration = undergroundComp.pendingItems[0];\r\n        if (nextItemAndDuration) {\r\n            if (this.root.time.now() > nextItemAndDuration[1]) {\r\n                const ejectorComp = entity.components.ItemEjector;\r\n\r\n                const nextSlotIndex = ejectorComp.getFirstFreeSlot();\r\n                if (nextSlotIndex !== null) {\r\n                    if (ejectorComp.tryEject(nextSlotIndex, nextItemAndDuration[0])) {\r\n                        undergroundComp.pendingItems.shift();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/underground_belt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3181,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/systems/underground_belt.js",
    "static": true,
    "longname": "js/game/systems/underground_belt.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/systems/underground_belt.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3182,
    "kind": "class",
    "name": "UndergroundBeltSystem",
    "memberof": "js/game/systems/underground_belt.js",
    "static": true,
    "longname": "js/game/systems/underground_belt.js~UndergroundBeltSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/underground_belt.js",
    "importStyle": "{UndergroundBeltSystem}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3183,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/underground_belt.js~UndergroundBeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/underground_belt.js~UndergroundBeltSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 3184,
    "kind": "member",
    "name": "beltSprites",
    "memberof": "js/game/systems/underground_belt.js~UndergroundBeltSystem",
    "static": false,
    "longname": "js/game/systems/underground_belt.js~UndergroundBeltSystem#beltSprites",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "{\"undefined\": *}"
      ]
    }
  },
  {
    "__docId__": 3185,
    "kind": "member",
    "name": "staleAreaWatcher",
    "memberof": "js/game/systems/underground_belt.js~UndergroundBeltSystem",
    "static": false,
    "longname": "js/game/systems/underground_belt.js~UndergroundBeltSystem#staleAreaWatcher",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3186,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/underground_belt.js~UndergroundBeltSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/underground_belt.js~UndergroundBeltSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3187,
    "kind": "method",
    "name": "onEntityManuallyPlaced",
    "memberof": "js/game/systems/underground_belt.js~UndergroundBeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/underground_belt.js~UndergroundBeltSystem#onEntityManuallyPlaced",
    "access": "public",
    "description": "Callback when an entity got placed, used to remove belts between underground belts",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3188,
    "kind": "method",
    "name": "recomputeArea",
    "memberof": "js/game/systems/underground_belt.js~UndergroundBeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/underground_belt.js~UndergroundBeltSystem#recomputeArea",
    "access": "public",
    "description": "Recomputes the cache in the given area, invalidating all entries there",
    "lineNumber": 212,
    "params": [
      {
        "nullable": null,
        "types": [
          "Rectangle"
        ],
        "spread": false,
        "optional": false,
        "name": "area",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3189,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/underground_belt.js~UndergroundBeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/underground_belt.js~UndergroundBeltSystem#update",
    "access": "public",
    "description": null,
    "lineNumber": 228,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3190,
    "kind": "method",
    "name": "findRecieverForSender",
    "memberof": "js/game/systems/underground_belt.js~UndergroundBeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/underground_belt.js~UndergroundBeltSystem#findRecieverForSender",
    "access": "public",
    "description": "Finds the receiver for a given sender",
    "lineNumber": 247,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{import(\"../components/underground_belt\").LinkedUndergroundBelt}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "import(\"../components/underground_belt\").LinkedUndergroundBelt"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3191,
    "kind": "method",
    "name": "handleSender",
    "memberof": "js/game/systems/underground_belt.js~UndergroundBeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/underground_belt.js~UndergroundBeltSystem#handleSender",
    "access": "public",
    "description": "",
    "lineNumber": 295,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3192,
    "kind": "method",
    "name": "handleReceiver",
    "memberof": "js/game/systems/underground_belt.js~UndergroundBeltSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/underground_belt.js~UndergroundBeltSystem#handleReceiver",
    "access": "public",
    "description": "",
    "lineNumber": 334,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3193,
    "kind": "file",
    "name": "js/game/systems/wire.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { gMetaBuildingRegistry } from \"../../core/global_registries\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { Rectangle } from \"../../core/rectangle\";\r\nimport { AtlasSprite } from \"../../core/sprites\";\r\nimport { StaleAreaDetector } from \"../../core/stale_area_detector\";\r\nimport { fastArrayDeleteValueIfContained } from \"../../core/utils\";\r\nimport {\r\n    arrayAllDirections,\r\n    enumDirection,\r\n    enumDirectionToVector,\r\n    enumInvertedDirections,\r\n    Vector,\r\n} from \"../../core/vector\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { MetaWireBuilding } from \"../buildings/wire\";\r\nimport { getCodeFromBuildingData } from \"../building_codes\";\r\nimport { enumWireType, WireComponent } from \"../components/wire\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { WireTunnelComponent } from \"../components/wire_tunnel\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { isTruthyItem } from \"../items/boolean_item\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\n\r\nconst logger = createLogger(\"wires\");\r\n\r\nlet networkUidCounter = 0;\r\n\r\nconst VERBOSE_WIRES = G_IS_DEV && false;\r\n\r\nexport class WireNetwork {\r\n    constructor() {\r\n        /**\r\n         * Who contributes to this network\r\n         * @type {Array<{ entity: Entity, slot: import(\"../components/wired_pins\").WirePinSlot }>} */\r\n        this.providers = [];\r\n\r\n        /**\r\n         * Who takes values from this network\r\n         * @type {Array<{ entity: Entity, slot: import(\"../components/wired_pins\").WirePinSlot }>} */\r\n        this.receivers = [];\r\n\r\n        /**\r\n         * All connected slots\r\n         * @type {Array<{ entity: Entity, slot: import(\"../components/wired_pins\").WirePinSlot }>}\r\n         */\r\n        this.allSlots = [];\r\n\r\n        /**\r\n         * All connected tunnels\r\n         * @type {Array<Entity>}\r\n         */\r\n        this.tunnels = [];\r\n\r\n        /**\r\n         * Which wires are in this network\r\n         * @type {Array<Entity>}\r\n         */\r\n        this.wires = [];\r\n\r\n        /**\r\n         * The current value of this network\r\n         * @type {BaseItem}\r\n         */\r\n        this.currentValue = null;\r\n\r\n        /**\r\n         * Whether this network has a value conflict, that is, more than one\r\n         * sender has sent a value\r\n         * @type {boolean}\r\n         */\r\n        this.valueConflict = false;\r\n\r\n        /**\r\n         * Unique network identifier\r\n         * @type {number}\r\n         */\r\n        this.uid = ++networkUidCounter;\r\n    }\r\n\r\n    /**\r\n     * Returns whether this network currently has a value\r\n     * @returns {boolean}\r\n     */\r\n    hasValue() {\r\n        return !!this.currentValue && !this.valueConflict;\r\n    }\r\n}\r\n\r\nexport class WireSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [WireComponent]);\r\n\r\n        /**\r\n         * @type {Object<MetaWireBuilding.wireVariants, Object<enumWireType, AtlasSprite>>}\r\n         */\r\n        this.wireSprites = {};\r\n\r\n        const variants = [\"conflict\", ...Object.keys(MetaWireBuilding.wireVariants)];\r\n        for (let i = 0; i < variants.length; ++i) {\r\n            const wireVariant = variants[i];\r\n            const sprites = {};\r\n            for (const wireType in enumWireType) {\r\n                sprites[wireType] = Loader.getSprite(\r\n                    \"sprites/wires/sets/\" + wireVariant + \"_\" + wireType + \".png\"\r\n                );\r\n            }\r\n            this.wireSprites[wireVariant] = sprites;\r\n        }\r\n\r\n        this.root.signals.entityDestroyed.add(this.queuePlacementUpdate, this);\r\n        this.root.signals.entityAdded.add(this.queuePlacementUpdate, this);\r\n\r\n        this.root.signals.entityDestroyed.add(this.queueRecomputeIfWire, this);\r\n        this.root.signals.entityChanged.add(this.queueRecomputeIfWire, this);\r\n        this.root.signals.entityAdded.add(this.queueRecomputeIfWire, this);\r\n\r\n        this.needsRecompute = true;\r\n        this.isFirstRecompute = true;\r\n\r\n        this.staleArea = new StaleAreaDetector({\r\n            root: this.root,\r\n            name: \"wires\",\r\n            recomputeMethod: this.updateSurroundingWirePlacement.bind(this),\r\n        });\r\n\r\n        /**\r\n         * @type {Array<WireNetwork>}\r\n         */\r\n        this.networks = [];\r\n    }\r\n\r\n    static getId() {\r\n        return \"wire\";\r\n    }\r\n\r\n    /**\r\n     * Invalidates the wires network if the given entity is relevant for it\r\n     * @param {Entity} entity\r\n     */\r\n    queueRecomputeIfWire(entity) {\r\n        if (!this.root.gameInitialized) {\r\n            return;\r\n        }\r\n\r\n        if (this.isEntityRelevantForWires(entity)) {\r\n            this.needsRecompute = true;\r\n            this.networks = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recomputes the whole wires network\r\n     */\r\n    recomputeWiresNetwork() {\r\n        this.needsRecompute = false;\r\n        logger.log(\"Recomputing wires network\");\r\n\r\n        this.networks = [];\r\n\r\n        const wireEntities = this.root.entityMgr.getAllWithComponent(WireComponent);\r\n        const tunnelEntities = this.root.entityMgr.getAllWithComponent(WireTunnelComponent);\r\n        const pinEntities = this.root.entityMgr.getAllWithComponent(WiredPinsComponent);\r\n\r\n        // Clear all network references, but not on the first update since that's the deserializing one\r\n        if (!this.isFirstRecompute) {\r\n            for (let i = 0; i < wireEntities.length; ++i) {\r\n                wireEntities[i].components.Wire.linkedNetwork = null;\r\n            }\r\n            for (let i = 0; i < tunnelEntities.length; ++i) {\r\n                tunnelEntities[i].components.WireTunnel.linkedNetworks = [];\r\n            }\r\n\r\n            for (let i = 0; i < pinEntities.length; ++i) {\r\n                const slots = pinEntities[i].components.WiredPins.slots;\r\n                for (let k = 0; k < slots.length; ++k) {\r\n                    slots[k].linkedNetwork = null;\r\n                }\r\n            }\r\n        } else {\r\n            logger.log(\"Recomputing wires first time\");\r\n            this.isFirstRecompute = false;\r\n        }\r\n\r\n        VERBOSE_WIRES && logger.log(\"Recomputing slots\");\r\n\r\n        // Iterate over all ejector slots\r\n        for (let i = 0; i < pinEntities.length; ++i) {\r\n            const entity = pinEntities[i];\r\n            const slots = entity.components.WiredPins.slots;\r\n            for (let k = 0; k < slots.length; ++k) {\r\n                const slot = slots[k];\r\n\r\n                // Ejectors are computed directly, acceptors are just set\r\n                if (slot.type === enumPinSlotType.logicalEjector && !slot.linkedNetwork) {\r\n                    this.findNetworkForEjector(entity, slot);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds the network for the given slot\r\n     * @param {Entity} initialEntity\r\n     * @param {import(\"../components/wired_pins\").WirePinSlot} slot\r\n     */\r\n    findNetworkForEjector(initialEntity, slot) {\r\n        let currentNetwork = new WireNetwork();\r\n        VERBOSE_WIRES &&\r\n            logger.log(\r\n                \"Finding network for entity\",\r\n                initialEntity.uid,\r\n                initialEntity.components.StaticMapEntity.origin.toString(),\r\n                \"(nw-id:\",\r\n                currentNetwork.uid,\r\n                \")\"\r\n            );\r\n        const entitiesToVisit = [{\r\n            entity: initialEntity,\r\n            slot,\r\n        }, ];\r\n\r\n        /**\r\n         * Once we occur a wire, we store its variant so we don't connect to\r\n         * mismatching ones\r\n         * @type {MetaWireBuilding.wireVariants}\r\n         */\r\n        let variantMask = null;\r\n\r\n        while (entitiesToVisit.length > 0) {\r\n            const nextData = entitiesToVisit.pop();\r\n            const nextEntity = nextData.entity;\r\n\r\n            const wireComp = nextEntity.components.Wire;\r\n            const staticComp = nextEntity.components.StaticMapEntity;\r\n\r\n            VERBOSE_WIRES && logger.log(\"Visiting\", staticComp.origin.toString(), \"(\", nextEntity.uid, \")\");\r\n\r\n            // Where to search for neighbours\r\n            let newSearchDirections = [];\r\n            let newSearchTile = null;\r\n\r\n            //// WIRE\r\n            if (wireComp) {\r\n                // Sanity check\r\n                assert(!wireComp.linkedNetwork || wireComp.linkedNetwork === currentNetwork,\r\n                    \"Mismatching wire network on wire entity \" +\r\n                    (wireComp.linkedNetwork ? wireComp.linkedNetwork.uid : \"<empty>\") +\r\n                    \" vs \" +\r\n                    currentNetwork.uid +\r\n                    \" @ \" +\r\n                    staticComp.origin.toString()\r\n                );\r\n\r\n                if (!wireComp.linkedNetwork) {\r\n                    if (variantMask && wireComp.variant !== variantMask) {\r\n                        // Mismatching variant\r\n                    } else {\r\n                        // This one is new! :D\r\n                        VERBOSE_WIRES && logger.log(\"  Visited new wire:\", staticComp.origin.toString());\r\n                        wireComp.linkedNetwork = currentNetwork;\r\n                        currentNetwork.wires.push(nextEntity);\r\n\r\n                        newSearchDirections = arrayAllDirections;\r\n                        newSearchTile = nextEntity.components.StaticMapEntity.origin;\r\n                        variantMask = wireComp.variant;\r\n                    }\r\n                }\r\n            }\r\n\r\n            //// PINS\r\n            const pinsComp = nextEntity.components.WiredPins;\r\n            if (pinsComp) {\r\n                const slot = nextData.slot;\r\n                assert(slot, \"No slot set for next entity\");\r\n\r\n                if (slot.type === enumPinSlotType.logicalEjector) {\r\n                    VERBOSE_WIRES &&\r\n                        logger.log(\"  Visiting ejector slot\", staticComp.origin.toString(), \"->\", slot.type);\r\n                } else if (slot.type === enumPinSlotType.logicalAcceptor) {\r\n                    VERBOSE_WIRES &&\r\n                        logger.log(\"  Visiting acceptor slot\", staticComp.origin.toString(), \"->\", slot.type);\r\n                } else {\r\n                    assertAlways(false, \"Bad slot type: \" + slot.type);\r\n                }\r\n\r\n                // Sanity check\r\n                assert(!slot.linkedNetwork || slot.linkedNetwork === currentNetwork,\r\n                    \"Mismatching wire network on pin slot entity \" +\r\n                    (slot.linkedNetwork ? slot.linkedNetwork.uid : \"<empty>\") +\r\n                    \" vs \" +\r\n                    currentNetwork.uid\r\n                );\r\n                if (!slot.linkedNetwork) {\r\n                    // This one is new\r\n                    VERBOSE_WIRES && logger.log(\"  Visited new slot:\", staticComp.origin.toString());\r\n\r\n                    // Add to the right list\r\n                    if (slot.type === enumPinSlotType.logicalEjector) {\r\n                        currentNetwork.providers.push({ entity: nextEntity, slot });\r\n                    } else if (slot.type === enumPinSlotType.logicalAcceptor) {\r\n                        currentNetwork.receivers.push({ entity: nextEntity, slot });\r\n                    } else {\r\n                        assertAlways(false, \"unknown slot type:\" + slot.type);\r\n                    }\r\n\r\n                    // Register on the network\r\n                    currentNetwork.allSlots.push({ entity: nextEntity, slot });\r\n                    slot.linkedNetwork = currentNetwork;\r\n\r\n                    // Specify where to search next\r\n                    newSearchDirections = [staticComp.localDirectionToWorld(slot.direction)];\r\n                    newSearchTile = staticComp.localTileToWorld(slot.pos);\r\n                }\r\n            }\r\n\r\n            if (newSearchTile) {\r\n                // Find new surrounding wire targets\r\n                const newTargets = this.findSurroundingWireTargets(\r\n                    newSearchTile,\r\n                    newSearchDirections,\r\n                    currentNetwork,\r\n                    variantMask\r\n                );\r\n\r\n                VERBOSE_WIRES && logger.log(\"   Found\", newTargets, \"new targets to visit!\");\r\n                for (let i = 0; i < newTargets.length; ++i) {\r\n                    entitiesToVisit.push(newTargets[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (\r\n            currentNetwork.providers.length > 0 &&\r\n            (currentNetwork.wires.length > 0 ||\r\n                currentNetwork.receivers.length > 0 ||\r\n                currentNetwork.tunnels.length > 0)\r\n        ) {\r\n            this.networks.push(currentNetwork);\r\n            VERBOSE_WIRES && logger.log(\"Attached new network with uid\", currentNetwork);\r\n        } else {\r\n            // Unregister network again\r\n            for (let i = 0; i < currentNetwork.wires.length; ++i) {\r\n                currentNetwork.wires[i].components.Wire.linkedNetwork = null;\r\n            }\r\n\r\n            for (let i = 0; i < currentNetwork.tunnels.length; ++i) {\r\n                fastArrayDeleteValueIfContained(\r\n                    currentNetwork.tunnels[i].components.WireTunnel.linkedNetworks,\r\n                    currentNetwork\r\n                );\r\n            }\r\n\r\n            for (let i = 0; i < currentNetwork.allSlots.length; ++i) {\r\n                currentNetwork.allSlots[i].slot.linkedNetwork = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds surrounding entities which are not yet assigned to a network\r\n     * @param {Vector} initialTile\r\n     * @param {Array<enumDirection>} directions\r\n     * @param {WireNetwork} network\r\n     * @param {MetaWireBuilding.wireVariants=} variantMask Only accept connections to this mask\r\n     * @returns {Array<any>}\r\n     */\r\n    findSurroundingWireTargets(initialTile, directions, network, variantMask = null) {\r\n        let result = [];\r\n\r\n        VERBOSE_WIRES &&\r\n            logger.log(\r\n                \"    Searching for new targets at\",\r\n                initialTile.toString(),\r\n                \"and d=\",\r\n                directions,\r\n                \"with mask=\",\r\n                variantMask\r\n            );\r\n\r\n        // Go over all directions we should search for\r\n        for (let i = 0; i < directions.length; ++i) {\r\n            const direction = directions[i];\r\n            const offset = enumDirectionToVector[direction];\r\n            const initialSearchTile = initialTile.add(offset);\r\n\r\n            // Store which tunnels we already visited to avoid infinite loops\r\n            const visitedTunnels = new Set();\r\n\r\n            // First, find the initial connected entities\r\n            const initialContents = this.root.map.getLayersContentsMultipleXY(\r\n                initialSearchTile.x,\r\n                initialSearchTile.y\r\n            );\r\n\r\n            // Link the initial tile to the initial entities, since it may change\r\n            /** @type {Array<{entity: Entity, tile: Vector}>} */\r\n            const contents = [];\r\n            for (let j = 0; j < initialContents.length; ++j) {\r\n                contents.push({\r\n                    entity: initialContents[j],\r\n                    tile: initialSearchTile,\r\n                });\r\n            }\r\n\r\n            for (let k = 0; k < contents.length; ++k) {\r\n                const { entity, tile } = contents[k];\r\n                const wireComp = entity.components.Wire;\r\n\r\n                // Check for wire\r\n                if (\r\n                    wireComp &&\r\n                    !wireComp.linkedNetwork &&\r\n                    (!variantMask || wireComp.variant === variantMask)\r\n                ) {\r\n                    // Wires accept connections from everywhere\r\n                    result.push({\r\n                        entity,\r\n                    });\r\n                }\r\n\r\n                // Check for connected slots\r\n                const pinComp = entity.components.WiredPins;\r\n                if (pinComp) {\r\n                    const staticComp = entity.components.StaticMapEntity;\r\n\r\n                    // Go over all slots and see if they are connected\r\n                    const pinSlots = pinComp.slots;\r\n                    for (let j = 0; j < pinSlots.length; ++j) {\r\n                        const slot = pinSlots[j];\r\n\r\n                        // Check if the position matches\r\n                        const pinPos = staticComp.localTileToWorld(slot.pos);\r\n                        if (!pinPos.equals(tile)) {\r\n                            continue;\r\n                        }\r\n\r\n                        // Check if the direction (inverted) matches\r\n                        const pinDirection = staticComp.localDirectionToWorld(slot.direction);\r\n                        if (pinDirection !== enumInvertedDirections[direction]) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (!slot.linkedNetwork) {\r\n                            result.push({\r\n                                entity,\r\n                                slot,\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    // Pin slots mean it can be nothing else\r\n                    continue;\r\n                }\r\n\r\n                // Check if it's a tunnel, if so, go to the forwarded item\r\n                const tunnelComp = entity.components.WireTunnel;\r\n                if (tunnelComp) {\r\n                    if (visitedTunnels.has(entity.uid)) {\r\n                        continue;\r\n                    }\r\n\r\n                    const staticComp = entity.components.StaticMapEntity;\r\n                    // Compute where this tunnel connects to\r\n                    const forwardedTile = WireSystem.getForwardedTile(tunnelComp, staticComp, offset);\r\n                    VERBOSE_WIRES &&\r\n                        logger.log(\r\n                            \"   Found tunnel\",\r\n                            entity.uid,\r\n                            \"at\",\r\n                            tile,\r\n                            \"-> forwarding to\",\r\n                            forwardedTile\r\n                        );\r\n\r\n                    // Figure out which entities are connected\r\n                    const connectedContents = this.root.map.getLayersContentsMultipleXY(\r\n                        forwardedTile.x,\r\n                        forwardedTile.y\r\n                    );\r\n\r\n                    // Attach the entities and the tile we search at, because it may change\r\n                    for (let h = 0; h < connectedContents.length; ++h) {\r\n                        contents.push({\r\n                            entity: connectedContents[h],\r\n                            tile: forwardedTile,\r\n                        });\r\n                    }\r\n\r\n                    // Add the tunnel to the network\r\n                    if (tunnelComp.linkedNetworks.indexOf(network) < 0) {\r\n                        tunnelComp.linkedNetworks.push(network);\r\n                    }\r\n                    if (network.tunnels.indexOf(entity) < 0) {\r\n                        network.tunnels.push(entity);\r\n                    }\r\n\r\n                    // Remember this tunnel\r\n                    visitedTunnels.add(entity.uid);\r\n                }\r\n            }\r\n        }\r\n\r\n        VERBOSE_WIRES && logger.log(\"     -> Found\", result.length);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Updates the wires network\r\n     */\r\n    update() {\r\n        this.staleArea.update();\r\n\r\n        if (this.needsRecompute) {\r\n            this.recomputeWiresNetwork();\r\n        }\r\n\r\n        // Re-compute values of all networks\r\n        for (let i = 0; i < this.networks.length; ++i) {\r\n            const network = this.networks[i];\r\n\r\n            // Reset conflicts\r\n            network.valueConflict = false;\r\n\r\n            // Aggregate values of all senders\r\n            const senders = network.providers;\r\n            let value = null;\r\n            for (let k = 0; k < senders.length; ++k) {\r\n                const senderSlot = senders[k];\r\n                const slotValue = senderSlot.slot.value;\r\n\r\n                // The first sender can just put in his value\r\n                if (!value) {\r\n                    value = slotValue;\r\n                    continue;\r\n                }\r\n\r\n                // If the slot is empty itself, just skip it\r\n                if (!slotValue) {\r\n                    continue;\r\n                }\r\n\r\n                // If there is already an value, compare if it matches ->\r\n                // otherwise there is a conflict\r\n                if (value.equals(slotValue)) {\r\n                    // All good\r\n                    continue;\r\n                }\r\n\r\n                // There is a conflict, this means the value will be null anyways\r\n                network.valueConflict = true;\r\n                break;\r\n            }\r\n\r\n            // Assign value\r\n            if (network.valueConflict) {\r\n                network.currentValue = null;\r\n            } else {\r\n                network.currentValue = value;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the given tileset and opacity\r\n     * @param {WireComponent} wireComp\r\n     * @returns {{ spriteSet: Object<enumWireType, import(\"../../core/draw_utils\").AtlasSprite>, opacity: number}}\r\n     */\r\n    getSpriteSetAndOpacityForWire(wireComp) {\r\n        if (!wireComp.linkedNetwork) {\r\n            // There is no network, it's empty\r\n            return {\r\n                // @ts-ignore\r\n                spriteSet: this.wireSprites[wireComp.variant],\r\n                opacity: 0.5,\r\n            };\r\n        }\r\n\r\n        const network = wireComp.linkedNetwork;\r\n        if (network.valueConflict) {\r\n            // There is a conflict\r\n            return {\r\n                spriteSet: this.wireSprites.conflict,\r\n                opacity: 1,\r\n            };\r\n        }\r\n\r\n        return {\r\n            // @ts-ignore\r\n            spriteSet: this.wireSprites[wireComp.variant],\r\n            opacity: isTruthyItem(network.currentValue) ? 1 : 0.5,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Draws a given chunk\r\n     * @param {import(\"../../core/draw_utils\").DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_WiresForegroundLayer(parameters, chunk) {\r\n        const contents = chunk.wireContents;\r\n        for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n            for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n                const entity = contents[x][y];\r\n                if (entity && entity.components.Wire) {\r\n                    const wireComp = entity.components.Wire;\r\n                    const wireType = wireComp.type;\r\n\r\n                    const { opacity, spriteSet } = this.getSpriteSetAndOpacityForWire(wireComp);\r\n\r\n                    const sprite = spriteSet[wireType];\r\n\r\n                    assert(sprite, \"Unknown wire type: \" + wireType);\r\n                    const staticComp = entity.components.StaticMapEntity;\r\n                    parameters.context.globalAlpha = opacity;\r\n                    staticComp.drawSpriteOnBoundsClipped(parameters, sprite, 0);\r\n\r\n                    // DEBUG Rendering\r\n                    if (G_IS_DEV && globalConfig.debug.renderWireRotations) {\r\n                        parameters.context.globalAlpha = 1;\r\n                        parameters.context.fillStyle = \"red\";\r\n                        parameters.context.font = \"5px Tahoma\";\r\n                        parameters.context.fillText(\r\n                            \"\" + staticComp.originalRotation,\r\n                            staticComp.origin.x * globalConfig.tileSize,\r\n                            staticComp.origin.y * globalConfig.tileSize + 5\r\n                        );\r\n\r\n                        parameters.context.fillStyle = \"rgba(255, 0, 0, 0.2)\";\r\n                        if (staticComp.originalRotation % 180 === 0) {\r\n                            parameters.context.fillRect(\r\n                                (staticComp.origin.x + 0.5) * globalConfig.tileSize,\r\n                                staticComp.origin.y * globalConfig.tileSize,\r\n                                3,\r\n                                globalConfig.tileSize\r\n                            );\r\n                        } else {\r\n                            parameters.context.fillRect(\r\n                                staticComp.origin.x * globalConfig.tileSize,\r\n                                (staticComp.origin.y + 0.5) * globalConfig.tileSize,\r\n                                globalConfig.tileSize,\r\n                                3\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // DEBUG Rendering\r\n                if (G_IS_DEV && globalConfig.debug.renderWireNetworkInfos) {\r\n                    if (entity) {\r\n                        const staticComp = entity.components.StaticMapEntity;\r\n                        const wireComp = entity.components.Wire;\r\n\r\n                        // Draw network info for wires\r\n                        if (wireComp && wireComp.linkedNetwork) {\r\n                            parameters.context.fillStyle = \"red\";\r\n                            parameters.context.font = \"5px Tahoma\";\r\n                            parameters.context.fillText(\r\n                                \"W\" + wireComp.linkedNetwork.uid,\r\n                                (staticComp.origin.x + 0.5) * globalConfig.tileSize,\r\n                                (staticComp.origin.y + 0.5) * globalConfig.tileSize\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        parameters.context.globalAlpha = 1;\r\n    }\r\n\r\n    /**\r\n     * Returns whether this entity is relevant for the wires network\r\n     * @param {Entity} entity\r\n     */\r\n    isEntityRelevantForWires(entity) {\r\n        return entity.components.Wire || entity.components.WiredPins || entity.components.WireTunnel;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    queuePlacementUpdate(entity) {\r\n        if (!this.root.gameInitialized) {\r\n            return;\r\n        }\r\n\r\n        if (!this.isEntityRelevantForWires(entity)) {\r\n            return;\r\n        }\r\n\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        if (!staticComp) {\r\n            return;\r\n        }\r\n\r\n        // Invalidate affected area\r\n        const originalRect = staticComp.getTileSpaceBounds();\r\n        const affectedArea = originalRect.expandedInAllDirections(1);\r\n        this.staleArea.invalidate(affectedArea);\r\n    }\r\n\r\n    /**\r\n     * Updates the wire placement after an entity has been added / deleted\r\n     * @param {Rectangle} affectedArea\r\n     */\r\n    updateSurroundingWirePlacement(affectedArea) {\r\n        const metaWire = gMetaBuildingRegistry.findByClass(MetaWireBuilding);\r\n\r\n        for (let x = affectedArea.x; x < affectedArea.right(); ++x) {\r\n            for (let y = affectedArea.y; y < affectedArea.bottom(); ++y) {\r\n                const targetEntities = this.root.map.getLayersContentsMultipleXY(x, y);\r\n                for (let i = 0; i < targetEntities.length; ++i) {\r\n                    const targetEntity = targetEntities[i];\r\n\r\n                    const targetWireComp = targetEntity.components.Wire;\r\n                    const targetStaticComp = targetEntity.components.StaticMapEntity;\r\n\r\n                    if (!targetWireComp) {\r\n                        // Not a wire\r\n                        continue;\r\n                    }\r\n\r\n                    const variant = targetStaticComp.getVariant();\r\n\r\n                    const {\r\n                        rotation,\r\n                        rotationVariant,\r\n                    } = metaWire.computeOptimalDirectionAndRotationVariantAtTile({\r\n                        root: this.root,\r\n                        tile: new Vector(x, y),\r\n                        rotation: targetStaticComp.originalRotation,\r\n                        variant,\r\n                        layer: targetEntity.layer,\r\n                    });\r\n\r\n                    // Compute delta to see if anything changed\r\n                    const newType = MetaWireBuilding.rotationVariantToType[rotationVariant];\r\n\r\n                    if (targetStaticComp.rotation !== rotation || newType !== targetWireComp.type) {\r\n                        // Change stuff\r\n                        targetStaticComp.rotation = rotation;\r\n                        metaWire.updateVariants(targetEntity, rotationVariant, variant);\r\n\r\n                        // Update code as well\r\n                        targetStaticComp.code = getCodeFromBuildingData(metaWire, variant, rotationVariant);\r\n\r\n                        // Make sure the chunks know about the update\r\n                        this.root.signals.entityChanged.dispatch(targetEntity);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nWireSystem.getForwardedTile = (tunnelComp, staticComp, offset) => staticComp.origin.add(offset);",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/wire.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3194,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/systems/wire.js",
    "static": true,
    "longname": "js/game/systems/wire.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/systems/wire.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3195,
    "kind": "variable",
    "name": "networkUidCounter",
    "memberof": "js/game/systems/wire.js",
    "static": true,
    "longname": "js/game/systems/wire.js~networkUidCounter",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/systems/wire.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3196,
    "kind": "variable",
    "name": "VERBOSE_WIRES",
    "memberof": "js/game/systems/wire.js",
    "static": true,
    "longname": "js/game/systems/wire.js~VERBOSE_WIRES",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/systems/wire.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3197,
    "kind": "class",
    "name": "WireNetwork",
    "memberof": "js/game/systems/wire.js",
    "static": true,
    "longname": "js/game/systems/wire.js~WireNetwork",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/wire.js",
    "importStyle": "{WireNetwork}",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3198,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/wire.js~WireNetwork",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wire.js~WireNetwork#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 3199,
    "kind": "member",
    "name": "providers",
    "memberof": "js/game/systems/wire.js~WireNetwork",
    "static": false,
    "longname": "js/game/systems/wire.js~WireNetwork#providers",
    "access": "public",
    "description": "Who contributes to this network",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "Array<{ entity: Entity, slot: import(\"../components/wired_pins\").WirePinSlot }>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3200,
    "kind": "member",
    "name": "receivers",
    "memberof": "js/game/systems/wire.js~WireNetwork",
    "static": false,
    "longname": "js/game/systems/wire.js~WireNetwork#receivers",
    "access": "public",
    "description": "Who takes values from this network",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "Array<{ entity: Entity, slot: import(\"../components/wired_pins\").WirePinSlot }>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3201,
    "kind": "member",
    "name": "allSlots",
    "memberof": "js/game/systems/wire.js~WireNetwork",
    "static": false,
    "longname": "js/game/systems/wire.js~WireNetwork#allSlots",
    "access": "public",
    "description": "All connected slots",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "Array<{ entity: Entity, slot: import(\"../components/wired_pins\").WirePinSlot }>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3202,
    "kind": "member",
    "name": "tunnels",
    "memberof": "js/game/systems/wire.js~WireNetwork",
    "static": false,
    "longname": "js/game/systems/wire.js~WireNetwork#tunnels",
    "access": "public",
    "description": "All connected tunnels",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "Array<Entity>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3203,
    "kind": "member",
    "name": "wires",
    "memberof": "js/game/systems/wire.js~WireNetwork",
    "static": false,
    "longname": "js/game/systems/wire.js~WireNetwork#wires",
    "access": "public",
    "description": "Which wires are in this network",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "Array<Entity>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3204,
    "kind": "member",
    "name": "currentValue",
    "memberof": "js/game/systems/wire.js~WireNetwork",
    "static": false,
    "longname": "js/game/systems/wire.js~WireNetwork#currentValue",
    "access": "public",
    "description": "The current value of this network",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "BaseItem"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3205,
    "kind": "member",
    "name": "valueConflict",
    "memberof": "js/game/systems/wire.js~WireNetwork",
    "static": false,
    "longname": "js/game/systems/wire.js~WireNetwork#valueConflict",
    "access": "public",
    "description": "Whether this network has a value conflict, that is, more than one\nsender has sent a value",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3206,
    "kind": "member",
    "name": "uid",
    "memberof": "js/game/systems/wire.js~WireNetwork",
    "static": false,
    "longname": "js/game/systems/wire.js~WireNetwork#uid",
    "access": "public",
    "description": "Unique network identifier",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3207,
    "kind": "method",
    "name": "hasValue",
    "memberof": "js/game/systems/wire.js~WireNetwork",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wire.js~WireNetwork#hasValue",
    "access": "public",
    "description": "Returns whether this network currently has a value",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3208,
    "kind": "class",
    "name": "WireSystem",
    "memberof": "js/game/systems/wire.js",
    "static": true,
    "longname": "js/game/systems/wire.js~WireSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/wire.js",
    "importStyle": "{WireSystem}",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3209,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true
  },
  {
    "__docId__": 3210,
    "kind": "member",
    "name": "wireSprites",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#wireSprites",
    "access": "public",
    "description": "",
    "lineNumber": 99,
    "type": {
      "nullable": null,
      "types": [
        "Object<MetaWireBuilding.wireVariants, Object<enumWireType, AtlasSprite>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3211,
    "kind": "member",
    "name": "needsRecompute",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#needsRecompute",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3212,
    "kind": "member",
    "name": "isFirstRecompute",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#isFirstRecompute",
    "access": "public",
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3213,
    "kind": "member",
    "name": "staleArea",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#staleArea",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3214,
    "kind": "member",
    "name": "networks",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#networks",
    "access": "public",
    "description": "",
    "lineNumber": 132,
    "type": {
      "nullable": null,
      "types": [
        "Array<WireNetwork>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3215,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/wire.js~WireSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3216,
    "kind": "method",
    "name": "queueRecomputeIfWire",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#queueRecomputeIfWire",
    "access": "public",
    "description": "Invalidates the wires network if the given entity is relevant for it",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3219,
    "kind": "method",
    "name": "recomputeWiresNetwork",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#recomputeWiresNetwork",
    "access": "public",
    "description": "Recomputes the whole wires network",
    "lineNumber": 157,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3223,
    "kind": "method",
    "name": "findNetworkForEjector",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#findNetworkForEjector",
    "access": "public",
    "description": "Finds the network for the given slot",
    "lineNumber": 209,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "initialEntity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "import(\"../components/wired_pins\").WirePinSlot"
        ],
        "spread": false,
        "optional": false,
        "name": "slot",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3224,
    "kind": "method",
    "name": "findSurroundingWireTargets",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#findSurroundingWireTargets",
    "access": "public",
    "description": "Finds surrounding entities which are not yet assigned to a network",
    "lineNumber": 370,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<any>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "initialTile",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<enumDirection>"
        ],
        "spread": false,
        "optional": false,
        "name": "directions",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "WireNetwork"
        ],
        "spread": false,
        "optional": false,
        "name": "network",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MetaWireBuilding.wireVariants="
        ],
        "spread": false,
        "optional": false,
        "name": "variantMask",
        "description": "Only accept connections to this mask"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<any>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3225,
    "kind": "method",
    "name": "update",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#update",
    "access": "public",
    "description": "Updates the wires network",
    "lineNumber": 514,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3226,
    "kind": "method",
    "name": "getSpriteSetAndOpacityForWire",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#getSpriteSetAndOpacityForWire",
    "access": "public",
    "description": "Returns the given tileset and opacity",
    "lineNumber": 572,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{ spriteSet: Object<enumWireType, import(\"../../core/draw_utils\").AtlasSprite>, opacity: number}}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "WireComponent"
        ],
        "spread": false,
        "optional": false,
        "name": "wireComp",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{ spriteSet: Object<enumWireType, import(\"../../core/draw_utils\").AtlasSprite>, opacity: number}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3227,
    "kind": "method",
    "name": "drawChunk_WiresForegroundLayer",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#drawChunk_WiresForegroundLayer",
    "access": "public",
    "description": "Draws a given chunk",
    "lineNumber": 603,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../../core/draw_utils\").DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3228,
    "kind": "method",
    "name": "isEntityRelevantForWires",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#isEntityRelevantForWires",
    "access": "public",
    "description": "Returns whether this entity is relevant for the wires network",
    "lineNumber": 679,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3229,
    "kind": "method",
    "name": "queuePlacementUpdate",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#queuePlacementUpdate",
    "access": "public",
    "description": "",
    "lineNumber": 687,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3230,
    "kind": "method",
    "name": "updateSurroundingWirePlacement",
    "memberof": "js/game/systems/wire.js~WireSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wire.js~WireSystem#updateSurroundingWirePlacement",
    "access": "public",
    "description": "Updates the wire placement after an entity has been added / deleted",
    "lineNumber": 711,
    "params": [
      {
        "nullable": null,
        "types": [
          "Rectangle"
        ],
        "spread": false,
        "optional": false,
        "name": "affectedArea",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3231,
    "kind": "file",
    "name": "js/game/systems/wired_pins.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { drawRotatedSprite } from \"../../core/draw_utils\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { STOP_PROPAGATION } from \"../../core/signal\";\r\nimport { enumDirectionToAngle, Vector } from \"../../core/vector\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\nimport { getBuildingDataFromCode } from \"../building_codes\";\r\n\r\n/** @type {Object<ItemType, number>} */\r\nconst enumTypeToSize = {\r\n    boolean: 9,\r\n    shape: 9,\r\n    color: 14,\r\n};\r\n\r\nexport class WiredPinsSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [WiredPinsComponent]);\r\n\r\n        this.pinSprites = {\r\n            [enumPinSlotType.logicalEjector]: Loader.getSprite(\"sprites/wires/logical_ejector.png\"),\r\n            [enumPinSlotType.logicalAcceptor]: Loader.getSprite(\"sprites/wires/logical_acceptor.png\"),\r\n        };\r\n\r\n        this.root.signals.prePlacementCheck.add(this.prePlacementCheck, this);\r\n        this.root.signals.freeEntityAreaBeforeBuild.add(this.freeEntityAreaBeforeBuild, this);\r\n    }\r\n\r\n    static getId() {\r\n        return \"wiredPins\";\r\n    }\r\n\r\n    /**\r\n     * Performs pre-placement checks\r\n     * @param {Entity} entity\r\n     * @param {Vector} offset\r\n     */\r\n    prePlacementCheck(entity, offset) {\r\n        // Compute area of the building\r\n        const rect = entity.components.StaticMapEntity.getTileSpaceBounds();\r\n        if (offset) {\r\n            rect.x += offset.x;\r\n            rect.y += offset.y;\r\n        }\r\n\r\n        // If this entity is placed on the wires layer, make sure we don't\r\n        // place it above a pin\r\n        if (entity.layer === \"wires\") {\r\n            for (let x = rect.x; x < rect.x + rect.w; ++x) {\r\n                for (let y = rect.y; y < rect.y + rect.h; ++y) {\r\n                    // Find which entities are in same tiles of both layers\r\n                    const entities = this.root.map.getLayersContentsMultipleXY(x, y);\r\n                    for (let i = 0; i < entities.length; ++i) {\r\n                        const otherEntity = entities[i];\r\n\r\n                        // Check if entity has a wired component\r\n                        const pinComponent = otherEntity.components.WiredPins;\r\n                        const staticComp = otherEntity.components.StaticMapEntity;\r\n                        const data = getBuildingDataFromCode(staticComp.code);\r\n                        if (!pinComponent) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (staticComp.getMetaBuilding().getIsReplaceable(data.variant)) {\r\n                            // Don't mind here, even if there would be a collision we\r\n                            // could replace it\r\n                            continue;\r\n                        }\r\n\r\n                        // Go over all pins and check if they are blocking\r\n                        const pins = pinComponent.slots;\r\n                        for (let pinSlot = 0; pinSlot < pins.length; ++pinSlot) {\r\n                            const pos = staticComp.localTileToWorld(pins[pinSlot].pos);\r\n                            // Occupied by a pin\r\n                            if (pos.x === x && pos.y === y) {\r\n                                return STOP_PROPAGATION;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check for collisions on the wires layer\r\n        if (this.checkEntityPinsCollide(entity, offset)) {\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the pins of the given entity collide on the wires layer\r\n     * @param {Entity} entity\r\n     * @param {Vector=} offset Optional, move the entity by the given offset first\r\n     * @returns {boolean} True if the pins collide\r\n     */\r\n    checkEntityPinsCollide(entity, offset) {\r\n        const pinsComp = entity.components.WiredPins;\r\n        if (!pinsComp) {\r\n            return false;\r\n        }\r\n\r\n        // Go over all slots\r\n        for (let slotIndex = 0; slotIndex < pinsComp.slots.length; ++slotIndex) {\r\n            const slot = pinsComp.slots[slotIndex];\r\n\r\n            // Figure out which tile this slot is on\r\n            const worldPos = entity.components.StaticMapEntity.localTileToWorld(slot.pos);\r\n            if (offset) {\r\n                worldPos.x += offset.x;\r\n                worldPos.y += offset.y;\r\n            }\r\n\r\n            // Check if there is any entity on that tile (Wired pins are always on the wires layer)\r\n            const collidingEntity = this.root.map.getLayerContentXY(worldPos.x, worldPos.y, \"wires\");\r\n\r\n            // If there's an entity, and it can't get removed -> That's a collision\r\n            if (collidingEntity) {\r\n                const staticComp = collidingEntity.components.StaticMapEntity;\r\n                const data = getBuildingDataFromCode(staticComp.code);\r\n                if (!collidingEntity.components.StaticMapEntity.getMetaBuilding().getIsReplaceable(\r\n                        data.variant\r\n                    )) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Called to free space for the given entity\r\n     * @param {Entity} entity\r\n     */\r\n    freeEntityAreaBeforeBuild(entity) {\r\n        const pinsComp = entity.components.WiredPins;\r\n        if (!pinsComp) {\r\n            // Entity has no pins\r\n            return;\r\n        }\r\n\r\n        // Remove any stuff which collides with the pins\r\n        for (let i = 0; i < pinsComp.slots.length; ++i) {\r\n            const slot = pinsComp.slots[i];\r\n            const worldPos = entity.components.StaticMapEntity.localTileToWorld(slot.pos);\r\n            const collidingEntity = this.root.map.getLayerContentXY(worldPos.x, worldPos.y, \"wires\");\r\n            if (collidingEntity) {\r\n                const staticComp = collidingEntity.components.StaticMapEntity;\r\n                const data = getBuildingDataFromCode(staticComp.code);\r\n                assertAlways(\r\n                    collidingEntity.components.StaticMapEntity.getMetaBuilding().getIsReplaceable(\r\n                        data.variant\r\n                    ),\r\n                    \"Tried to replace non-repleaceable entity for pins\"\r\n                );\r\n                if (!this.root.logic.tryDeleteBuilding(collidingEntity)) {\r\n                    assertAlways(false, \"Tried to replace non-repleaceable entity for pins #2\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws a given entity\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk_WiresForegroundLayer(parameters, chunk) {\r\n        const contents = chunk.containedEntities;\r\n\r\n        for (let i = 0; i < contents.length; ++i) {\r\n            const entity = contents[i];\r\n            const pinsComp = entity.components.WiredPins;\r\n            if (!pinsComp) {\r\n                continue;\r\n            }\r\n\r\n            const staticComp = entity.components.StaticMapEntity;\r\n            const data = getBuildingDataFromCode(staticComp.code);\r\n            const slots = pinsComp.slots;\r\n\r\n            for (let j = 0; j < slots.length; ++j) {\r\n                const slot = slots[j];\r\n                const tile = staticComp.localTileToWorld(slot.pos);\r\n\r\n                if (!chunk.tileSpaceRectangle.containsPoint(tile.x, tile.y)) {\r\n                    // Doesn't belong to this chunk\r\n                    continue;\r\n                }\r\n                const worldPos = tile.toWorldSpaceCenterOfTile();\r\n\r\n                // Culling\r\n                if (!parameters.visibleRect.containsCircle(worldPos.x, worldPos.y, globalConfig.halfTileSize)) {\r\n                    continue;\r\n                }\r\n\r\n                const effectiveRotation = Math.radians(\r\n                    staticComp.rotation + enumDirectionToAngle[slot.direction]\r\n                );\r\n\r\n                if (staticComp.getMetaBuilding().getRenderPins(data.variant)) {\r\n                    drawRotatedSprite({\r\n                        parameters,\r\n                        sprite: this.pinSprites[slot.type],\r\n                        x: worldPos.x,\r\n                        y: worldPos.y,\r\n                        angle: effectiveRotation,\r\n                        size: globalConfig.tileSize + 2,\r\n                        offsetX: 0,\r\n                        offsetY: 0,\r\n                    });\r\n                }\r\n\r\n                // Draw contained item to visualize whats emitted\r\n                const value = slot.value;\r\n                if (value) {\r\n                    const offset = new Vector(0, -9.1).rotated(effectiveRotation);\r\n\r\n                    value.drawItemCenteredClipped(\r\n                        worldPos.x + offset.x,\r\n                        worldPos.y + offset.y,\r\n                        parameters,\r\n                        enumTypeToSize[value.getItemType()]\r\n                    );\r\n                }\r\n\r\n                // Debug view\r\n                if (G_IS_DEV && globalConfig.debug.renderWireNetworkInfos) {\r\n                    const offset = new Vector(0, -10).rotated(effectiveRotation);\r\n                    const network = slot.linkedNetwork;\r\n                    parameters.context.fillStyle = \"blue\";\r\n                    parameters.context.font = \"5px Tahoma\";\r\n                    parameters.context.textAlign = \"center\";\r\n                    parameters.context.fillText(\r\n                        network ? \"S\" + network.uid : \"???\",\r\n                        (tile.x + 0.5) * globalConfig.tileSize + offset.x,\r\n                        (tile.y + 0.5) * globalConfig.tileSize + offset.y\r\n                    );\r\n                    parameters.context.textAlign = \"left\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/systems/wired_pins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3232,
    "kind": "variable",
    "name": "enumTypeToSize",
    "memberof": "js/game/systems/wired_pins.js",
    "static": true,
    "longname": "js/game/systems/wired_pins.js~enumTypeToSize",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/systems/wired_pins.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "Object<ItemType, number>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 3233,
    "kind": "class",
    "name": "WiredPinsSystem",
    "memberof": "js/game/systems/wired_pins.js",
    "static": true,
    "longname": "js/game/systems/wired_pins.js~WiredPinsSystem",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/systems/wired_pins.js",
    "importStyle": "{WiredPinsSystem}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/game_system_with_filter.js~GameSystemWithFilter"
    ]
  },
  {
    "__docId__": 3234,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/systems/wired_pins.js~WiredPinsSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wired_pins.js~WiredPinsSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 3235,
    "kind": "member",
    "name": "pinSprites",
    "memberof": "js/game/systems/wired_pins.js~WiredPinsSystem",
    "static": false,
    "longname": "js/game/systems/wired_pins.js~WiredPinsSystem#pinSprites",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "{\"undefined\": *}"
      ]
    }
  },
  {
    "__docId__": 3236,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/systems/wired_pins.js~WiredPinsSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/systems/wired_pins.js~WiredPinsSystem.getId",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3237,
    "kind": "method",
    "name": "prePlacementCheck",
    "memberof": "js/game/systems/wired_pins.js~WiredPinsSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wired_pins.js~WiredPinsSystem#prePlacementCheck",
    "access": "public",
    "description": "Performs pre-placement checks",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3238,
    "kind": "method",
    "name": "checkEntityPinsCollide",
    "memberof": "js/game/systems/wired_pins.js~WiredPinsSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wired_pins.js~WiredPinsSystem#checkEntityPinsCollide",
    "access": "public",
    "description": "Checks if the pins of the given entity collide on the wires layer",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True if the pins collide"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector="
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "Optional, move the entity by the given offset first"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the pins collide"
    }
  },
  {
    "__docId__": 3239,
    "kind": "method",
    "name": "freeEntityAreaBeforeBuild",
    "memberof": "js/game/systems/wired_pins.js~WiredPinsSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wired_pins.js~WiredPinsSystem#freeEntityAreaBeforeBuild",
    "access": "public",
    "description": "Called to free space for the given entity",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3240,
    "kind": "method",
    "name": "drawChunk_WiresForegroundLayer",
    "memberof": "js/game/systems/wired_pins.js~WiredPinsSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/systems/wired_pins.js~WiredPinsSystem#drawChunk_WiresForegroundLayer",
    "access": "public",
    "description": "Draws a given entity",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "DrawParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapChunkView"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3241,
    "kind": "file",
    "name": "js/game/theme.js",
    "content": "export const VANILLA_THEMES = {\r\n    dark: require(\"./themes/dark.json\"),\r\n    light: require(\"./themes/light.json\"),\r\n};\r\n\r\nexport let THEME = VANILLA_THEMES.light;\r\n\r\nexport function applyGameTheme(id) {\r\n    THEME = shapezAPI.themes[id];\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/theme.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3242,
    "kind": "variable",
    "name": "VANILLA_THEMES",
    "memberof": "js/game/theme.js",
    "static": true,
    "longname": "js/game/theme.js~VANILLA_THEMES",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/theme.js",
    "importStyle": "{VANILLA_THEMES}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"dark\": *, \"light\": *}"
      ]
    }
  },
  {
    "__docId__": 3243,
    "kind": "variable",
    "name": "THEME",
    "memberof": "js/game/theme.js",
    "static": true,
    "longname": "js/game/theme.js~THEME",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/theme.js",
    "importStyle": "{THEME}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3244,
    "kind": "function",
    "name": "applyGameTheme",
    "memberof": "js/game/theme.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/theme.js~applyGameTheme",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/theme.js",
    "importStyle": "{applyGameTheme}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3245,
    "kind": "file",
    "name": "js/game/time/base_game_speed.js",
    "content": "/* typehints:start */\r\nimport { GameRoot } from \"../root\";\r\n/* typehints:end */\r\n\r\nimport { BasicSerializableObject } from \"../../savegame/serialization\";\r\n\r\nexport class BaseGameSpeed extends BasicSerializableObject {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n        this.root = root;\r\n        this.initializeAfterDeserialize(root);\r\n    }\r\n\r\n    /** @returns {string} */\r\n    static getId() {\r\n        abstract;\r\n        return \"unknown-speed\";\r\n    }\r\n\r\n    getId() {\r\n        // @ts-ignore\r\n        return this.constructor.getId();\r\n    }\r\n\r\n    static getSchema() {\r\n        return {};\r\n    }\r\n\r\n    initializeAfterDeserialize(root) {\r\n        this.root = root;\r\n    }\r\n\r\n    /**\r\n     * Returns the time multiplier\r\n     */\r\n    getTimeMultiplier() {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * Returns how many logic steps there may be queued\r\n     */\r\n    getMaxLogicStepsInQueue() {\r\n        return 3;\r\n    }\r\n\r\n    // Internals\r\n    /** @returns {BaseGameSpeed} */\r\n    newSpeed(instance) {\r\n        return new instance(this.root);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/time/base_game_speed.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3246,
    "kind": "class",
    "name": "BaseGameSpeed",
    "memberof": "js/game/time/base_game_speed.js",
    "static": true,
    "longname": "js/game/time/base_game_speed.js~BaseGameSpeed",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/time/base_game_speed.js",
    "importStyle": "{BaseGameSpeed}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/serialization.js~BasicSerializableObject"
    ]
  },
  {
    "__docId__": 3247,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/time/base_game_speed.js~BaseGameSpeed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/base_game_speed.js~BaseGameSpeed#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 3248,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/time/base_game_speed.js~BaseGameSpeed",
    "static": false,
    "longname": "js/game/time/base_game_speed.js~BaseGameSpeed#root",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3249,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/time/base_game_speed.js~BaseGameSpeed",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/time/base_game_speed.js~BaseGameSpeed.getId",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3250,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/time/base_game_speed.js~BaseGameSpeed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/base_game_speed.js~BaseGameSpeed#getId",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3251,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/time/base_game_speed.js~BaseGameSpeed",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/time/base_game_speed.js~BaseGameSpeed.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 3252,
    "kind": "method",
    "name": "initializeAfterDeserialize",
    "memberof": "js/game/time/base_game_speed.js~BaseGameSpeed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/base_game_speed.js~BaseGameSpeed#initializeAfterDeserialize",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "root",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3254,
    "kind": "method",
    "name": "getTimeMultiplier",
    "memberof": "js/game/time/base_game_speed.js~BaseGameSpeed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/base_game_speed.js~BaseGameSpeed#getTimeMultiplier",
    "access": "public",
    "description": "Returns the time multiplier",
    "lineNumber": 39,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3255,
    "kind": "method",
    "name": "getMaxLogicStepsInQueue",
    "memberof": "js/game/time/base_game_speed.js~BaseGameSpeed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/base_game_speed.js~BaseGameSpeed#getMaxLogicStepsInQueue",
    "access": "public",
    "description": "Returns how many logic steps there may be queued",
    "lineNumber": 46,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3256,
    "kind": "method",
    "name": "newSpeed",
    "memberof": "js/game/time/base_game_speed.js~BaseGameSpeed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/base_game_speed.js~BaseGameSpeed#newSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseGameSpeed}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseGameSpeed"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "instance",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 3257,
    "kind": "file",
    "name": "js/game/time/fast_forward_game_speed.js",
    "content": "import { BaseGameSpeed } from \"./base_game_speed\";\r\nimport { globalConfig } from \"../../core/config\";\r\n\r\nexport class FastForwardGameSpeed extends BaseGameSpeed {\r\n    static getId() {\r\n        return \"fast-forward\";\r\n    }\r\n\r\n    getTimeMultiplier() {\r\n        return globalConfig.fastForwardSpeed;\r\n    }\r\n\r\n    getMaxLogicStepsInQueue() {\r\n        return 3 * globalConfig.fastForwardSpeed;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/time/fast_forward_game_speed.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3258,
    "kind": "class",
    "name": "FastForwardGameSpeed",
    "memberof": "js/game/time/fast_forward_game_speed.js",
    "static": true,
    "longname": "js/game/time/fast_forward_game_speed.js~FastForwardGameSpeed",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/time/fast_forward_game_speed.js",
    "importStyle": "{FastForwardGameSpeed}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/time/base_game_speed.js~BaseGameSpeed"
    ]
  },
  {
    "__docId__": 3259,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/time/fast_forward_game_speed.js~FastForwardGameSpeed",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/time/fast_forward_game_speed.js~FastForwardGameSpeed.getId",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3260,
    "kind": "method",
    "name": "getTimeMultiplier",
    "memberof": "js/game/time/fast_forward_game_speed.js~FastForwardGameSpeed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/fast_forward_game_speed.js~FastForwardGameSpeed#getTimeMultiplier",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3261,
    "kind": "method",
    "name": "getMaxLogicStepsInQueue",
    "memberof": "js/game/time/fast_forward_game_speed.js~FastForwardGameSpeed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/fast_forward_game_speed.js~FastForwardGameSpeed#getMaxLogicStepsInQueue",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3262,
    "kind": "file",
    "name": "js/game/time/game_time.js",
    "content": "/* typehints:start */\r\nimport { GameRoot } from \"../root\";\r\n/* typehints:end */\r\n\r\nimport { types, BasicSerializableObject } from \"../../savegame/serialization\";\r\nimport { RegularGameSpeed } from \"./regular_game_speed\";\r\nimport { BaseGameSpeed } from \"./base_game_speed\";\r\nimport { PausedGameSpeed } from \"./paused_game_speed\";\r\nimport { gGameSpeedRegistry } from \"../../core/global_registries\";\r\nimport { globalConfig } from \"../../core/config\";\r\nimport { createLogger } from \"../../core/logging\";\r\n\r\nconst logger = createLogger(\"game_time\");\r\n\r\nexport class GameTime extends BasicSerializableObject {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n        this.root = root;\r\n\r\n        // Current ingame time seconds, not incremented while paused\r\n        this.timeSeconds = 0;\r\n\r\n        // Current \"realtime\", a timer which always is incremented no matter whether the game is paused or no\r\n        this.realtimeSeconds = 0;\r\n\r\n        // The adjustment, used when loading savegames so we can continue where we were\r\n        this.realtimeAdjust = 0;\r\n\r\n        /** @type {BaseGameSpeed} */\r\n        this.speed = new RegularGameSpeed(this.root);\r\n\r\n        // Store how much time we have in bucket\r\n        this.logicTimeBudget = 0;\r\n    }\r\n\r\n    static getId() {\r\n        return \"GameTime\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            timeSeconds: types.float,\r\n            speed: types.obj(gGameSpeedRegistry),\r\n            realtimeSeconds: types.float,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Fetches the new \"real\" time, called from the core once per frame, since performance now() is kinda slow\r\n     */\r\n    updateRealtimeNow() {\r\n        this.realtimeSeconds = performance.now() / 1000.0 + this.realtimeAdjust;\r\n    }\r\n\r\n    /**\r\n     * Returns the ingame time in milliseconds\r\n     */\r\n    getTimeMs() {\r\n        return this.timeSeconds * 1000.0;\r\n    }\r\n\r\n    /**\r\n     * Returns how many seconds we are in the grace period\r\n     * @returns {number}\r\n     */\r\n    getRemainingGracePeriodSeconds() {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if we are currently in the grace period\r\n     * @returns {boolean}\r\n     */\r\n    getIsWithinGracePeriod() {\r\n        return this.getRemainingGracePeriodSeconds() > 0;\r\n    }\r\n\r\n    /**\r\n     * Internal method to generate new logic time budget\r\n     * @param {number} deltaMs\r\n     */\r\n    internalAddDeltaToBudget(deltaMs) {\r\n        // Only update if game is supposed to update\r\n        if (this.root.hud.shouldPauseGame()) {\r\n            this.logicTimeBudget = 0;\r\n        } else {\r\n            const multiplier = this.getSpeed().getTimeMultiplier();\r\n            this.logicTimeBudget += deltaMs * multiplier;\r\n        }\r\n\r\n        // Check for too big pile of updates -> reduce it to 1\r\n        let maxLogicSteps = Math.max(\r\n            3,\r\n            (this.speed.getMaxLogicStepsInQueue() * this.root.dynamicTickrate.currentTickRate) / 60\r\n        );\r\n        if (G_IS_DEV && globalConfig.debug.framePausesBetweenTicks) {\r\n            maxLogicSteps *= 1 + globalConfig.debug.framePausesBetweenTicks;\r\n        }\r\n\r\n        if (this.logicTimeBudget > this.root.dynamicTickrate.deltaMs * maxLogicSteps) {\r\n            this.logicTimeBudget = this.root.dynamicTickrate.deltaMs * maxLogicSteps;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs update ticks based on the queued logic budget\r\n     * @param {number} deltaMs\r\n     * @param {function():boolean} updateMethod\r\n     */\r\n    performTicks(deltaMs, updateMethod) {\r\n        this.internalAddDeltaToBudget(deltaMs);\r\n\r\n        const speedAtStart = this.root.time.getSpeed();\r\n\r\n        let effectiveDelta = this.root.dynamicTickrate.deltaMs;\r\n        if (G_IS_DEV && globalConfig.debug.framePausesBetweenTicks) {\r\n            effectiveDelta += globalConfig.debug.framePausesBetweenTicks * this.root.dynamicTickrate.deltaMs;\r\n        }\r\n\r\n        // Update physics & logic\r\n        while (this.logicTimeBudget >= effectiveDelta) {\r\n            this.logicTimeBudget -= effectiveDelta;\r\n\r\n            if (!updateMethod()) {\r\n                // Gameover happened or so, do not update anymore\r\n                return;\r\n            }\r\n\r\n            // Step game time\r\n            this.timeSeconds += this.root.dynamicTickrate.deltaSeconds;\r\n\r\n            // Game time speed changed, need to abort since our logic steps are no longer valid\r\n            if (speedAtStart.getId() !== this.speed.getId()) {\r\n                logger.warn(\r\n                    \"Skipping update because speed changed from\",\r\n                    speedAtStart.getId(),\r\n                    \"to\",\r\n                    this.speed.getId()\r\n                );\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns ingame time in seconds\r\n     * @returns {number} seconds\r\n     */\r\n    now() {\r\n        return this.timeSeconds;\r\n    }\r\n\r\n    /**\r\n     * Returns \"real\" time in seconds\r\n     * @returns {number} seconds\r\n     */\r\n    realtimeNow() {\r\n        return this.realtimeSeconds;\r\n    }\r\n\r\n    /**\r\n     * Returns \"real\" time in seconds\r\n     * @returns {number} seconds\r\n     */\r\n    systemNow() {\r\n        return (this.realtimeSeconds - this.realtimeAdjust) * 1000.0;\r\n    }\r\n\r\n    getIsPaused() {\r\n        return this.speed.getId() === PausedGameSpeed.getId();\r\n    }\r\n\r\n    getSpeed() {\r\n        return this.speed;\r\n    }\r\n\r\n    setSpeed(speed) {\r\n        assert(speed instanceof BaseGameSpeed, \"Not a valid game speed\");\r\n        if (this.speed.getId() === speed.getId()) {\r\n            logger.warn(\"Same speed set than current one:\", speed.constructor.getId());\r\n        }\r\n        this.speed = speed;\r\n    }\r\n\r\n    deserialize(data) {\r\n        const errorCode = super.deserialize(data);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n\r\n        // Adjust realtime now difference so they match\r\n        this.realtimeAdjust = this.realtimeSeconds - performance.now() / 1000.0;\r\n        this.updateRealtimeNow();\r\n\r\n        this.speed.initializeAfterDeserialize(this.root);\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/time/game_time.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3263,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/game/time/game_time.js",
    "static": true,
    "longname": "js/game/time/game_time.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/time/game_time.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3264,
    "kind": "class",
    "name": "GameTime",
    "memberof": "js/game/time/game_time.js",
    "static": true,
    "longname": "js/game/time/game_time.js~GameTime",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/time/game_time.js",
    "importStyle": "{GameTime}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/serialization.js~BasicSerializableObject"
    ]
  },
  {
    "__docId__": 3265,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 3266,
    "kind": "member",
    "name": "root",
    "memberof": "js/game/time/game_time.js~GameTime",
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#root",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3267,
    "kind": "member",
    "name": "timeSeconds",
    "memberof": "js/game/time/game_time.js~GameTime",
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#timeSeconds",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3268,
    "kind": "member",
    "name": "realtimeSeconds",
    "memberof": "js/game/time/game_time.js~GameTime",
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#realtimeSeconds",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3269,
    "kind": "member",
    "name": "realtimeAdjust",
    "memberof": "js/game/time/game_time.js~GameTime",
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#realtimeAdjust",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3270,
    "kind": "member",
    "name": "speed",
    "memberof": "js/game/time/game_time.js~GameTime",
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#speed",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "BaseGameSpeed"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3271,
    "kind": "member",
    "name": "logicTimeBudget",
    "memberof": "js/game/time/game_time.js~GameTime",
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#logicTimeBudget",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3272,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/time/game_time.js~GameTime.getId",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3273,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/time/game_time.js~GameTime.getSchema",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"timeSeconds\": *, \"speed\": *, \"realtimeSeconds\": *}"
      ]
    }
  },
  {
    "__docId__": 3274,
    "kind": "method",
    "name": "updateRealtimeNow",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#updateRealtimeNow",
    "access": "public",
    "description": "Fetches the new \"real\" time, called from the core once per frame, since performance now() is kinda slow",
    "lineNumber": 54,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3276,
    "kind": "method",
    "name": "getTimeMs",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#getTimeMs",
    "access": "public",
    "description": "Returns the ingame time in milliseconds",
    "lineNumber": 61,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3277,
    "kind": "method",
    "name": "getRemainingGracePeriodSeconds",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#getRemainingGracePeriodSeconds",
    "access": "public",
    "description": "Returns how many seconds we are in the grace period",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3278,
    "kind": "method",
    "name": "getIsWithinGracePeriod",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#getIsWithinGracePeriod",
    "access": "public",
    "description": "Returns if we are currently in the grace period",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3279,
    "kind": "method",
    "name": "internalAddDeltaToBudget",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#internalAddDeltaToBudget",
    "access": "public",
    "description": "Internal method to generate new logic time budget",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "deltaMs",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3283,
    "kind": "method",
    "name": "performTicks",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#performTicks",
    "access": "public",
    "description": "Performs update ticks based on the queued logic budget",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "deltaMs",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function():boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "updateMethod",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3286,
    "kind": "method",
    "name": "now",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#now",
    "access": "public",
    "description": "Returns ingame time in seconds",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} seconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "seconds"
    },
    "params": []
  },
  {
    "__docId__": 3287,
    "kind": "method",
    "name": "realtimeNow",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#realtimeNow",
    "access": "public",
    "description": "Returns \"real\" time in seconds",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} seconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "seconds"
    },
    "params": []
  },
  {
    "__docId__": 3288,
    "kind": "method",
    "name": "systemNow",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#systemNow",
    "access": "public",
    "description": "Returns \"real\" time in seconds",
    "lineNumber": 168,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} seconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "seconds"
    },
    "params": []
  },
  {
    "__docId__": 3289,
    "kind": "method",
    "name": "getIsPaused",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#getIsPaused",
    "access": "public",
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3290,
    "kind": "method",
    "name": "getSpeed",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#getSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3291,
    "kind": "method",
    "name": "setSpeed",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#setSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 180,
    "undocument": true,
    "params": [
      {
        "name": "speed",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3293,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/game/time/game_time.js~GameTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/game_time.js~GameTime#deserialize",
    "access": "public",
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3295,
    "kind": "file",
    "name": "js/game/time/paused_game_speed.js",
    "content": "import { BaseGameSpeed } from \"./base_game_speed\";\r\n\r\nexport class PausedGameSpeed extends BaseGameSpeed {\r\n    static getId() {\r\n        return \"paused\";\r\n    }\r\n\r\n    getTimeMultiplier() {\r\n        return 0;\r\n    }\r\n\r\n    getMaxLogicStepsInQueue() {\r\n        return 0;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/time/paused_game_speed.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3296,
    "kind": "class",
    "name": "PausedGameSpeed",
    "memberof": "js/game/time/paused_game_speed.js",
    "static": true,
    "longname": "js/game/time/paused_game_speed.js~PausedGameSpeed",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/time/paused_game_speed.js",
    "importStyle": "{PausedGameSpeed}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/time/base_game_speed.js~BaseGameSpeed"
    ]
  },
  {
    "__docId__": 3297,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/time/paused_game_speed.js~PausedGameSpeed",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/time/paused_game_speed.js~PausedGameSpeed.getId",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3298,
    "kind": "method",
    "name": "getTimeMultiplier",
    "memberof": "js/game/time/paused_game_speed.js~PausedGameSpeed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/paused_game_speed.js~PausedGameSpeed#getTimeMultiplier",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3299,
    "kind": "method",
    "name": "getMaxLogicStepsInQueue",
    "memberof": "js/game/time/paused_game_speed.js~PausedGameSpeed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/paused_game_speed.js~PausedGameSpeed#getMaxLogicStepsInQueue",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3300,
    "kind": "file",
    "name": "js/game/time/regular_game_speed.js",
    "content": "import { BaseGameSpeed } from \"./base_game_speed\";\r\n\r\nexport class RegularGameSpeed extends BaseGameSpeed {\r\n    static getId() {\r\n        return \"regular\";\r\n    }\r\n\r\n    getTimeMultiplier() {\r\n        return 1;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/time/regular_game_speed.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3301,
    "kind": "class",
    "name": "RegularGameSpeed",
    "memberof": "js/game/time/regular_game_speed.js",
    "static": true,
    "longname": "js/game/time/regular_game_speed.js~RegularGameSpeed",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/time/regular_game_speed.js",
    "importStyle": "{RegularGameSpeed}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/game/time/base_game_speed.js~BaseGameSpeed"
    ]
  },
  {
    "__docId__": 3302,
    "kind": "method",
    "name": "getId",
    "memberof": "js/game/time/regular_game_speed.js~RegularGameSpeed",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/time/regular_game_speed.js~RegularGameSpeed.getId",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3303,
    "kind": "method",
    "name": "getTimeMultiplier",
    "memberof": "js/game/time/regular_game_speed.js~RegularGameSpeed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/game/time/regular_game_speed.js~RegularGameSpeed#getTimeMultiplier",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3304,
    "kind": "file",
    "name": "js/game/tutorial_goals.js",
    "content": "/**\r\n * Don't forget to also update tutorial_goals_mappings.js as well as the translations!\r\n * @enum {string}\r\n */\r\nexport const enumHubGoalRewards = {\r\n    reward_cutter_and_trash: \"reward_cutter_and_trash\",\r\n    reward_rotater: \"reward_rotater\",\r\n    reward_painter: \"reward_painter\",\r\n    reward_mixer: \"reward_mixer\",\r\n    reward_stacker: \"reward_stacker\",\r\n    reward_balancer: \"reward_balancer\",\r\n    reward_tunnel: \"reward_tunnel\",\r\n\r\n    reward_rotater_ccw: \"reward_rotater_ccw\",\r\n    reward_rotater_180: \"reward_rotater_180\",\r\n    reward_miner_chainable: \"reward_miner_chainable\",\r\n    reward_underground_belt_tier_2: \"reward_underground_belt_tier_2\",\r\n    reward_belt_reader: \"reward_belt_reader\",\r\n    reward_splitter: \"reward_splitter\",\r\n    reward_cutter_quad: \"reward_cutter_quad\",\r\n    reward_painter_double: \"reward_painter_double\",\r\n    reward_storage: \"reward_storage\",\r\n    reward_merger: \"reward_merger\",\r\n    reward_wires_painter_and_levers: \"reward_wires_painter_and_levers\",\r\n    reward_display: \"reward_display\",\r\n    reward_constant_signal: \"reward_constant_signal\",\r\n    reward_logic_gates: \"reward_logic_gates\",\r\n    reward_virtual_processing: \"reward_virtual_processing\",\r\n    reward_filter: \"reward_filter\",\r\n\r\n    reward_demo_end: \"reward_demo_end\",\r\n\r\n    reward_blueprints: \"reward_blueprints\",\r\n    reward_freeplay: \"reward_freeplay\",\r\n\r\n    no_reward: \"no_reward\",\r\n    no_reward_freeplay: \"no_reward_freeplay\",\r\n};\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/tutorial_goals.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3305,
    "kind": "variable",
    "name": "enumHubGoalRewards",
    "memberof": "js/game/tutorial_goals.js",
    "static": true,
    "longname": "js/game/tutorial_goals.js~enumHubGoalRewards",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/tutorial_goals.js",
    "importStyle": "{enumHubGoalRewards}",
    "description": "Don't forget to also update tutorial_goals_mappings.js as well as the translations!",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"reward_cutter_and_trash\": string, \"reward_rotater\": string, \"reward_painter\": string, \"reward_mixer\": string, \"reward_stacker\": string, \"reward_balancer\": string, \"reward_tunnel\": string, \"reward_rotater_ccw\": string, \"reward_rotater_180\": string, \"reward_miner_chainable\": string, \"reward_underground_belt_tier_2\": string, \"reward_belt_reader\": string, \"reward_splitter\": string, \"reward_cutter_quad\": string, \"reward_painter_double\": string, \"reward_storage\": string, \"reward_merger\": string, \"reward_wires_painter_and_levers\": string, \"reward_display\": string, \"reward_constant_signal\": string, \"reward_logic_gates\": string, \"reward_virtual_processing\": string, \"reward_filter\": string, \"reward_demo_end\": string, \"reward_blueprints\": string, \"reward_freeplay\": string, \"no_reward\": string, \"no_reward_freeplay\": string}"
      ]
    }
  },
  {
    "__docId__": 3306,
    "kind": "file",
    "name": "js/game/tutorial_goals_mappings.js",
    "content": "import { T } from \"../translations\";\r\nimport { MetaBalancerBuilding } from \"./buildings/balancer\";\r\nimport { MetaConstantSignalBuilding } from \"./buildings/constant_signal\";\r\nimport { MetaCutterBuilding } from \"./buildings/cutter\";\r\nimport { MetaDisplayBuilding } from \"./buildings/display\";\r\nimport { MetaFilterBuilding } from \"./buildings/filter\";\r\nimport { MetaLogicGateBuilding } from \"./buildings/logic_gate\";\r\nimport { MetaMinerBuilding } from \"./buildings/miner\";\r\nimport { MetaMixerBuilding } from \"./buildings/mixer\";\r\nimport { MetaPainterBuilding } from \"./buildings/painter\";\r\nimport { MetaReaderBuilding } from \"./buildings/reader\";\r\nimport { MetaRotaterBuilding } from \"./buildings/rotater\";\r\nimport { MetaStackerBuilding } from \"./buildings/stacker\";\r\nimport { MetaStorageBuilding } from \"./buildings/storage\";\r\nimport { MetaUndergroundBeltBuilding } from \"./buildings/underground_belt\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"./meta_building\";\r\n/** @typedef {Array<[typeof MetaBuilding, string]>} TutorialGoalReward */\r\nimport { enumHubGoalRewards } from \"./tutorial_goals\";\r\n\r\n/**\r\n * Helper method for proper types\r\n *  @returns {TutorialGoalReward}\r\n */\r\nconst typed = x => x;\r\n\r\n/**\r\n * Stores which reward unlocks what\r\n * @enum {TutorialGoalReward?}\r\n */\r\nexport const enumHubGoalRewardsToContentUnlocked = {\r\n    [enumHubGoalRewards.reward_cutter_and_trash]: typed([\r\n        [MetaCutterBuilding, defaultBuildingVariant]\r\n    ]),\r\n    [enumHubGoalRewards.reward_rotater]: typed([\r\n        [MetaRotaterBuilding, defaultBuildingVariant]\r\n    ]),\r\n    [enumHubGoalRewards.reward_painter]: typed([\r\n        [MetaPainterBuilding, defaultBuildingVariant]\r\n    ]),\r\n    [enumHubGoalRewards.reward_mixer]: typed([\r\n        [MetaMixerBuilding, defaultBuildingVariant]\r\n    ]),\r\n    [enumHubGoalRewards.reward_stacker]: typed([\r\n        [MetaStackerBuilding, defaultBuildingVariant]\r\n    ]),\r\n    [enumHubGoalRewards.reward_balancer]: typed([\r\n        [MetaBalancerBuilding, defaultBuildingVariant]\r\n    ]),\r\n    [enumHubGoalRewards.reward_tunnel]: typed([\r\n        [MetaUndergroundBeltBuilding, defaultBuildingVariant]\r\n    ]),\r\n\r\n    [enumHubGoalRewards.reward_rotater_ccw]: typed([\r\n        [MetaRotaterBuilding, MetaRotaterBuilding.variants.ccw]\r\n    ]),\r\n    [enumHubGoalRewards.reward_rotater_180]: typed([\r\n        [MetaRotaterBuilding, MetaRotaterBuilding.variants.rotate180],\r\n    ]),\r\n    [enumHubGoalRewards.reward_miner_chainable]: typed([\r\n        [MetaMinerBuilding, MetaMinerBuilding.variants.chainable],\r\n    ]),\r\n    [enumHubGoalRewards.reward_underground_belt_tier_2]: typed([\r\n        [MetaUndergroundBeltBuilding, MetaUndergroundBeltBuilding.variants.tier2],\r\n    ]),\r\n    [enumHubGoalRewards.reward_splitter]: typed([\r\n        [MetaBalancerBuilding, MetaBalancerBuilding.variants.splitter],\r\n    ]),\r\n    [enumHubGoalRewards.reward_merger]: typed([\r\n        [MetaBalancerBuilding, MetaBalancerBuilding.variants.merger]\r\n    ]),\r\n    [enumHubGoalRewards.reward_cutter_quad]: typed([\r\n        [MetaCutterBuilding, MetaCutterBuilding.variants.quad]\r\n    ]),\r\n    [enumHubGoalRewards.reward_painter_double]: typed([\r\n        [MetaPainterBuilding, MetaPainterBuilding.variants.double],\r\n    ]),\r\n    [enumHubGoalRewards.reward_storage]: typed([\r\n        [MetaStorageBuilding, defaultBuildingVariant]\r\n    ]),\r\n\r\n    [enumHubGoalRewards.reward_belt_reader]: typed([\r\n        [MetaReaderBuilding, defaultBuildingVariant]\r\n    ]),\r\n    [enumHubGoalRewards.reward_display]: typed([\r\n        [MetaDisplayBuilding, defaultBuildingVariant]\r\n    ]),\r\n    [enumHubGoalRewards.reward_constant_signal]: typed([\r\n        [MetaConstantSignalBuilding, defaultBuildingVariant],\r\n    ]),\r\n    [enumHubGoalRewards.reward_logic_gates]: typed([\r\n        [MetaLogicGateBuilding, defaultBuildingVariant]\r\n    ]),\r\n    [enumHubGoalRewards.reward_filter]: typed([\r\n        [MetaFilterBuilding, defaultBuildingVariant]\r\n    ]),\r\n    [enumHubGoalRewards.reward_virtual_processing]: null,\r\n\r\n    [enumHubGoalRewards.reward_wires_painter_and_levers]: typed([\r\n        [MetaPainterBuilding, MetaPainterBuilding.variants.quad],\r\n    ]),\r\n    [enumHubGoalRewards.reward_freeplay]: null,\r\n    [enumHubGoalRewards.reward_blueprints]: null,\r\n    [enumHubGoalRewards.no_reward]: null,\r\n    [enumHubGoalRewards.no_reward_freeplay]: null,\r\n    [enumHubGoalRewards.reward_demo_end]: null,\r\n};\r\n\r\nif (G_IS_DEV) {\r\n    // Sanity check\r\n    for (const rewardId in enumHubGoalRewards) {\r\n        const mapping = enumHubGoalRewardsToContentUnlocked[rewardId];\r\n\r\n        if (typeof mapping === \"undefined\") {\r\n            assertAlways(\r\n                false,\r\n                \"Please define a mapping for the reward \" + rewardId + \" in tutorial_goals_mappings.js\"\r\n            );\r\n        }\r\n\r\n        const translation = T.storyRewards[rewardId];\r\n        if (!translation || !translation.title || !translation.desc) {\r\n            assertAlways(false, \"Translation for reward \" + rewardId + \"missing\");\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/game/tutorial_goals_mappings.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3307,
    "kind": "typedef",
    "name": "TutorialGoalReward",
    "memberof": "js/game/tutorial_goals_mappings.js",
    "static": true,
    "longname": "js/game/tutorial_goals_mappings.js~TutorialGoalReward",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "type": {
      "types": [
        "Array<[typeof MetaBuilding, string]>"
      ],
      "optional": false,
      "name": "TutorialGoalReward"
    }
  },
  {
    "__docId__": 3308,
    "kind": "function",
    "name": "typed",
    "memberof": "js/game/tutorial_goals_mappings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/game/tutorial_goals_mappings.js~typed",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/game/tutorial_goals_mappings.js",
    "importStyle": null,
    "description": "Helper method for proper types",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TutorialGoalReward}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TutorialGoalReward"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "ignore": true
  },
  {
    "__docId__": 3309,
    "kind": "variable",
    "name": "enumHubGoalRewardsToContentUnlocked",
    "memberof": "js/game/tutorial_goals_mappings.js",
    "static": true,
    "longname": "js/game/tutorial_goals_mappings.js~enumHubGoalRewardsToContentUnlocked",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/game/tutorial_goals_mappings.js",
    "importStyle": "{enumHubGoalRewardsToContentUnlocked}",
    "description": "Stores which reward unlocks what",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{TutorialGoalReward?}"
      }
    ],
    "type": {
      "types": [
        "{\"undefined\": *}"
      ]
    }
  },
  {
    "__docId__": 3310,
    "kind": "file",
    "name": "js/languages.js",
    "content": "/**\r\n * @type {Object<string, {name: string, data: any, code: string, region: string}>}\r\n */\r\nexport const LANGUAGES = {\r\n    \"en\": {\r\n        name: \"English\",\r\n        data: null,\r\n        code: \"en\",\r\n        region: \"\",\r\n    },\r\n    \"de\": {\r\n        name: \"Deutsch\",\r\n        data: require(\"./built-temp/base-de.json\"),\r\n        code: \"de\",\r\n        region: \"\",\r\n    },\r\n    \"fr\": {\r\n        name: \"Français\",\r\n        data: require(\"./built-temp/base-fr.json\"),\r\n        code: \"fr\",\r\n        region: \"\",\r\n    },\r\n    \"ja\": {\r\n        name: \"日本語\",\r\n        data: require(\"./built-temp/base-ja.json\"),\r\n        code: \"ja\",\r\n        region: \"\",\r\n    },\r\n    \"pt-PT\": {\r\n        name: \"Português (Portugal)\",\r\n        data: require(\"./built-temp/base-pt-PT.json\"),\r\n        code: \"pt\",\r\n        region: \"PT\",\r\n    },\r\n    \"pt-BR\": {\r\n        name: \"Português (Brasil)\",\r\n        data: require(\"./built-temp/base-pt-BR.json\"),\r\n        code: \"pt\",\r\n        region: \"BR\",\r\n    },\r\n    \"ru\": {\r\n        name: \"Русский\",\r\n        data: require(\"./built-temp/base-ru.json\"),\r\n        code: \"ru\",\r\n        region: \"\",\r\n    },\r\n    \"cs\": {\r\n        name: \"Čeština\",\r\n        data: require(\"./built-temp/base-cz.json\"),\r\n        code: \"cs\",\r\n        region: \"\",\r\n    },\r\n    \"es-419\": {\r\n        name: \"Español\",\r\n        data: require(\"./built-temp/base-es.json\"),\r\n        code: \"es\",\r\n        region: \"\",\r\n    },\r\n    \"pl\": {\r\n        name: \"Polski\",\r\n        data: require(\"./built-temp/base-pl.json\"),\r\n        code: \"pl\",\r\n        region: \"\",\r\n    },\r\n    \"kor\": {\r\n        name: \"한국어\",\r\n        data: require(\"./built-temp/base-kor.json\"),\r\n        code: \"kor\",\r\n        region: \"\",\r\n    },\r\n    \"nl\": {\r\n        name: \"Nederlands\",\r\n        data: require(\"./built-temp/base-nl.json\"),\r\n        code: \"nl\",\r\n        region: \"\",\r\n    },\r\n    \"no\": {\r\n        name: \"Norsk\",\r\n        data: require(\"./built-temp/base-no.json\"),\r\n        code: \"no\",\r\n        region: \"\",\r\n    },\r\n\r\n    \"tr\": {\r\n        name: \"Türkçe\",\r\n        data: require(\"./built-temp/base-tr.json\"),\r\n        code: \"tr\",\r\n        region: \"\",\r\n    },\r\n\r\n    \"zh-CN\": {\r\n        // simplified\r\n        name: \"中文简体\",\r\n        data: require(\"./built-temp/base-zh-CN.json\"),\r\n        code: \"zh\",\r\n        region: \"CN\",\r\n    },\r\n\r\n    \"zh-TW\": {\r\n        // traditional\r\n        name: \"中文繁體\",\r\n        data: require(\"./built-temp/base-zh-TW.json\"),\r\n        code: \"zh\",\r\n        region: \"TW\",\r\n    },\r\n\r\n    \"sv\": {\r\n        name: \"Svenska\",\r\n        data: require(\"./built-temp/base-sv.json\"),\r\n        code: \"sv\",\r\n        region: \"\",\r\n    },\r\n\r\n    \"da\": {\r\n        name: \"Dansk\",\r\n        data: require(\"./built-temp/base-da.json\"),\r\n        code: \"da\",\r\n        region: \"\",\r\n    },\r\n\r\n    \"hu\": {\r\n        name: \"Magyar\",\r\n        data: require(\"./built-temp/base-hu.json\"),\r\n        code: \"hu\",\r\n        region: \"\",\r\n    },\r\n};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/languages.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3311,
    "kind": "variable",
    "name": "LANGUAGES",
    "memberof": "js/languages.js",
    "static": true,
    "longname": "js/languages.js~LANGUAGES",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/languages.js",
    "importStyle": "{LANGUAGES}",
    "description": "",
    "lineNumber": 4,
    "type": {
      "nullable": null,
      "types": [
        "Object<string, {name: string, data: any, code: string, region: string}>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3312,
    "kind": "file",
    "name": "js/main.js",
    "content": "import \"./core/polyfills\";\r\nimport \"./core/assert\";\r\nimport \"./core/error_handler\";\r\n\r\nimport { createLogger, logSection } from \"./core/logging\";\r\nimport { Application } from \"./application\";\r\nimport { IS_DEBUG } from \"./core/config\";\r\nimport { addVanillaComponentsToAPI, initComponentRegistry } from \"./game/component_registry\";\r\nimport { initDrawUtils } from \"./core/draw_utils\";\r\nimport { addVanillaItemsToAPI, initItemRegistry } from \"./game/item_registry\";\r\nimport { addVanillaBuildingsToAPI, initMetaBuildingRegistry } from \"./game/meta_building_registry\";\r\nimport { addVanillaGameSpeedToAPI, initGameSpeedRegistry } from \"./game/game_speed_registry\";\r\nimport { ModManager } from \"./modloader/modmanager\";\r\nimport { addVanillaSystemsToAPI } from \"./game/game_system_manager\";\r\nimport { addVanillaGameModesToAPI } from \"./game/game_mode_registry\";\r\nconst logger = createLogger(\"main\");\r\n(async() => {\r\n    if (window.coreThreadLoadedCb) {\r\n        logger.log(\"Javascript parsed, calling html thread\");\r\n        window.coreThreadLoadedCb();\r\n    }\r\n\r\n    // Logrocket\r\n    // if (!G_IS_DEV && !G_IS_STANDALONE) {\r\n    //     const monthlyUsers = 300; // thousand\r\n    //     const logrocketLimit = 10; // thousand\r\n    //     const percentageOfUsers = logrocketLimit / monthlyUsers;\r\n\r\n    //     if (Math.random() <= percentageOfUsers) {\r\n    //         logger.log(\"Analyzing this session with logrocket\");\r\n    //         const logrocket = require(\"logrocket\");\r\n    //         logrocket.init(\"p1x9zh/shapezio\");\r\n\r\n    //         try {\r\n    //             logrocket.getSessionURL(function (sessionURL) {\r\n    //                 logger.log(\"Connected lockrocket to GA\");\r\n    //                 // @ts-ignore\r\n    //                 try {\r\n    //                     window.ga(\"send\", {\r\n    //                         hitType: \"event\",\r\n    //                         eventCategory: \"LogRocket\",\r\n    //                         eventAction: sessionURL,\r\n    //                     });\r\n    //                 } catch (ex) {\r\n    //                     logger.warn(\"Logrocket connection to analytics failed:\", ex);\r\n    //                 }\r\n    //             });\r\n    //         } catch (ex) {\r\n    //             logger.warn(\"Logrocket connection to analytics failed:\", ex);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    console.log(\r\n        `%cshapez.io ️%c\\n© 2020 Tobias Springer IT Solutions\\nCommit %c${G_BUILD_COMMIT_HASH}%c on %c${new Date(\r\n            G_BUILD_TIME\r\n        ).toLocaleString()}\\n`,\r\n        \"font-size: 35px; font-family: Arial;font-weight: bold; padding: 10px 0;\",\r\n        \"color: #aaa\",\r\n        \"color: #7f7\",\r\n        \"color: #aaa\",\r\n        \"color: #7f7\"\r\n    );\r\n\r\n    console.log(\"Environment: %c\" + G_APP_ENVIRONMENT, \"color: #fff\");\r\n\r\n    if (G_IS_DEV && IS_DEBUG) {\r\n        console.log(\"\\n%c🛑 DEBUG ENVIRONMENT 🛑\\n\", \"color: #f77\");\r\n    }\r\n\r\n    /* typehints:start */\r\n    // @ts-ignore\r\n    assert(false, \"typehints built in, this should never be the case!\");\r\n    /* typehints:end */\r\n\r\n    /* dev:start */\r\n    console.log(\"%cDEVCODE BUILT IN\", \"color: #f77\");\r\n    /* dev:end */\r\n\r\n    logSection(\"Boot Process\", \"#f9a825\");\r\n\r\n    // var modpack = {\r\n    //     mods: [{\r\n    //             url: \"http://localhost:3006/mod\",\r\n    //             id: \"a18121cf-fc7c-4f23-906d-b7ab0512bbc8\",\r\n    //             config: {},\r\n    //             settings: {\r\n    //                 hasMakeModButton: {\r\n    //                     value: true,\r\n    //                 },\r\n    //                 // enum: {\r\n    //                 //     value: \"new test\",\r\n    //                 // },\r\n    //                 // range: {\r\n    //                 //     value: 10,\r\n    //                 // },\r\n    //             },\r\n    //         },\r\n    //         // {\r\n    //         //     url: \"http://localhost:3010/mod\",\r\n    //         //     id: \"cbae38a0-7ac5-4a0a-9985-da3110b1a6e8\",\r\n    //         //     config: {},\r\n    //         //     settings: {\r\n    //         //         hasHubPlacement: { value: true },\r\n    //         //     },\r\n    //         // },\r\n    //         // {\r\n    //         //     url: \"http://localhost:3011/mod\",\r\n    //         //     id: \"cba4229f-851b-4f01-807f-2a0c86c3aed7\",\r\n    //         //     config: {},\r\n    //         //     settings: {},\r\n    //         // },\r\n    //         // {\r\n    //         //     url: \"http://localhost:3012/mod\",\r\n    //         //     id: \"b6eaf06b-a0f7-48ac-b219-4e97fd275beb\",\r\n    //         //     config: {},\r\n    //         //     settings: {},\r\n    //         // },\r\n    //         // {\r\n    //         //     url: \"http://localhost:3013/mod\",\r\n    //         //     id: \"ca2fb74a-3827-4805-b5fe-8a23bf913c65\",\r\n    //         //     config: {},\r\n    //         //     settings: {},\r\n    //         // },\r\n    //         // {\r\n    //         //     url: \"http://localhost:3014/mod\",\r\n    //         //     id: \"3ae3751d-6dfb-4504-92dc-99a38a3d8c06\",\r\n    //         //     config: {},\r\n    //         //     settings: {},\r\n    //         // },\r\n    //     ],\r\n    // };\r\n\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    let instance = JSON.parse(localStorage.getItem(\"instance\"));\r\n    var modMgr = new ModManager(user, instance);\r\n    addVanillaBuildingsToAPI();\r\n    addVanillaComponentsToAPI();\r\n    addVanillaSystemsToAPI();\r\n    addVanillaItemsToAPI();\r\n    addVanillaGameModesToAPI();\r\n    addVanillaGameSpeedToAPI();\r\n    // await modMgr.addMods([\r\n    //     // \"http://thomasbrants.nl:3000/mods/test_mods/mod1/bundle.js\",\r\n    //     // \"http://thomasbrants.nl:3000/mods/test_mods/test_mod2.js\",\r\n    //     // \"http://thomasbrants.nl:3000/mods/test_mods/test_mod3.js\",\r\n    //     \"http://localhost:3006/mod\",\r\n    // ]);\r\n    await modMgr.addModPackMods();\r\n    modMgr.loadMods();\r\n\r\n    initDrawUtils();\r\n    initComponentRegistry();\r\n    initItemRegistry();\r\n    initMetaBuildingRegistry();\r\n    initGameSpeedRegistry();\r\n\r\n    let app = null;\r\n\r\n    function bootApp() {\r\n        logger.log(\"Page Loaded\");\r\n        app = new Application();\r\n        app.boot();\r\n    }\r\n    bootApp();\r\n})();",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/main.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3313,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/main.js",
    "static": true,
    "longname": "js/main.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3314,
    "kind": "file",
    "name": "js/modloader/mod.js",
    "content": "/**\r\n * @typedef {{\r\n * title: String,\r\n * id: String,\r\n * description: String,\r\n * authors: Array<String>,\r\n * version: String,\r\n * gameVersion: number,\r\n * dependencies: Array<String>,\r\n * incompatible: Array<String>,\r\n * translations: {},\r\n * settings: {},\r\n * updateStaticSettings: Function,\r\n * updateStaticTranslations: Function,\r\n * gameInitializedRootClasses: Function,\r\n * gameInitializedRootManagers: Function,\r\n * gameBeforeFirstUpdate: Function,\r\n * main: Function,\r\n * }} ModInfo\r\n */\r\nimport { Signal, STOP_PROPAGATION } from \"../core/signal\";\r\nimport { Application } from \"../application\";\r\nimport { cachebust } from \"../core/cachebust\";\r\nimport { ClickDetector, clickDetectorGlobals, MAX_MOVE_DISTANCE_PX } from \"../core/click_detector\";\r\nimport { GameState } from \"../core/game_state\";\r\nimport { Loader } from \"../core/loader\";\r\nimport {\r\n    AtlasSprite,\r\n    BaseSprite,\r\n    FULL_CLIP_RECT,\r\n    ORIGINAL_SPRITE_SCALE,\r\n    RegularSprite,\r\n    SpriteAtlasLink,\r\n} from \"../core/sprites\";\r\nimport { TextualGameState } from \"../core/textual_game_state\";\r\nimport {\r\n    accessNestedPropertyReverse,\r\n    arrayDelete,\r\n    arrayDeleteValue,\r\n    clamp,\r\n    epsilonCompare,\r\n    fastArrayDelete,\r\n    fastArrayDeleteValue,\r\n    fastArrayDeleteValueIfContained,\r\n    fillInLinkIntoTranslation,\r\n    findNiceIntegerValue,\r\n    findNiceValue,\r\n    formatBigNumber,\r\n    formatBigNumberFull,\r\n    formatItemsPerSecond,\r\n    formatSeconds,\r\n    formatSecondsToTimeAgo,\r\n    generateFileDownload,\r\n    generateMatrixRotations,\r\n    getIPCRenderer,\r\n    getPlatformName,\r\n    getRomanNumber,\r\n    isAndroid,\r\n    isIos,\r\n    isSupportedBrowser,\r\n    lerp,\r\n    make2DUndefinedArray,\r\n    makeButton,\r\n    makeButtonElement,\r\n    makeDiv,\r\n    newEmptyMap,\r\n    randomChoice,\r\n    randomInt,\r\n    removeAllChildren,\r\n    rotateDirectionalObject,\r\n    rotateFlatMatrix3x3,\r\n    round1Digit,\r\n    round1DigitLocalized,\r\n    round2Digits,\r\n    round3Digits,\r\n    round4Digits,\r\n    safeModulo,\r\n    smoothPulse,\r\n    startFileChoose,\r\n    waitNextFrame,\r\n} from \"../core/utils\";\r\nimport {\r\n    arrayAllDirections,\r\n    enumAngleToDirection,\r\n    enumDirection,\r\n    enumDirectionToAngle,\r\n    enumDirectionToVector,\r\n    enumInvertedDirections,\r\n    mixVector,\r\n    Vector,\r\n} from \"../core/vector\";\r\nimport { AutomaticSave, enumSavePriority } from \"../game/automatic_save\";\r\nimport { BaseItem } from \"../game/base_item\";\r\nimport {\r\n    Camera,\r\n    enumMouseButton,\r\n    USER_INTERACT_MOVE,\r\n    USER_INTERACT_TOUCHEND,\r\n    USER_INTERACT_ZOOM,\r\n} from \"../game/camera\";\r\nimport {\r\n    enumColorMixingResults,\r\n    enumColors,\r\n    enumColorsToHexCode,\r\n    enumColorToShortcode,\r\n} from \"../game/colors\";\r\nimport { Component } from \"../game/component\";\r\nimport { BeltComponent } from \"../game/components/belt\";\r\nimport { BeltReaderComponent } from \"../game/components/belt_reader\";\r\nimport { BeltUnderlaysComponent, enumClippedBeltUnderlayType } from \"../game/components/belt_underlays\";\r\nimport { ConstantSignalComponent } from \"../game/components/constant_signal\";\r\nimport { DisplayComponent } from \"../game/components/display\";\r\nimport { FilterComponent } from \"../game/components/filter\";\r\nimport { HubComponent } from \"../game/components/hub\";\r\nimport { ItemAcceptorComponent } from \"../game/components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../game/components/item_ejector\";\r\nimport {\r\n    enumItemProcessorRequirements,\r\n    enumItemProcessorTypes,\r\n    ItemProcessorComponent,\r\n} from \"../game/components/item_processor\";\r\nimport { ItemProducerComponent } from \"../game/components/item_producer\";\r\nimport { LeverComponent } from \"../game/components/lever\";\r\nimport { LogicGateComponent } from \"../game/components/logic_gate\";\r\nimport { MinerComponent } from \"../game/components/miner\";\r\nimport { StaticMapEntityComponent } from \"../game/components/static_map_entity\";\r\nimport { StorageComponent } from \"../game/components/storage\";\r\nimport { UndergroundBeltComponent } from \"../game/components/underground_belt\";\r\nimport { WireComponent } from \"../game/components/wire\";\r\nimport { WiredPinsComponent } from \"../game/components/wired_pins\";\r\nimport { WireTunnelComponent } from \"../game/components/wire_tunnel\";\r\nimport { GameMode } from \"../game/game_mode\";\r\nimport { GameSystem } from \"../game/game_system\";\r\nimport { GameSystemWithFilter } from \"../game/game_system_with_filter\";\r\nimport { HubGoals } from \"../game/hub_goals\";\r\nimport { HUDBaseToolbar } from \"../game/hud/parts/base_toolbar\";\r\nimport { HUDBuildingsToolbar } from \"../game/hud/parts/buildings_toolbar\";\r\nimport { enumNotificationType, HUDNotifications } from \"../game/hud/parts/notifications\";\r\nimport { enumDisplayMode, HUDShapeStatisticsHandle } from \"../game/hud/parts/statistics_handle\";\r\nimport { HUDWiresToolbar } from \"../game/hud/parts/wires_toolbar\";\r\nimport { BooleanItem, BOOL_FALSE_SINGLETON, BOOL_TRUE_SINGLETON } from \"../game/items/boolean_item\";\r\nimport { ColorItem } from \"../game/items/color_item\";\r\nimport { ShapeItem } from \"../game/items/shape_item\";\r\nimport { KeyActionMapper, Keybinding, KEYMAPPINGS } from \"../game/key_action_mapper\";\r\nimport { MapChunk } from \"../game/map_chunk\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../game/meta_building\";\r\nimport { RegularGameMode } from \"../game/modes/regular\";\r\nimport { enumAnalyticsDataSource, ProductionAnalytics } from \"../game/production_analytics\";\r\nimport { BeltSystem } from \"../game/systems/belt\";\r\nimport { BeltReaderSystem } from \"../game/systems/belt_reader\";\r\nimport { BeltUnderlaysSystem } from \"../game/systems/belt_underlays\";\r\nimport { ConstantSignalSystem } from \"../game/systems/constant_signal\";\r\nimport { DisplaySystem } from \"../game/systems/display\";\r\nimport { FilterSystem } from \"../game/systems/filter\";\r\nimport { HubSystem } from \"../game/systems/hub\";\r\nimport { ItemAcceptorSystem } from \"../game/systems/item_acceptor\";\r\nimport { ItemEjectorSystem } from \"../game/systems/item_ejector\";\r\nimport { ItemProcessorSystem } from \"../game/systems/item_processor\";\r\nimport { ItemProcessorOverlaysSystem } from \"../game/systems/item_processor_overlays\";\r\nimport { ItemProducerSystem } from \"../game/systems/item_producer\";\r\nimport { LeverSystem } from \"../game/systems/lever\";\r\nimport { LogicGateSystem } from \"../game/systems/logic_gate\";\r\nimport { MapResourcesSystem } from \"../game/systems/map_resources\";\r\nimport { MinerSystem } from \"../game/systems/miner\";\r\nimport { StaticMapEntitySystem } from \"../game/systems/static_map_entity\";\r\nimport { StorageSystem } from \"../game/systems/storage\";\r\nimport { UndergroundBeltSystem } from \"../game/systems/underground_belt\";\r\nimport { WireSystem } from \"../game/systems/wire\";\r\nimport { WiredPinsSystem } from \"../game/systems/wired_pins\";\r\nimport { applyGameTheme, VANILLA_THEMES } from \"../game/theme\";\r\nimport { BaseGameSpeed } from \"../game/time/base_game_speed\";\r\nimport { FastForwardGameSpeed } from \"../game/time/fast_forward_game_speed\";\r\nimport { PausedGameSpeed } from \"../game/time/paused_game_speed\";\r\nimport { RegularGameSpeed } from \"../game/time/regular_game_speed\";\r\nimport { enumHubGoalRewards } from \"../game/tutorial_goals\";\r\nimport { enumHubGoalRewardsToContentUnlocked } from \"../game/tutorial_goals_mappings\";\r\nimport {\r\n    allApplicationSettings,\r\n    ApplicationSettings,\r\n    autosaveIntervals,\r\n    enumCategories,\r\n    getApplicationSettingById,\r\n    movementSpeeds,\r\n    scrollWheelSensitivities,\r\n    uiScales,\r\n} from \"../profile/application_settings\";\r\nimport { EnumSetting, BoolSetting, RangeSetting, BaseSetting } from \"../profile/setting_types\";\r\nimport { enumLocalSavegameStatus, SavegameManager } from \"../savegame/savegame_manager\";\r\nimport {\r\n    BasicSerializableObject,\r\n    deserializeSchema,\r\n    extendSchema,\r\n    serializeSchema,\r\n    types,\r\n    verifySchema,\r\n} from \"../savegame/serialization\";\r\nimport { AboutState } from \"../states/about\";\r\nimport { ChangelogState } from \"../states/changelog\";\r\nimport { InGameState } from \"../states/ingame\";\r\nimport { KeybindingsState } from \"../states/keybindings\";\r\nimport { MainMenuState } from \"../states/main_menu\";\r\nimport { MobileWarningState } from \"../states/mobile_warning\";\r\nimport { PreloadState } from \"../states/preload\";\r\nimport { SettingsState } from \"../states/settings\";\r\nimport { T } from \"../translations\";\r\nimport {\r\n    MUSIC,\r\n    MusicInstanceInterface,\r\n    SoundInstanceInterface,\r\n    SoundInterface,\r\n    SOUNDS,\r\n} from \"../platform/sound\";\r\nimport { HUDSettingsMenu } from \"../game/hud/parts/settings_menu\";\r\nimport { HUDBetaOverlay } from \"../game/hud/parts/beta_overlay\";\r\nimport { HUDBlueprintPlacer } from \"../game/hud/parts/blueprint_placer\";\r\nimport { HUDBuildingPlacer } from \"../game/hud/parts/building_placer\";\r\nimport { HUDBuildingPlacerLogic } from \"../game/hud/parts/building_placer_logic\";\r\nimport { HUDCatMemes } from \"../game/hud/parts/cat_memes\";\r\nimport { HUDChangesDebugger } from \"../game/hud/parts/debug_changes\";\r\nimport { HUDColorBlindHelper } from \"../game/hud/parts/color_blind_helper\";\r\nimport { HUDConstantSignalEdit } from \"../game/hud/parts/constant_signal_edit\";\r\nimport { HUDDebugInfo } from \"../game/hud/parts/debug_info\";\r\nimport { HUDEntityDebugger } from \"../game/hud/parts/entity_debugger\";\r\nimport { HUDGameMenu } from \"../game/hud/parts/game_menu\";\r\nimport { HUDInteractiveTutorial } from \"../game/hud/parts/interactive_tutorial\";\r\nimport { HUDKeybindingOverlay } from \"../game/hud/parts/keybinding_overlay\";\r\nimport { HUDLayerPreview } from \"../game/hud/parts/layer_preview\";\r\nimport { HUDLeverToggle } from \"../game/hud/parts/lever_toggle\";\r\nimport { HUDMassSelector } from \"../game/hud/parts/mass_selector\";\r\nimport { HUDMinerHighlight } from \"../game/hud/parts/miner_highlight\";\r\nimport { HUDModalDialogs } from \"../game/hud/parts/modal_dialogs\";\r\nimport { HUDPartTutorialHints } from \"../game/hud/parts/tutorial_hints\";\r\nimport { HUDPinnedShapes } from \"../game/hud/parts/pinned_shapes\";\r\nimport { HUDSandboxController } from \"../game/hud/parts/sandbox_controller\";\r\nimport { HUDScreenshotExporter } from \"../game/hud/parts/screenshot_exporter\";\r\nimport { HUDShapeViewer } from \"../game/hud/parts/shape_viewer\";\r\nimport { HUDShop } from \"../game/hud/parts/shop\";\r\nimport { HUDStandaloneAdvantages } from \"../game/hud/parts/standalone_advantages\";\r\nimport { HUDStatistics } from \"../game/hud/parts/statistics\";\r\nimport { HUDTutorialVideoOffer } from \"../game/hud/parts/tutorial_video_offer\";\r\nimport { HUDUnlockNotification } from \"../game/hud/parts/unlock_notification\";\r\nimport { HUDVignetteOverlay } from \"../game/hud/parts/vignette_overlay\";\r\nimport { HUDWatermark } from \"../game/hud/parts/watermark\";\r\nimport { HUDWaypoints } from \"../game/hud/parts/waypoints\";\r\nimport { HUDWireInfo } from \"../game/hud/parts/wire_info\";\r\nimport { HUDWiresOverlay } from \"../game/hud/parts/wires_overlay\";\r\nimport { BaseHUDPart } from \"../game/hud/base_hud_part\";\r\nimport { GameHUD } from \"../game/hud/hud\";\r\nimport { matchOverwriteRecursiveSettings } from \"./overwrite\";\r\nimport { AtlasDefinition, atlasFiles } from \"../core/atlas_definitions\";\r\nimport { BackgroundResourcesLoader } from \"../core/background_resources_loader\";\r\nimport {\r\n    clearBufferBacklog,\r\n    disableImageSmoothing,\r\n    enableImageSmoothing,\r\n    freeCanvas,\r\n    getBufferStats,\r\n    getBufferVramUsageBytes,\r\n    makeOffscreenBuffer,\r\n    registerCanvas,\r\n} from \"../core/buffer_utils\";\r\nimport {\r\n    IS_DEBUG,\r\n    SUPPORT_TOUCH,\r\n    IS_MAC,\r\n    THIRDPARTY_URLS,\r\n    A_B_TESTING_LINK_TYPE,\r\n    globalConfig,\r\n    IS_MOBILE,\r\n} from \"../core/config\";\r\nimport {\r\n    getDeviceDPI,\r\n    smoothenDpi,\r\n    prepareHighDPIContext,\r\n    resizeHighDPICanvas,\r\n    resizeCanvas,\r\n    resizeCanvasAndClear,\r\n} from \"../core/dpi_manager\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { initDrawUtils, drawRotatedSprite, drawSpriteClipped } from \"../core/draw_utils\";\r\nimport { APPLICATION_ERROR_OCCURED } from \"../core/error_handler\";\r\nimport { ExplainedResult } from \"../core/explained_result\";\r\nimport { Factory } from \"../core/factory\";\r\nimport {\r\n    gMetaBuildingRegistry,\r\n    gBuildingsByCategory,\r\n    gComponentRegistry,\r\n    gGameModeRegistry,\r\n    gGameSpeedRegistry,\r\n    gItemRegistry,\r\n    initBuildingsByCategory,\r\n} from \"../core/global_registries\";\r\nimport { GLOBAL_APP, setGlobalApp } from \"../core/globals\";\r\nimport { InputDistributor } from \"../core/input_distributor\";\r\nimport { InputReceiver } from \"../core/input_receiver\";\r\nimport {\r\n    createLogger,\r\n    serializeError,\r\n    stringifyObjectContainingErrors,\r\n    globalDebug,\r\n    globalLog,\r\n    globalWarn,\r\n    globalError,\r\n    logSection,\r\n} from \"../core/logging\";\r\nimport {\r\n    compressU8,\r\n    compressU8WHeader,\r\n    decompressU8WHeader,\r\n    compressX64,\r\n    decompressX64,\r\n} from \"../core/lzstring\";\r\nimport { Dialog, DialogOptionChooser, DialogLoading, DialogWithForm } from \"../core/modal_dialog_elements\";\r\nimport {\r\n    FormElement,\r\n    FormElementInput,\r\n    FormElementCheckbox,\r\n    FormElementItemChooser,\r\n} from \"../core/modal_dialog_forms\";\r\nimport { queryParamOptions } from \"../core/query_parameters\";\r\nimport { ReadWriteProxy } from \"../core/read_write_proxy\";\r\nimport { Rectangle } from \"../core/rectangle\";\r\nimport { PROMISE_ABORTED, RequestChannel } from \"../core/request_channel\";\r\nimport { RestrictionManager } from \"../core/restriction_manager\";\r\nimport { RandomNumberGenerator } from \"../core/rng\";\r\nimport { sha1, getNameOfProvider, CRC_PREFIX, computeCrc } from \"../core/sensitive_utils.encrypt\";\r\nimport { SingletonFactory } from \"../core/singleton_factory\";\r\nimport { StaleAreaDetector } from \"../core/stale_area_detector\";\r\nimport { StateManager } from \"../core/state_manager\";\r\nimport { TrackedState } from \"../core/tracked_state\";\r\nimport { BeltPath } from \"../game/belt_path\";\r\nimport { Blueprint } from \"../game/blueprint\";\r\nimport {\r\n    gBuildingVariants,\r\n    registerBuildingVariant,\r\n    getBuildingDataFromCode,\r\n    getCodeFromBuildingData,\r\n} from \"../game/building_codes\";\r\nimport { GameCore } from \"../game/core\";\r\nimport { DynamicTickrate } from \"../game/dynamic_tickrate\";\r\nimport { Entity } from \"../game/entity\";\r\nimport { EntityManager } from \"../game/entity_manager\";\r\nimport { GameLoadingOverlay } from \"../game/game_loading_overlay\";\r\nimport { GameSystemManager } from \"../game/game_system_manager\";\r\nimport { getRandomHint } from \"../game/hints\";\r\nimport { typeItemSingleton, itemResolverSingleton } from \"../game/item_resolver\";\r\nimport { GameLogic } from \"../game/logic\";\r\nimport { BaseMap } from \"../game/map\";\r\nimport { MapChunkView } from \"../game/map_chunk_view\";\r\nimport { MapView } from \"../game/map_view\";\r\nimport { GameRoot } from \"../game/root\";\r\nimport {\r\n    createSimpleShape,\r\n    enumShortcodeToSubShape,\r\n    enumSubShapeToShortcode,\r\n    enumSubShape,\r\n    ShapeDefinition,\r\n} from \"../game/shape_definition\";\r\nimport { ShapeDefinitionManager } from \"../game/shape_definition_manager\";\r\nimport { SoundProxy } from \"../game/sound_proxy\";\r\nimport { AdProviderInterface } from \"../platform/ad_provider\";\r\nimport { AdinplayAdProvider } from \"../platform/ad_providers/adinplay\";\r\nimport { GamedistributionAdProvider } from \"../platform/ad_providers/gamedistribution\";\r\nimport { NoAdProvider } from \"../platform/ad_providers/no_ad_provider\";\r\nimport { AnalyticsInterface } from \"../platform/analytics\";\r\nimport { ShapezGameAnalytics } from \"../platform/browser/game_analytics\";\r\nimport { GoogleAnalyticsImpl } from \"../platform/browser/google_analytics\";\r\nimport { NoGameAnalytics } from \"../platform/browser/no_game_analytics\";\r\nimport { SoundImplBrowser } from \"../platform/browser/sound\";\r\nimport { StorageImplBrowser } from \"../platform/browser/storage\";\r\nimport { StorageImplBrowserIndexedDB } from \"../platform/browser/storage_indexed_db\";\r\nimport { PlatformWrapperImplBrowser } from \"../platform/browser/wrapper\";\r\nimport { StorageImplElectron } from \"../platform/electron/storage\";\r\nimport { PlatformWrapperImplElectron } from \"../platform/electron/wrapper\";\r\nimport { GameAnalyticsInterface } from \"../platform/game_analytics\";\r\nimport { StorageInterface } from \"../platform/storage\";\r\nimport { PlatformWrapperInterface } from \"../platform/wrapper\";\r\nimport { SavegameInterface_ML01 } from \"../savegame/schemas/ML01\";\r\nimport { BaseSavegameInterface } from \"../savegame/savegame_interface\";\r\nimport { SavegameInterface_V1000 } from \"../savegame/schemas/1000\";\r\nimport { SavegameInterface_V1001 } from \"../savegame/schemas/1001\";\r\nimport { SavegameInterface_V1002 } from \"../savegame/schemas/1002\";\r\nimport { SavegameInterface_V1003 } from \"../savegame/schemas/1003\";\r\nimport { SavegameInterface_V1004 } from \"../savegame/schemas/1004\";\r\nimport { SavegameInterface_V1005 } from \"../savegame/schemas/1005\";\r\nimport { SavegameInterface_V1006 } from \"../savegame/schemas/1006\";\r\nimport { SavegameInterface_V1007 } from \"../savegame/schemas/1007\";\r\nimport { Savegame } from \"../savegame/savegame\";\r\nimport { compressObject, decompressObject } from \"../savegame/savegame_compressor\";\r\nimport { savegameInterfaces, getSavegameInterface } from \"../savegame/savegame_interface_registry\";\r\nimport { SavegameSerializer } from \"../savegame/savegame_serializer\";\r\nimport {\r\n    schemaToJsonSchema,\r\n    BaseDataType,\r\n    TypeInteger,\r\n    TypeBoolean,\r\n    TypePositiveInteger,\r\n    TypeString,\r\n    TypeVector,\r\n    TypeTileVector,\r\n    TypeNumber,\r\n    TypePositiveNumber,\r\n    TypeEnum,\r\n    TypeEntity,\r\n    TypeEntityWeakref,\r\n    TypeClass,\r\n    TypeClassData,\r\n    TypeClassFromMetaclass,\r\n    TypeMetaClass,\r\n    TypeArray,\r\n    TypeFixedClass,\r\n    TypeKeyValueMap,\r\n    TypeClassId,\r\n    TypePair,\r\n    TypeNullable,\r\n    TypeStructuredObject,\r\n} from \"../savegame/serialization_data_types\";\r\nimport { SerializerInternal } from \"../savegame/serializer_internal\";\r\n\r\nexport class ShapezAPI {\r\n    constructor(user) {\r\n        this.user = user;\r\n\r\n        this.exports = {\r\n            //Core\r\n            AtlasDefinition,\r\n            BackgroundResourcesLoader,\r\n            ClickDetector,\r\n            DrawParameters,\r\n            ExplainedResult,\r\n            Factory,\r\n            InputDistributor,\r\n            InputReceiver,\r\n            Dialog,\r\n            DialogOptionChooser,\r\n            DialogLoading,\r\n            DialogWithForm,\r\n            FormElement,\r\n            FormElementInput,\r\n            FormElementCheckbox,\r\n            FormElementItemChooser,\r\n            ReadWriteProxy,\r\n            Rectangle,\r\n            RequestChannel,\r\n            RestrictionManager,\r\n            RandomNumberGenerator,\r\n            Signal,\r\n            SingletonFactory,\r\n            BaseSprite,\r\n            SpriteAtlasLink,\r\n            AtlasSprite,\r\n            RegularSprite,\r\n            StaleAreaDetector,\r\n            StateManager,\r\n            TextualGameState,\r\n            TrackedState,\r\n            Vector,\r\n            GameState,\r\n            enableImageSmoothing,\r\n            disableImageSmoothing,\r\n            getBufferVramUsageBytes,\r\n            getBufferStats,\r\n            clearBufferBacklog,\r\n            makeOffscreenBuffer,\r\n            registerCanvas,\r\n            freeCanvas,\r\n            getDeviceDPI,\r\n            smoothenDpi,\r\n            prepareHighDPIContext,\r\n            resizeHighDPICanvas,\r\n            resizeCanvas,\r\n            resizeCanvasAndClear,\r\n            initDrawUtils,\r\n            drawRotatedSprite,\r\n            drawSpriteClipped,\r\n            initBuildingsByCategory,\r\n            setGlobalApp,\r\n            createLogger,\r\n            serializeError,\r\n            stringifyObjectContainingErrors,\r\n            globalDebug,\r\n            globalLog,\r\n            globalWarn,\r\n            globalError,\r\n            logSection,\r\n            compressU8,\r\n            compressU8WHeader,\r\n            decompressU8WHeader,\r\n            compressX64,\r\n            decompressX64,\r\n            sha1,\r\n            getNameOfProvider,\r\n            computeCrc,\r\n            isAndroid,\r\n            isIos,\r\n            getPlatformName,\r\n            getIPCRenderer,\r\n            make2DUndefinedArray,\r\n            newEmptyMap,\r\n            randomInt,\r\n            accessNestedPropertyReverse,\r\n            randomChoice,\r\n            fastArrayDelete,\r\n            fastArrayDeleteValue,\r\n            fastArrayDeleteValueIfContained,\r\n            arrayDelete,\r\n            arrayDeleteValue,\r\n            epsilonCompare,\r\n            lerp,\r\n            findNiceValue,\r\n            findNiceIntegerValue,\r\n            formatBigNumber,\r\n            formatBigNumberFull,\r\n            waitNextFrame,\r\n            round1Digit,\r\n            round2Digits,\r\n            round3Digits,\r\n            round4Digits,\r\n            clamp,\r\n            makeDiv,\r\n            makeButtonElement,\r\n            makeButton,\r\n            removeAllChildren,\r\n            isSupportedBrowser,\r\n            formatSecondsToTimeAgo,\r\n            formatSeconds,\r\n            round1DigitLocalized,\r\n            formatItemsPerSecond,\r\n            rotateFlatMatrix3x3,\r\n            generateMatrixRotations,\r\n            rotateDirectionalObject,\r\n            safeModulo,\r\n            smoothPulse,\r\n            fillInLinkIntoTranslation,\r\n            generateFileDownload,\r\n            startFileChoose,\r\n            getRomanNumber,\r\n            mixVector,\r\n            queryParamOptions,\r\n            PROMISE_ABORTED,\r\n            CRC_PREFIX,\r\n            ORIGINAL_SPRITE_SCALE,\r\n            FULL_CLIP_RECT,\r\n            enumDirection,\r\n            enumInvertedDirections,\r\n            enumDirectionToAngle,\r\n            enumAngleToDirection,\r\n            arrayAllDirections,\r\n            enumDirectionToVector,\r\n            atlasFiles,\r\n            MAX_MOVE_DISTANCE_PX,\r\n            clickDetectorGlobals,\r\n            IS_DEBUG,\r\n            SUPPORT_TOUCH,\r\n            IS_MAC,\r\n            THIRDPARTY_URLS,\r\n            A_B_TESTING_LINK_TYPE,\r\n            globalConfig,\r\n            IS_MOBILE,\r\n            APPLICATION_ERROR_OCCURED,\r\n            gMetaBuildingRegistry,\r\n            gBuildingsByCategory,\r\n            gComponentRegistry,\r\n            gGameModeRegistry,\r\n            gGameSpeedRegistry,\r\n            gItemRegistry,\r\n            GLOBAL_APP,\r\n            Loader,\r\n\r\n            //Platform\r\n            AdinplayAdProvider,\r\n            GamedistributionAdProvider,\r\n            NoAdProvider,\r\n            AdProviderInterface,\r\n            ShapezGameAnalytics,\r\n            GoogleAnalyticsImpl,\r\n            NoGameAnalytics,\r\n            SoundImplBrowser,\r\n            StorageImplBrowserIndexedDB,\r\n            StorageImplBrowser,\r\n            PlatformWrapperImplBrowser,\r\n            StorageImplElectron,\r\n            PlatformWrapperImplElectron,\r\n            AnalyticsInterface,\r\n            GameAnalyticsInterface,\r\n            SoundInstanceInterface,\r\n            MusicInstanceInterface,\r\n            SoundInterface,\r\n            StorageInterface,\r\n            PlatformWrapperInterface,\r\n            MUSIC,\r\n\r\n            //Profiles\r\n            ApplicationSettings,\r\n            allApplicationSettings,\r\n            getApplicationSettingById,\r\n            uiScales,\r\n            scrollWheelSensitivities,\r\n            movementSpeeds,\r\n            autosaveIntervals,\r\n\r\n            //Savegame\r\n            BaseSavegameInterface,\r\n            SavegameInterface_V1000,\r\n            SavegameInterface_V1001,\r\n            SavegameInterface_V1002,\r\n            SavegameInterface_V1003,\r\n            SavegameInterface_V1004,\r\n            SavegameInterface_V1005,\r\n            SavegameInterface_V1006,\r\n            SavegameInterface_V1007,\r\n            SavegameInterface_ML01,\r\n            SerializerInternal,\r\n            SavegameManager,\r\n            SavegameSerializer,\r\n            Savegame,\r\n            BaseDataType,\r\n            TypeInteger,\r\n            TypeBoolean,\r\n            TypePositiveInteger,\r\n            TypeString,\r\n            TypeVector,\r\n            TypeTileVector,\r\n            TypeNumber,\r\n            TypePositiveNumber,\r\n            TypeEnum,\r\n            TypeEntity,\r\n            TypeEntityWeakref,\r\n            TypeClass,\r\n            TypeClassData,\r\n            TypeClassFromMetaclass,\r\n            TypeMetaClass,\r\n            TypeArray,\r\n            TypeFixedClass,\r\n            TypeKeyValueMap,\r\n            TypeClassId,\r\n            TypePair,\r\n            TypeNullable,\r\n            TypeStructuredObject,\r\n            BasicSerializableObject,\r\n            getSavegameInterface,\r\n            compressObject,\r\n            decompressObject,\r\n            schemaToJsonSchema,\r\n            serializeSchema,\r\n            deserializeSchema,\r\n            verifySchema,\r\n            extendSchema,\r\n            savegameInterfaces,\r\n\r\n            //Game\r\n            AutomaticSave,\r\n            BeltPath,\r\n            Blueprint,\r\n            Camera,\r\n            GameCore,\r\n            DynamicTickrate,\r\n            EntityManager,\r\n            Entity,\r\n            GameLoadingOverlay,\r\n            GameSystemManager,\r\n            Keybinding,\r\n            KeyActionMapper,\r\n            GameLogic,\r\n            MapChunkView,\r\n            MapView,\r\n            BaseMap,\r\n            ProductionAnalytics,\r\n            GameRoot,\r\n            ShapeDefinitionManager,\r\n            enumShortcodeToSubShape,\r\n            enumSubShapeToShortcode,\r\n            enumSubShape,\r\n            ShapeDefinition,\r\n            SoundProxy,\r\n            itemResolverSingleton,\r\n            createSimpleShape,\r\n            applyGameTheme,\r\n            getRandomHint,\r\n            registerBuildingVariant,\r\n            getBuildingDataFromCode,\r\n            getCodeFromBuildingData,\r\n            typeItemSingleton,\r\n            gBuildingVariants,\r\n            USER_INTERACT_MOVE,\r\n            USER_INTERACT_ZOOM,\r\n            USER_INTERACT_TOUCHEND,\r\n\r\n            MetaBuilding,\r\n            Component,\r\n            BaseItem,\r\n            BaseGameSpeed,\r\n            GameSystemWithFilter,\r\n            GameSystem,\r\n            GameMode,\r\n            HUDBaseToolbar,\r\n            BaseHUDPart,\r\n            GameHUD,\r\n\r\n            //HUD\r\n            HUDSettingsMenu,\r\n            HUDBetaOverlay,\r\n            HUDBlueprintPlacer,\r\n            HUDBuildingPlacer,\r\n            HUDBuildingPlacerLogic,\r\n            HUDCatMemes,\r\n            HUDChangesDebugger,\r\n            HUDColorBlindHelper,\r\n            HUDConstantSignalEdit,\r\n            HUDDebugInfo,\r\n            HUDEntityDebugger,\r\n            HUDGameMenu,\r\n            HUDInteractiveTutorial,\r\n            HUDKeybindingOverlay,\r\n            HUDLayerPreview,\r\n            HUDLeverToggle,\r\n            HUDMassSelector,\r\n            HUDMinerHighlight,\r\n            HUDModalDialogs,\r\n            HUDNotifications,\r\n            HUDPartTutorialHints,\r\n            HUDPinnedShapes,\r\n            HUDSandboxController,\r\n            HUDScreenshotExporter,\r\n            HUDShapeStatisticsHandle,\r\n            HUDShapeViewer,\r\n            HUDShop,\r\n            HUDStandaloneAdvantages,\r\n            HUDStatistics,\r\n            HUDTutorialVideoOffer,\r\n            HUDUnlockNotification,\r\n            HUDVignetteOverlay,\r\n            HUDWatermark,\r\n            HUDWaypoints,\r\n            HUDWireInfo,\r\n            HUDWiresOverlay,\r\n\r\n            //Settings\r\n            EnumSetting,\r\n            BoolSetting,\r\n            RangeSetting,\r\n            BaseSetting,\r\n\r\n            //Functions,\r\n            cachebust,\r\n            matchOverwriteRecursiveSettings,\r\n\r\n            //Variables\r\n            defaultBuildingVariant,\r\n            types,\r\n            STOP_PROPAGATION,\r\n            SOUNDS,\r\n            BOOL_TRUE_SINGLETON,\r\n            BOOL_FALSE_SINGLETON,\r\n\r\n            //Gamemodes\r\n            RegularGameMode,\r\n\r\n            //Gamespeed\r\n            PausedGameSpeed,\r\n            FastForwardGameSpeed,\r\n            RegularGameSpeed,\r\n\r\n            //Items\r\n            ShapeItem,\r\n            BooleanItem,\r\n            ColorItem,\r\n\r\n            //States\r\n            InGameState,\r\n            SettingsState,\r\n            AboutState,\r\n            MainMenuState,\r\n            ChangelogState,\r\n            KeybindingsState,\r\n            PreloadState,\r\n            MobileWarningState,\r\n\r\n            //Systems\r\n            ItemAcceptorSystem,\r\n            BeltSystem,\r\n            UndergroundBeltSystem,\r\n            MinerSystem,\r\n            StorageSystem,\r\n            ItemProcessorSystem,\r\n            FilterSystem,\r\n            ItemProducerSystem,\r\n            ItemEjectorSystem,\r\n            HubSystem,\r\n            StaticMapEntitySystem,\r\n            WiredPinsSystem,\r\n            BeltUnderlaysSystem,\r\n            ConstantSignalSystem,\r\n            LeverSystem,\r\n            WireSystem,\r\n            LogicGateSystem,\r\n            BeltReaderSystem,\r\n            DisplaySystem,\r\n            ItemProcessorOverlaysSystem,\r\n\r\n            //Components\r\n            BeltReaderComponent,\r\n            BeltUnderlaysComponent,\r\n            BeltComponent,\r\n            ConstantSignalComponent,\r\n            DisplayComponent,\r\n            FilterComponent,\r\n            HubComponent,\r\n            ItemAcceptorComponent,\r\n            ItemEjectorComponent,\r\n            ItemProcessorComponent,\r\n            ItemProducerComponent,\r\n            LeverComponent,\r\n            LogicGateComponent,\r\n            MinerComponent,\r\n            StaticMapEntityComponent,\r\n            StorageComponent,\r\n            UndergroundBeltComponent,\r\n            WireTunnelComponent,\r\n            WireComponent,\r\n            WiredPinsComponent,\r\n\r\n            //Enums\r\n            enumHubGoalRewards,\r\n            enumAnalyticsDataSource,\r\n            enumCategories,\r\n            enumClippedBeltUnderlayType,\r\n            enumColorMixingResults,\r\n            enumColors,\r\n            enumColorsToHexCode,\r\n            enumColorToShortcode,\r\n            enumDisplayMode,\r\n            enumHubGoalRewardsToContentUnlocked,\r\n            enumItemProcessorRequirements,\r\n            enumItemProcessorTypes,\r\n            enumLocalSavegameStatus,\r\n            enumMouseButton,\r\n            enumNotificationType,\r\n            enumSavePriority,\r\n        };\r\n\r\n        this.firstState = \"MainMenuState\";\r\n        this.KEYMAPPINGS = KEYMAPPINGS;\r\n        this.KEYMAPPINGS.key = str => str.toUpperCase().charCodeAt(0);\r\n\r\n        this.mods = new Map();\r\n        this.modOrder = [];\r\n\r\n        this.translations = T;\r\n\r\n        this.map = {\r\n            MapChunk,\r\n            MapResourcesSystem,\r\n        };\r\n\r\n        this.ingame = {\r\n            buildings: {},\r\n            components: {},\r\n            //Must be array because of update order\r\n            systems: [],\r\n            items: {},\r\n            gamemodes: {},\r\n            gamespeed: {},\r\n            //List of layer names\r\n            layers: [],\r\n            hub_goals: HubGoals,\r\n        };\r\n\r\n        this.toolbars = {\r\n            buildings: HUDBuildingsToolbar.bar,\r\n            wires: HUDWiresToolbar.bar,\r\n        };\r\n\r\n        this.themes = VANILLA_THEMES;\r\n\r\n        this.states = Application.states;\r\n\r\n        this.clickDetectors = [];\r\n    }\r\n\r\n    /**\r\n     * Generates rotated variants of the matrix\r\n     * @param {Array<number>} originalMatrix\r\n     * @returns {Object<number, Array<number>>}\r\n     */\r\n    generateMatrixRotations(originalMatrix) {\r\n        return generateMatrixRotations(originalMatrix);\r\n    }\r\n\r\n    /**\r\n     * Registers a new sprite\r\n     * @param {string} spriteId\r\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceImage\r\n     * @returns {RegularSprite}\r\n     */\r\n    registerSprite(spriteId, sourceImage) {\r\n        const sprite = new RegularSprite(sourceImage, sourceImage.width, sourceImage.height);\r\n        assertAlways(!Loader.sprites[spriteId], \"Can not override builtin sprite: \" + spriteId);\r\n        Loader.sprites[spriteId] = sprite;\r\n        return sprite;\r\n    }\r\n\r\n    /**\r\n     * Returns a regular sprite by its id\r\n     * @param {string} id\r\n     * @returns {RegularSprite}\r\n     */\r\n    getRegularSprite(id) {\r\n        return Loader.getRegularSprite(id);\r\n    }\r\n\r\n    /**\r\n     * Returns a regular sprite by its id\r\n     * @param {string} id\r\n     * @returns {AtlasSprite}\r\n     */\r\n    getSprite(id) {\r\n        return Loader.getSprite(id);\r\n    }\r\n\r\n    /**\r\n     * Registers a new atlas\r\n     * @param {string} atlasDataString\r\n     */\r\n    registerAtlas(atlasDataString) {\r\n        var atlasData = JSON.parse(atlasDataString);\r\n        var sourceImage = new Image();\r\n        sourceImage.crossOrigin = \"anonymous\";\r\n        sourceImage.onload = () => {\r\n            // @ts-ignore\r\n            Loader.internalParseAtlas({\r\n                    meta: atlasData.atlasData.meta,\r\n                    sourceData: atlasData.atlasData.frames,\r\n                },\r\n                sourceImage\r\n            );\r\n        };\r\n        sourceImage.src = atlasData.src;\r\n    }\r\n\r\n    /**\r\n     * Registers a new atlases\r\n     * @param {string[]} atlasDataStrings\r\n     */\r\n    registerAtlases(...atlasDataStrings) {\r\n        for (let i = 0; i < atlasDataStrings.length; i++) {\r\n            this.registerAtlas(atlasDataStrings[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds css to the page\r\n     * @param {string} css\r\n     */\r\n    injectCss(css, id) {\r\n        var head = document.head || document.getElementsByTagName(\"head\")[0];\r\n        var style = document.createElement(\"style\");\r\n        style.id = id;\r\n\r\n        head.appendChild(style);\r\n\r\n        style.appendChild(document.createTextNode(css));\r\n    }\r\n\r\n    /**\r\n     * Registers a new icon\r\n     * @param {string} id\r\n     * @param {string} iconDataURL\r\n     */\r\n    registerIcon(id, iconDataURL) {\r\n        var css = ``;\r\n        var style = undefined;\r\n        if (!(style = document.getElementById(\"mod-loader-icons\"))) {\r\n            var head = document.head || document.getElementsByTagName(\"head\")[0];\r\n            style = document.createElement(\"style\");\r\n            style.id = \"mod-loader-icons\";\r\n            style.appendChild(document.createTextNode(css));\r\n            head.appendChild(style);\r\n        }\r\n        css = `\r\n            [data-icon=\"${id}.png\"] {\r\n                background-image: url(${iconDataURL}) !important;\r\n            }\r\n        `;\r\n        style.appendChild(document.createTextNode(css));\r\n    }\r\n\r\n    registerBuilding(buildingClass, iconDataURL, key) {\r\n        var id = new buildingClass().getId();\r\n        this.ingame.buildings[id] = buildingClass;\r\n        this.registerIcon(\"building_icons/\" + id, iconDataURL);\r\n        this.KEYMAPPINGS.buildings[id] = { keyCode: this.KEYMAPPINGS.key(key), id: id };\r\n    }\r\n\r\n    /**\r\n     * Tracks clicks on a element (e.g. button). Useful because you should both support\r\n     * touch and mouse events.\r\n     * @param {HTMLElement} element\r\n     * @param {function} clickHandler\r\n     */\r\n    trackClicks(element, clickHandler) {\r\n        const clickDetector = new ClickDetector(element, {\r\n            consumeEvents: true,\r\n            preventDefault: true,\r\n        });\r\n        clickDetector.click.add(clickHandler);\r\n        this.clickDetectors.push(clickDetector);\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/modloader/mod.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3315,
    "kind": "typedef",
    "name": "ModInfo",
    "memberof": "js/modloader/mod.js",
    "static": true,
    "longname": "js/modloader/mod.js~ModInfo",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "type": {
      "types": [
        "{\ntitle: String,\nid: String,\ndescription: String,\nauthors: Array<String>,\nversion: String,\ngameVersion: number,\ndependencies: Array<String>,\nincompatible: Array<String>,\ntranslations: {},\nsettings: {},\nupdateStaticSettings: Function,\nupdateStaticTranslations: Function,\ngameInitializedRootClasses: Function,\ngameInitializedRootManagers: Function,\ngameBeforeFirstUpdate: Function,\nmain: Function,\n}"
      ],
      "optional": false,
      "name": "ModInfo"
    }
  },
  {
    "__docId__": 3316,
    "kind": "class",
    "name": "ShapezAPI",
    "memberof": "js/modloader/mod.js",
    "static": true,
    "longname": "js/modloader/mod.js~ShapezAPI",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/modloader/mod.js",
    "importStyle": "{ShapezAPI}",
    "description": null,
    "lineNumber": 420,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3317,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 421,
    "undocument": true
  },
  {
    "__docId__": 3318,
    "kind": "member",
    "name": "user",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#user",
    "access": "public",
    "description": null,
    "lineNumber": 422,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3319,
    "kind": "member",
    "name": "exports",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#exports",
    "access": "public",
    "description": null,
    "lineNumber": 424,
    "undocument": true,
    "type": {
      "types": [
        "{\"AtlasDefinition\": *, \"BackgroundResourcesLoader\": *, \"ClickDetector\": *, \"DrawParameters\": *, \"ExplainedResult\": *, \"Factory\": *, \"InputDistributor\": *, \"InputReceiver\": *, \"Dialog\": *, \"DialogOptionChooser\": *, \"DialogLoading\": *, \"DialogWithForm\": *, \"FormElement\": *, \"FormElementInput\": *, \"FormElementCheckbox\": *, \"FormElementItemChooser\": *, \"ReadWriteProxy\": *, \"Rectangle\": *, \"RequestChannel\": *, \"RestrictionManager\": *, \"RandomNumberGenerator\": *, \"Signal\": *, \"SingletonFactory\": *, \"BaseSprite\": *, \"SpriteAtlasLink\": *, \"AtlasSprite\": *, \"RegularSprite\": *, \"StaleAreaDetector\": *, \"StateManager\": *, \"TextualGameState\": *, \"TrackedState\": *, \"Vector\": *, \"GameState\": *, \"enableImageSmoothing\": *, \"disableImageSmoothing\": *, \"getBufferVramUsageBytes\": *, \"getBufferStats\": *, \"clearBufferBacklog\": *, \"makeOffscreenBuffer\": *, \"registerCanvas\": *, \"freeCanvas\": *, \"getDeviceDPI\": *, \"smoothenDpi\": *, \"prepareHighDPIContext\": *, \"resizeHighDPICanvas\": *, \"resizeCanvas\": *, \"resizeCanvasAndClear\": *, \"initDrawUtils\": *, \"drawRotatedSprite\": *, \"drawSpriteClipped\": *, \"initBuildingsByCategory\": *, \"setGlobalApp\": *, \"createLogger\": *, \"serializeError\": *, \"stringifyObjectContainingErrors\": *, \"globalDebug\": *, \"globalLog\": *, \"globalWarn\": *, \"globalError\": *, \"logSection\": *, \"compressU8\": *, \"compressU8WHeader\": *, \"decompressU8WHeader\": *, \"compressX64\": *, \"decompressX64\": *, \"sha1\": *, \"getNameOfProvider\": *, \"computeCrc\": *, \"isAndroid\": *, \"isIos\": *, \"getPlatformName\": *, \"getIPCRenderer\": *, \"make2DUndefinedArray\": *, \"newEmptyMap\": *, \"randomInt\": *, \"accessNestedPropertyReverse\": *, \"randomChoice\": *, \"fastArrayDelete\": *, \"fastArrayDeleteValue\": *, \"fastArrayDeleteValueIfContained\": *, \"arrayDelete\": *, \"arrayDeleteValue\": *, \"epsilonCompare\": *, \"lerp\": *, \"findNiceValue\": *, \"findNiceIntegerValue\": *, \"formatBigNumber\": *, \"formatBigNumberFull\": *, \"waitNextFrame\": *, \"round1Digit\": *, \"round2Digits\": *, \"round3Digits\": *, \"round4Digits\": *, \"clamp\": *, \"makeDiv\": *, \"makeButtonElement\": *, \"makeButton\": *, \"removeAllChildren\": *, \"isSupportedBrowser\": *, \"formatSecondsToTimeAgo\": *, \"formatSeconds\": *, \"round1DigitLocalized\": *, \"formatItemsPerSecond\": *, \"rotateFlatMatrix3x3\": *, \"generateMatrixRotations\": *, \"rotateDirectionalObject\": *, \"safeModulo\": *, \"smoothPulse\": *, \"fillInLinkIntoTranslation\": *, \"generateFileDownload\": *, \"startFileChoose\": *, \"getRomanNumber\": *, \"mixVector\": *, \"queryParamOptions\": *, \"PROMISE_ABORTED\": *, \"CRC_PREFIX\": *, \"ORIGINAL_SPRITE_SCALE\": *, \"FULL_CLIP_RECT\": *, \"enumDirection\": *, \"enumInvertedDirections\": *, \"enumDirectionToAngle\": *, \"enumAngleToDirection\": *, \"arrayAllDirections\": *, \"enumDirectionToVector\": *, \"atlasFiles\": *, \"MAX_MOVE_DISTANCE_PX\": *, \"clickDetectorGlobals\": *, \"IS_DEBUG\": *, \"SUPPORT_TOUCH\": *, \"IS_MAC\": *, \"THIRDPARTY_URLS\": *, \"A_B_TESTING_LINK_TYPE\": *, \"globalConfig\": *, \"IS_MOBILE\": *, \"APPLICATION_ERROR_OCCURED\": *, \"gMetaBuildingRegistry\": *, \"gBuildingsByCategory\": *, \"gComponentRegistry\": *, \"gGameModeRegistry\": *, \"gGameSpeedRegistry\": *, \"gItemRegistry\": *, \"GLOBAL_APP\": *, \"Loader\": *, \"AdinplayAdProvider\": *, \"GamedistributionAdProvider\": *, \"NoAdProvider\": *, \"AdProviderInterface\": *, \"ShapezGameAnalytics\": *, \"GoogleAnalyticsImpl\": *, \"NoGameAnalytics\": *, \"SoundImplBrowser\": *, \"StorageImplBrowserIndexedDB\": *, \"StorageImplBrowser\": *, \"PlatformWrapperImplBrowser\": *, \"StorageImplElectron\": *, \"PlatformWrapperImplElectron\": *, \"AnalyticsInterface\": *, \"GameAnalyticsInterface\": *, \"SoundInstanceInterface\": *, \"MusicInstanceInterface\": *, \"SoundInterface\": *, \"StorageInterface\": *, \"PlatformWrapperInterface\": *, \"MUSIC\": *, \"ApplicationSettings\": *, \"allApplicationSettings\": *, \"getApplicationSettingById\": *, \"uiScales\": *, \"scrollWheelSensitivities\": *, \"movementSpeeds\": *, \"autosaveIntervals\": *, \"BaseSavegameInterface\": *, \"SavegameInterface_V1000\": *, \"SavegameInterface_V1001\": *, \"SavegameInterface_V1002\": *, \"SavegameInterface_V1003\": *, \"SavegameInterface_V1004\": *, \"SavegameInterface_V1005\": *, \"SavegameInterface_V1006\": *, \"SavegameInterface_V1007\": *, \"SavegameInterface_ML01\": *, \"SerializerInternal\": *, \"SavegameManager\": *, \"SavegameSerializer\": *, \"Savegame\": *, \"BaseDataType\": *, \"TypeInteger\": *, \"TypeBoolean\": *, \"TypePositiveInteger\": *, \"TypeString\": *, \"TypeVector\": *, \"TypeTileVector\": *, \"TypeNumber\": *, \"TypePositiveNumber\": *, \"TypeEnum\": *, \"TypeEntity\": *, \"TypeEntityWeakref\": *, \"TypeClass\": *, \"TypeClassData\": *, \"TypeClassFromMetaclass\": *, \"TypeMetaClass\": *, \"TypeArray\": *, \"TypeFixedClass\": *, \"TypeKeyValueMap\": *, \"TypeClassId\": *, \"TypePair\": *, \"TypeNullable\": *, \"TypeStructuredObject\": *, \"BasicSerializableObject\": *, \"getSavegameInterface\": *, \"compressObject\": *, \"decompressObject\": *, \"schemaToJsonSchema\": *, \"serializeSchema\": *, \"deserializeSchema\": *, \"verifySchema\": *, \"extendSchema\": *, \"savegameInterfaces\": *, \"AutomaticSave\": *, \"BeltPath\": *, \"Blueprint\": *, \"Camera\": *, \"GameCore\": *, \"DynamicTickrate\": *, \"EntityManager\": *, \"Entity\": *, \"GameLoadingOverlay\": *, \"GameSystemManager\": *, \"Keybinding\": *, \"KeyActionMapper\": *, \"GameLogic\": *, \"MapChunkView\": *, \"MapView\": *, \"BaseMap\": *, \"ProductionAnalytics\": *, \"GameRoot\": *, \"ShapeDefinitionManager\": *, \"enumShortcodeToSubShape\": *, \"enumSubShapeToShortcode\": *, \"enumSubShape\": *, \"ShapeDefinition\": *, \"SoundProxy\": *, \"itemResolverSingleton\": *, \"createSimpleShape\": *, \"applyGameTheme\": *, \"getRandomHint\": *, \"registerBuildingVariant\": *, \"getBuildingDataFromCode\": *, \"getCodeFromBuildingData\": *, \"typeItemSingleton\": *, \"gBuildingVariants\": *, \"USER_INTERACT_MOVE\": *, \"USER_INTERACT_ZOOM\": *, \"USER_INTERACT_TOUCHEND\": *, \"MetaBuilding\": *, \"Component\": *, \"BaseItem\": *, \"BaseGameSpeed\": *, \"GameSystemWithFilter\": *, \"GameSystem\": *, \"GameMode\": *, \"HUDBaseToolbar\": *, \"BaseHUDPart\": *, \"GameHUD\": *, \"HUDSettingsMenu\": *, \"HUDBetaOverlay\": *, \"HUDBlueprintPlacer\": *, \"HUDBuildingPlacer\": *, \"HUDBuildingPlacerLogic\": *, \"HUDCatMemes\": *, \"HUDChangesDebugger\": *, \"HUDColorBlindHelper\": *, \"HUDConstantSignalEdit\": *, \"HUDDebugInfo\": *, \"HUDEntityDebugger\": *, \"HUDGameMenu\": *, \"HUDInteractiveTutorial\": *, \"HUDKeybindingOverlay\": *, \"HUDLayerPreview\": *, \"HUDLeverToggle\": *, \"HUDMassSelector\": *, \"HUDMinerHighlight\": *, \"HUDModalDialogs\": *, \"HUDNotifications\": *, \"HUDPartTutorialHints\": *, \"HUDPinnedShapes\": *, \"HUDSandboxController\": *, \"HUDScreenshotExporter\": *, \"HUDShapeStatisticsHandle\": *, \"HUDShapeViewer\": *, \"HUDShop\": *, \"HUDStandaloneAdvantages\": *, \"HUDStatistics\": *, \"HUDTutorialVideoOffer\": *, \"HUDUnlockNotification\": *, \"HUDVignetteOverlay\": *, \"HUDWatermark\": *, \"HUDWaypoints\": *, \"HUDWireInfo\": *, \"HUDWiresOverlay\": *, \"EnumSetting\": *, \"BoolSetting\": *, \"RangeSetting\": *, \"BaseSetting\": *, \"cachebust\": *, \"matchOverwriteRecursiveSettings\": *, \"defaultBuildingVariant\": *, \"types\": *, \"STOP_PROPAGATION\": *, \"SOUNDS\": *, \"BOOL_TRUE_SINGLETON\": *, \"BOOL_FALSE_SINGLETON\": *, \"RegularGameMode\": *, \"PausedGameSpeed\": *, \"FastForwardGameSpeed\": *, \"RegularGameSpeed\": *, \"ShapeItem\": *, \"BooleanItem\": *, \"ColorItem\": *, \"InGameState\": *, \"SettingsState\": *, \"AboutState\": *, \"MainMenuState\": *, \"ChangelogState\": *, \"KeybindingsState\": *, \"PreloadState\": *, \"MobileWarningState\": *, \"ItemAcceptorSystem\": *, \"BeltSystem\": *, \"UndergroundBeltSystem\": *, \"MinerSystem\": *, \"StorageSystem\": *, \"ItemProcessorSystem\": *, \"FilterSystem\": *, \"ItemProducerSystem\": *, \"ItemEjectorSystem\": *, \"HubSystem\": *, \"StaticMapEntitySystem\": *, \"WiredPinsSystem\": *, \"BeltUnderlaysSystem\": *, \"ConstantSignalSystem\": *, \"LeverSystem\": *, \"WireSystem\": *, \"LogicGateSystem\": *, \"BeltReaderSystem\": *, \"DisplaySystem\": *, \"ItemProcessorOverlaysSystem\": *, \"BeltReaderComponent\": *, \"BeltUnderlaysComponent\": *, \"BeltComponent\": *, \"ConstantSignalComponent\": *, \"DisplayComponent\": *, \"FilterComponent\": *, \"HubComponent\": *, \"ItemAcceptorComponent\": *, \"ItemEjectorComponent\": *, \"ItemProcessorComponent\": *, \"ItemProducerComponent\": *, \"LeverComponent\": *, \"LogicGateComponent\": *, \"MinerComponent\": *, \"StaticMapEntityComponent\": *, \"StorageComponent\": *, \"UndergroundBeltComponent\": *, \"WireTunnelComponent\": *, \"WireComponent\": *, \"WiredPinsComponent\": *, \"enumHubGoalRewards\": *, \"enumAnalyticsDataSource\": *, \"enumCategories\": *, \"enumClippedBeltUnderlayType\": *, \"enumColorMixingResults\": *, \"enumColors\": *, \"enumColorsToHexCode\": *, \"enumColorToShortcode\": *, \"enumDisplayMode\": *, \"enumHubGoalRewardsToContentUnlocked\": *, \"enumItemProcessorRequirements\": *, \"enumItemProcessorTypes\": *, \"enumLocalSavegameStatus\": *, \"enumMouseButton\": *, \"enumNotificationType\": *, \"enumSavePriority\": *}"
      ]
    }
  },
  {
    "__docId__": 3320,
    "kind": "member",
    "name": "firstState",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#firstState",
    "access": "public",
    "description": null,
    "lineNumber": 842,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3321,
    "kind": "member",
    "name": "KEYMAPPINGS",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#KEYMAPPINGS",
    "access": "public",
    "description": null,
    "lineNumber": 843,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3322,
    "kind": "member",
    "name": "mods",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#mods",
    "access": "public",
    "description": null,
    "lineNumber": 846,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3323,
    "kind": "member",
    "name": "modOrder",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#modOrder",
    "access": "public",
    "description": null,
    "lineNumber": 847,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 3324,
    "kind": "member",
    "name": "translations",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#translations",
    "access": "public",
    "description": null,
    "lineNumber": 849,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3325,
    "kind": "member",
    "name": "map",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#map",
    "access": "public",
    "description": null,
    "lineNumber": 851,
    "undocument": true,
    "type": {
      "types": [
        "{\"MapChunk\": *, \"MapResourcesSystem\": *}"
      ]
    }
  },
  {
    "__docId__": 3326,
    "kind": "member",
    "name": "ingame",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#ingame",
    "access": "public",
    "description": null,
    "lineNumber": 856,
    "undocument": true,
    "type": {
      "types": [
        "{\"buildings\": *, \"components\": *, \"systems\": *, \"items\": *, \"gamemodes\": *, \"gamespeed\": *, \"layers\": *, \"hub_goals\": *}"
      ]
    }
  },
  {
    "__docId__": 3327,
    "kind": "member",
    "name": "toolbars",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#toolbars",
    "access": "public",
    "description": null,
    "lineNumber": 869,
    "undocument": true,
    "type": {
      "types": [
        "{\"buildings\": *, \"wires\": *}"
      ]
    }
  },
  {
    "__docId__": 3328,
    "kind": "member",
    "name": "themes",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#themes",
    "access": "public",
    "description": null,
    "lineNumber": 874,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3329,
    "kind": "member",
    "name": "states",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#states",
    "access": "public",
    "description": null,
    "lineNumber": 876,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3330,
    "kind": "member",
    "name": "clickDetectors",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#clickDetectors",
    "access": "public",
    "description": null,
    "lineNumber": 878,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 3331,
    "kind": "method",
    "name": "generateMatrixRotations",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#generateMatrixRotations",
    "access": "public",
    "description": "Generates rotated variants of the matrix",
    "lineNumber": 886,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object<number, Array<number>>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<number>"
        ],
        "spread": false,
        "optional": false,
        "name": "originalMatrix",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object<number, Array<number>>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3332,
    "kind": "method",
    "name": "registerSprite",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#registerSprite",
    "access": "public",
    "description": "Registers a new sprite",
    "lineNumber": 896,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RegularSprite}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "spriteId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLImageElement",
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "sourceImage",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RegularSprite"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3333,
    "kind": "method",
    "name": "getRegularSprite",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#getRegularSprite",
    "access": "public",
    "description": "Returns a regular sprite by its id",
    "lineNumber": 908,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RegularSprite}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RegularSprite"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3334,
    "kind": "method",
    "name": "getSprite",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#getSprite",
    "access": "public",
    "description": "Returns a regular sprite by its id",
    "lineNumber": 917,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AtlasSprite}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AtlasSprite"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3335,
    "kind": "method",
    "name": "registerAtlas",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#registerAtlas",
    "access": "public",
    "description": "Registers a new atlas",
    "lineNumber": 925,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "atlasDataString",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3336,
    "kind": "method",
    "name": "registerAtlases",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#registerAtlases",
    "access": "public",
    "description": "Registers a new atlases",
    "lineNumber": 945,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "atlasDataStrings",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3337,
    "kind": "method",
    "name": "injectCss",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#injectCss",
    "access": "public",
    "description": "Adds css to the page",
    "lineNumber": 955,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "css",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3338,
    "kind": "method",
    "name": "registerIcon",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#registerIcon",
    "access": "public",
    "description": "Registers a new icon",
    "lineNumber": 970,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "iconDataURL",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3339,
    "kind": "method",
    "name": "registerBuilding",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#registerBuilding",
    "access": "public",
    "description": null,
    "lineNumber": 988,
    "undocument": true,
    "params": [
      {
        "name": "buildingClass",
        "types": [
          "*"
        ]
      },
      {
        "name": "iconDataURL",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3340,
    "kind": "method",
    "name": "trackClicks",
    "memberof": "js/modloader/mod.js~ShapezAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/mod.js~ShapezAPI#trackClicks",
    "access": "public",
    "description": "Tracks clicks on a element (e.g. button). Useful because you should both support\ntouch and mouse events.",
    "lineNumber": 1001,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "clickHandler",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3341,
    "kind": "file",
    "name": "js/modloader/modmanager.js",
    "content": "import { matchOverwriteRecursive } from \"../translations\";\r\nimport { ShapezAPI } from \"./mod\";\r\nimport { matchOverwriteRecursiveSettings } from \"./overwrite\";\r\n\r\n/**\r\n * @typedef {{\r\n *  mods: [\r\n *      {\r\n *          url: string,\r\n *          id: string,\r\n *          config: {},\r\n *          settings: {},\r\n *      },\r\n *  ],\r\n *  modOrder?: [],\r\n * }} ModPack\r\n */\r\n\r\nconst Toposort = require(\"toposort-class\");\r\n\r\nconst INFOType = {\r\n    title: \"\",\r\n    id: \"\",\r\n    description: \"\",\r\n    authors: [],\r\n    version: \"\",\r\n    gameVersion: 0,\r\n    dependencies: [],\r\n    incompatible: [],\r\n    translations: {},\r\n    settings: {},\r\n    updateStaticSettings: () => {},\r\n    updateStaticTranslations: id => {},\r\n    gameInitializedRootClasses: root => {},\r\n    gameInitializedRootManagers: root => {},\r\n    gameBeforeFirstUpdate: root => {},\r\n    main: () => {},\r\n};\r\n\r\nexport class ModManager {\r\n    /**\r\n     *\r\n     * @param {ModPack} modPack\r\n     */\r\n    constructor(user, modPack = undefined) {\r\n        /** @type {Map<String, import(\"./mod\").ModInfo>} */\r\n        this.mods = new Map();\r\n\r\n        this.modPack = modPack;\r\n\r\n        window[\"shapezAPI\"] = new ShapezAPI(user);\r\n\r\n        /**\r\n         * Registers a mod\r\n         * @param {import(\"./mod\").ModInfo} mod\r\n         */\r\n        window[\"registerMod\"] = mod => {\r\n            this.registerMod(mod);\r\n        };\r\n    }\r\n\r\n    registerMod(mod) {\r\n        for (const key in INFOType) {\r\n            if (!INFOType.hasOwnProperty(key)) continue;\r\n            if (mod.hasOwnProperty(key)) continue;\r\n\r\n            if (mod.id) console.warn(\"Mod with mod id: \" + mod.id + \" has no \" + key + \" specified\");\r\n            else console.warn(\"Unknown mod has no \" + key + \" specified\");\r\n\r\n            return;\r\n        }\r\n\r\n        if (!mod.id.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i)) {\r\n            console.warn(\"Mod with mod id: \" + mod.id + \" has no uuid\");\r\n            return;\r\n        }\r\n\r\n        if (this.mods.has(mod.id)) {\r\n            console.warn(\"Mod with mod id: \" + mod.id + \" already registerd\");\r\n            return;\r\n        }\r\n\r\n        this.mods.set(mod.id, mod);\r\n    }\r\n\r\n    /**\r\n     * Adds a mod to the page\r\n     * @param {String} url\r\n     * @returns {Promise}\r\n     */\r\n    addMod(url) {\r\n        //TODO: check if is mods website\r\n        return Promise.race([\r\n                new Promise((resolve, reject) => {\r\n                    setTimeout(reject, 60 * 1000);\r\n                }),\r\n                fetch(url, {\r\n                    method: \"GET\",\r\n                    cache: \"no-cache\",\r\n                }),\r\n            ])\r\n            .then(res => res.text())\r\n            .catch(err => {\r\n                assert(this, \"Failed to load mod:\", err);\r\n                return Promise.reject(\"Downloading from '\" + url + \"' timed out\");\r\n            })\r\n            .then(modCode => {\r\n                return Promise.race([\r\n                    new Promise((resolve, reject) => {\r\n                        setTimeout(reject, 60 * 1000);\r\n                    }),\r\n                    new Promise((resolve, reject) => {\r\n                        this.nextModResolver = resolve;\r\n                        this.nextModRejector = reject;\r\n\r\n                        const modScript = document.createElement(\"script\");\r\n                        modScript.textContent = modCode;\r\n                        modScript.type = \"text/javascript\";\r\n                        try {\r\n                            document.head.appendChild(modScript);\r\n                            resolve();\r\n                        } catch (ex) {\r\n                            console.error(\"Failed to insert mod, bad js:\", ex);\r\n                            this.nextModResolver = null;\r\n                            this.nextModRejector = null;\r\n                            reject(\"Mod is invalid\");\r\n                        }\r\n                    }),\r\n                ]);\r\n            })\r\n            .catch(err => {\r\n                assert(this, \"Failed to initializing mod:\", err);\r\n                return Promise.reject(\"Initializing mod failed: \" + err);\r\n            });\r\n    }\r\n\r\n    addModPackMods() {\r\n        if (this.modPack && this.modPack.mods) {\r\n            let promise = Promise.resolve(null);\r\n\r\n            for (let i = 0; i < this.modPack.mods.length; i++) {\r\n                promise = promise.then(() => {\r\n                    return this.addMod(this.modPack.mods[i].url);\r\n                });\r\n            }\r\n            return promise;\r\n        }\r\n        return Promise.reject();\r\n    }\r\n\r\n    /**\r\n     * Adds a mod to the page\r\n     * @param {Array<String>} urls\r\n     */\r\n    addMods(urls) {\r\n        let promise = Promise.resolve(null);\r\n\r\n        for (let i = 0; i < urls.length; ++i) {\r\n            const url = urls[i];\r\n\r\n            promise = promise.then(() => {\r\n                return this.addMod(url);\r\n            });\r\n        }\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Loads all mods in the mods list\r\n     */\r\n    loadMods() {\r\n        shapezAPI.mods = this.mods;\r\n\r\n        if (!this.modPack || !this.modPack.modOrder) {\r\n            var sorter = new Toposort();\r\n            for (const [id, mod] of this.mods.entries()) {\r\n                let isMissingDependecie = false;\r\n                let missingDependecie = \"\";\r\n                for (let i = 0; i < mod.dependencies.length; i++) {\r\n                    const dependencie = mod.dependencies[i];\r\n                    if (this.mods.has(dependencie)) continue;\r\n                    isMissingDependecie = true;\r\n                    missingDependecie = dependencie;\r\n                }\r\n\r\n                if (isMissingDependecie) {\r\n                    console.warn(\r\n                        \"Mod with mod id: \" +\r\n                        mod.id +\r\n                        \" is disabled because it's missings the dependecie \" +\r\n                        missingDependecie\r\n                    );\r\n                    continue;\r\n                } else sorter.add(id, mod.dependencies);\r\n            }\r\n            shapezAPI.modOrder = sorter.sort().reverse();\r\n        } else {\r\n            /** @typedef {string[]} */\r\n            shapezAPI.modOrder = this.modPack.modOrder;\r\n            for (const [id, mod] of this.mods.entries()) {\r\n                if (shapezAPI.modOrder.includes(id)) continue;\r\n                shapezAPI.modOrder.push(id);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < shapezAPI.modOrder.length; i++) {\r\n            this.loadMod(shapezAPI.modOrder[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls the main mod function\r\n     * @param {String} id\r\n     */\r\n    loadMod(id) {\r\n        var mod = this.mods.get(id);\r\n        for (const [id, currentMod] of this.mods.entries()) {\r\n            if (mod.incompatible.indexOf(id) >= 0) {\r\n                console.warn(\r\n                    \"Mod with mod id: \" + mod.id + \" is disabled because it's incompatible with \" + id\r\n                );\r\n                return;\r\n            }\r\n        }\r\n        const language = mod.translations[\"en\"];\r\n        if (language) {\r\n            matchOverwriteRecursive(shapezAPI.translations, language);\r\n        }\r\n\r\n        const settings = this.modPack.mods.find(mod => mod.id === id).settings;\r\n        if (settings) {\r\n            matchOverwriteRecursiveSettings(mod.settings, settings);\r\n        }\r\n\r\n        if (this.modPack && this.modPack.mods) mod.main(this.modPack.mods.find(mod => mod.id === id).config);\r\n        else mod.main();\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/modloader/modmanager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3342,
    "kind": "typedef",
    "name": "ModPack",
    "memberof": "js/modloader/modmanager.js",
    "static": true,
    "longname": "js/modloader/modmanager.js~ModPack",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "type": {
      "types": [
        "{\n mods: [\n     {\n         url: string,\n         id: string,\n         config: {},\n         settings: {},\n     },\n ],\n modOrder?: [],\n}"
      ],
      "optional": false,
      "name": "ModPack"
    }
  },
  {
    "__docId__": 3343,
    "kind": "variable",
    "name": "INFOType",
    "memberof": "js/modloader/modmanager.js",
    "static": true,
    "longname": "js/modloader/modmanager.js~INFOType",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/modloader/modmanager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "{\"title\": *, \"id\": *, \"description\": *, \"authors\": *, \"version\": *, \"gameVersion\": *, \"dependencies\": *, \"incompatible\": *, \"translations\": *, \"settings\": *, \"updateStaticSettings\": *, \"updateStaticTranslations\": *, \"gameInitializedRootClasses\": *, \"gameInitializedRootManagers\": *, \"gameBeforeFirstUpdate\": *, \"main\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3344,
    "kind": "class",
    "name": "ModManager",
    "memberof": "js/modloader/modmanager.js",
    "static": true,
    "longname": "js/modloader/modmanager.js~ModManager",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/modloader/modmanager.js",
    "importStyle": "{ModManager}",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3345,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/modloader/modmanager.js~ModManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/modmanager.js~ModManager#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "ModPack"
        ],
        "spread": false,
        "optional": false,
        "name": "modPack",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 3346,
    "kind": "member",
    "name": "mods",
    "memberof": "js/modloader/modmanager.js~ModManager",
    "static": false,
    "longname": "js/modloader/modmanager.js~ModManager#mods",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "Map<String, import(\"./mod\").ModInfo>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3347,
    "kind": "member",
    "name": "modPack",
    "memberof": "js/modloader/modmanager.js~ModManager",
    "static": false,
    "longname": "js/modloader/modmanager.js~ModManager#modPack",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3348,
    "kind": "method",
    "name": "registerMod",
    "memberof": "js/modloader/modmanager.js~ModManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/modmanager.js~ModManager#registerMod",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [
      {
        "name": "mod",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3349,
    "kind": "method",
    "name": "addMod",
    "memberof": "js/modloader/modmanager.js~ModManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/modmanager.js~ModManager#addMod",
    "access": "public",
    "description": "Adds a mod to the page",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3350,
    "kind": "member",
    "name": "nextModResolver",
    "memberof": "js/modloader/modmanager.js~ModManager",
    "static": false,
    "longname": "js/modloader/modmanager.js~ModManager#nextModResolver",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3351,
    "kind": "member",
    "name": "nextModRejector",
    "memberof": "js/modloader/modmanager.js~ModManager",
    "static": false,
    "longname": "js/modloader/modmanager.js~ModManager#nextModRejector",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3354,
    "kind": "method",
    "name": "addModPackMods",
    "memberof": "js/modloader/modmanager.js~ModManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/modmanager.js~ModManager#addModPackMods",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3355,
    "kind": "method",
    "name": "addMods",
    "memberof": "js/modloader/modmanager.js~ModManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/modmanager.js~ModManager#addMods",
    "access": "public",
    "description": "Adds a mod to the page",
    "lineNumber": 155,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<String>"
        ],
        "spread": false,
        "optional": false,
        "name": "urls",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3356,
    "kind": "method",
    "name": "loadMods",
    "memberof": "js/modloader/modmanager.js~ModManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/modmanager.js~ModManager#loadMods",
    "access": "public",
    "description": "Loads all mods in the mods list",
    "lineNumber": 172,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3357,
    "kind": "typedef",
    "name": null,
    "memberof": "js/modloader/modmanager.js~ModManager",
    "static": true,
    "longname": "js/modloader/modmanager.js~ModManager.null",
    "access": "public",
    "description": null,
    "lineNumber": 200,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 3358,
    "kind": "method",
    "name": "loadMod",
    "memberof": "js/modloader/modmanager.js~ModManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/modloader/modmanager.js~ModManager#loadMod",
    "access": "public",
    "description": "Calls the main mod function",
    "lineNumber": 216,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3359,
    "kind": "file",
    "name": "js/modloader/overwrite.js",
    "content": "export function matchOverwriteRecursiveSettings(dest, src) {\r\n    if (typeof dest !== \"object\" || typeof src !== \"object\") {\r\n        return;\r\n    }\r\n\r\n    for (const key in src) {\r\n        //console.log(\"copy\", key);\r\n        const data = src[key];\r\n        if (typeof data === \"object\") {\r\n            if (!dest[key]) dest[key] = {};\r\n            matchOverwriteRecursiveSettings(dest[key], src[key]);\r\n        } else if (typeof data === \"string\" || typeof data === \"number\" || typeof data === \"boolean\") {\r\n            dest[key] = data;\r\n        } else {\r\n            console.log(\"Unknown type:\", typeof data, \"in key\", key);\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/modloader/overwrite.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3360,
    "kind": "function",
    "name": "matchOverwriteRecursiveSettings",
    "memberof": "js/modloader/overwrite.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/modloader/overwrite.js~matchOverwriteRecursiveSettings",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/modloader/overwrite.js",
    "importStyle": "{matchOverwriteRecursiveSettings}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "dest",
        "types": [
          "*"
        ]
      },
      {
        "name": "src",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3361,
    "kind": "file",
    "name": "js/platform/ad_provider.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\n\r\nexport class AdProviderInterface {\r\n    /** @param {Application} app */\r\n    constructor(app) {\r\n        this.app = app;\r\n    }\r\n\r\n    /**\r\n     * Initializes the storage\r\n     * @returns {Promise<void>}\r\n     */\r\n    initialize() {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * Returns if this provider serves ads at all\r\n     * @returns {boolean}\r\n     */\r\n    getHasAds() {\r\n        abstract;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns if it would be possible to show a video ad *now*. This can be false if for\r\n     * example the last video ad is\r\n     * @returns {boolean}\r\n     */\r\n    getCanShowVideoAd() {\r\n        abstract;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Shows an video ad\r\n     * @returns {Promise<void>}\r\n     */\r\n    showVideoAd() {\r\n        return Promise.resolve();\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/ad_provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3362,
    "kind": "class",
    "name": "AdProviderInterface",
    "memberof": "js/platform/ad_provider.js",
    "static": true,
    "longname": "js/platform/ad_provider.js~AdProviderInterface",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/ad_provider.js",
    "importStyle": "{AdProviderInterface}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3363,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/ad_provider.js~AdProviderInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_provider.js~AdProviderInterface#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 3364,
    "kind": "member",
    "name": "app",
    "memberof": "js/platform/ad_provider.js~AdProviderInterface",
    "static": false,
    "longname": "js/platform/ad_provider.js~AdProviderInterface#app",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3365,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/ad_provider.js~AdProviderInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_provider.js~AdProviderInterface#initialize",
    "access": "public",
    "description": "Initializes the storage",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3366,
    "kind": "method",
    "name": "getHasAds",
    "memberof": "js/platform/ad_provider.js~AdProviderInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_provider.js~AdProviderInterface#getHasAds",
    "access": "public",
    "description": "Returns if this provider serves ads at all",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3367,
    "kind": "method",
    "name": "getCanShowVideoAd",
    "memberof": "js/platform/ad_provider.js~AdProviderInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_provider.js~AdProviderInterface#getCanShowVideoAd",
    "access": "public",
    "description": "Returns if it would be possible to show a video ad *now*. This can be false if for\nexample the last video ad is",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3368,
    "kind": "method",
    "name": "showVideoAd",
    "memberof": "js/platform/ad_provider.js~AdProviderInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_provider.js~AdProviderInterface#showVideoAd",
    "access": "public",
    "description": "Shows an video ad",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3369,
    "kind": "file",
    "name": "js/platform/ad_providers/adinplay.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../../application\";\r\n/* typehints:end */\r\n\r\nimport { AdProviderInterface } from \"../ad_provider\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { ClickDetector } from \"../../core/click_detector\";\r\nimport { clamp } from \"../../core/utils\";\r\nimport { T } from \"../../translations\";\r\n\r\nconst logger = createLogger(\"adprovider/adinplay\");\r\n\r\nconst minimumTimeBetweenVideoAdsMs = G_IS_DEV ? 1 : 15 * 60 * 1000;\r\n\r\nexport class AdinplayAdProvider extends AdProviderInterface {\r\n    /**\r\n     *\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        super(app);\r\n\r\n        /** @type {ClickDetector} */\r\n        this.getOnSteamClickDetector = null;\r\n\r\n        /** @type {Element} */\r\n        this.adContainerMainElement = null;\r\n\r\n        /**\r\n         * The resolve function to finish the current video ad. Null if none is currently running\r\n         * @type {Function}\r\n         */\r\n        this.videoAdResolveFunction = null;\r\n\r\n        /**\r\n         * The current timer which will timeout the resolve\r\n         */\r\n        this.videoAdResolveTimer = null;\r\n\r\n        /**\r\n         * When we showed the last video ad\r\n         */\r\n        this.lastVideoAdShowTime = -1e20;\r\n    }\r\n\r\n    getHasAds() {\r\n        return true;\r\n    }\r\n\r\n    getCanShowVideoAd() {\r\n        return (\r\n            this.getHasAds() &&\r\n            !this.videoAdResolveFunction &&\r\n            performance.now() - this.lastVideoAdShowTime > minimumTimeBetweenVideoAdsMs\r\n        );\r\n    }\r\n\r\n    initialize() {\r\n        // No point to initialize everything if ads are not supported\r\n        if (!this.getHasAds()) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        logger.log(\"🎬 Initializing Adinplay\");\r\n\r\n        // Add the preroll element\r\n        this.adContainerMainElement = document.createElement(\"div\");\r\n        this.adContainerMainElement.id = \"adinplayVideoContainer\";\r\n        this.adContainerMainElement.innerHTML = `\r\n            <div class=\"adInner\">\r\n                <div class=\"videoInner\">\r\n\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        // Add the setup script\r\n        const setupScript = document.createElement(\"script\");\r\n        setupScript.textContent = `\r\n            var aiptag = aiptag || {};\r\n            aiptag.cmd = aiptag.cmd || [];\r\n            aiptag.cmd.display = aiptag.cmd.display || [];\r\n            aiptag.cmd.player = aiptag.cmd.player || [];\r\n        `;\r\n        document.head.appendChild(setupScript);\r\n\r\n        window.aiptag.gdprShowConsentTool = 0;\r\n        window.aiptag.gdprAlternativeConsentTool = 1;\r\n        window.aiptag.gdprConsent = 1;\r\n\r\n        const scale = this.app.getEffectiveUiScale();\r\n        const targetW = 960;\r\n        const targetH = 540;\r\n\r\n        const maxScaleX = (window.innerWidth - 100 * scale) / targetW;\r\n        const maxScaleY = (window.innerHeight - 150 * scale) / targetH;\r\n\r\n        const scaleFactor = clamp(Math.min(maxScaleX, maxScaleY), 0.25, 2);\r\n\r\n        const w = Math.round(targetW * scaleFactor);\r\n        const h = Math.round(targetH * scaleFactor);\r\n\r\n        // Add the player\r\n        const videoElement = this.adContainerMainElement.querySelector(\".videoInner\");\r\n        /** @type {HTMLElement} */\r\n        const adInnerElement = this.adContainerMainElement.querySelector(\".adInner\");\r\n\r\n        adInnerElement.style.maxWidth = w + \"px\";\r\n\r\n        const self = this;\r\n        window.aiptag.cmd.player.push(function () {\r\n            window.adPlayer = new window.aipPlayer({\r\n                AD_WIDTH: w,\r\n                AD_HEIGHT: h,\r\n                AD_FULLSCREEN: false,\r\n                AD_CENTERPLAYER: false,\r\n                LOADING_TEXT: T.global.loading,\r\n                PREROLL_ELEM: function () {\r\n                    return videoElement;\r\n                },\r\n                AIP_COMPLETE: function () {\r\n                    logger.log(\"🎬 ADINPLAY AD: completed\");\r\n                    self.adContainerMainElement.classList.add(\"waitingForFinish\");\r\n                },\r\n                AIP_REMOVE: function () {\r\n                    logger.log(\"🎬 ADINPLAY AD: remove\");\r\n                    if (self.videoAdResolveFunction) {\r\n                        self.videoAdResolveFunction();\r\n                    }\r\n                },\r\n            });\r\n        });\r\n\r\n        // Load the ads\r\n        const aipScript = document.createElement(\"script\");\r\n        aipScript.src = \"https://api.adinplay.com/libs/aiptag/pub/YRG/shapez.io/tag.min.js\";\r\n        aipScript.setAttribute(\"async\", \"\");\r\n        document.head.appendChild(aipScript);\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    showVideoAd() {\r\n        assert(this.getHasAds(), \"Called showVideoAd but ads are not supported!\");\r\n        assert(!this.videoAdResolveFunction, \"Video ad still running, can not show again!\");\r\n        this.lastVideoAdShowTime = performance.now();\r\n        document.body.appendChild(this.adContainerMainElement);\r\n        this.adContainerMainElement.classList.add(\"visible\");\r\n        this.adContainerMainElement.classList.remove(\"waitingForFinish\");\r\n\r\n        try {\r\n            // @ts-ignore\r\n            window.aiptag.cmd.player.push(function () {\r\n                console.log(\"🎬 ADINPLAY AD: Start pre roll\");\r\n                window.adPlayer.startPreRoll();\r\n            });\r\n        } catch (ex) {\r\n            logger.warn(\"🎬 Failed to play video ad:\", ex);\r\n            document.body.removeChild(this.adContainerMainElement);\r\n            this.adContainerMainElement.classList.remove(\"visible\");\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return new Promise(resolve => {\r\n            // So, wait for the remove call but also remove after N seconds\r\n            this.videoAdResolveFunction = () => {\r\n                this.videoAdResolveFunction = null;\r\n                clearTimeout(this.videoAdResolveTimer);\r\n                this.videoAdResolveTimer = null;\r\n\r\n                // When the ad closed, also set the time\r\n                this.lastVideoAdShowTime = performance.now();\r\n                resolve();\r\n            };\r\n\r\n            this.videoAdResolveTimer = setTimeout(() => {\r\n                logger.warn(this, \"Automatically closing ad after not receiving callback\");\r\n                if (this.videoAdResolveFunction) {\r\n                    this.videoAdResolveFunction();\r\n                }\r\n            }, 120 * 1000);\r\n        })\r\n            .catch(err => {\r\n                logger.error(\"Error while resolving video ad:\", err);\r\n            })\r\n            .then(() => {\r\n                document.body.removeChild(this.adContainerMainElement);\r\n                this.adContainerMainElement.classList.remove(\"visible\");\r\n            });\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/ad_providers/adinplay.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3370,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/platform/ad_providers/adinplay.js",
    "static": true,
    "longname": "js/platform/ad_providers/adinplay.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/ad_providers/adinplay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3371,
    "kind": "variable",
    "name": "minimumTimeBetweenVideoAdsMs",
    "memberof": "js/platform/ad_providers/adinplay.js",
    "static": true,
    "longname": "js/platform/ad_providers/adinplay.js~minimumTimeBetweenVideoAdsMs",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/ad_providers/adinplay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3372,
    "kind": "class",
    "name": "AdinplayAdProvider",
    "memberof": "js/platform/ad_providers/adinplay.js",
    "static": true,
    "longname": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/ad_providers/adinplay.js",
    "importStyle": "{AdinplayAdProvider}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/ad_provider.js~AdProviderInterface"
    ]
  },
  {
    "__docId__": 3373,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 3374,
    "kind": "member",
    "name": "getOnSteamClickDetector",
    "memberof": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider",
    "static": false,
    "longname": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider#getOnSteamClickDetector",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "ClickDetector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3375,
    "kind": "member",
    "name": "adContainerMainElement",
    "memberof": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider",
    "static": false,
    "longname": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider#adContainerMainElement",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3376,
    "kind": "member",
    "name": "videoAdResolveFunction",
    "memberof": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider",
    "static": false,
    "longname": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider#videoAdResolveFunction",
    "access": "public",
    "description": "The resolve function to finish the current video ad. Null if none is currently running",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3377,
    "kind": "member",
    "name": "videoAdResolveTimer",
    "memberof": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider",
    "static": false,
    "longname": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider#videoAdResolveTimer",
    "access": "public",
    "description": "The current timer which will timeout the resolve",
    "lineNumber": 38,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3378,
    "kind": "member",
    "name": "lastVideoAdShowTime",
    "memberof": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider",
    "static": false,
    "longname": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider#lastVideoAdShowTime",
    "access": "public",
    "description": "When we showed the last video ad",
    "lineNumber": 43,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3379,
    "kind": "method",
    "name": "getHasAds",
    "memberof": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider#getHasAds",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3380,
    "kind": "method",
    "name": "getCanShowVideoAd",
    "memberof": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider#getCanShowVideoAd",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3381,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3383,
    "kind": "method",
    "name": "showVideoAd",
    "memberof": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_providers/adinplay.js~AdinplayAdProvider#showVideoAd",
    "access": "public",
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3390,
    "kind": "file",
    "name": "js/platform/ad_providers/gamedistribution.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../../application\";\r\n/* typehints:end */\r\n\r\nimport { AdProviderInterface } from \"../ad_provider\";\r\nimport { createLogger } from \"../../core/logging\";\r\n\r\nconst minimumTimeBetweenVideoAdsMs = G_IS_DEV ? 1 : 5 * 60 * 1000;\r\n\r\nconst logger = createLogger(\"gamedistribution\");\r\n\r\nexport class GamedistributionAdProvider extends AdProviderInterface {\r\n    /**\r\n     *\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        super(app);\r\n\r\n        /**\r\n         * The resolve function to finish the current video ad. Null if none is currently running\r\n         * @type {Function}\r\n         */\r\n        this.videoAdResolveFunction = null;\r\n\r\n        /**\r\n         * The current timer which will timeout the resolve\r\n         */\r\n        this.videoAdResolveTimer = null;\r\n\r\n        /**\r\n         * When we showed the last video ad\r\n         */\r\n        this.lastVideoAdShowTime = -1e20;\r\n\r\n        console.error(\"X\");\r\n    }\r\n\r\n    getHasAds() {\r\n        return true;\r\n    }\r\n\r\n    getCanShowVideoAd() {\r\n        return (\r\n            this.getHasAds() &&\r\n            !this.videoAdResolveFunction &&\r\n            performance.now() - this.lastVideoAdShowTime > minimumTimeBetweenVideoAdsMs\r\n        );\r\n    }\r\n\r\n    initialize() {\r\n        // No point to initialize everything if ads are not supported\r\n        if (!this.getHasAds()) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        logger.log(\"🎬 Initializing gamedistribution ads\");\r\n\r\n        try {\r\n            parent.postMessage(\"shapezio://gd.game_loaded\", \"*\");\r\n        } catch (ex) {\r\n            return Promise.reject(\"Frame communication not allowed\");\r\n        }\r\n\r\n        window.addEventListener(\r\n            \"message\",\r\n            event => {\r\n                if (event.data === \"shapezio://gd.ad_started\") {\r\n                    console.log(\"🎬 Got ad started callback\");\r\n                } else if (event.data === \"shapezio://gd.ad_finished\") {\r\n                    console.log(\"🎬 Got ad finished callback\");\r\n                    if (this.videoAdResolveFunction) {\r\n                        this.videoAdResolveFunction();\r\n                    }\r\n                }\r\n            },\r\n            false\r\n        );\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    showVideoAd() {\r\n        assert(this.getHasAds(), \"Called showVideoAd but ads are not supported!\");\r\n        assert(!this.videoAdResolveFunction, \"Video ad still running, can not show again!\");\r\n        this.lastVideoAdShowTime = performance.now();\r\n\r\n        console.log(\"🎬 Gamedistribution: Start ad\");\r\n        try {\r\n            parent.postMessage(\"shapezio://gd.show_ad\", \"*\");\r\n        } catch (ex) {\r\n            logger.warn(\"🎬 Failed to send message for gd ad:\", ex);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        document.body.classList.add(\"externalAdOpen\");\r\n\r\n        return new Promise(resolve => {\r\n            // So, wait for the remove call but also remove after N seconds\r\n            this.videoAdResolveFunction = () => {\r\n                this.videoAdResolveFunction = null;\r\n                clearTimeout(this.videoAdResolveTimer);\r\n                this.videoAdResolveTimer = null;\r\n\r\n                // When the ad closed, also set the time\r\n                this.lastVideoAdShowTime = performance.now();\r\n                resolve();\r\n            };\r\n\r\n            this.videoAdResolveTimer = setTimeout(() => {\r\n                logger.warn(\"Automatically closing ad after not receiving callback\");\r\n                if (this.videoAdResolveFunction) {\r\n                    this.videoAdResolveFunction();\r\n                }\r\n            }, 35000);\r\n        })\r\n            .catch(err => {\r\n                logger.error(this, \"Error while resolving video ad:\", err);\r\n            })\r\n            .then(() => {\r\n                document.body.classList.remove(\"externalAdOpen\");\r\n            });\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/ad_providers/gamedistribution.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3391,
    "kind": "variable",
    "name": "minimumTimeBetweenVideoAdsMs",
    "memberof": "js/platform/ad_providers/gamedistribution.js",
    "static": true,
    "longname": "js/platform/ad_providers/gamedistribution.js~minimumTimeBetweenVideoAdsMs",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/ad_providers/gamedistribution.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3392,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/platform/ad_providers/gamedistribution.js",
    "static": true,
    "longname": "js/platform/ad_providers/gamedistribution.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/ad_providers/gamedistribution.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3393,
    "kind": "class",
    "name": "GamedistributionAdProvider",
    "memberof": "js/platform/ad_providers/gamedistribution.js",
    "static": true,
    "longname": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/ad_providers/gamedistribution.js",
    "importStyle": "{GamedistributionAdProvider}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/ad_provider.js~AdProviderInterface"
    ]
  },
  {
    "__docId__": 3394,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 3395,
    "kind": "member",
    "name": "videoAdResolveFunction",
    "memberof": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider",
    "static": false,
    "longname": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider#videoAdResolveFunction",
    "access": "public",
    "description": "The resolve function to finish the current video ad. Null if none is currently running",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3396,
    "kind": "member",
    "name": "videoAdResolveTimer",
    "memberof": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider",
    "static": false,
    "longname": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider#videoAdResolveTimer",
    "access": "public",
    "description": "The current timer which will timeout the resolve",
    "lineNumber": 29,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3397,
    "kind": "member",
    "name": "lastVideoAdShowTime",
    "memberof": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider",
    "static": false,
    "longname": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider#lastVideoAdShowTime",
    "access": "public",
    "description": "When we showed the last video ad",
    "lineNumber": 34,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3398,
    "kind": "method",
    "name": "getHasAds",
    "memberof": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider#getHasAds",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3399,
    "kind": "method",
    "name": "getCanShowVideoAd",
    "memberof": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider#getCanShowVideoAd",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3400,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3401,
    "kind": "method",
    "name": "showVideoAd",
    "memberof": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_providers/gamedistribution.js~GamedistributionAdProvider#showVideoAd",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3408,
    "kind": "file",
    "name": "js/platform/ad_providers/no_ad_provider.js",
    "content": "import { AdProviderInterface } from \"../ad_provider\";\r\n\r\nexport class NoAdProvider extends AdProviderInterface {\r\n    getHasAds() {\r\n        return false;\r\n    }\r\n\r\n    getCanShowVideoAd() {\r\n        return false;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/ad_providers/no_ad_provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3409,
    "kind": "class",
    "name": "NoAdProvider",
    "memberof": "js/platform/ad_providers/no_ad_provider.js",
    "static": true,
    "longname": "js/platform/ad_providers/no_ad_provider.js~NoAdProvider",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/ad_providers/no_ad_provider.js",
    "importStyle": "{NoAdProvider}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/ad_provider.js~AdProviderInterface"
    ]
  },
  {
    "__docId__": 3410,
    "kind": "method",
    "name": "getHasAds",
    "memberof": "js/platform/ad_providers/no_ad_provider.js~NoAdProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_providers/no_ad_provider.js~NoAdProvider#getHasAds",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3411,
    "kind": "method",
    "name": "getCanShowVideoAd",
    "memberof": "js/platform/ad_providers/no_ad_provider.js~NoAdProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/ad_providers/no_ad_provider.js~NoAdProvider#getCanShowVideoAd",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3412,
    "kind": "file",
    "name": "js/platform/analytics.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\n\r\nexport class AnalyticsInterface {\r\n    constructor(app) {\r\n        /** @type {Application} */\r\n        this.app = app;\r\n    }\r\n\r\n    /**\r\n     * Initializes the analytics\r\n     * @returns {Promise<void>}\r\n     */\r\n    initialize() {\r\n        abstract;\r\n        return Promise.reject();\r\n    }\r\n\r\n    /**\r\n     * Sets the player name for analytics\r\n     * @param {string} userName\r\n     */\r\n    setUserContext(userName) {}\r\n\r\n    /**\r\n     * Tracks a click no an ui element\r\n     * @param {string} elementName\r\n     */\r\n    trackUiClick(elementName) {}\r\n\r\n    /**\r\n     * Tracks when a new state is entered\r\n     * @param {string} stateId\r\n     */\r\n    trackStateEnter(stateId) {}\r\n\r\n    /**\r\n     * Tracks a new user decision\r\n     * @param {string} name\r\n     */\r\n    trackDecision(name) {}\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/analytics.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3413,
    "kind": "class",
    "name": "AnalyticsInterface",
    "memberof": "js/platform/analytics.js",
    "static": true,
    "longname": "js/platform/analytics.js~AnalyticsInterface",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/analytics.js",
    "importStyle": "{AnalyticsInterface}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3414,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/analytics.js~AnalyticsInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/analytics.js~AnalyticsInterface#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 3415,
    "kind": "member",
    "name": "app",
    "memberof": "js/platform/analytics.js~AnalyticsInterface",
    "static": false,
    "longname": "js/platform/analytics.js~AnalyticsInterface#app",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "Application"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3416,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/analytics.js~AnalyticsInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/analytics.js~AnalyticsInterface#initialize",
    "access": "public",
    "description": "Initializes the analytics",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3417,
    "kind": "method",
    "name": "setUserContext",
    "memberof": "js/platform/analytics.js~AnalyticsInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/analytics.js~AnalyticsInterface#setUserContext",
    "access": "public",
    "description": "Sets the player name for analytics",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userName",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3418,
    "kind": "method",
    "name": "trackUiClick",
    "memberof": "js/platform/analytics.js~AnalyticsInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/analytics.js~AnalyticsInterface#trackUiClick",
    "access": "public",
    "description": "Tracks a click no an ui element",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "elementName",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3419,
    "kind": "method",
    "name": "trackStateEnter",
    "memberof": "js/platform/analytics.js~AnalyticsInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/analytics.js~AnalyticsInterface#trackStateEnter",
    "access": "public",
    "description": "Tracks when a new state is entered",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "stateId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3420,
    "kind": "method",
    "name": "trackDecision",
    "memberof": "js/platform/analytics.js~AnalyticsInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/analytics.js~AnalyticsInterface#trackDecision",
    "access": "public",
    "description": "Tracks a new user decision",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3421,
    "kind": "file",
    "name": "js/platform/browser/game_analytics.js",
    "content": "import { globalConfig } from \"../../core/config\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { queryParamOptions } from \"../../core/query_parameters\";\r\nimport { BeltComponent } from \"../../game/components/belt\";\r\nimport { StaticMapEntityComponent } from \"../../game/components/static_map_entity\";\r\nimport { GameRoot } from \"../../game/root\";\r\nimport { InGameState } from \"../../states/ingame\";\r\nimport { GameAnalyticsInterface } from \"../game_analytics\";\r\nimport { FILE_NOT_FOUND } from \"../storage\";\r\n\r\nconst logger = createLogger(\"game_analytics\");\r\n\r\nconst analyticsUrl = G_IS_DEV ? \"http://localhost:8001\" : \"https://analytics.shapez.io\";\r\n\r\n// Be sure to increment the ID whenever it changes to make sure all\r\n// users are tracked\r\nconst analyticsLocalFile = \"shapez_token_123.bin\";\r\n\r\nexport class ShapezGameAnalytics extends GameAnalyticsInterface {\r\n    get environment() {\r\n        if (G_IS_DEV) {\r\n            return \"dev\";\r\n        }\r\n\r\n        if (G_IS_STANDALONE) {\r\n            if (queryParamOptions.sandboxMode) {\r\n                return \"steam-sandbox\";\r\n            }\r\n            return \"steam\";\r\n        }\r\n\r\n        if (G_IS_RELEASE) {\r\n            return \"prod\";\r\n        }\r\n\r\n        if (window.location.host.indexOf(\"alpha\") >= 0) {\r\n            if (queryParamOptions.sandboxMode) {\r\n                return \"alpha-sandbox\";\r\n            }\r\n            return \"alpha\";\r\n        } else {\r\n            if (queryParamOptions.sandboxMode) {\r\n                return \"beta-sandbox\";\r\n            }\r\n            return \"beta\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @returns {Promise<void>}\r\n     */\r\n    initialize() {\r\n        this.syncKey = null;\r\n\r\n        setInterval(() => this.sendTimePoints(), 60 * 1000);\r\n\r\n        // Retrieve sync key from player\r\n        return this.app.storage.readFileAsync(analyticsLocalFile).then(\r\n            syncKey => {\r\n                this.syncKey = syncKey;\r\n                logger.log(\"Player sync key read:\", this.syncKey);\r\n            },\r\n            error => {\r\n                // File was not found, retrieve new key\r\n                if (error === FILE_NOT_FOUND) {\r\n                    logger.log(\"Retrieving new player key\");\r\n\r\n                    // Perform call to get a new key from the API\r\n                    this.sendToApi(\"/v1/register\", {\r\n                        environment: this.environment,\r\n                    })\r\n                        .then(res => {\r\n                            // Try to read and parse the key from the api\r\n                            if (res.key && typeof res.key === \"string\" && res.key.length === 40) {\r\n                                this.syncKey = res.key;\r\n                                logger.log(\"Key retrieved:\", this.syncKey);\r\n                                this.app.storage.writeFileAsync(analyticsLocalFile, res.key);\r\n                            } else {\r\n                                throw new Error(\"Bad response from analytics server: \" + res);\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                            logger.error(\"Failed to register on analytics api:\", err);\r\n                        });\r\n                } else {\r\n                    logger.error(\"Failed to read ga key:\", error);\r\n                }\r\n                return;\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Sends a request to the api\r\n     * @param {string} endpoint Endpoint without base url\r\n     * @param {object} data payload\r\n     * @returns {Promise<any>}\r\n     */\r\n    sendToApi(endpoint, data) {\r\n        return new Promise((resolve, reject) => {\r\n            const timeout = setTimeout(() => reject(\"Request to \" + endpoint + \" timed out\"), 20000);\r\n\r\n            fetch(analyticsUrl + endpoint, {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                cache: \"no-cache\",\r\n                referrer: \"no-referrer\",\r\n                credentials: \"omit\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"x-api-key\": globalConfig.info.analyticsApiKey,\r\n                },\r\n                body: JSON.stringify(data),\r\n            })\r\n                .then(res => {\r\n                    clearTimeout(timeout);\r\n                    if (!res.ok || res.status !== 200) {\r\n                        reject(\"Fetch error: Bad status \" + res.status);\r\n                    } else {\r\n                        return res.json();\r\n                    }\r\n                })\r\n                .then(resolve)\r\n                .catch(reason => {\r\n                    clearTimeout(timeout);\r\n                    reject(reason);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sends a game event to the analytics\r\n     * @param {string} category\r\n     * @param {string} value\r\n     */\r\n    sendGameEvent(category, value) {\r\n        if (!this.syncKey) {\r\n            logger.warn(\"Can not send event due to missing sync key\");\r\n            return;\r\n        }\r\n\r\n        const gameState = this.app.stateMgr.currentState;\r\n        if (!(gameState instanceof InGameState)) {\r\n            logger.warn(\"Trying to send analytics event outside of ingame state\");\r\n            return;\r\n        }\r\n\r\n        const savegame = gameState.savegame;\r\n        if (!savegame) {\r\n            logger.warn(\"Ingame state has empty savegame\");\r\n            return;\r\n        }\r\n\r\n        const savegameId = savegame.internalId;\r\n        if (!gameState.core) {\r\n            logger.warn(\"Game state has no core\");\r\n            return;\r\n        }\r\n        const root = gameState.core.root;\r\n        if (!root) {\r\n            logger.warn(\"Root is not initialized\");\r\n            return;\r\n        }\r\n\r\n        logger.log(\"Sending event\", category, value);\r\n\r\n        this.sendToApi(\"/v1/game-event\", {\r\n            playerKey: this.syncKey,\r\n            gameKey: savegameId,\r\n            ingameTime: root.time.now(),\r\n            environment: this.environment,\r\n            category,\r\n            value,\r\n            version: G_BUILD_VERSION,\r\n            level: root.hubGoals.level,\r\n            gameDump: this.generateGameDump(root),\r\n        });\r\n    }\r\n\r\n    sendTimePoints() {\r\n        const gameState = this.app.stateMgr.currentState;\r\n        if (gameState instanceof InGameState) {\r\n            logger.log(\"Syncing analytics\");\r\n            this.sendGameEvent(\"sync\", \"\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if the shape is interesting\r\n     * @param {GameRoot} root\r\n     * @param {string} key\r\n     */\r\n    isInterestingShape(root, key) {\r\n        if (key === root.gameMode.getBlueprintShapeKey()) {\r\n            return true;\r\n        }\r\n\r\n        // Check if its a story goal\r\n        const levels = root.gameMode.getLevelDefinitions();\r\n        for (let i = 0; i < levels.length; ++i) {\r\n            if (key === levels[i].shape) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Check if its required to unlock an upgrade\r\n        const upgrades = root.gameMode.getUpgrades();\r\n        for (const upgradeKey in upgrades) {\r\n            const upgradeTiers = upgrades[upgradeKey];\r\n            for (let i = 0; i < upgradeTiers.length; ++i) {\r\n                const tier = upgradeTiers[i];\r\n                const required = tier.required;\r\n                for (let k = 0; k < required.length; ++k) {\r\n                    if (required[k].shape === key) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Generates a game dump\r\n     * @param {GameRoot} root\r\n     */\r\n    generateGameDump(root) {\r\n        const shapeIds = Object.keys(root.hubGoals.storedShapes).filter(key =>\r\n            this.isInterestingShape(root, key)\r\n        );\r\n        let shapes = {};\r\n        for (let i = 0; i < shapeIds.length; ++i) {\r\n            shapes[shapeIds[i]] = root.hubGoals.storedShapes[shapeIds[i]];\r\n        }\r\n        return {\r\n            shapes,\r\n            upgrades: root.hubGoals.upgradeLevels,\r\n            belts: root.entityMgr.getAllWithComponent(BeltComponent).length,\r\n            buildings:\r\n                root.entityMgr.getAllWithComponent(StaticMapEntityComponent).length -\r\n                root.entityMgr.getAllWithComponent(BeltComponent).length,\r\n        };\r\n    }\r\n\r\n    /**\r\n     */\r\n    handleGameStarted() {\r\n        this.sendGameEvent(\"game_start\", \"\");\r\n    }\r\n\r\n    /**\r\n     */\r\n    handleGameResumed() {\r\n        this.sendTimePoints();\r\n    }\r\n\r\n    /**\r\n     * Handles the given level completed\r\n     * @param {number} level\r\n     */\r\n    handleLevelCompleted(level) {\r\n        logger.log(\"Complete level\", level);\r\n        this.sendGameEvent(\"level_complete\", \"\" + level);\r\n    }\r\n\r\n    /**\r\n     * Handles the given upgrade completed\r\n     * @param {string} id\r\n     * @param {number} level\r\n     */\r\n    handleUpgradeUnlocked(id, level) {\r\n        logger.log(\"Unlock upgrade\", id, level);\r\n        this.sendGameEvent(\"upgrade_unlock\", id + \"@\" + level);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/browser/game_analytics.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3422,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/platform/browser/game_analytics.js",
    "static": true,
    "longname": "js/platform/browser/game_analytics.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/game_analytics.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3423,
    "kind": "variable",
    "name": "analyticsUrl",
    "memberof": "js/platform/browser/game_analytics.js",
    "static": true,
    "longname": "js/platform/browser/game_analytics.js~analyticsUrl",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/game_analytics.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3424,
    "kind": "variable",
    "name": "analyticsLocalFile",
    "memberof": "js/platform/browser/game_analytics.js",
    "static": true,
    "longname": "js/platform/browser/game_analytics.js~analyticsLocalFile",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/game_analytics.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3425,
    "kind": "class",
    "name": "ShapezGameAnalytics",
    "memberof": "js/platform/browser/game_analytics.js",
    "static": true,
    "longname": "js/platform/browser/game_analytics.js~ShapezGameAnalytics",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/browser/game_analytics.js",
    "importStyle": "{ShapezGameAnalytics}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/game_analytics.js~GameAnalyticsInterface"
    ]
  },
  {
    "__docId__": 3426,
    "kind": "get",
    "name": "environment",
    "memberof": "js/platform/browser/game_analytics.js~ShapezGameAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/game_analytics.js~ShapezGameAnalytics#environment",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3427,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/browser/game_analytics.js~ShapezGameAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/game_analytics.js~ShapezGameAnalytics#initialize",
    "access": "public",
    "description": "",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3428,
    "kind": "member",
    "name": "syncKey",
    "memberof": "js/platform/browser/game_analytics.js~ShapezGameAnalytics",
    "static": false,
    "longname": "js/platform/browser/game_analytics.js~ShapezGameAnalytics#syncKey",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3431,
    "kind": "method",
    "name": "sendToApi",
    "memberof": "js/platform/browser/game_analytics.js~ShapezGameAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/game_analytics.js~ShapezGameAnalytics#sendToApi",
    "access": "public",
    "description": "Sends a request to the api",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<any>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "endpoint",
        "description": "Endpoint without base url"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "payload"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<any>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3432,
    "kind": "method",
    "name": "sendGameEvent",
    "memberof": "js/platform/browser/game_analytics.js~ShapezGameAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/game_analytics.js~ShapezGameAnalytics#sendGameEvent",
    "access": "public",
    "description": "Sends a game event to the analytics",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "category",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3433,
    "kind": "method",
    "name": "sendTimePoints",
    "memberof": "js/platform/browser/game_analytics.js~ShapezGameAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/game_analytics.js~ShapezGameAnalytics#sendTimePoints",
    "access": "public",
    "description": null,
    "lineNumber": 181,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3434,
    "kind": "method",
    "name": "isInterestingShape",
    "memberof": "js/platform/browser/game_analytics.js~ShapezGameAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/game_analytics.js~ShapezGameAnalytics#isInterestingShape",
    "access": "public",
    "description": "Returns true if the shape is interesting",
    "lineNumber": 194,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3435,
    "kind": "method",
    "name": "generateGameDump",
    "memberof": "js/platform/browser/game_analytics.js~ShapezGameAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/game_analytics.js~ShapezGameAnalytics#generateGameDump",
    "access": "public",
    "description": "Generates a game dump",
    "lineNumber": 229,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"shapes\": *, \"upgrades\": *, \"belts\": *, \"buildings\": *}"
      ]
    }
  },
  {
    "__docId__": 3436,
    "kind": "method",
    "name": "handleGameStarted",
    "memberof": "js/platform/browser/game_analytics.js~ShapezGameAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/game_analytics.js~ShapezGameAnalytics#handleGameStarted",
    "access": "public",
    "description": "",
    "lineNumber": 249,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3437,
    "kind": "method",
    "name": "handleGameResumed",
    "memberof": "js/platform/browser/game_analytics.js~ShapezGameAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/game_analytics.js~ShapezGameAnalytics#handleGameResumed",
    "access": "public",
    "description": "",
    "lineNumber": 255,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3438,
    "kind": "method",
    "name": "handleLevelCompleted",
    "memberof": "js/platform/browser/game_analytics.js~ShapezGameAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/game_analytics.js~ShapezGameAnalytics#handleLevelCompleted",
    "access": "public",
    "description": "Handles the given level completed",
    "lineNumber": 263,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3439,
    "kind": "method",
    "name": "handleUpgradeUnlocked",
    "memberof": "js/platform/browser/game_analytics.js~ShapezGameAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/game_analytics.js~ShapezGameAnalytics#handleUpgradeUnlocked",
    "access": "public",
    "description": "Handles the given upgrade completed",
    "lineNumber": 273,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3440,
    "kind": "file",
    "name": "js/platform/browser/google_analytics.js",
    "content": "import { AnalyticsInterface } from \"../analytics\";\r\nimport { createLogger } from \"../../core/logging\";\r\n\r\nconst logger = createLogger(\"ga\");\r\n\r\nexport class GoogleAnalyticsImpl extends AnalyticsInterface {\r\n    initialize() {\r\n        this.lastUiClickTracked = -1000;\r\n\r\n        setInterval(() => this.internalTrackAfkEvent(), 120 * 1000);\r\n\r\n        // Analytics is already loaded in the html\r\n        return Promise.resolve();\r\n    }\r\n\r\n    setUserContext(userName) {\r\n        try {\r\n            if (window.gtag) {\r\n                logger.log(\"📊 Setting user context:\", userName);\r\n                window.gtag(\"set\", {\r\n                    player: userName,\r\n                });\r\n            }\r\n        } catch (ex) {\r\n            logger.warn(\"📊 Failed to set user context:\", ex);\r\n        }\r\n    }\r\n\r\n    trackStateEnter(stateId) {\r\n        const nonInteractionStates = [\r\n            \"LoginState\",\r\n            \"MainMenuState\",\r\n            \"PreloadState\",\r\n            \"RegisterState\",\r\n            \"WatchAdState\",\r\n        ];\r\n\r\n        try {\r\n            if (window.gtag) {\r\n                logger.log(\"📊 Tracking state enter:\", stateId);\r\n                window.gtag(\"event\", \"enter_state\", {\r\n                    event_category: \"ui\",\r\n                    event_label: stateId,\r\n                    non_interaction: nonInteractionStates.indexOf(stateId) >= 0,\r\n                });\r\n            }\r\n        } catch (ex) {\r\n            logger.warn(\"📊 Failed to track state analytcis:\", ex);\r\n        }\r\n    }\r\n\r\n    trackDecision(decisionName) {\r\n        try {\r\n            if (window.gtag) {\r\n                logger.log(\"📊 Tracking decision:\", decisionName);\r\n                window.gtag(\"event\", \"decision\", {\r\n                    event_category: \"ui\",\r\n                    event_label: decisionName,\r\n                    non_interaction: true,\r\n                });\r\n            }\r\n        } catch (ex) {\r\n            logger.warn(\"📊 Failed to track state analytcis:\", ex);\r\n        }\r\n    }\r\n\r\n    trackUiClick(elementName) {\r\n        const stateKey = this.app.stateMgr.getCurrentState().key;\r\n        const fullSelector = stateKey + \">\" + elementName;\r\n\r\n        try {\r\n            if (window.gtag) {\r\n                logger.log(\"📊 Tracking click on:\", fullSelector);\r\n                window.gtag(\"event\", \"click\", {\r\n                    event_category: \"ui\",\r\n                    event_label: fullSelector,\r\n                });\r\n            }\r\n        } catch (ex) {\r\n            logger.warn(\"📊 Failed to track ui click:\", ex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tracks an event so GA keeps track of the user\r\n     */\r\n    internalTrackAfkEvent() {\r\n        if (window.gtag) {\r\n            window.gtag(\"event\", \"afk\", {\r\n                event_category: \"ping\",\r\n                event_label: \"timed\",\r\n            });\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/browser/google_analytics.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3441,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/platform/browser/google_analytics.js",
    "static": true,
    "longname": "js/platform/browser/google_analytics.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/google_analytics.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3442,
    "kind": "class",
    "name": "GoogleAnalyticsImpl",
    "memberof": "js/platform/browser/google_analytics.js",
    "static": true,
    "longname": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/browser/google_analytics.js",
    "importStyle": "{GoogleAnalyticsImpl}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/analytics.js~AnalyticsInterface"
    ]
  },
  {
    "__docId__": 3443,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3444,
    "kind": "member",
    "name": "lastUiClickTracked",
    "memberof": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl",
    "static": false,
    "longname": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl#lastUiClickTracked",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3445,
    "kind": "method",
    "name": "setUserContext",
    "memberof": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl#setUserContext",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "userName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3446,
    "kind": "method",
    "name": "trackStateEnter",
    "memberof": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl#trackStateEnter",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "stateId",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3447,
    "kind": "method",
    "name": "trackDecision",
    "memberof": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl#trackDecision",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [
      {
        "name": "decisionName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3448,
    "kind": "method",
    "name": "trackUiClick",
    "memberof": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl#trackUiClick",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [
      {
        "name": "elementName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3449,
    "kind": "method",
    "name": "internalTrackAfkEvent",
    "memberof": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/google_analytics.js~GoogleAnalyticsImpl#internalTrackAfkEvent",
    "access": "public",
    "description": "Tracks an event so GA keeps track of the user",
    "lineNumber": 87,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3450,
    "kind": "file",
    "name": "js/platform/browser/no_game_analytics.js",
    "content": "import { GameAnalyticsInterface } from \"../game_analytics\";\r\n\r\nexport class NoGameAnalytics extends GameAnalyticsInterface {\r\n    initialize() {\r\n        return Promise.resolve();\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/browser/no_game_analytics.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3451,
    "kind": "class",
    "name": "NoGameAnalytics",
    "memberof": "js/platform/browser/no_game_analytics.js",
    "static": true,
    "longname": "js/platform/browser/no_game_analytics.js~NoGameAnalytics",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/browser/no_game_analytics.js",
    "importStyle": "{NoGameAnalytics}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/game_analytics.js~GameAnalyticsInterface"
    ]
  },
  {
    "__docId__": 3452,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/browser/no_game_analytics.js~NoGameAnalytics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/no_game_analytics.js~NoGameAnalytics#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3453,
    "kind": "file",
    "name": "js/platform/browser/sound.js",
    "content": "import { MusicInstanceInterface, SoundInstanceInterface, SoundInterface, MUSIC, SOUNDS } from \"../sound\";\r\nimport { cachebust } from \"../../core/cachebust\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { globalConfig } from \"../../core/config\";\r\n\r\nconst { Howl, Howler } = require(\"howler\");\r\n\r\nconst logger = createLogger(\"sound/browser\");\r\n\r\n// @ts-ignore\r\nconst sprites = require(\"../../built-temp/sfx.json\");\r\n\r\nclass SoundSpritesContainer {\r\n    constructor() {\r\n        this.howl = null;\r\n\r\n        this.loadingPromise = null;\r\n    }\r\n\r\n    load() {\r\n        if (this.loadingPromise) {\r\n            return this.loadingPromise;\r\n        }\r\n        return (this.loadingPromise = Promise.race([\r\n            new Promise((resolve, reject) => {\r\n                setTimeout(reject, G_IS_DEV ? 500 : 5000);\r\n            }),\r\n            new Promise(resolve => {\r\n                this.howl = new Howl({\r\n                    src: cachebust(\"res/sounds/sfx.mp3\"),\r\n                    sprite: sprites.sprite,\r\n                    autoplay: false,\r\n                    loop: false,\r\n                    volume: 0,\r\n                    preload: true,\r\n                    pool: 20,\r\n                    onload: () => {\r\n                        resolve();\r\n                    },\r\n                    onloaderror: (id, err) => {\r\n                        logger.warn(\"SFX failed to load:\", id, err);\r\n                        this.howl = null;\r\n                        resolve();\r\n                    },\r\n                    onplayerror: (id, err) => {\r\n                        logger.warn(\"SFX failed to play:\", id, err);\r\n                    },\r\n                });\r\n            }),\r\n        ]));\r\n    }\r\n\r\n    play(volume, key) {\r\n        if (this.howl) {\r\n            const instance = this.howl.play(key);\r\n            this.howl.volume(volume, instance);\r\n        }\r\n    }\r\n\r\n    deinitialize() {\r\n        if (this.howl) {\r\n            this.howl.unload();\r\n            this.howl = null;\r\n        }\r\n    }\r\n}\r\n\r\nclass WrappedSoundInstance extends SoundInstanceInterface {\r\n    /**\r\n     *\r\n     * @param {SoundSpritesContainer} spriteContainer\r\n     * @param {string} key\r\n     */\r\n    constructor(spriteContainer, key) {\r\n        super(key, \"sfx.mp3\");\r\n        this.spriteContainer = spriteContainer;\r\n    }\r\n\r\n    /** @returns {Promise<void>} */\r\n    load() {\r\n        return this.spriteContainer.load();\r\n    }\r\n\r\n    play(volume) {\r\n        this.spriteContainer.play(volume, this.key);\r\n    }\r\n\r\n    deinitialize() {\r\n        return this.spriteContainer.deinitialize();\r\n    }\r\n}\r\n\r\nclass MusicInstance extends MusicInstanceInterface {\r\n    constructor(key, url) {\r\n        super(key, url);\r\n        this.howl = null;\r\n        this.instance = null;\r\n        this.playing = false;\r\n    }\r\n    load() {\r\n        return Promise.race([\r\n            new Promise((resolve, reject) => {\r\n                setTimeout(reject, G_IS_DEV ? 500 : 5000);\r\n            }),\r\n            new Promise((resolve, reject) => {\r\n                this.howl = new Howl({\r\n                    src: cachebust(\"res/sounds/music/\" + this.url + \".mp3\"),\r\n                    autoplay: false,\r\n                    loop: true,\r\n                    html5: true,\r\n                    volume: 1,\r\n                    preload: true,\r\n                    pool: 2,\r\n\r\n                    onunlock: () => {\r\n                        if (this.playing) {\r\n                            logger.log(\"Playing music after manual unlock\");\r\n                            this.play();\r\n                        }\r\n                    },\r\n\r\n                    onload: () => {\r\n                        resolve();\r\n                    },\r\n                    onloaderror: (id, err) => {\r\n                        logger.warn(this, \"Music\", this.url, \"failed to load:\", id, err);\r\n                        this.howl = null;\r\n                        resolve();\r\n                    },\r\n                    onplayerror: (id, err) => {\r\n                        logger.warn(this, \"Music\", this.url, \"failed to play:\", id, err);\r\n                    },\r\n                });\r\n            }),\r\n        ]);\r\n    }\r\n\r\n    stop() {\r\n        if (this.howl && this.instance) {\r\n            this.playing = false;\r\n            this.howl.pause(this.instance);\r\n        }\r\n    }\r\n\r\n    isPlaying() {\r\n        return this.playing;\r\n    }\r\n\r\n    play(volume) {\r\n        if (this.howl) {\r\n            this.playing = true;\r\n            this.howl.volume(volume);\r\n            if (this.instance) {\r\n                this.howl.play(this.instance);\r\n            } else {\r\n                this.instance = this.howl.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    setVolume(volume) {\r\n        if (this.howl) {\r\n            this.howl.volume(volume);\r\n        }\r\n    }\r\n\r\n    deinitialize() {\r\n        if (this.howl) {\r\n            this.howl.unload();\r\n            this.howl = null;\r\n            this.instance = null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class SoundImplBrowser extends SoundInterface {\r\n    constructor(app) {\r\n        Howler.mobileAutoEnable = true;\r\n        Howler.autoUnlock = true;\r\n        Howler.autoSuspend = false;\r\n        Howler.html5PoolSize = 20;\r\n        Howler.pos(0, 0, 0);\r\n\r\n        super(app, WrappedSoundInstance, MusicInstance);\r\n    }\r\n\r\n    initialize() {\r\n        // NOTICE: We override the initialize() method here with custom logic because\r\n        // we have a sound sprites instance\r\n\r\n        this.sfxHandle = new SoundSpritesContainer();\r\n\r\n        // @ts-ignore\r\n        const keys = Object.values(SOUNDS);\r\n        keys.forEach(key => {\r\n            this.sounds[key] = new WrappedSoundInstance(this.sfxHandle, key);\r\n        });\r\n        for (const musicKey in MUSIC) {\r\n            const musicPath = MUSIC[musicKey];\r\n            const music = new this.musicClass(musicKey, musicPath);\r\n            this.music[musicPath] = music;\r\n        }\r\n\r\n        this.musicVolume = this.app.settings.getAllSettings().musicVolume;\r\n        this.soundVolume = this.app.settings.getAllSettings().soundVolume;\r\n\r\n        if (G_IS_DEV && globalConfig.debug.disableMusic) {\r\n            this.musicVolume = 0.0;\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    deinitialize() {\r\n        return super.deinitialize().then(() => Howler.unload());\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/browser/sound.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3454,
    "kind": "variable",
    "name": "Howl",
    "memberof": "js/platform/browser/sound.js",
    "static": true,
    "longname": "js/platform/browser/sound.js~Howl",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/sound.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3455,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/platform/browser/sound.js",
    "static": true,
    "longname": "js/platform/browser/sound.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/sound.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3456,
    "kind": "variable",
    "name": "sprites",
    "memberof": "js/platform/browser/sound.js",
    "static": true,
    "longname": "js/platform/browser/sound.js~sprites",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/sound.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3457,
    "kind": "class",
    "name": "SoundSpritesContainer",
    "memberof": "js/platform/browser/sound.js",
    "static": true,
    "longname": "js/platform/browser/sound.js~SoundSpritesContainer",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/sound.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 3458,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/browser/sound.js~SoundSpritesContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~SoundSpritesContainer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 3459,
    "kind": "member",
    "name": "howl",
    "memberof": "js/platform/browser/sound.js~SoundSpritesContainer",
    "static": false,
    "longname": "js/platform/browser/sound.js~SoundSpritesContainer#howl",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3460,
    "kind": "member",
    "name": "loadingPromise",
    "memberof": "js/platform/browser/sound.js~SoundSpritesContainer",
    "static": false,
    "longname": "js/platform/browser/sound.js~SoundSpritesContainer#loadingPromise",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3461,
    "kind": "method",
    "name": "load",
    "memberof": "js/platform/browser/sound.js~SoundSpritesContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~SoundSpritesContainer#load",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3464,
    "kind": "method",
    "name": "play",
    "memberof": "js/platform/browser/sound.js~SoundSpritesContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~SoundSpritesContainer#play",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "volume",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3465,
    "kind": "method",
    "name": "deinitialize",
    "memberof": "js/platform/browser/sound.js~SoundSpritesContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~SoundSpritesContainer#deinitialize",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3467,
    "kind": "class",
    "name": "WrappedSoundInstance",
    "memberof": "js/platform/browser/sound.js",
    "static": true,
    "longname": "js/platform/browser/sound.js~WrappedSoundInstance",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/sound.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/sound.js~SoundInstanceInterface"
    ],
    "ignore": true
  },
  {
    "__docId__": 3468,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/browser/sound.js~WrappedSoundInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~WrappedSoundInstance#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "SoundSpritesContainer"
        ],
        "spread": false,
        "optional": false,
        "name": "spriteContainer",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 3469,
    "kind": "member",
    "name": "spriteContainer",
    "memberof": "js/platform/browser/sound.js~WrappedSoundInstance",
    "static": false,
    "longname": "js/platform/browser/sound.js~WrappedSoundInstance#spriteContainer",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3470,
    "kind": "method",
    "name": "load",
    "memberof": "js/platform/browser/sound.js~WrappedSoundInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~WrappedSoundInstance#load",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3471,
    "kind": "method",
    "name": "play",
    "memberof": "js/platform/browser/sound.js~WrappedSoundInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~WrappedSoundInstance#play",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [
      {
        "name": "volume",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3472,
    "kind": "method",
    "name": "deinitialize",
    "memberof": "js/platform/browser/sound.js~WrappedSoundInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~WrappedSoundInstance#deinitialize",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3473,
    "kind": "class",
    "name": "MusicInstance",
    "memberof": "js/platform/browser/sound.js",
    "static": true,
    "longname": "js/platform/browser/sound.js~MusicInstance",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/sound.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/sound.js~MusicInstanceInterface"
    ],
    "ignore": true
  },
  {
    "__docId__": 3474,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/browser/sound.js~MusicInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~MusicInstance#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true
  },
  {
    "__docId__": 3475,
    "kind": "member",
    "name": "howl",
    "memberof": "js/platform/browser/sound.js~MusicInstance",
    "static": false,
    "longname": "js/platform/browser/sound.js~MusicInstance#howl",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3476,
    "kind": "member",
    "name": "instance",
    "memberof": "js/platform/browser/sound.js~MusicInstance",
    "static": false,
    "longname": "js/platform/browser/sound.js~MusicInstance#instance",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3477,
    "kind": "member",
    "name": "playing",
    "memberof": "js/platform/browser/sound.js~MusicInstance",
    "static": false,
    "longname": "js/platform/browser/sound.js~MusicInstance#playing",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3478,
    "kind": "method",
    "name": "load",
    "memberof": "js/platform/browser/sound.js~MusicInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~MusicInstance#load",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3481,
    "kind": "method",
    "name": "stop",
    "memberof": "js/platform/browser/sound.js~MusicInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~MusicInstance#stop",
    "access": "public",
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3483,
    "kind": "method",
    "name": "isPlaying",
    "memberof": "js/platform/browser/sound.js~MusicInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~MusicInstance#isPlaying",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3484,
    "kind": "method",
    "name": "play",
    "memberof": "js/platform/browser/sound.js~MusicInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~MusicInstance#play",
    "access": "public",
    "description": null,
    "lineNumber": 149,
    "undocument": true,
    "params": [
      {
        "name": "volume",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3487,
    "kind": "method",
    "name": "setVolume",
    "memberof": "js/platform/browser/sound.js~MusicInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~MusicInstance#setVolume",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "params": [
      {
        "name": "volume",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3488,
    "kind": "method",
    "name": "deinitialize",
    "memberof": "js/platform/browser/sound.js~MusicInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~MusicInstance#deinitialize",
    "access": "public",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3491,
    "kind": "class",
    "name": "SoundImplBrowser",
    "memberof": "js/platform/browser/sound.js",
    "static": true,
    "longname": "js/platform/browser/sound.js~SoundImplBrowser",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/browser/sound.js",
    "importStyle": "{SoundImplBrowser}",
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/sound.js~SoundInterface"
    ]
  },
  {
    "__docId__": 3492,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/browser/sound.js~SoundImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~SoundImplBrowser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 177,
    "undocument": true
  },
  {
    "__docId__": 3493,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/browser/sound.js~SoundImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~SoundImplBrowser#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 187,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3494,
    "kind": "member",
    "name": "sfxHandle",
    "memberof": "js/platform/browser/sound.js~SoundImplBrowser",
    "static": false,
    "longname": "js/platform/browser/sound.js~SoundImplBrowser#sfxHandle",
    "access": "public",
    "description": null,
    "lineNumber": 191,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3495,
    "kind": "member",
    "name": "musicVolume",
    "memberof": "js/platform/browser/sound.js~SoundImplBrowser",
    "static": false,
    "longname": "js/platform/browser/sound.js~SoundImplBrowser#musicVolume",
    "access": "public",
    "description": null,
    "lineNumber": 204,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3496,
    "kind": "member",
    "name": "soundVolume",
    "memberof": "js/platform/browser/sound.js~SoundImplBrowser",
    "static": false,
    "longname": "js/platform/browser/sound.js~SoundImplBrowser#soundVolume",
    "access": "public",
    "description": null,
    "lineNumber": 205,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3498,
    "kind": "method",
    "name": "deinitialize",
    "memberof": "js/platform/browser/sound.js~SoundImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/sound.js~SoundImplBrowser#deinitialize",
    "access": "public",
    "description": null,
    "lineNumber": 214,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3499,
    "kind": "file",
    "name": "js/platform/browser/storage.js",
    "content": "import { FILE_NOT_FOUND, StorageInterface } from \"../storage\";\r\nimport { createLogger } from \"../../core/logging\";\r\n\r\nconst logger = createLogger(\"storage/browser\");\r\n\r\nconst LOCAL_STORAGE_UNAVAILABLE = \"local-storage-unavailable\";\r\nconst LOCAL_STORAGE_NO_WRITE_PERMISSION = \"local-storage-no-write-permission\";\r\n\r\nlet randomDelay = () => 0;\r\n\r\nif (G_IS_DEV) {\r\n    // Random delay for testing\r\n    // randomDelay = () => 500;\r\n}\r\n\r\nexport class StorageImplBrowser extends StorageInterface {\r\n    constructor(app) {\r\n        super(app);\r\n        this.currentBusyFilename = false;\r\n    }\r\n\r\n    initialize() {\r\n        logger.error(\"Using localStorage, please update to a newer browser\");\r\n        return new Promise((resolve, reject) => {\r\n            // Check for local storage availability in general\r\n            if (!window.localStorage) {\r\n                alert(\"Local storage is not available! Please upgrade to a newer browser!\");\r\n                reject(LOCAL_STORAGE_UNAVAILABLE);\r\n            }\r\n\r\n            // Check if we can set and remove items\r\n            try {\r\n                window.localStorage.setItem(\"storage_availability_test\", \"1\");\r\n                window.localStorage.removeItem(\"storage_availability_test\");\r\n            } catch (e) {\r\n                alert(\r\n                    \"It seems we don't have permission to write to local storage! Please update your browsers settings or use a different browser!\"\r\n                );\r\n                reject(LOCAL_STORAGE_NO_WRITE_PERMISSION);\r\n                return;\r\n            }\r\n            setTimeout(resolve, 0);\r\n        });\r\n    }\r\n\r\n    writeFileAsync(filename, contents) {\r\n        if (this.currentBusyFilename === filename) {\r\n            logger.warn(\"Attempt to write\", filename, \"while write process is not finished!\");\r\n        }\r\n\r\n        this.currentBusyFilename = filename;\r\n        window.localStorage.setItem(filename, contents);\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                this.currentBusyFilename = false;\r\n                resolve();\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n    writeFileSyncIfSupported(filename, contents) {\r\n        window.localStorage.setItem(filename, contents);\r\n        return true;\r\n    }\r\n\r\n    readFileAsync(filename) {\r\n        if (this.currentBusyFilename === filename) {\r\n            logger.warn(\"Attempt to read\", filename, \"while write progress on it is ongoing!\");\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const contents = window.localStorage.getItem(filename);\r\n            if (!contents) {\r\n                // File not found\r\n                setTimeout(() => reject(FILE_NOT_FOUND), randomDelay());\r\n                return;\r\n            }\r\n\r\n            // File read, simulate delay\r\n            setTimeout(() => resolve(contents), 0);\r\n        });\r\n    }\r\n\r\n    deleteFileAsync(filename) {\r\n        if (this.currentBusyFilename === filename) {\r\n            logger.warn(\"Attempt to delete\", filename, \"while write progres on it is ongoing!\");\r\n        }\r\n\r\n        this.currentBusyFilename = filename;\r\n        return new Promise((resolve, reject) => {\r\n            window.localStorage.removeItem(filename);\r\n            setTimeout(() => {\r\n                this.currentBusyFilename = false;\r\n                resolve();\r\n            }, 0);\r\n        });\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/browser/storage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3500,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/platform/browser/storage.js",
    "static": true,
    "longname": "js/platform/browser/storage.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/storage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3501,
    "kind": "variable",
    "name": "LOCAL_STORAGE_UNAVAILABLE",
    "memberof": "js/platform/browser/storage.js",
    "static": true,
    "longname": "js/platform/browser/storage.js~LOCAL_STORAGE_UNAVAILABLE",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/storage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3502,
    "kind": "variable",
    "name": "LOCAL_STORAGE_NO_WRITE_PERMISSION",
    "memberof": "js/platform/browser/storage.js",
    "static": true,
    "longname": "js/platform/browser/storage.js~LOCAL_STORAGE_NO_WRITE_PERMISSION",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/storage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3503,
    "kind": "function",
    "name": "randomDelay",
    "memberof": "js/platform/browser/storage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/platform/browser/storage.js~randomDelay",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/storage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 3504,
    "kind": "class",
    "name": "StorageImplBrowser",
    "memberof": "js/platform/browser/storage.js",
    "static": true,
    "longname": "js/platform/browser/storage.js~StorageImplBrowser",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/browser/storage.js",
    "importStyle": "{StorageImplBrowser}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/storage.js~StorageInterface"
    ]
  },
  {
    "__docId__": 3505,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/browser/storage.js~StorageImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/storage.js~StorageImplBrowser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 3506,
    "kind": "member",
    "name": "currentBusyFilename",
    "memberof": "js/platform/browser/storage.js~StorageImplBrowser",
    "static": false,
    "longname": "js/platform/browser/storage.js~StorageImplBrowser#currentBusyFilename",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3507,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/browser/storage.js~StorageImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/storage.js~StorageImplBrowser#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3508,
    "kind": "method",
    "name": "writeFileAsync",
    "memberof": "js/platform/browser/storage.js~StorageImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/storage.js~StorageImplBrowser#writeFileAsync",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      },
      {
        "name": "contents",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3511,
    "kind": "method",
    "name": "writeFileSyncIfSupported",
    "memberof": "js/platform/browser/storage.js~StorageImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/storage.js~StorageImplBrowser#writeFileSyncIfSupported",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      },
      {
        "name": "contents",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3512,
    "kind": "method",
    "name": "readFileAsync",
    "memberof": "js/platform/browser/storage.js~StorageImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/storage.js~StorageImplBrowser#readFileAsync",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3513,
    "kind": "method",
    "name": "deleteFileAsync",
    "memberof": "js/platform/browser/storage.js~StorageImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/storage.js~StorageImplBrowser#deleteFileAsync",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3516,
    "kind": "file",
    "name": "js/platform/browser/storage_indexed_db.js",
    "content": "import { FILE_NOT_FOUND, StorageInterface } from \"../storage\";\r\nimport { createLogger } from \"../../core/logging\";\r\n\r\nconst logger = createLogger(\"storage/browserIDB\");\r\n\r\nconst LOCAL_STORAGE_UNAVAILABLE = \"local-storage-unavailable\";\r\nconst LOCAL_STORAGE_NO_WRITE_PERMISSION = \"local-storage-no-write-permission\";\r\n\r\nlet randomDelay = () => 0;\r\n\r\nif (G_IS_DEV) {\r\n    // Random delay for testing\r\n    // randomDelay = () => 500;\r\n}\r\n\r\nexport class StorageImplBrowserIndexedDB extends StorageInterface {\r\n    constructor(app) {\r\n        super(app);\r\n        this.currentBusyFilename = false;\r\n\r\n        /** @type {IDBDatabase} */\r\n        this.database = null;\r\n    }\r\n\r\n    initialize() {\r\n        logger.log(\"Using indexed DB storage\");\r\n        return new Promise((resolve, reject) => {\r\n            const request = window.indexedDB.open(\"app_storage\", 10);\r\n            request.onerror = event => {\r\n                logger.error(\"IDB error:\", event);\r\n                alert(\r\n                    \"Sorry, it seems your browser has blocked the access to the storage system. This might be the case if you are browsing in private mode for example. I recommend to use google chrome or disable private browsing.\"\r\n                );\r\n                reject(\"Indexed DB access error\");\r\n            };\r\n\r\n            // @ts-ignore\r\n            request.onsuccess = event => resolve(event.target.result);\r\n\r\n            request.onupgradeneeded = /** @type {IDBVersionChangeEvent} */ event => {\r\n                /** @type {IDBDatabase} */\r\n                // @ts-ignore\r\n                const database = event.target.result;\r\n\r\n                const objectStore = database.createObjectStore(\"files\", {\r\n                    keyPath: \"filename\",\r\n                });\r\n\r\n                objectStore.createIndex(\"filename\", \"filename\", { unique: true });\r\n\r\n                objectStore.transaction.onerror = event => {\r\n                    logger.error(\"IDB transaction error:\", event);\r\n                    reject(\"Indexed DB transaction error during migration, check console output.\");\r\n                };\r\n\r\n                objectStore.transaction.oncomplete = event => {\r\n                    logger.log(\"Object store completely initialized\");\r\n                    resolve(database);\r\n                };\r\n            };\r\n        }).then(database => {\r\n            this.database = database;\r\n        });\r\n    }\r\n\r\n    writeFileAsync(filename, contents) {\r\n        if (this.currentBusyFilename === filename) {\r\n            logger.warn(\"Attempt to write\", filename, \"while write process is not finished!\");\r\n        }\r\n        if (!this.database) {\r\n            return Promise.reject(\"Storage not ready\");\r\n        }\r\n\r\n        this.currentBusyFilename = filename;\r\n        const transaction = this.database.transaction([\"files\"], \"readwrite\");\r\n\r\n        return new Promise((resolve, reject) => {\r\n            transaction.oncomplete = () => {\r\n                this.currentBusyFilename = null;\r\n                resolve();\r\n            };\r\n\r\n            transaction.onerror = error => {\r\n                this.currentBusyFilename = null;\r\n                logger.error(\"Error while writing\", filename, \":\", error);\r\n                reject(error);\r\n            };\r\n\r\n            const store = transaction.objectStore(\"files\");\r\n            store.put({\r\n                filename,\r\n                contents,\r\n            });\r\n        });\r\n    }\r\n\r\n    writeFileSyncIfSupported(filename, contents) {\r\n        // Not supported\r\n        this.writeFileAsync(filename, contents);\r\n        return true;\r\n    }\r\n\r\n    readFileAsync(filename) {\r\n        if (!this.database) {\r\n            return Promise.reject(\"Storage not ready\");\r\n        }\r\n\r\n        this.currentBusyFilename = filename;\r\n        const transaction = this.database.transaction([\"files\"], \"readonly\");\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const store = transaction.objectStore(\"files\");\r\n            const request = store.get(filename);\r\n\r\n            request.onsuccess = event => {\r\n                this.currentBusyFilename = null;\r\n                if (!request.result) {\r\n                    reject(FILE_NOT_FOUND);\r\n                    return;\r\n                }\r\n                resolve(request.result.contents);\r\n            };\r\n\r\n            request.onerror = error => {\r\n                this.currentBusyFilename = null;\r\n                logger.error(\"Error while reading\", filename, \":\", error);\r\n                reject(error);\r\n            };\r\n        });\r\n    }\r\n\r\n    deleteFileAsync(filename) {\r\n        if (this.currentBusyFilename === filename) {\r\n            logger.warn(\"Attempt to delete\", filename, \"while write progres on it is ongoing!\");\r\n        }\r\n\r\n        if (!this.database) {\r\n            return Promise.reject(\"Storage not ready\");\r\n        }\r\n\r\n        this.currentBusyFilename = filename;\r\n        const transaction = this.database.transaction([\"files\"], \"readwrite\");\r\n\r\n        return new Promise((resolve, reject) => {\r\n            transaction.oncomplete = () => {\r\n                this.currentBusyFilename = null;\r\n                resolve();\r\n            };\r\n\r\n            transaction.onerror = error => {\r\n                this.currentBusyFilename = null;\r\n                logger.error(\"Error while deleting\", filename, \":\", error);\r\n                reject(error);\r\n            };\r\n\r\n            const store = transaction.objectStore(\"files\");\r\n            store.delete(filename);\r\n        });\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/browser/storage_indexed_db.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3517,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/platform/browser/storage_indexed_db.js",
    "static": true,
    "longname": "js/platform/browser/storage_indexed_db.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/storage_indexed_db.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3518,
    "kind": "variable",
    "name": "LOCAL_STORAGE_UNAVAILABLE",
    "memberof": "js/platform/browser/storage_indexed_db.js",
    "static": true,
    "longname": "js/platform/browser/storage_indexed_db.js~LOCAL_STORAGE_UNAVAILABLE",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/storage_indexed_db.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3519,
    "kind": "variable",
    "name": "LOCAL_STORAGE_NO_WRITE_PERMISSION",
    "memberof": "js/platform/browser/storage_indexed_db.js",
    "static": true,
    "longname": "js/platform/browser/storage_indexed_db.js~LOCAL_STORAGE_NO_WRITE_PERMISSION",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/storage_indexed_db.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3520,
    "kind": "function",
    "name": "randomDelay",
    "memberof": "js/platform/browser/storage_indexed_db.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/platform/browser/storage_indexed_db.js~randomDelay",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/storage_indexed_db.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 3521,
    "kind": "class",
    "name": "StorageImplBrowserIndexedDB",
    "memberof": "js/platform/browser/storage_indexed_db.js",
    "static": true,
    "longname": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/browser/storage_indexed_db.js",
    "importStyle": "{StorageImplBrowserIndexedDB}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/storage.js~StorageInterface"
    ]
  },
  {
    "__docId__": 3522,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 3523,
    "kind": "member",
    "name": "currentBusyFilename",
    "memberof": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB",
    "static": false,
    "longname": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB#currentBusyFilename",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3524,
    "kind": "member",
    "name": "database",
    "memberof": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB",
    "static": false,
    "longname": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB#database",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "IDBDatabase"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3525,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3527,
    "kind": "method",
    "name": "writeFileAsync",
    "memberof": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB#writeFileAsync",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      },
      {
        "name": "contents",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3531,
    "kind": "method",
    "name": "writeFileSyncIfSupported",
    "memberof": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB#writeFileSyncIfSupported",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      },
      {
        "name": "contents",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3532,
    "kind": "method",
    "name": "readFileAsync",
    "memberof": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB#readFileAsync",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3536,
    "kind": "method",
    "name": "deleteFileAsync",
    "memberof": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/storage_indexed_db.js~StorageImplBrowserIndexedDB#deleteFileAsync",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3540,
    "kind": "file",
    "name": "js/platform/browser/wrapper.js",
    "content": "import { globalConfig, IS_MOBILE } from \"../../core/config\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { queryParamOptions } from \"../../core/query_parameters\";\r\nimport { clamp } from \"../../core/utils\";\r\nimport { GamedistributionAdProvider } from \"../ad_providers/gamedistribution\";\r\nimport { NoAdProvider } from \"../ad_providers/no_ad_provider\";\r\nimport { PlatformWrapperInterface } from \"../wrapper\";\r\nimport { StorageImplBrowser } from \"./storage\";\r\nimport { StorageImplBrowserIndexedDB } from \"./storage_indexed_db\";\r\n\r\nconst logger = createLogger(\"platform/browser\");\r\n\r\nexport class PlatformWrapperImplBrowser extends PlatformWrapperInterface {\r\n    initialize() {\r\n        this.recaptchaTokenCallback = null;\r\n\r\n        this.embedProvider = {\r\n            id: \"shapezio-website\",\r\n            adProvider: NoAdProvider,\r\n            iframed: false,\r\n            externalLinks: true,\r\n            iogLink: true,\r\n        };\r\n\r\n        if (!G_IS_STANDALONE && queryParamOptions.embedProvider) {\r\n            const providerId = queryParamOptions.embedProvider;\r\n            this.embedProvider.iframed = true;\r\n            this.embedProvider.iogLink = false;\r\n\r\n            switch (providerId) {\r\n                case \"armorgames\": {\r\n                    this.embedProvider.id = \"armorgames\";\r\n                    break;\r\n                }\r\n\r\n                case \"iogames.space\": {\r\n                    this.embedProvider.id = \"iogames.space\";\r\n                    this.embedProvider.iogLink = true;\r\n                    break;\r\n                }\r\n\r\n                case \"miniclip\": {\r\n                    this.embedProvider.id = \"miniclip\";\r\n                    break;\r\n                }\r\n\r\n                case \"gamedistribution\": {\r\n                    this.embedProvider.id = \"gamedistribution\";\r\n                    this.embedProvider.externalLinks = false;\r\n                    this.embedProvider.adProvider = GamedistributionAdProvider;\r\n                    break;\r\n                }\r\n\r\n                case \"kongregate\": {\r\n                    this.embedProvider.id = \"kongregate\";\r\n                    break;\r\n                }\r\n\r\n                case \"crazygames\": {\r\n                    this.embedProvider.id = \"crazygames\";\r\n                    break;\r\n                }\r\n\r\n                default: {\r\n                    logger.error(\"Got unsupported embed provider:\", providerId);\r\n                }\r\n            }\r\n        }\r\n\r\n        logger.log(\"Embed provider:\", this.embedProvider.id);\r\n\r\n        return this.detectStorageImplementation()\r\n            .then(() => this.initializeAdProvider())\r\n            .then(() => super.initialize());\r\n    }\r\n\r\n    detectStorageImplementation() {\r\n        return new Promise(resolve => {\r\n            logger.log(\"Detecting storage\");\r\n\r\n            if (!window.indexedDB) {\r\n                logger.log(\"Indexed DB not supported\");\r\n                this.app.storage = new StorageImplBrowser(this.app);\r\n                resolve();\r\n                return;\r\n            }\r\n\r\n            // Try accessing the indexedb\r\n            let request;\r\n            try {\r\n                request = window.indexedDB.open(\"indexeddb_feature_detection\", 1);\r\n            } catch (ex) {\r\n                logger.warn(\"Error while opening indexed db:\", ex);\r\n                this.app.storage = new StorageImplBrowser(this.app);\r\n                resolve();\r\n                return;\r\n            }\r\n            request.onerror = err => {\r\n                logger.log(\"Indexed DB can *not* be accessed: \", err);\r\n                logger.log(\"Using fallback to local storage\");\r\n                this.app.storage = new StorageImplBrowser(this.app);\r\n                resolve();\r\n            };\r\n            request.onsuccess = () => {\r\n                logger.log(\"Indexed DB *can* be accessed\");\r\n                this.app.storage = new StorageImplBrowserIndexedDB(this.app);\r\n                resolve();\r\n            };\r\n        });\r\n    }\r\n\r\n    getId() {\r\n        return \"browser@\" + this.embedProvider.id;\r\n    }\r\n\r\n    getUiScale() {\r\n        if (IS_MOBILE) {\r\n            return 1;\r\n        }\r\n\r\n        const avgDims = Math.min(this.app.screenWidth, this.app.screenHeight);\r\n        return clamp((avgDims / 1000.0) * 1.9, 0.1, 10);\r\n    }\r\n\r\n    getSupportsRestart() {\r\n        return true;\r\n    }\r\n\r\n    getTouchPanStrength() {\r\n        return IS_MOBILE ? 1 : 0.5;\r\n    }\r\n\r\n    openExternalLink(url, force = false) {\r\n        logger.log(\"Opening external:\", url);\r\n        if (force || this.embedProvider.externalLinks) {\r\n            window.open(url);\r\n        } else {\r\n            // Do nothing\r\n            alert(\r\n                \"This platform does not allow opening external links. You can play on https://shapez.io directly to open them.\\n\\nClicked Link: \" +\r\n                    url\r\n            );\r\n        }\r\n    }\r\n\r\n    performRestart() {\r\n        logger.log(\"Performing restart\");\r\n        window.location.reload(true);\r\n    }\r\n\r\n    /**\r\n     * Detects if there is an adblocker installed\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    detectAdblock() {\r\n        return Promise.race([\r\n            new Promise(resolve => {\r\n                // If the request wasn't blocked within a very short period of time, this means\r\n                // the adblocker is not active and the request was actually made -> ignore it then\r\n                setTimeout(() => resolve(false), 30);\r\n            }),\r\n            new Promise(resolve => {\r\n                fetch(\"https://googleads.g.doubleclick.net/pagead/id\", {\r\n                    method: \"HEAD\",\r\n                    mode: \"no-cors\",\r\n                })\r\n                    .then(res => {\r\n                        resolve(false);\r\n                    })\r\n                    .catch(err => {\r\n                        resolve(true);\r\n                    });\r\n            }),\r\n        ]);\r\n    }\r\n\r\n    initializeAdProvider() {\r\n        if (G_IS_DEV && !globalConfig.debug.testAds) {\r\n            logger.log(\"Ads disabled in local environment\");\r\n            return Promise.resolve();\r\n        }\r\n\r\n        // First, detect adblocker\r\n        return this.detectAdblock().then(hasAdblocker => {\r\n            if (hasAdblocker) {\r\n                logger.log(\"Adblock detected\");\r\n                return;\r\n            }\r\n\r\n            const adProvider = this.embedProvider.adProvider;\r\n            this.app.adProvider = new adProvider(this.app);\r\n            return this.app.adProvider.initialize().catch(err => {\r\n                logger.error(\"Failed to initialize ad provider, disabling ads:\", err);\r\n                this.app.adProvider = new NoAdProvider(this.app);\r\n            });\r\n        });\r\n    }\r\n\r\n    exitApp() {\r\n        // Can not exit app\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/browser/wrapper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3541,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/platform/browser/wrapper.js",
    "static": true,
    "longname": "js/platform/browser/wrapper.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/browser/wrapper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3542,
    "kind": "class",
    "name": "PlatformWrapperImplBrowser",
    "memberof": "js/platform/browser/wrapper.js",
    "static": true,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/browser/wrapper.js",
    "importStyle": "{PlatformWrapperImplBrowser}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/wrapper.js~PlatformWrapperInterface"
    ]
  },
  {
    "__docId__": 3543,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3544,
    "kind": "member",
    "name": "recaptchaTokenCallback",
    "memberof": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "static": false,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser#recaptchaTokenCallback",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3545,
    "kind": "member",
    "name": "embedProvider",
    "memberof": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "static": false,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser#embedProvider",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": string, \"adProvider\": *, \"iframed\": *, \"externalLinks\": boolean, \"iogLink\": boolean}"
      ]
    }
  },
  {
    "__docId__": 3546,
    "kind": "method",
    "name": "detectStorageImplementation",
    "memberof": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser#detectStorageImplementation",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3547,
    "kind": "method",
    "name": "getId",
    "memberof": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser#getId",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3548,
    "kind": "method",
    "name": "getUiScale",
    "memberof": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser#getUiScale",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3549,
    "kind": "method",
    "name": "getSupportsRestart",
    "memberof": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser#getSupportsRestart",
    "access": "public",
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3550,
    "kind": "method",
    "name": "getTouchPanStrength",
    "memberof": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser#getTouchPanStrength",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3551,
    "kind": "method",
    "name": "openExternalLink",
    "memberof": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser#openExternalLink",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "force",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": null
  },
  {
    "__docId__": 3552,
    "kind": "method",
    "name": "performRestart",
    "memberof": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser#performRestart",
    "access": "public",
    "description": null,
    "lineNumber": 146,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3553,
    "kind": "method",
    "name": "detectAdblock",
    "memberof": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser#detectAdblock",
    "access": "public",
    "description": "Detects if there is an adblocker installed",
    "lineNumber": 155,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<boolean>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3554,
    "kind": "method",
    "name": "initializeAdProvider",
    "memberof": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser#initializeAdProvider",
    "access": "public",
    "description": null,
    "lineNumber": 177,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3555,
    "kind": "method",
    "name": "exitApp",
    "memberof": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser#exitApp",
    "access": "public",
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3556,
    "kind": "file",
    "name": "js/platform/electron/storage.js",
    "content": "import { StorageInterface } from \"../storage\";\r\nimport { getIPCRenderer } from \"../../core/utils\";\r\nimport { createLogger } from \"../../core/logging\";\r\n\r\nconst logger = createLogger(\"electron-storage\");\r\n\r\nexport class StorageImplElectron extends StorageInterface {\r\n    constructor(app) {\r\n        super(app);\r\n\r\n        /** @type {Object.<number, {resolve:Function, reject: Function}>} */\r\n        this.jobs = {};\r\n        this.jobId = 0;\r\n\r\n        getIPCRenderer().on(\"fs-response\", (event, arg) => {\r\n            const id = arg.id;\r\n            if (!this.jobs[id]) {\r\n                logger.warn(\"Got unhandled FS response, job not known:\", id);\r\n                return;\r\n            }\r\n            const { resolve, reject } = this.jobs[id];\r\n            if (arg.result.success) {\r\n                resolve(arg.result.data);\r\n            } else {\r\n                reject(arg.result.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    initialize() {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    writeFileAsync(filename, contents) {\r\n        return new Promise((resolve, reject) => {\r\n            // ipcMain\r\n            const jobId = ++this.jobId;\r\n            this.jobs[jobId] = { resolve, reject };\r\n\r\n            getIPCRenderer().send(\"fs-job\", {\r\n                type: \"write\",\r\n                filename,\r\n                contents,\r\n                id: jobId,\r\n            });\r\n        });\r\n    }\r\n\r\n    writeFileSyncIfSupported(filename, contents) {\r\n        return getIPCRenderer().sendSync(\"fs-sync-job\", {\r\n            type: \"write\",\r\n            filename,\r\n            contents,\r\n        });\r\n    }\r\n\r\n    readFileAsync(filename) {\r\n        return new Promise((resolve, reject) => {\r\n            // ipcMain\r\n            const jobId = ++this.jobId;\r\n            this.jobs[jobId] = { resolve, reject };\r\n\r\n            getIPCRenderer().send(\"fs-job\", {\r\n                type: \"read\",\r\n                filename,\r\n                id: jobId,\r\n            });\r\n        });\r\n    }\r\n\r\n    deleteFileAsync(filename) {\r\n        return new Promise((resolve, reject) => {\r\n            // ipcMain\r\n            const jobId = ++this.jobId;\r\n            this.jobs[jobId] = { resolve, reject };\r\n            getIPCRenderer().send(\"fs-job\", {\r\n                type: \"delete\",\r\n                filename,\r\n                id: jobId,\r\n            });\r\n        });\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/electron/storage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3557,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/platform/electron/storage.js",
    "static": true,
    "longname": "js/platform/electron/storage.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/electron/storage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3558,
    "kind": "class",
    "name": "StorageImplElectron",
    "memberof": "js/platform/electron/storage.js",
    "static": true,
    "longname": "js/platform/electron/storage.js~StorageImplElectron",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/electron/storage.js",
    "importStyle": "{StorageImplElectron}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/storage.js~StorageInterface"
    ]
  },
  {
    "__docId__": 3559,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/electron/storage.js~StorageImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/storage.js~StorageImplElectron#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 3560,
    "kind": "member",
    "name": "jobs",
    "memberof": "js/platform/electron/storage.js~StorageImplElectron",
    "static": false,
    "longname": "js/platform/electron/storage.js~StorageImplElectron#jobs",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "Object.<number, {resolve:Function, reject: Function}>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3561,
    "kind": "member",
    "name": "jobId",
    "memberof": "js/platform/electron/storage.js~StorageImplElectron",
    "static": false,
    "longname": "js/platform/electron/storage.js~StorageImplElectron#jobId",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3562,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/electron/storage.js~StorageImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/storage.js~StorageImplElectron#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3563,
    "kind": "method",
    "name": "writeFileAsync",
    "memberof": "js/platform/electron/storage.js~StorageImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/storage.js~StorageImplElectron#writeFileAsync",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      },
      {
        "name": "contents",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3564,
    "kind": "method",
    "name": "writeFileSyncIfSupported",
    "memberof": "js/platform/electron/storage.js~StorageImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/storage.js~StorageImplElectron#writeFileSyncIfSupported",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      },
      {
        "name": "contents",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3565,
    "kind": "method",
    "name": "readFileAsync",
    "memberof": "js/platform/electron/storage.js~StorageImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/storage.js~StorageImplElectron#readFileAsync",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3566,
    "kind": "method",
    "name": "deleteFileAsync",
    "memberof": "js/platform/electron/storage.js~StorageImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/storage.js~StorageImplElectron#deleteFileAsync",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3567,
    "kind": "file",
    "name": "js/platform/electron/wrapper.js",
    "content": "import { PlatformWrapperImplBrowser } from \"../browser/wrapper\";\r\nimport { getIPCRenderer } from \"../../core/utils\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { StorageImplElectron } from \"./storage\";\r\nimport { PlatformWrapperInterface } from \"../wrapper\";\r\n\r\nconst logger = createLogger(\"electron-wrapper\");\r\n\r\nexport class PlatformWrapperImplElectron extends PlatformWrapperImplBrowser {\r\n    initialize() {\r\n        this.app.storage = new StorageImplElectron(this);\r\n        return PlatformWrapperInterface.prototype.initialize.call(this);\r\n    }\r\n\r\n    getId() {\r\n        return \"electron\";\r\n    }\r\n\r\n    getSupportsRestart() {\r\n        return true;\r\n    }\r\n\r\n    openExternalLink(url) {\r\n        logger.log(this, \"Opening external:\", url);\r\n        window.open(url, \"about:blank\");\r\n    }\r\n\r\n    getSupportsAds() {\r\n        return false;\r\n    }\r\n\r\n    performRestart() {\r\n        logger.log(this, \"Performing restart\");\r\n        window.location.reload(true);\r\n    }\r\n\r\n    initializeAdProvider() {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    getSupportsFullscreen() {\r\n        return true;\r\n    }\r\n\r\n    setFullscreen(flag) {\r\n        getIPCRenderer().send(\"set-fullscreen\", flag);\r\n    }\r\n\r\n    getSupportsAppExit() {\r\n        return true;\r\n    }\r\n\r\n    exitApp() {\r\n        logger.log(this, \"Sending app exit signal\");\r\n        getIPCRenderer().send(\"exit-app\");\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/electron/wrapper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3568,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/platform/electron/wrapper.js",
    "static": true,
    "longname": "js/platform/electron/wrapper.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/electron/wrapper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3569,
    "kind": "class",
    "name": "PlatformWrapperImplElectron",
    "memberof": "js/platform/electron/wrapper.js",
    "static": true,
    "longname": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/electron/wrapper.js",
    "importStyle": "{PlatformWrapperImplElectron}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/platform/browser/wrapper.js~PlatformWrapperImplBrowser"
    ]
  },
  {
    "__docId__": 3570,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3571,
    "kind": "method",
    "name": "getId",
    "memberof": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron#getId",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3572,
    "kind": "method",
    "name": "getSupportsRestart",
    "memberof": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron#getSupportsRestart",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3573,
    "kind": "method",
    "name": "openExternalLink",
    "memberof": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron#openExternalLink",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3574,
    "kind": "method",
    "name": "getSupportsAds",
    "memberof": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron#getSupportsAds",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3575,
    "kind": "method",
    "name": "performRestart",
    "memberof": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron#performRestart",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3576,
    "kind": "method",
    "name": "initializeAdProvider",
    "memberof": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron#initializeAdProvider",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3577,
    "kind": "method",
    "name": "getSupportsFullscreen",
    "memberof": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron#getSupportsFullscreen",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3578,
    "kind": "method",
    "name": "setFullscreen",
    "memberof": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron#setFullscreen",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3579,
    "kind": "method",
    "name": "getSupportsAppExit",
    "memberof": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron#getSupportsAppExit",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3580,
    "kind": "method",
    "name": "exitApp",
    "memberof": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/electron/wrapper.js~PlatformWrapperImplElectron#exitApp",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3581,
    "kind": "file",
    "name": "js/platform/game_analytics.js",
    "content": "export class GameAnalyticsInterface {\r\n    constructor(app) {\r\n        /** @type {import(\"../application\").Application} */\r\n        this.app = app;\r\n    }\r\n\r\n    /**\r\n     * Initializes the analytics\r\n     * @returns {Promise<void>}\r\n     */\r\n    initialize() {\r\n        abstract;\r\n        return Promise.reject();\r\n    }\r\n\r\n    /**\r\n     * Handles a new game which was started\r\n     */\r\n    handleGameStarted() {}\r\n\r\n    /**\r\n     * Handles a resumed game\r\n     */\r\n    handleGameResumed() {}\r\n\r\n    /**\r\n     * Handles the given level completed\r\n     * @param {number} level\r\n     */\r\n    handleLevelCompleted(level) {}\r\n\r\n    /**\r\n     * Handles the given upgrade completed\r\n     * @param {string} id\r\n     * @param {number} level\r\n     */\r\n    handleUpgradeUnlocked(id, level) {}\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/game_analytics.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3582,
    "kind": "class",
    "name": "GameAnalyticsInterface",
    "memberof": "js/platform/game_analytics.js",
    "static": true,
    "longname": "js/platform/game_analytics.js~GameAnalyticsInterface",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/game_analytics.js",
    "importStyle": "{GameAnalyticsInterface}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3583,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/game_analytics.js~GameAnalyticsInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/game_analytics.js~GameAnalyticsInterface#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 3584,
    "kind": "member",
    "name": "app",
    "memberof": "js/platform/game_analytics.js~GameAnalyticsInterface",
    "static": false,
    "longname": "js/platform/game_analytics.js~GameAnalyticsInterface#app",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "type": {
      "nullable": null,
      "types": [
        "import(\"../application\").Application"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3585,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/game_analytics.js~GameAnalyticsInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/game_analytics.js~GameAnalyticsInterface#initialize",
    "access": "public",
    "description": "Initializes the analytics",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3586,
    "kind": "method",
    "name": "handleGameStarted",
    "memberof": "js/platform/game_analytics.js~GameAnalyticsInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/game_analytics.js~GameAnalyticsInterface#handleGameStarted",
    "access": "public",
    "description": "Handles a new game which was started",
    "lineNumber": 19,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3587,
    "kind": "method",
    "name": "handleGameResumed",
    "memberof": "js/platform/game_analytics.js~GameAnalyticsInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/game_analytics.js~GameAnalyticsInterface#handleGameResumed",
    "access": "public",
    "description": "Handles a resumed game",
    "lineNumber": 24,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3588,
    "kind": "method",
    "name": "handleLevelCompleted",
    "memberof": "js/platform/game_analytics.js~GameAnalyticsInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/game_analytics.js~GameAnalyticsInterface#handleLevelCompleted",
    "access": "public",
    "description": "Handles the given level completed",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3589,
    "kind": "method",
    "name": "handleUpgradeUnlocked",
    "memberof": "js/platform/game_analytics.js~GameAnalyticsInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/game_analytics.js~GameAnalyticsInterface#handleUpgradeUnlocked",
    "access": "public",
    "description": "Handles the given upgrade completed",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3590,
    "kind": "file",
    "name": "js/platform/sound.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { GameRoot } from \"../game/root\";\r\n/* typehints:end */\r\n\r\nimport { newEmptyMap, clamp } from \"../core/utils\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { globalConfig } from \"../core/config\";\r\n\r\nconst logger = createLogger(\"sound\");\r\n\r\nexport const SOUNDS = {\r\n    // Menu and such\r\n    uiClick: \"ui_click\",\r\n    uiError: \"ui_error\",\r\n    dialogError: \"dialog_error\",\r\n    dialogOk: \"dialog_ok\",\r\n    swishHide: \"ui_swish_hide\",\r\n    swishShow: \"ui_swish_show\",\r\n    badgeNotification: \"badge_notification\",\r\n\r\n    levelComplete: \"level_complete\",\r\n\r\n    destroyBuilding: \"destroy_building\",\r\n    placeBuilding: \"place_building\",\r\n    placeBelt: \"place_belt\",\r\n    copy: \"copy\",\r\n};\r\n\r\nexport const MUSIC = {\r\n    // The theme always depends on the standalone only, even if running the full\r\n    // version in the browser\r\n    theme: G_IS_STANDALONE ? \"theme-full\" : \"theme-short\",\r\n    menu: \"menu\",\r\n};\r\n\r\nexport class SoundInstanceInterface {\r\n    constructor(key, url) {\r\n        this.key = key;\r\n        this.url = url;\r\n    }\r\n\r\n    /** @returns {Promise<void>} */\r\n    load() {\r\n        abstract;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    play(volume) {\r\n        abstract;\r\n    }\r\n\r\n    deinitialize() {}\r\n}\r\n\r\nexport class MusicInstanceInterface {\r\n    constructor(key, url) {\r\n        this.key = key;\r\n        this.url = url;\r\n    }\r\n\r\n    stop() {\r\n        abstract;\r\n    }\r\n\r\n    play(volume) {\r\n        abstract;\r\n    }\r\n\r\n    setVolume(volume) {\r\n        abstract;\r\n    }\r\n\r\n    /** @returns {Promise<void>} */\r\n    load() {\r\n        abstract;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /** @returns {boolean} */\r\n    isPlaying() {\r\n        abstract;\r\n        return false;\r\n    }\r\n\r\n    deinitialize() {}\r\n}\r\n\r\nexport class SoundInterface {\r\n    constructor(app, soundClass, musicClass) {\r\n        /** @type {Application} */\r\n        this.app = app;\r\n\r\n        this.soundClass = soundClass;\r\n        this.musicClass = musicClass;\r\n\r\n        /** @type {Object<string, SoundInstanceInterface>} */\r\n        this.sounds = newEmptyMap();\r\n\r\n        /** @type {Object<string, MusicInstanceInterface>} */\r\n        this.music = newEmptyMap();\r\n\r\n        /** @type {MusicInstanceInterface} */\r\n        this.currentMusic = null;\r\n\r\n        this.pageIsVisible = true;\r\n\r\n        this.musicVolume = 1.0;\r\n        this.soundVolume = 1.0;\r\n    }\r\n\r\n    /**\r\n     * Initializes the sound\r\n     * @returns {Promise<any>}\r\n     */\r\n    initialize() {\r\n        for (const soundKey in SOUNDS) {\r\n            const soundPath = SOUNDS[soundKey];\r\n            const sound = new this.soundClass(soundKey, soundPath);\r\n            this.sounds[soundPath] = sound;\r\n        }\r\n\r\n        for (const musicKey in MUSIC) {\r\n            const musicPath = MUSIC[musicKey];\r\n            const music = new this.musicClass(musicKey, musicPath);\r\n            this.music[musicPath] = music;\r\n        }\r\n\r\n        this.musicVolume = this.app.settings.getAllSettings().musicVolume;\r\n        this.soundVolume = this.app.settings.getAllSettings().soundVolume;\r\n\r\n        if (G_IS_DEV && globalConfig.debug.disableMusic) {\r\n            this.musicVolume = 0.0;\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * Pre-Loads the given sounds\r\n     * @param {string} key\r\n     * @returns {Promise<void>}\r\n     */\r\n    loadSound(key) {\r\n        if (this.sounds[key]) {\r\n            return this.sounds[key].load();\r\n        } else if (this.music[key]) {\r\n            return this.music[key].load();\r\n        } else {\r\n            logger.error(\"Sound/Music by key not found:\", key);\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    /** Deinits the sound\r\n     * @returns {Promise<void>}\r\n     */\r\n    deinitialize() {\r\n        const promises = [];\r\n        for (const key in this.sounds) {\r\n            promises.push(this.sounds[key].deinitialize());\r\n        }\r\n        for (const key in this.music) {\r\n            promises.push(this.music[key].deinitialize());\r\n        }\r\n        // @ts-ignore\r\n        return Promise.all(...promises);\r\n    }\r\n\r\n    /**\r\n     * Returns the music volume\r\n     * @returns {number}\r\n     */\r\n    getMusicVolume() {\r\n        return this.musicVolume;\r\n    }\r\n\r\n    /**\r\n     * Returns the sound volume\r\n     * @returns {number}\r\n     */\r\n    getSoundVolume() {\r\n        return this.soundVolume;\r\n    }\r\n\r\n    /**\r\n     * Sets the music volume\r\n     * @param {number} volume\r\n     */\r\n    setMusicVolume(volume) {\r\n        this.musicVolume = clamp(volume, 0, 1);\r\n        if (this.currentMusic) {\r\n            this.currentMusic.setVolume(this.musicVolume);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the sound volume\r\n     * @param {number} volume\r\n     */\r\n    setSoundVolume(volume) {\r\n        this.soundVolume = clamp(volume, 0, 1);\r\n    }\r\n\r\n    /**\r\n     * Focus change handler, called by the pap\r\n     * @param {boolean} pageIsVisible\r\n     */\r\n    onPageRenderableStateChanged(pageIsVisible) {\r\n        this.pageIsVisible = pageIsVisible;\r\n        if (this.currentMusic) {\r\n            if (pageIsVisible) {\r\n                if (!this.currentMusic.isPlaying()) {\r\n                    this.currentMusic.play(this.musicVolume);\r\n                }\r\n            } else {\r\n                this.currentMusic.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    playUiSound(key) {\r\n        if (!this.sounds[key]) {\r\n            logger.warn(\"Sound\", key, \"not found, probably not loaded yet\");\r\n            return;\r\n        }\r\n        this.sounds[key].play(this.soundVolume);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} key\r\n     * @param {Vector} worldPosition\r\n     * @param {GameRoot} root\r\n     */\r\n    play3DSound(key, worldPosition, root) {\r\n        if (!this.sounds[key]) {\r\n            logger.warn(\"Music\", key, \"not found, probably not loaded yet\");\r\n            return;\r\n        }\r\n        if (!this.pageIsVisible) {\r\n            return;\r\n        }\r\n\r\n        // hack, but works\r\n        if (root.time.getIsPaused()) {\r\n            return;\r\n        }\r\n\r\n        let volume = this.soundVolume;\r\n        if (!root.camera.isWorldPointOnScreen(worldPosition)) {\r\n            volume = this.soundVolume / 5; // In the old implementation this value was fixed to 0.2 => 20% of 1.0\r\n        }\r\n        volume *= clamp(root.camera.zoomLevel / 3);\r\n        this.sounds[key].play(clamp(volume));\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    playThemeMusic(key) {\r\n        const music = this.music[key];\r\n        if (key !== null && !music) {\r\n            logger.warn(\"Music\", key, \"not found\");\r\n        }\r\n        if (this.currentMusic !== music) {\r\n            if (this.currentMusic) {\r\n                logger.log(\"Stopping\", this.currentMusic.key);\r\n                this.currentMusic.stop();\r\n            }\r\n            this.currentMusic = music;\r\n            if (music && this.pageIsVisible) {\r\n                logger.log(\"Starting\", this.currentMusic.key);\r\n                music.play(this.musicVolume);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/sound.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3591,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/platform/sound.js",
    "static": true,
    "longname": "js/platform/sound.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/platform/sound.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3592,
    "kind": "variable",
    "name": "SOUNDS",
    "memberof": "js/platform/sound.js",
    "static": true,
    "longname": "js/platform/sound.js~SOUNDS",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/sound.js",
    "importStyle": "{SOUNDS}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "{\"uiClick\": string, \"uiError\": string, \"dialogError\": string, \"dialogOk\": string, \"swishHide\": string, \"swishShow\": string, \"badgeNotification\": string, \"levelComplete\": string, \"destroyBuilding\": string, \"placeBuilding\": string, \"placeBelt\": string, \"copy\": string}"
      ]
    }
  },
  {
    "__docId__": 3593,
    "kind": "variable",
    "name": "MUSIC",
    "memberof": "js/platform/sound.js",
    "static": true,
    "longname": "js/platform/sound.js~MUSIC",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/sound.js",
    "importStyle": "{MUSIC}",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "{\"theme\": *, \"menu\": string}"
      ]
    }
  },
  {
    "__docId__": 3594,
    "kind": "class",
    "name": "SoundInstanceInterface",
    "memberof": "js/platform/sound.js",
    "static": true,
    "longname": "js/platform/sound.js~SoundInstanceInterface",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/sound.js",
    "importStyle": "{SoundInstanceInterface}",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3595,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/sound.js~SoundInstanceInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInstanceInterface#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 3596,
    "kind": "member",
    "name": "key",
    "memberof": "js/platform/sound.js~SoundInstanceInterface",
    "static": false,
    "longname": "js/platform/sound.js~SoundInstanceInterface#key",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3597,
    "kind": "member",
    "name": "url",
    "memberof": "js/platform/sound.js~SoundInstanceInterface",
    "static": false,
    "longname": "js/platform/sound.js~SoundInstanceInterface#url",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3598,
    "kind": "method",
    "name": "load",
    "memberof": "js/platform/sound.js~SoundInstanceInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInstanceInterface#load",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3599,
    "kind": "method",
    "name": "play",
    "memberof": "js/platform/sound.js~SoundInstanceInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInstanceInterface#play",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "volume",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3600,
    "kind": "method",
    "name": "deinitialize",
    "memberof": "js/platform/sound.js~SoundInstanceInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInstanceInterface#deinitialize",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3601,
    "kind": "class",
    "name": "MusicInstanceInterface",
    "memberof": "js/platform/sound.js",
    "static": true,
    "longname": "js/platform/sound.js~MusicInstanceInterface",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/sound.js",
    "importStyle": "{MusicInstanceInterface}",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3602,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/sound.js~MusicInstanceInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~MusicInstanceInterface#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 3603,
    "kind": "member",
    "name": "key",
    "memberof": "js/platform/sound.js~MusicInstanceInterface",
    "static": false,
    "longname": "js/platform/sound.js~MusicInstanceInterface#key",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3604,
    "kind": "member",
    "name": "url",
    "memberof": "js/platform/sound.js~MusicInstanceInterface",
    "static": false,
    "longname": "js/platform/sound.js~MusicInstanceInterface#url",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3605,
    "kind": "method",
    "name": "stop",
    "memberof": "js/platform/sound.js~MusicInstanceInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~MusicInstanceInterface#stop",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3606,
    "kind": "method",
    "name": "play",
    "memberof": "js/platform/sound.js~MusicInstanceInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~MusicInstanceInterface#play",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [
      {
        "name": "volume",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3607,
    "kind": "method",
    "name": "setVolume",
    "memberof": "js/platform/sound.js~MusicInstanceInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~MusicInstanceInterface#setVolume",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [
      {
        "name": "volume",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3608,
    "kind": "method",
    "name": "load",
    "memberof": "js/platform/sound.js~MusicInstanceInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~MusicInstanceInterface#load",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3609,
    "kind": "method",
    "name": "isPlaying",
    "memberof": "js/platform/sound.js~MusicInstanceInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~MusicInstanceInterface#isPlaying",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3610,
    "kind": "method",
    "name": "deinitialize",
    "memberof": "js/platform/sound.js~MusicInstanceInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~MusicInstanceInterface#deinitialize",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3611,
    "kind": "class",
    "name": "SoundInterface",
    "memberof": "js/platform/sound.js",
    "static": true,
    "longname": "js/platform/sound.js~SoundInterface",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/sound.js",
    "importStyle": "{SoundInterface}",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3612,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/sound.js~SoundInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true
  },
  {
    "__docId__": 3613,
    "kind": "member",
    "name": "app",
    "memberof": "js/platform/sound.js~SoundInterface",
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#app",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "Application"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3614,
    "kind": "member",
    "name": "soundClass",
    "memberof": "js/platform/sound.js~SoundInterface",
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#soundClass",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3615,
    "kind": "member",
    "name": "musicClass",
    "memberof": "js/platform/sound.js~SoundInterface",
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#musicClass",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3616,
    "kind": "member",
    "name": "sounds",
    "memberof": "js/platform/sound.js~SoundInterface",
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#sounds",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "type": {
      "nullable": null,
      "types": [
        "Object<string, SoundInstanceInterface>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3617,
    "kind": "member",
    "name": "music",
    "memberof": "js/platform/sound.js~SoundInterface",
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#music",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "Object<string, MusicInstanceInterface>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3618,
    "kind": "member",
    "name": "currentMusic",
    "memberof": "js/platform/sound.js~SoundInterface",
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#currentMusic",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "type": {
      "nullable": null,
      "types": [
        "MusicInstanceInterface"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3619,
    "kind": "member",
    "name": "pageIsVisible",
    "memberof": "js/platform/sound.js~SoundInterface",
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#pageIsVisible",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3620,
    "kind": "member",
    "name": "musicVolume",
    "memberof": "js/platform/sound.js~SoundInterface",
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#musicVolume",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3621,
    "kind": "member",
    "name": "soundVolume",
    "memberof": "js/platform/sound.js~SoundInterface",
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#soundVolume",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3622,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/sound.js~SoundInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#initialize",
    "access": "public",
    "description": "Initializes the sound",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<any>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<any>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3626,
    "kind": "method",
    "name": "loadSound",
    "memberof": "js/platform/sound.js~SoundInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#loadSound",
    "access": "public",
    "description": "Pre-Loads the given sounds",
    "lineNumber": 145,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3627,
    "kind": "method",
    "name": "deinitialize",
    "memberof": "js/platform/sound.js~SoundInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#deinitialize",
    "access": "public",
    "description": "Deinits the sound",
    "lineNumber": 159,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3628,
    "kind": "method",
    "name": "getMusicVolume",
    "memberof": "js/platform/sound.js~SoundInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#getMusicVolume",
    "access": "public",
    "description": "Returns the music volume",
    "lineNumber": 175,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3629,
    "kind": "method",
    "name": "getSoundVolume",
    "memberof": "js/platform/sound.js~SoundInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#getSoundVolume",
    "access": "public",
    "description": "Returns the sound volume",
    "lineNumber": 183,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3630,
    "kind": "method",
    "name": "setMusicVolume",
    "memberof": "js/platform/sound.js~SoundInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#setMusicVolume",
    "access": "public",
    "description": "Sets the music volume",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "volume",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3632,
    "kind": "method",
    "name": "setSoundVolume",
    "memberof": "js/platform/sound.js~SoundInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#setSoundVolume",
    "access": "public",
    "description": "Sets the sound volume",
    "lineNumber": 202,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "volume",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3634,
    "kind": "method",
    "name": "onPageRenderableStateChanged",
    "memberof": "js/platform/sound.js~SoundInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#onPageRenderableStateChanged",
    "access": "public",
    "description": "Focus change handler, called by the pap",
    "lineNumber": 210,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pageIsVisible",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3636,
    "kind": "method",
    "name": "playUiSound",
    "memberof": "js/platform/sound.js~SoundInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#playUiSound",
    "access": "public",
    "description": "",
    "lineNumber": 226,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3637,
    "kind": "method",
    "name": "play3DSound",
    "memberof": "js/platform/sound.js~SoundInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#play3DSound",
    "access": "public",
    "description": "",
    "lineNumber": 240,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "worldPosition",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3638,
    "kind": "method",
    "name": "playThemeMusic",
    "memberof": "js/platform/sound.js~SoundInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/sound.js~SoundInterface#playThemeMusic",
    "access": "public",
    "description": "",
    "lineNumber": 265,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3640,
    "kind": "file",
    "name": "js/platform/storage.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\n\r\nexport const FILE_NOT_FOUND = \"file_not_found\";\r\n\r\nexport class StorageInterface {\r\n    constructor(app) {\r\n        /** @type {Application} */\r\n        this.app = app;\r\n    }\r\n\r\n    /**\r\n     * Initializes the storage\r\n     * @returns {Promise<void>}\r\n     */\r\n    initialize() {\r\n        abstract;\r\n        return Promise.reject();\r\n    }\r\n\r\n    /**\r\n     * Writes a string to a file asynchronously\r\n     * @param {string} filename\r\n     * @param {string} contents\r\n     * @returns {Promise<void>}\r\n     */\r\n    writeFileAsync(filename, contents) {\r\n        abstract;\r\n        return Promise.reject();\r\n    }\r\n\r\n    /**\r\n     * Tries to write a file synchronously, used in unload handler\r\n     * @param {string} filename\r\n     * @param {string} contents\r\n     */\r\n    writeFileSyncIfSupported(filename, contents) {\r\n        abstract;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Reads a string asynchronously. Returns Promise<FILE_NOT_FOUND> if file was not found.\r\n     * @param {string} filename\r\n     * @returns {Promise<string>}\r\n     */\r\n    readFileAsync(filename) {\r\n        abstract;\r\n        return Promise.reject();\r\n    }\r\n\r\n    /**\r\n     * Tries to delete a file\r\n     * @param {string} filename\r\n     * @returns {Promise<void>}\r\n     */\r\n    deleteFileAsync(filename) {\r\n        // Default implementation does not allow deleting files\r\n        return Promise.reject();\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/storage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3641,
    "kind": "variable",
    "name": "FILE_NOT_FOUND",
    "memberof": "js/platform/storage.js",
    "static": true,
    "longname": "js/platform/storage.js~FILE_NOT_FOUND",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/storage.js",
    "importStyle": "{FILE_NOT_FOUND}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3642,
    "kind": "class",
    "name": "StorageInterface",
    "memberof": "js/platform/storage.js",
    "static": true,
    "longname": "js/platform/storage.js~StorageInterface",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/storage.js",
    "importStyle": "{StorageInterface}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3643,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/storage.js~StorageInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/storage.js~StorageInterface#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 3644,
    "kind": "member",
    "name": "app",
    "memberof": "js/platform/storage.js~StorageInterface",
    "static": false,
    "longname": "js/platform/storage.js~StorageInterface#app",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Application"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3645,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/storage.js~StorageInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/storage.js~StorageInterface#initialize",
    "access": "public",
    "description": "Initializes the storage",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3646,
    "kind": "method",
    "name": "writeFileAsync",
    "memberof": "js/platform/storage.js~StorageInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/storage.js~StorageInterface#writeFileAsync",
    "access": "public",
    "description": "Writes a string to a file asynchronously",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "contents",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3647,
    "kind": "method",
    "name": "writeFileSyncIfSupported",
    "memberof": "js/platform/storage.js~StorageInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/storage.js~StorageInterface#writeFileSyncIfSupported",
    "access": "public",
    "description": "Tries to write a file synchronously, used in unload handler",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "contents",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3648,
    "kind": "method",
    "name": "readFileAsync",
    "memberof": "js/platform/storage.js~StorageInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/storage.js~StorageInterface#readFileAsync",
    "access": "public",
    "description": "Reads a string asynchronously. Returns Promise<FILE_NOT_FOUND> if file was not found.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<string>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3649,
    "kind": "method",
    "name": "deleteFileAsync",
    "memberof": "js/platform/storage.js~StorageInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/storage.js~StorageInterface#deleteFileAsync",
    "access": "public",
    "description": "Tries to delete a file",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3650,
    "kind": "file",
    "name": "js/platform/wrapper.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\n\r\nimport { IS_MOBILE } from \"../core/config\";\r\n\r\nexport class PlatformWrapperInterface {\r\n    constructor(app) {\r\n        /** @type {Application} */\r\n        this.app = app;\r\n    }\r\n\r\n    /** @returns {string} */\r\n    getId() {\r\n        abstract;\r\n        return \"unknown-platform\";\r\n    }\r\n\r\n    /**\r\n     * Returns the UI scale, called on every resize\r\n     * @returns {number} */\r\n    getUiScale() {\r\n        return 1;\r\n    }\r\n\r\n    /** @returns {boolean} */\r\n    getSupportsRestart() {\r\n        abstract;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns the strength of touch pans with the mouse\r\n     */\r\n    getTouchPanStrength() {\r\n        return 1;\r\n    }\r\n\r\n    /** @returns {Promise<void>} */\r\n    initialize() {\r\n        document.documentElement.classList.add(\"p-\" + this.getId());\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * Should initialize the apps ad provider in case supported\r\n     *  @returns {Promise<void>}\r\n     */\r\n    initializeAdProvider() {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * Should return the minimum supported zoom level\r\n     * @returns {number}\r\n     */\r\n    getMinimumZoom() {\r\n        return 0.1 * this.getScreenScale();\r\n    }\r\n\r\n    /**\r\n     * Should return the maximum supported zoom level\r\n     * @returns {number}\r\n     */\r\n    getMaximumZoom() {\r\n        return 3.5 * this.getScreenScale();\r\n    }\r\n\r\n    getScreenScale() {\r\n        return Math.min(window.innerWidth, window.innerHeight) / 1024.0;\r\n    }\r\n\r\n    /**\r\n     * Should return if this platform supports ads at all\r\n     */\r\n    getSupportsAds() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Attempt to open an external url\r\n     * @param {string} url\r\n     * @param {boolean=} force Whether to always open the url even if not allowed\r\n     */\r\n    openExternalLink(url, force = false) {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Attempt to restart the app\r\n     */\r\n    performRestart() {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Returns whether this platform supports a toggleable fullscreen\r\n     */\r\n    getSupportsFullscreen() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Should set the apps fullscreen state to the desired state\r\n     * @param {boolean} flag\r\n     */\r\n    setFullscreen(flag) {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Returns whether this platform supports quitting the app\r\n     */\r\n    getSupportsAppExit() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Attempts to quit the app\r\n     */\r\n    exitApp() {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Whether this platform supports a keyboard\r\n     */\r\n    getSupportsKeyboard() {\r\n        return !IS_MOBILE;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/platform/wrapper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3651,
    "kind": "class",
    "name": "PlatformWrapperInterface",
    "memberof": "js/platform/wrapper.js",
    "static": true,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/platform/wrapper.js",
    "importStyle": "{PlatformWrapperInterface}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3652,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 3653,
    "kind": "member",
    "name": "app",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#app",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Application"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3654,
    "kind": "method",
    "name": "getId",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#getId",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3655,
    "kind": "method",
    "name": "getUiScale",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#getUiScale",
    "access": "public",
    "description": "Returns the UI scale, called on every resize",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3656,
    "kind": "method",
    "name": "getSupportsRestart",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#getSupportsRestart",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3657,
    "kind": "method",
    "name": "getTouchPanStrength",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#getTouchPanStrength",
    "access": "public",
    "description": "Returns the strength of touch pans with the mouse",
    "lineNumber": 35,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3658,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3659,
    "kind": "method",
    "name": "initializeAdProvider",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#initializeAdProvider",
    "access": "public",
    "description": "Should initialize the apps ad provider in case supported",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3660,
    "kind": "method",
    "name": "getMinimumZoom",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#getMinimumZoom",
    "access": "public",
    "description": "Should return the minimum supported zoom level",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3661,
    "kind": "method",
    "name": "getMaximumZoom",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#getMaximumZoom",
    "access": "public",
    "description": "Should return the maximum supported zoom level",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3662,
    "kind": "method",
    "name": "getScreenScale",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#getScreenScale",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3663,
    "kind": "method",
    "name": "getSupportsAds",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#getSupportsAds",
    "access": "public",
    "description": "Should return if this platform supports ads at all",
    "lineNumber": 76,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3664,
    "kind": "method",
    "name": "openExternalLink",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#openExternalLink",
    "access": "public",
    "description": "Attempt to open an external url",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "force",
        "description": "Whether to always open the url even if not allowed"
      }
    ],
    "return": null
  },
  {
    "__docId__": 3665,
    "kind": "method",
    "name": "performRestart",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#performRestart",
    "access": "public",
    "description": "Attempt to restart the app",
    "lineNumber": 92,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3666,
    "kind": "method",
    "name": "getSupportsFullscreen",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#getSupportsFullscreen",
    "access": "public",
    "description": "Returns whether this platform supports a toggleable fullscreen",
    "lineNumber": 99,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3667,
    "kind": "method",
    "name": "setFullscreen",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#setFullscreen",
    "access": "public",
    "description": "Should set the apps fullscreen state to the desired state",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "flag",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3668,
    "kind": "method",
    "name": "getSupportsAppExit",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#getSupportsAppExit",
    "access": "public",
    "description": "Returns whether this platform supports quitting the app",
    "lineNumber": 114,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3669,
    "kind": "method",
    "name": "exitApp",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#exitApp",
    "access": "public",
    "description": "Attempts to quit the app",
    "lineNumber": 121,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3670,
    "kind": "method",
    "name": "getSupportsKeyboard",
    "memberof": "js/platform/wrapper.js~PlatformWrapperInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/platform/wrapper.js~PlatformWrapperInterface#getSupportsKeyboard",
    "access": "public",
    "description": "Whether this platform supports a keyboard",
    "lineNumber": 128,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3671,
    "kind": "file",
    "name": "js/profile/application_settings.js",
    "content": "/* typehints:start */\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\n\r\nimport { ReadWriteProxy } from \"../core/read_write_proxy\";\r\nimport { BoolSetting, EnumSetting, RangeSetting, BaseSetting } from \"./setting_types\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { ExplainedResult } from \"../core/explained_result\";\r\nimport { applyGameTheme } from \"../game/theme\";\r\nimport { T } from \"../translations\";\r\nimport { LANGUAGES } from \"../languages\";\r\nimport { globalConfig, IS_DEBUG } from \"../core/config\";\r\n\r\nconst logger = createLogger(\"application_settings\");\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport const enumCategories = {\r\n    general: \"general\",\r\n    userInterface: \"userInterface\",\r\n    performance: \"performance\",\r\n    advanced: \"advanced\",\r\n    debug: \"debug\",\r\n};\r\n\r\nexport const uiScales = [{\r\n        id: \"super_small\",\r\n        size: 0.6,\r\n    },\r\n    {\r\n        id: \"small\",\r\n        size: 0.8,\r\n    },\r\n    {\r\n        id: \"regular\",\r\n        size: 1,\r\n    },\r\n    {\r\n        id: \"large\",\r\n        size: 1.05,\r\n    },\r\n    {\r\n        id: \"huge\",\r\n        size: 1.1,\r\n    },\r\n];\r\n\r\nexport const scrollWheelSensitivities = [{\r\n        id: \"super_slow\",\r\n        scale: 0.25,\r\n    },\r\n    {\r\n        id: \"slow\",\r\n        scale: 0.5,\r\n    },\r\n    {\r\n        id: \"regular\",\r\n        scale: 1,\r\n    },\r\n    {\r\n        id: \"fast\",\r\n        scale: 2,\r\n    },\r\n    {\r\n        id: \"super_fast\",\r\n        scale: 4,\r\n    },\r\n];\r\n\r\nexport const movementSpeeds = [{\r\n        id: \"super_slow\",\r\n        multiplier: 0.25,\r\n    },\r\n    {\r\n        id: \"slow\",\r\n        multiplier: 0.5,\r\n    },\r\n    {\r\n        id: \"regular\",\r\n        multiplier: 1,\r\n    },\r\n    {\r\n        id: \"fast\",\r\n        multiplier: 2,\r\n    },\r\n    {\r\n        id: \"super_fast\",\r\n        multiplier: 4,\r\n    },\r\n    {\r\n        id: \"extremely_fast\",\r\n        multiplier: 8,\r\n    },\r\n];\r\n\r\nexport const autosaveIntervals = [{\r\n        id: \"one_minute\",\r\n        seconds: 60,\r\n    },\r\n    {\r\n        id: \"two_minutes\",\r\n        seconds: 120,\r\n    },\r\n    {\r\n        id: \"five_minutes\",\r\n        seconds: 5 * 60,\r\n    },\r\n    {\r\n        id: \"ten_minutes\",\r\n        seconds: 10 * 60,\r\n    },\r\n    {\r\n        id: \"twenty_minutes\",\r\n        seconds: 20 * 60,\r\n    },\r\n    {\r\n        id: \"disabled\",\r\n        seconds: null,\r\n    },\r\n];\r\n\r\nconst refreshRateOptions = [\"30\", \"60\", \"120\", \"180\", \"240\"];\r\n\r\nif (G_IS_DEV) {\r\n    refreshRateOptions.unshift(\"10\");\r\n    refreshRateOptions.unshift(\"5\");\r\n    refreshRateOptions.push(\"1000\");\r\n    refreshRateOptions.push(\"2000\");\r\n    refreshRateOptions.push(\"5000\");\r\n    refreshRateOptions.push(\"10000\");\r\n}\r\n\r\nexport const allApplicationSettings = () => {\r\n    const allApplicationSettings = [\r\n        new EnumSetting(\"language\", {\r\n            options: Object.keys(LANGUAGES),\r\n            valueGetter: key => key,\r\n            textGetter: key => LANGUAGES[key].name,\r\n            category: enumCategories.general,\r\n            restartRequired: true,\r\n            changeCb: (app, id) => null,\r\n            magicValue: \"auto-detect\",\r\n        }),\r\n\r\n        new EnumSetting(\"uiScale\", {\r\n            options: uiScales.sort((a, b) => a.size - b.size),\r\n            valueGetter: scale => scale.id,\r\n            textGetter: scale => T.settings.labels.uiScale.scales[scale.id],\r\n            category: enumCategories.userInterface,\r\n            restartRequired: false,\r\n            changeCb:\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n                (app, id) => app.updateAfterUiScaleChanged(),\r\n        }),\r\n\r\n        new RangeSetting(\r\n            \"soundVolume\",\r\n            enumCategories.general,\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n            (app, value) => app.sound.setSoundVolume(value)\r\n        ),\r\n        new RangeSetting(\r\n            \"musicVolume\",\r\n            enumCategories.general,\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n            (app, value) => app.sound.setMusicVolume(value)\r\n        ),\r\n\r\n        new BoolSetting(\r\n            \"fullscreen\",\r\n            enumCategories.general,\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n            (app, value) => {\r\n                if (app.platformWrapper.getSupportsFullscreen()) {\r\n                    app.platformWrapper.setFullscreen(value);\r\n                }\r\n            },\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n            app => app.restrictionMgr.getHasExtendedSettings()\r\n        ),\r\n\r\n        new BoolSetting(\r\n            \"enableColorBlindHelper\",\r\n            enumCategories.general,\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n            (app, value) => null\r\n        ),\r\n\r\n        new BoolSetting(\"offerHints\", enumCategories.userInterface, (app, value) => {}),\r\n\r\n        new EnumSetting(\"theme\", {\r\n            options: Object.keys(shapezAPI.themes),\r\n            valueGetter: theme => theme,\r\n            textGetter: theme => T.settings.labels.theme.themes[theme],\r\n            category: enumCategories.userInterface,\r\n            restartRequired: false,\r\n            changeCb:\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n                (app, id) => {\r\n                applyGameTheme(id);\r\n                document.documentElement.setAttribute(\"data-theme\", id);\r\n            },\r\n            enabledCb:\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n                app => app.restrictionMgr.getHasExtendedSettings(),\r\n        }),\r\n\r\n        new EnumSetting(\"autosaveInterval\", {\r\n            options: autosaveIntervals,\r\n            valueGetter: interval => interval.id,\r\n            textGetter: interval => T.settings.labels.autosaveInterval.intervals[interval.id],\r\n            category: enumCategories.advanced,\r\n            restartRequired: false,\r\n            changeCb:\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n                (app, id) => null,\r\n        }),\r\n\r\n        new EnumSetting(\"scrollWheelSensitivity\", {\r\n            options: scrollWheelSensitivities.sort((a, b) => a.scale - b.scale),\r\n            valueGetter: scale => scale.id,\r\n            textGetter: scale => T.settings.labels.scrollWheelSensitivity.sensitivity[scale.id],\r\n            category: enumCategories.advanced,\r\n            restartRequired: false,\r\n            changeCb:\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n                (app, id) => app.updateAfterUiScaleChanged(),\r\n        }),\r\n\r\n        new EnumSetting(\"movementSpeed\", {\r\n            options: movementSpeeds.sort((a, b) => a.multiplier - b.multiplier),\r\n            valueGetter: multiplier => multiplier.id,\r\n            textGetter: multiplier => T.settings.labels.movementSpeed.speeds[multiplier.id],\r\n            category: enumCategories.advanced,\r\n            restartRequired: false,\r\n            changeCb: (app, id) => {},\r\n        }),\r\n\r\n        new BoolSetting(\"enableMousePan\", enumCategories.advanced, (app, value) => {}),\r\n        new BoolSetting(\"alwaysMultiplace\", enumCategories.advanced, (app, value) => {}),\r\n        new BoolSetting(\"zoomToCursor\", enumCategories.advanced, (app, value) => {}),\r\n        new BoolSetting(\"clearCursorOnDeleteWhilePlacing\", enumCategories.advanced, (app, value) => {}),\r\n        new BoolSetting(\"enableTunnelSmartplace\", enumCategories.advanced, (app, value) => {}),\r\n        new BoolSetting(\"vignette\", enumCategories.userInterface, (app, value) => {}),\r\n        new BoolSetting(\"compactBuildingInfo\", enumCategories.userInterface, (app, value) => {}),\r\n        new BoolSetting(\"disableCutDeleteWarnings\", enumCategories.advanced, (app, value) => {}),\r\n        new BoolSetting(\"rotationByBuilding\", enumCategories.advanced, (app, value) => {}),\r\n        new BoolSetting(\"displayChunkBorders\", enumCategories.advanced, (app, value) => {}),\r\n        new BoolSetting(\"pickMinerOnPatch\", enumCategories.advanced, (app, value) => {}),\r\n        new RangeSetting(\"mapResourcesScale\", enumCategories.advanced, () => null),\r\n\r\n        new EnumSetting(\"refreshRate\", {\r\n            options: refreshRateOptions,\r\n            valueGetter: rate => rate,\r\n            textGetter: rate => rate + \" Hz\",\r\n            category: enumCategories.performance,\r\n            restartRequired: false,\r\n            changeCb: (app, id) => {},\r\n            enabledCb:\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n                app => app.restrictionMgr.getHasExtendedSettings(),\r\n        }),\r\n\r\n        new BoolSetting(\"lowQualityMapResources\", enumCategories.performance, (app, value) => {}),\r\n        new BoolSetting(\"disableTileGrid\", enumCategories.performance, (app, value) => {}),\r\n        new BoolSetting(\"lowQualityTextures\", enumCategories.performance, (app, value) => {}),\r\n        new BoolSetting(\"simplifiedBelts\", enumCategories.performance, (app, value) => {}),\r\n    ];\r\n\r\n    if (IS_DEBUG) {\r\n        for (let k in globalConfig.debug) {\r\n            if (k.startsWith(\"_\")) continue;\r\n            const setting = new BoolSetting(`debug_${k}`, enumCategories.debug, (app, value) => {\r\n                globalConfig.debug[k] = value;\r\n            });\r\n            setting.validate = () => true;\r\n            T.settings.labels[`debug_${k}`] = {\r\n                title: k.replace(/(?!^)([A-Z])/g, \" $1\"),\r\n                description: globalConfig.debug[`_${k}`],\r\n            };\r\n            allApplicationSettings.push(setting);\r\n        }\r\n    }\r\n\r\n    return allApplicationSettings;\r\n};\r\n\r\nexport function getApplicationSettingById(id) {\r\n    return allApplicationSettings().find(setting => setting.id === id);\r\n}\r\n\r\nclass SettingsStorage {\r\n    constructor() {\r\n        this.uiScale = \"regular\";\r\n        this.fullscreen = G_IS_STANDALONE;\r\n\r\n        this.soundVolume = 1.0;\r\n        this.musicVolume = 1.0;\r\n\r\n        this.theme = \"light\";\r\n        this.refreshRate = \"60\";\r\n        this.scrollWheelSensitivity = \"regular\";\r\n        this.movementSpeed = \"regular\";\r\n        this.language = \"auto-detect\";\r\n        this.autosaveInterval = \"two_minutes\";\r\n\r\n        this.alwaysMultiplace = false;\r\n        this.offerHints = true;\r\n        this.enableTunnelSmartplace = true;\r\n        this.vignette = true;\r\n        this.compactBuildingInfo = false;\r\n        this.disableCutDeleteWarnings = false;\r\n        this.rotationByBuilding = true;\r\n        this.clearCursorOnDeleteWhilePlacing = true;\r\n        this.displayChunkBorders = false;\r\n        this.pickMinerOnPatch = true;\r\n        this.enableMousePan = true;\r\n\r\n        this.enableColorBlindHelper = false;\r\n\r\n        this.lowQualityMapResources = false;\r\n        this.disableTileGrid = false;\r\n        this.lowQualityTextures = false;\r\n        this.simplifiedBelts = false;\r\n        this.zoomToCursor = true;\r\n        this.mapResourcesScale = 0.5;\r\n\r\n        /**\r\n         * @type {Object.<string, number>}\r\n         */\r\n        this.keybindingOverrides = {};\r\n    }\r\n}\r\n\r\nexport class ApplicationSettings extends ReadWriteProxy {\r\n    constructor(app) {\r\n        super(app, \"app_settings.bin\");\r\n    }\r\n\r\n    initialize() {\r\n        // Read and directly write latest data back\r\n        return this.readAsync()\r\n            .then(() => {\r\n                // Apply default setting callbacks\r\n                const settings = this.getAllSettings();\r\n                for (let i = 0; i < allApplicationSettings().length; ++i) {\r\n                    const handle = allApplicationSettings()[i];\r\n                    handle.apply(this.app, settings[handle.id]);\r\n                }\r\n            })\r\n\r\n        .then(() => this.writeAsync());\r\n    }\r\n\r\n    save() {\r\n        return this.writeAsync();\r\n    }\r\n\r\n    // Getters\r\n\r\n    /**\r\n     * @returns {SettingsStorage}\r\n     */\r\n    getAllSettings() {\r\n        return this.currentData.settings;\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    getSetting(key) {\r\n        if (!key.startsWith(\"debug_\")) {\r\n            assert(this.getAllSettings().hasOwnProperty(key), \"Setting not known: \" + key);\r\n        }\r\n        return this.getAllSettings()[key];\r\n    }\r\n\r\n    getInterfaceScaleId() {\r\n        if (!this.currentData) {\r\n            // Not initialized yet\r\n            return \"regular\";\r\n        }\r\n        return this.getAllSettings().uiScale;\r\n    }\r\n\r\n    getDesiredFps() {\r\n        return parseInt(this.getAllSettings().refreshRate);\r\n    }\r\n\r\n    getInterfaceScaleValue() {\r\n        const id = this.getInterfaceScaleId();\r\n        for (let i = 0; i < uiScales.length; ++i) {\r\n            if (uiScales[i].id === id) {\r\n                return uiScales[i].size;\r\n            }\r\n        }\r\n        logger.error(\"Unknown ui scale id:\", id);\r\n        return 1;\r\n    }\r\n\r\n    getScrollWheelSensitivity() {\r\n        const id = this.getAllSettings().scrollWheelSensitivity;\r\n        for (let i = 0; i < scrollWheelSensitivities.length; ++i) {\r\n            if (scrollWheelSensitivities[i].id === id) {\r\n                return scrollWheelSensitivities[i].scale;\r\n            }\r\n        }\r\n        logger.error(\"Unknown scroll wheel sensitivity id:\", id);\r\n        return 1;\r\n    }\r\n\r\n    getMovementSpeed() {\r\n        const id = this.getAllSettings().movementSpeed;\r\n        for (let i = 0; i < movementSpeeds.length; ++i) {\r\n            if (movementSpeeds[i].id === id) {\r\n                return movementSpeeds[i].multiplier;\r\n            }\r\n        }\r\n        logger.error(\"Unknown movement speed id:\", id);\r\n        return 1;\r\n    }\r\n\r\n    getAutosaveIntervalSeconds() {\r\n        const id = this.getAllSettings().autosaveInterval;\r\n        for (let i = 0; i < autosaveIntervals.length; ++i) {\r\n            if (autosaveIntervals[i].id === id) {\r\n                return autosaveIntervals[i].seconds;\r\n            }\r\n        }\r\n        logger.error(\"Unknown autosave interval id:\", id);\r\n        return 120;\r\n    }\r\n\r\n    getIsFullScreen() {\r\n        return this.getAllSettings().fullscreen;\r\n    }\r\n\r\n    getKeybindingOverrides() {\r\n        return this.getAllSettings().keybindingOverrides;\r\n    }\r\n\r\n    getLanguage() {\r\n        return this.getAllSettings().language;\r\n    }\r\n\r\n    // Setters\r\n\r\n    updateLanguage(id) {\r\n        assert(LANGUAGES[id], \"Language not known: \" + id);\r\n        return this.updateSetting(\"language\", id);\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @param {string|boolean|number} value\r\n     */\r\n    updateSetting(key, value) {\r\n        for (let i = 0; i < allApplicationSettings().length; ++i) {\r\n            const setting = allApplicationSettings()[i];\r\n            if (setting.id === key) {\r\n                if (!setting.validate(value)) {\r\n                    assertAlways(false, \"Bad setting value: \" + key);\r\n                }\r\n                this.getAllSettings()[key] = value;\r\n                if (setting.changeCb) {\r\n                    setting.changeCb(this.app, value);\r\n                }\r\n                return this.writeAsync();\r\n            }\r\n        }\r\n        assertAlways(false, \"Unknown setting: \" + key);\r\n    }\r\n\r\n    /**\r\n     * Sets a new keybinding override\r\n     * @param {string} keybindingId\r\n     * @param {number} keyCode\r\n     */\r\n    updateKeybindingOverride(keybindingId, keyCode) {\r\n        assert(Number.isInteger(keyCode), \"Not a valid key code: \" + keyCode);\r\n        this.getAllSettings().keybindingOverrides[keybindingId] = keyCode;\r\n        return this.writeAsync();\r\n    }\r\n\r\n    /**\r\n     * Resets a given keybinding override\r\n     * @param {string} id\r\n     */\r\n    resetKeybindingOverride(id) {\r\n            delete this.getAllSettings().keybindingOverrides[id];\r\n            return this.writeAsync();\r\n        }\r\n        /**\r\n         * Resets all keybinding overrides\r\n         */\r\n    resetKeybindingOverrides() {\r\n        this.getAllSettings().keybindingOverrides = {};\r\n        return this.writeAsync();\r\n    }\r\n\r\n    // RW Proxy impl\r\n    verify(data) {\r\n        if (!data.settings) {\r\n            return ExplainedResult.bad(\"missing key 'settings'\");\r\n        }\r\n        if (typeof data.settings !== \"object\") {\r\n            return ExplainedResult.bad(\"Bad settings object\");\r\n        }\r\n\r\n        const settings = data.settings;\r\n        for (let i = 0; i < allApplicationSettings().length; ++i) {\r\n            const setting = allApplicationSettings()[i];\r\n            const storedValue = settings[setting.id];\r\n            if (!setting.validate(storedValue)) {\r\n                return ExplainedResult.bad(\r\n                    \"Bad setting value for \" +\r\n                    setting.id +\r\n                    \": \" +\r\n                    storedValue +\r\n                    \" @ settings version \" +\r\n                    data.version +\r\n                    \" (latest is \" +\r\n                    this.getCurrentVersion() +\r\n                    \")\"\r\n                );\r\n            }\r\n        }\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    getDefaultData() {\r\n        return {\r\n            version: this.getCurrentVersion(),\r\n            settings: new SettingsStorage(),\r\n        };\r\n    }\r\n\r\n    getCurrentVersion() {\r\n        return 30;\r\n    }\r\n\r\n    /** @param {{settings: SettingsStorage, version: number}} data */\r\n    migrate(data) {\r\n        // Simply reset before\r\n        if (data.version < 5) {\r\n            data.settings = new SettingsStorage();\r\n            data.version = this.getCurrentVersion();\r\n            return ExplainedResult.good();\r\n        }\r\n\r\n        if (data.version < 6) {\r\n            data.settings.alwaysMultiplace = false;\r\n            data.version = 6;\r\n        }\r\n\r\n        if (data.version < 7) {\r\n            data.settings.offerHints = true;\r\n            data.version = 7;\r\n        }\r\n\r\n        if (data.version < 8) {\r\n            data.settings.scrollWheelSensitivity = \"regular\";\r\n            data.version = 8;\r\n        }\r\n\r\n        if (data.version < 9) {\r\n            data.settings.language = \"auto-detect\";\r\n            data.version = 9;\r\n        }\r\n\r\n        if (data.version < 10) {\r\n            data.settings.movementSpeed = \"regular\";\r\n            data.version = 10;\r\n        }\r\n\r\n        if (data.version < 11) {\r\n            data.settings.enableTunnelSmartplace = true;\r\n            data.version = 11;\r\n        }\r\n\r\n        if (data.version < 12) {\r\n            data.settings.vignette = true;\r\n            data.version = 12;\r\n        }\r\n\r\n        if (data.version < 13) {\r\n            data.settings.compactBuildingInfo = false;\r\n            data.version = 13;\r\n        }\r\n\r\n        if (data.version < 14) {\r\n            data.settings.disableCutDeleteWarnings = false;\r\n            data.version = 14;\r\n        }\r\n\r\n        if (data.version < 15) {\r\n            data.settings.autosaveInterval = \"two_minutes\";\r\n            data.version = 15;\r\n        }\r\n\r\n        if (data.version < 16) {\r\n            // RE-ENABLE this setting, it already existed\r\n            data.settings.enableTunnelSmartplace = true;\r\n            data.version = 16;\r\n        }\r\n\r\n        if (data.version < 17) {\r\n            data.settings.enableColorBlindHelper = false;\r\n            data.version = 17;\r\n        }\r\n\r\n        if (data.version < 18) {\r\n            data.settings.rotationByBuilding = true;\r\n            data.version = 18;\r\n        }\r\n\r\n        if (data.version < 19) {\r\n            data.settings.lowQualityMapResources = false;\r\n            data.version = 19;\r\n        }\r\n\r\n        if (data.version < 20) {\r\n            data.settings.disableTileGrid = false;\r\n            data.version = 20;\r\n        }\r\n\r\n        if (data.version < 21) {\r\n            data.settings.lowQualityTextures = false;\r\n            data.version = 21;\r\n        }\r\n\r\n        if (data.version < 22) {\r\n            data.settings.clearCursorOnDeleteWhilePlacing = true;\r\n            data.version = 22;\r\n        }\r\n\r\n        if (data.version < 23) {\r\n            data.settings.displayChunkBorders = false;\r\n            data.version = 23;\r\n        }\r\n\r\n        if (data.version < 24) {\r\n            data.settings.refreshRate = \"60\";\r\n        }\r\n\r\n        if (data.version < 25) {\r\n            data.settings.musicVolume = 0.5;\r\n            data.settings.soundVolume = 0.5;\r\n\r\n            // @ts-ignore\r\n            delete data.settings.musicMuted;\r\n            // @ts-ignore\r\n            delete data.settings.soundsMuted;\r\n            data.version = 25;\r\n        }\r\n\r\n        if (data.version < 26) {\r\n            data.settings.pickMinerOnPatch = true;\r\n            data.version = 26;\r\n        }\r\n\r\n        if (data.version < 27) {\r\n            data.settings.simplifiedBelts = false;\r\n            data.version = 27;\r\n        }\r\n\r\n        if (data.version < 28) {\r\n            data.settings.enableMousePan = true;\r\n            data.version = 28;\r\n        }\r\n\r\n        if (data.version < 29) {\r\n            data.settings.zoomToCursor = true;\r\n            data.version = 29;\r\n        }\r\n\r\n        if (data.version < 30) {\r\n            data.settings.mapResourcesScale = 0.5;\r\n\r\n            // Re-enable hints as well\r\n            data.settings.offerHints = true;\r\n\r\n            data.version = 30;\r\n        }\r\n\r\n        return ExplainedResult.good();\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/profile/application_settings.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3672,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/profile/application_settings.js",
    "static": true,
    "longname": "js/profile/application_settings.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/profile/application_settings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3673,
    "kind": "variable",
    "name": "enumCategories",
    "memberof": "js/profile/application_settings.js",
    "static": true,
    "longname": "js/profile/application_settings.js~enumCategories",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/profile/application_settings.js",
    "importStyle": "{enumCategories}",
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"general\": string, \"userInterface\": string, \"performance\": string, \"advanced\": string, \"debug\": string}"
      ]
    }
  },
  {
    "__docId__": 3674,
    "kind": "variable",
    "name": "uiScales",
    "memberof": "js/profile/application_settings.js",
    "static": true,
    "longname": "js/profile/application_settings.js~uiScales",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/profile/application_settings.js",
    "importStyle": "{uiScales}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 3675,
    "kind": "variable",
    "name": "scrollWheelSensitivities",
    "memberof": "js/profile/application_settings.js",
    "static": true,
    "longname": "js/profile/application_settings.js~scrollWheelSensitivities",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/profile/application_settings.js",
    "importStyle": "{scrollWheelSensitivities}",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 3676,
    "kind": "variable",
    "name": "movementSpeeds",
    "memberof": "js/profile/application_settings.js",
    "static": true,
    "longname": "js/profile/application_settings.js~movementSpeeds",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/profile/application_settings.js",
    "importStyle": "{movementSpeeds}",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 3677,
    "kind": "variable",
    "name": "autosaveIntervals",
    "memberof": "js/profile/application_settings.js",
    "static": true,
    "longname": "js/profile/application_settings.js~autosaveIntervals",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/profile/application_settings.js",
    "importStyle": "{autosaveIntervals}",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 3678,
    "kind": "variable",
    "name": "refreshRateOptions",
    "memberof": "js/profile/application_settings.js",
    "static": true,
    "longname": "js/profile/application_settings.js~refreshRateOptions",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/profile/application_settings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3679,
    "kind": "function",
    "name": "allApplicationSettings",
    "memberof": "js/profile/application_settings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/profile/application_settings.js~allApplicationSettings",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/profile/application_settings.js",
    "importStyle": "{allApplicationSettings}",
    "description": null,
    "lineNumber": 134,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3680,
    "kind": "function",
    "name": "getApplicationSettingById",
    "memberof": "js/profile/application_settings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/profile/application_settings.js~getApplicationSettingById",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/profile/application_settings.js",
    "importStyle": "{getApplicationSettingById}",
    "description": null,
    "lineNumber": 311,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3681,
    "kind": "class",
    "name": "SettingsStorage",
    "memberof": "js/profile/application_settings.js",
    "static": true,
    "longname": "js/profile/application_settings.js~SettingsStorage",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/profile/application_settings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 315,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 3682,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 316,
    "undocument": true
  },
  {
    "__docId__": 3683,
    "kind": "member",
    "name": "uiScale",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#uiScale",
    "access": "public",
    "description": null,
    "lineNumber": 317,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3684,
    "kind": "member",
    "name": "fullscreen",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#fullscreen",
    "access": "public",
    "description": null,
    "lineNumber": 318,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3685,
    "kind": "member",
    "name": "soundVolume",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#soundVolume",
    "access": "public",
    "description": null,
    "lineNumber": 320,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3686,
    "kind": "member",
    "name": "musicVolume",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#musicVolume",
    "access": "public",
    "description": null,
    "lineNumber": 321,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3687,
    "kind": "member",
    "name": "theme",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#theme",
    "access": "public",
    "description": null,
    "lineNumber": 323,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3688,
    "kind": "member",
    "name": "refreshRate",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#refreshRate",
    "access": "public",
    "description": null,
    "lineNumber": 324,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3689,
    "kind": "member",
    "name": "scrollWheelSensitivity",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#scrollWheelSensitivity",
    "access": "public",
    "description": null,
    "lineNumber": 325,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3690,
    "kind": "member",
    "name": "movementSpeed",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#movementSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 326,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3691,
    "kind": "member",
    "name": "language",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#language",
    "access": "public",
    "description": null,
    "lineNumber": 327,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3692,
    "kind": "member",
    "name": "autosaveInterval",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#autosaveInterval",
    "access": "public",
    "description": null,
    "lineNumber": 328,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3693,
    "kind": "member",
    "name": "alwaysMultiplace",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#alwaysMultiplace",
    "access": "public",
    "description": null,
    "lineNumber": 330,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3694,
    "kind": "member",
    "name": "offerHints",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#offerHints",
    "access": "public",
    "description": null,
    "lineNumber": 331,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3695,
    "kind": "member",
    "name": "enableTunnelSmartplace",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#enableTunnelSmartplace",
    "access": "public",
    "description": null,
    "lineNumber": 332,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3696,
    "kind": "member",
    "name": "vignette",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#vignette",
    "access": "public",
    "description": null,
    "lineNumber": 333,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3697,
    "kind": "member",
    "name": "compactBuildingInfo",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#compactBuildingInfo",
    "access": "public",
    "description": null,
    "lineNumber": 334,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3698,
    "kind": "member",
    "name": "disableCutDeleteWarnings",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#disableCutDeleteWarnings",
    "access": "public",
    "description": null,
    "lineNumber": 335,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3699,
    "kind": "member",
    "name": "rotationByBuilding",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#rotationByBuilding",
    "access": "public",
    "description": null,
    "lineNumber": 336,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3700,
    "kind": "member",
    "name": "clearCursorOnDeleteWhilePlacing",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#clearCursorOnDeleteWhilePlacing",
    "access": "public",
    "description": null,
    "lineNumber": 337,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3701,
    "kind": "member",
    "name": "displayChunkBorders",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#displayChunkBorders",
    "access": "public",
    "description": null,
    "lineNumber": 338,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3702,
    "kind": "member",
    "name": "pickMinerOnPatch",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#pickMinerOnPatch",
    "access": "public",
    "description": null,
    "lineNumber": 339,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3703,
    "kind": "member",
    "name": "enableMousePan",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#enableMousePan",
    "access": "public",
    "description": null,
    "lineNumber": 340,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3704,
    "kind": "member",
    "name": "enableColorBlindHelper",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#enableColorBlindHelper",
    "access": "public",
    "description": null,
    "lineNumber": 342,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3705,
    "kind": "member",
    "name": "lowQualityMapResources",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#lowQualityMapResources",
    "access": "public",
    "description": null,
    "lineNumber": 344,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3706,
    "kind": "member",
    "name": "disableTileGrid",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#disableTileGrid",
    "access": "public",
    "description": null,
    "lineNumber": 345,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3707,
    "kind": "member",
    "name": "lowQualityTextures",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#lowQualityTextures",
    "access": "public",
    "description": null,
    "lineNumber": 346,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3708,
    "kind": "member",
    "name": "simplifiedBelts",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#simplifiedBelts",
    "access": "public",
    "description": null,
    "lineNumber": 347,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3709,
    "kind": "member",
    "name": "zoomToCursor",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#zoomToCursor",
    "access": "public",
    "description": null,
    "lineNumber": 348,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3710,
    "kind": "member",
    "name": "mapResourcesScale",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#mapResourcesScale",
    "access": "public",
    "description": null,
    "lineNumber": 349,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3711,
    "kind": "member",
    "name": "keybindingOverrides",
    "memberof": "js/profile/application_settings.js~SettingsStorage",
    "static": false,
    "longname": "js/profile/application_settings.js~SettingsStorage#keybindingOverrides",
    "access": "public",
    "description": "",
    "lineNumber": 354,
    "type": {
      "nullable": null,
      "types": [
        "Object.<string, number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3712,
    "kind": "class",
    "name": "ApplicationSettings",
    "memberof": "js/profile/application_settings.js",
    "static": true,
    "longname": "js/profile/application_settings.js~ApplicationSettings",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/profile/application_settings.js",
    "importStyle": "{ApplicationSettings}",
    "description": null,
    "lineNumber": 358,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/core/read_write_proxy.js~ReadWriteProxy"
    ]
  },
  {
    "__docId__": 3713,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 359,
    "undocument": true
  },
  {
    "__docId__": 3714,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 363,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3715,
    "kind": "method",
    "name": "save",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#save",
    "access": "public",
    "description": null,
    "lineNumber": 378,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3716,
    "kind": "method",
    "name": "getAllSettings",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#getAllSettings",
    "access": "public",
    "description": "",
    "lineNumber": 387,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{SettingsStorage}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SettingsStorage"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3717,
    "kind": "method",
    "name": "getSetting",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#getSetting",
    "access": "public",
    "description": "",
    "lineNumber": 394,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3718,
    "kind": "method",
    "name": "getInterfaceScaleId",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#getInterfaceScaleId",
    "access": "public",
    "description": null,
    "lineNumber": 401,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3719,
    "kind": "method",
    "name": "getDesiredFps",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#getDesiredFps",
    "access": "public",
    "description": null,
    "lineNumber": 409,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3720,
    "kind": "method",
    "name": "getInterfaceScaleValue",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#getInterfaceScaleValue",
    "access": "public",
    "description": null,
    "lineNumber": 413,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3721,
    "kind": "method",
    "name": "getScrollWheelSensitivity",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#getScrollWheelSensitivity",
    "access": "public",
    "description": null,
    "lineNumber": 424,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3722,
    "kind": "method",
    "name": "getMovementSpeed",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#getMovementSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 435,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3723,
    "kind": "method",
    "name": "getAutosaveIntervalSeconds",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#getAutosaveIntervalSeconds",
    "access": "public",
    "description": null,
    "lineNumber": 446,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3724,
    "kind": "method",
    "name": "getIsFullScreen",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#getIsFullScreen",
    "access": "public",
    "description": null,
    "lineNumber": 457,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3725,
    "kind": "method",
    "name": "getKeybindingOverrides",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#getKeybindingOverrides",
    "access": "public",
    "description": null,
    "lineNumber": 461,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3726,
    "kind": "method",
    "name": "getLanguage",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#getLanguage",
    "access": "public",
    "description": null,
    "lineNumber": 465,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3727,
    "kind": "method",
    "name": "updateLanguage",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#updateLanguage",
    "access": "public",
    "description": null,
    "lineNumber": 471,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3728,
    "kind": "method",
    "name": "updateSetting",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#updateSetting",
    "access": "public",
    "description": "",
    "lineNumber": 480,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "boolean",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3729,
    "kind": "method",
    "name": "updateKeybindingOverride",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#updateKeybindingOverride",
    "access": "public",
    "description": "Sets a new keybinding override",
    "lineNumber": 502,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keybindingId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "keyCode",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3730,
    "kind": "method",
    "name": "resetKeybindingOverride",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#resetKeybindingOverride",
    "access": "public",
    "description": "Resets a given keybinding override",
    "lineNumber": 512,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3731,
    "kind": "method",
    "name": "resetKeybindingOverrides",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#resetKeybindingOverrides",
    "access": "public",
    "description": "Resets all keybinding overrides",
    "lineNumber": 519,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3732,
    "kind": "method",
    "name": "verify",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#verify",
    "access": "public",
    "description": null,
    "lineNumber": 525,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3733,
    "kind": "method",
    "name": "getDefaultData",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#getDefaultData",
    "access": "public",
    "description": null,
    "lineNumber": 554,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"version\": *, \"settings\": *}"
      ]
    }
  },
  {
    "__docId__": 3734,
    "kind": "method",
    "name": "getCurrentVersion",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#getCurrentVersion",
    "access": "public",
    "description": null,
    "lineNumber": 561,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3735,
    "kind": "method",
    "name": "migrate",
    "memberof": "js/profile/application_settings.js~ApplicationSettings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/application_settings.js~ApplicationSettings#migrate",
    "access": "public",
    "description": null,
    "lineNumber": 566,
    "params": [
      {
        "nullable": null,
        "types": [
          "{settings: SettingsStorage, version: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3736,
    "kind": "file",
    "name": "js/profile/setting_types.js",
    "content": "// @ts-nocheck\r\n/* typehints:start */\r\nimport { Application } from \"../application\";\r\n/* typehints:end */\r\n\r\nimport { createLogger } from \"../core/logging\";\r\nimport { T } from \"../translations\";\r\n\r\nconst logger = createLogger(\"setting_types\");\r\n\r\n/*\r\n * ***************************************************\r\n *\r\n *  LEGACY CODE WARNING\r\n *\r\n *  This is old code from yorg3.io and needs to be refactored\r\n *  @TODO\r\n *\r\n * ***************************************************\r\n */\r\n\r\nexport class BaseSetting {\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     * @param {string} categoryId\r\n     * @param {function(app: Application,value: any):void} changeCb\r\n     * @param {function(app: Application) : boolean=} enabledCb\r\n     */\r\n    constructor(id, categoryId, changeCb, enabledCb = null) {\r\n        this.id = id;\r\n        this.categoryId = categoryId;\r\n        this.changeCb = changeCb;\r\n        this.enabledCb = enabledCb;\r\n\r\n        /** @type {Application} */\r\n        this.app = null;\r\n\r\n        this.element = null;\r\n        this.dialogs = null;\r\n    }\r\n\r\n    /**\r\n     * @param {Application} app\r\n     * @param {any} value\r\n     */\r\n    apply(app, value) {\r\n        if (this.changeCb) {\r\n            this.changeCb(app, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Binds all parameters\r\n     * @param {Application} app\r\n     * @param {HTMLElement} element\r\n     * @param {any} dialogs\r\n     */\r\n    bind(app, element, dialogs) {\r\n        this.app = app;\r\n        this.element = element;\r\n        this.dialogs = dialogs;\r\n    }\r\n\r\n    /**\r\n     * Returns the HTML for this setting\r\n     * @param {Application} app\r\n     */\r\n    getHtml(app) {\r\n        abstract;\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Returns whether this setting is enabled and available\r\n     * @param {Application} app\r\n     */\r\n    getIsAvailable(app) {\r\n        return this.enabledCb ? this.enabledCb(app) : true;\r\n    }\r\n\r\n    syncValueToElement() {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Attempts to modify the setting\r\n     */\r\n    modify() {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Shows the dialog that a restart is required\r\n     */\r\n    showRestartRequiredDialog() {\r\n        const { restart } = this.dialogs.showInfo(\r\n            T.dialogs.restartRequired.title,\r\n            T.dialogs.restartRequired.text,\r\n            this.app.platformWrapper.getSupportsRestart() ? [\"later:grey\", \"restart:misc\"] : [\"ok:good\"]\r\n        );\r\n        if (restart) {\r\n            restart.add(() => this.app.platformWrapper.performRestart());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Validates the set value\r\n     * @param {any} value\r\n     * @returns {boolean}\r\n     */\r\n    validate(value) {\r\n        abstract;\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class EnumSetting extends BaseSetting {\r\n    constructor(\r\n        id, {\r\n            options,\r\n            valueGetter,\r\n            textGetter,\r\n            descGetter = null,\r\n            category,\r\n            restartRequired = true,\r\n            iconPrefix = null,\r\n            changeCb = null,\r\n            magicValue = null,\r\n            enabledCb = null,\r\n        }\r\n    ) {\r\n        super(id, category, changeCb, enabledCb);\r\n\r\n        this.options = options;\r\n        this.valueGetter = valueGetter;\r\n        this.textGetter = textGetter;\r\n        this.descGetter = descGetter || (() => null);\r\n        this.restartRequired = restartRequired;\r\n        this.iconPrefix = iconPrefix;\r\n        this.magicValue = magicValue;\r\n    }\r\n\r\n    /**\r\n     * @param {Application} app\r\n     */\r\n    getHtml(app) {\r\n            const available = this.getIsAvailable(app);\r\n            return `\r\n            <div class=\"setting cardbox ${available ? \"enabled\" : \"disabled\"}\">\r\n                ${available ? \"\" : `<span class=\"standaloneOnlyHint\">${T.demo.settingNotAvailable}</span>`}\r\n                <div class=\"row\">\r\n                    <label>${T.settings.labels[this.id].title}</label>\r\n                    <div class=\"value enum\" data-setting=\"${this.id}\"></div>\r\n                </div>\r\n                <div class=\"desc\">\r\n                    ${T.settings.labels[this.id].description}\r\n                </div>\r\n            </div>`;\r\n    }\r\n\r\n    validate(value) {\r\n        if (value === this.magicValue) {\r\n            return true;\r\n        }\r\n\r\n        const availableValues = this.options.map(option => this.valueGetter(option));\r\n        if (availableValues.indexOf(value) < 0) {\r\n            logger.error(\r\n                \"Value '\" + value + \"' is not contained in available values:\",\r\n                availableValues,\r\n                \"of\",\r\n                this.id\r\n            );\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    syncValueToElement() {\r\n        const value = this.app.settings.getSetting(this.id);\r\n        let displayText = \"???\";\r\n        const matchedInstance = this.options.find(data => this.valueGetter(data) === value);\r\n        if (matchedInstance) {\r\n            displayText = this.textGetter(matchedInstance);\r\n        } else {\r\n            logger.warn(\"Setting value\", value, \"not found for\", this.id, \"!\");\r\n        }\r\n        this.element.innerText = displayText;\r\n    }\r\n\r\n    modify() {\r\n        const { optionSelected } = this.dialogs.showOptionChooser(T.settings.labels[this.id].title, {\r\n            active: this.app.settings.getSetting(this.id),\r\n            options: this.options.map(option => ({\r\n                value: this.valueGetter(option),\r\n                text: this.textGetter(option),\r\n                desc: this.descGetter(option),\r\n                iconPrefix: this.iconPrefix,\r\n            })),\r\n        });\r\n        optionSelected.add(value => {\r\n            this.app.settings.updateSetting(this.id, value);\r\n            this.syncValueToElement();\r\n\r\n            if (this.restartRequired) {\r\n                this.showRestartRequiredDialog();\r\n            }\r\n\r\n            if (this.changeCb) {\r\n                this.changeCb(this.app, value);\r\n            }\r\n        }, this);\r\n    }\r\n}\r\n\r\nexport class BoolSetting extends BaseSetting {\r\n    constructor(id, category, changeCb = null, enabledCb = null) {\r\n        super(id, category, changeCb, enabledCb);\r\n    }\r\n\r\n    /**\r\n     * @param {Application} app\r\n     */\r\n    getHtml(app) {\r\n        const available = this.getIsAvailable(app);\r\n        return `\r\n        <div class=\"setting cardbox ${available ? \"enabled\" : \"disabled\"}\">\r\n            ${available ? \"\" : `<span class=\"standaloneOnlyHint\">${T.demo.settingNotAvailable}</span>`}\r\n\r\n            <div class=\"row\">\r\n                <label>${T.settings.labels[this.id].title}</label>\r\n                <div class=\"value checkbox checked\" data-setting=\"${this.id}\">\r\n                <span class=\"knob\"></span>\r\n                </div>\r\n            </div>\r\n            <div class=\"desc\">\r\n                ${T.settings.labels[this.id].description}\r\n            </div>\r\n        </div>`;\r\n    }\r\n\r\n    syncValueToElement() {\r\n        const value = this.app.settings.getSetting(this.id);\r\n        this.element.classList.toggle(\"checked\", value);\r\n    }\r\n\r\n    modify() {\r\n        const newValue = !this.app.settings.getSetting(this.id);\r\n        this.app.settings.updateSetting(this.id, newValue);\r\n        this.syncValueToElement();\r\n\r\n        if (this.changeCb) {\r\n            this.changeCb(this.app, newValue);\r\n        }\r\n    }\r\n\r\n    validate(value) {\r\n        return typeof value === \"boolean\";\r\n    }\r\n}\r\n\r\nexport class RangeSetting extends BaseSetting {\r\n    constructor(\r\n        id,\r\n        category,\r\n        changeCb = null,\r\n        defaultValue = 1.0,\r\n        minValue = 0,\r\n        maxValue = 1.0,\r\n        stepSize = 0.0001,\r\n        enabledCb = null\r\n    ) {\r\n        super(id, category, changeCb, enabledCb);\r\n\r\n        this.defaultValue = defaultValue;\r\n        this.minValue = minValue;\r\n        this.maxValue = maxValue;\r\n        this.stepSize = stepSize;\r\n    }\r\n\r\n    /**\r\n     * @param {Application} app\r\n     */\r\n    getHtml(app) {\r\n        const available = this.getIsAvailable(app);\r\n        return `\r\n        <div class=\"setting cardbox ${available ? \"enabled\" : \"disabled\"}\">\r\n            ${available ? \"\" : `<span class=\"standaloneOnlyHint\">${T.demo.settingNotAvailable}</span>`}\r\n\r\n            <div class=\"row\">\r\n                <label>${T.settings.labels[this.id].title}</label>\r\n                <div class=\"value rangeInputContainer noPressEffect\" data-setting=\"${this.id}\">\r\n                    <label>${this.defaultValue}</label>\r\n                    <input class=\"rangeInput\" type=\"range\" value=\"${this.defaultValue}\" min=\"${\r\n            this.minValue\r\n        }\" max=\"${this.maxValue}\" step=\"${this.stepSize}\">\r\n                </div>\r\n            </div>\r\n            <div class=\"desc\">\r\n                ${T.settings.labels[this.id].description}\r\n            </div>\r\n        </div>`;\r\n    }\r\n\r\n    bind(app, element, dialogs) {\r\n        this.app = app;\r\n        this.element = element;\r\n        this.dialogs = dialogs;\r\n\r\n        this.getRangeInputElement().addEventListener(\"input\", () => {\r\n            this.updateLabels();\r\n        });\r\n\r\n        this.getRangeInputElement().addEventListener(\"change\", () => {\r\n            this.modify();\r\n        });\r\n    }\r\n\r\n    syncValueToElement() {\r\n        const value = this.app.settings.getSetting(this.id);\r\n        this.setElementValue(value);\r\n    }\r\n\r\n    /**\r\n     * Sets the elements value to the given value\r\n     * @param {number} value\r\n     */\r\n    setElementValue(value) {\r\n        const rangeInput = this.getRangeInputElement();\r\n        const rangeLabel = this.element.querySelector(\"label\");\r\n        rangeInput.value = String(value);\r\n        rangeLabel.innerHTML = T.settings.rangeSliderPercentage.replace(\r\n            \"<amount>\",\r\n            String(Math.round(value * 100.0))\r\n        );\r\n    }\r\n\r\n    updateLabels() {\r\n        const value = Number(this.getRangeInputElement().value);\r\n        this.setElementValue(value);\r\n    }\r\n\r\n    /**\r\n     * @returns {HTMLInputElement}\r\n     */\r\n    getRangeInputElement() {\r\n        return this.element.querySelector(\"input.rangeInput\");\r\n    }\r\n\r\n    modify() {\r\n        const rangeInput = this.getRangeInputElement();\r\n        const newValue = Math.round(Number(rangeInput.value) * 100.0) / 100.0;\r\n        this.app.settings.updateSetting(this.id, newValue);\r\n        this.syncValueToElement();\r\n        console.log(\"SET\", newValue);\r\n        if (this.changeCb) {\r\n            this.changeCb(this.app, newValue);\r\n        }\r\n    }\r\n\r\n    validate(value) {\r\n        return typeof value === \"number\" && value >= this.minValue && value <= this.maxValue;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/profile/setting_types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3737,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/profile/setting_types.js",
    "static": true,
    "longname": "js/profile/setting_types.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/profile/setting_types.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3738,
    "kind": "class",
    "name": "BaseSetting",
    "memberof": "js/profile/setting_types.js",
    "static": true,
    "longname": "js/profile/setting_types.js~BaseSetting",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/profile/setting_types.js",
    "importStyle": "{BaseSetting}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3739,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function(app: Application,value: any):void"
        ],
        "spread": false,
        "optional": false,
        "name": "changeCb",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function(app: Application) : boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "enabledCb",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 3740,
    "kind": "member",
    "name": "id",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#id",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3741,
    "kind": "member",
    "name": "categoryId",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#categoryId",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3742,
    "kind": "member",
    "name": "changeCb",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#changeCb",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3743,
    "kind": "member",
    "name": "enabledCb",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#enabledCb",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3744,
    "kind": "member",
    "name": "app",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#app",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Application"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3745,
    "kind": "member",
    "name": "element",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#element",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3746,
    "kind": "member",
    "name": "dialogs",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#dialogs",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3747,
    "kind": "method",
    "name": "apply",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#apply",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3748,
    "kind": "method",
    "name": "bind",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#bind",
    "access": "public",
    "description": "Binds all parameters",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "dialogs",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3752,
    "kind": "method",
    "name": "getHtml",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#getHtml",
    "access": "public",
    "description": "Returns the HTML for this setting",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3753,
    "kind": "method",
    "name": "getIsAvailable",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#getIsAvailable",
    "access": "public",
    "description": "Returns whether this setting is enabled and available",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3754,
    "kind": "method",
    "name": "syncValueToElement",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#syncValueToElement",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3755,
    "kind": "method",
    "name": "modify",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#modify",
    "access": "public",
    "description": "Attempts to modify the setting",
    "lineNumber": 89,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3756,
    "kind": "method",
    "name": "showRestartRequiredDialog",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#showRestartRequiredDialog",
    "access": "public",
    "description": "Shows the dialog that a restart is required",
    "lineNumber": 96,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3757,
    "kind": "method",
    "name": "validate",
    "memberof": "js/profile/setting_types.js~BaseSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BaseSetting#validate",
    "access": "public",
    "description": "Validates the set value",
    "lineNumber": 112,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3758,
    "kind": "class",
    "name": "EnumSetting",
    "memberof": "js/profile/setting_types.js",
    "static": true,
    "longname": "js/profile/setting_types.js~EnumSetting",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/profile/setting_types.js",
    "importStyle": "{EnumSetting}",
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseSetting"
    ]
  },
  {
    "__docId__": 3759,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/profile/setting_types.js~EnumSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~EnumSetting#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true
  },
  {
    "__docId__": 3760,
    "kind": "member",
    "name": "options",
    "memberof": "js/profile/setting_types.js~EnumSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~EnumSetting#options",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3761,
    "kind": "member",
    "name": "valueGetter",
    "memberof": "js/profile/setting_types.js~EnumSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~EnumSetting#valueGetter",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3762,
    "kind": "member",
    "name": "textGetter",
    "memberof": "js/profile/setting_types.js~EnumSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~EnumSetting#textGetter",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3763,
    "kind": "member",
    "name": "descGetter",
    "memberof": "js/profile/setting_types.js~EnumSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~EnumSetting#descGetter",
    "access": "public",
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3764,
    "kind": "member",
    "name": "restartRequired",
    "memberof": "js/profile/setting_types.js~EnumSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~EnumSetting#restartRequired",
    "access": "public",
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3765,
    "kind": "member",
    "name": "iconPrefix",
    "memberof": "js/profile/setting_types.js~EnumSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~EnumSetting#iconPrefix",
    "access": "public",
    "description": null,
    "lineNumber": 140,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3766,
    "kind": "member",
    "name": "magicValue",
    "memberof": "js/profile/setting_types.js~EnumSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~EnumSetting#magicValue",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3767,
    "kind": "method",
    "name": "getHtml",
    "memberof": "js/profile/setting_types.js~EnumSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~EnumSetting#getHtml",
    "access": "public",
    "description": "",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3768,
    "kind": "method",
    "name": "validate",
    "memberof": "js/profile/setting_types.js~EnumSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~EnumSetting#validate",
    "access": "public",
    "description": null,
    "lineNumber": 162,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3769,
    "kind": "method",
    "name": "syncValueToElement",
    "memberof": "js/profile/setting_types.js~EnumSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~EnumSetting#syncValueToElement",
    "access": "public",
    "description": null,
    "lineNumber": 180,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3770,
    "kind": "method",
    "name": "modify",
    "memberof": "js/profile/setting_types.js~EnumSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~EnumSetting#modify",
    "access": "public",
    "description": null,
    "lineNumber": 192,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3771,
    "kind": "class",
    "name": "BoolSetting",
    "memberof": "js/profile/setting_types.js",
    "static": true,
    "longname": "js/profile/setting_types.js~BoolSetting",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/profile/setting_types.js",
    "importStyle": "{BoolSetting}",
    "description": null,
    "lineNumber": 217,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseSetting"
    ]
  },
  {
    "__docId__": 3772,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/profile/setting_types.js~BoolSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BoolSetting#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 218,
    "undocument": true
  },
  {
    "__docId__": 3773,
    "kind": "method",
    "name": "getHtml",
    "memberof": "js/profile/setting_types.js~BoolSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BoolSetting#getHtml",
    "access": "public",
    "description": "",
    "lineNumber": 225,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3774,
    "kind": "method",
    "name": "syncValueToElement",
    "memberof": "js/profile/setting_types.js~BoolSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BoolSetting#syncValueToElement",
    "access": "public",
    "description": null,
    "lineNumber": 243,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3775,
    "kind": "method",
    "name": "modify",
    "memberof": "js/profile/setting_types.js~BoolSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BoolSetting#modify",
    "access": "public",
    "description": null,
    "lineNumber": 248,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3776,
    "kind": "method",
    "name": "validate",
    "memberof": "js/profile/setting_types.js~BoolSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~BoolSetting#validate",
    "access": "public",
    "description": null,
    "lineNumber": 258,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3777,
    "kind": "class",
    "name": "RangeSetting",
    "memberof": "js/profile/setting_types.js",
    "static": true,
    "longname": "js/profile/setting_types.js~RangeSetting",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/profile/setting_types.js",
    "importStyle": "{RangeSetting}",
    "description": null,
    "lineNumber": 263,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseSetting"
    ]
  },
  {
    "__docId__": 3778,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 264,
    "undocument": true
  },
  {
    "__docId__": 3779,
    "kind": "member",
    "name": "defaultValue",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#defaultValue",
    "access": "public",
    "description": null,
    "lineNumber": 276,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3780,
    "kind": "member",
    "name": "minValue",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#minValue",
    "access": "public",
    "description": null,
    "lineNumber": 277,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3781,
    "kind": "member",
    "name": "maxValue",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#maxValue",
    "access": "public",
    "description": null,
    "lineNumber": 278,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3782,
    "kind": "member",
    "name": "stepSize",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#stepSize",
    "access": "public",
    "description": null,
    "lineNumber": 279,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3783,
    "kind": "method",
    "name": "getHtml",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#getHtml",
    "access": "public",
    "description": "",
    "lineNumber": 285,
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3784,
    "kind": "method",
    "name": "bind",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#bind",
    "access": "public",
    "description": null,
    "lineNumber": 306,
    "undocument": true,
    "params": [
      {
        "name": "app",
        "types": [
          "*"
        ]
      },
      {
        "name": "element",
        "types": [
          "*"
        ]
      },
      {
        "name": "dialogs",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3785,
    "kind": "member",
    "name": "app",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#app",
    "access": "public",
    "description": null,
    "lineNumber": 307,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3786,
    "kind": "member",
    "name": "element",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#element",
    "access": "public",
    "description": null,
    "lineNumber": 308,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3787,
    "kind": "member",
    "name": "dialogs",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#dialogs",
    "access": "public",
    "description": null,
    "lineNumber": 309,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3788,
    "kind": "method",
    "name": "syncValueToElement",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#syncValueToElement",
    "access": "public",
    "description": null,
    "lineNumber": 320,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3789,
    "kind": "method",
    "name": "setElementValue",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#setElementValue",
    "access": "public",
    "description": "Sets the elements value to the given value",
    "lineNumber": 329,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3790,
    "kind": "method",
    "name": "updateLabels",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#updateLabels",
    "access": "public",
    "description": null,
    "lineNumber": 339,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3791,
    "kind": "method",
    "name": "getRangeInputElement",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#getRangeInputElement",
    "access": "public",
    "description": "",
    "lineNumber": 347,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{HTMLInputElement}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLInputElement"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3792,
    "kind": "method",
    "name": "modify",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#modify",
    "access": "public",
    "description": null,
    "lineNumber": 351,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3793,
    "kind": "method",
    "name": "validate",
    "memberof": "js/profile/setting_types.js~RangeSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/profile/setting_types.js~RangeSetting#validate",
    "access": "public",
    "description": null,
    "lineNumber": 362,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3794,
    "kind": "file",
    "name": "js/savegame/savegame.js",
    "content": "import { ReadWriteProxy } from \"../core/read_write_proxy\";\r\nimport { ExplainedResult } from \"../core/explained_result\";\r\nimport { SavegameSerializer } from \"./savegame_serializer\";\r\nimport { BaseSavegameInterface } from \"./savegame_interface\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { getSavegameInterface, savegameInterfaces } from \"./savegame_interface_registry\";\r\nimport { SavegameInterface_V1001 } from \"./schemas/1001\";\r\nimport { SavegameInterface_V1002 } from \"./schemas/1002\";\r\nimport { SavegameInterface_V1003 } from \"./schemas/1003\";\r\nimport { SavegameInterface_V1004 } from \"./schemas/1004\";\r\nimport { SavegameInterface_V1005 } from \"./schemas/1005\";\r\nimport { SavegameInterface_V1006 } from \"./schemas/1006\";\r\nimport { SavegameInterface_V1007 } from \"./schemas/1007\";\r\nimport { SavegameInterface_ML01 } from \"./schemas/ML01\";\r\n\r\nconst logger = createLogger(\"savegame\");\r\n\r\nexport class Savegame extends ReadWriteProxy {\r\n    /**\r\n     *\r\n     * @param {import(\"../application\").Application} app\r\n     * @param {object} param0\r\n     * @param {string} param0.internalId\r\n     * @param {import(\"./savegame_typedefs\").SavegameMetadata} param0.metaDataRef Handle to the meta data\r\n     */\r\n    constructor(app, { internalId, metaDataRef }) {\r\n        super(app, \"savegame-\" + internalId + \".bin\");\r\n        this.internalId = internalId;\r\n        this.metaDataRef = metaDataRef;\r\n\r\n        /** @type {import(\"./savegame_typedefs\").SavegameData} */\r\n        this.currentData = this.getDefaultData();\r\n\r\n        assert(\r\n            savegameInterfaces[Savegame.getCurrentVersion()],\r\n            \"Savegame interface not defined: \" + Savegame.getCurrentVersion()\r\n        );\r\n    }\r\n\r\n    //////// RW Proxy Impl //////////\r\n\r\n    /**\r\n     * @returns {any}\r\n     */\r\n    static getCurrentVersion() {\r\n        return \"ML01\";\r\n    }\r\n\r\n    /**\r\n     * @returns {typeof BaseSavegameInterface}\r\n     */\r\n    static getReaderClass() {\r\n        return savegameInterfaces[Savegame.getCurrentVersion()];\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    getCurrentVersion() {\r\n        return /** @type {typeof Savegame} */ (this.constructor).getCurrentVersion();\r\n    }\r\n\r\n    /**\r\n     * Returns the savegames default data\r\n     * @returns {import(\"./savegame_typedefs\").SavegameData}\r\n     */\r\n    getDefaultData() {\r\n        return {\r\n            version: this.getCurrentVersion(),\r\n            dump: null,\r\n            stats: {},\r\n            lastUpdate: Date.now(),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Migrates the savegames data\r\n     * @param {import(\"./savegame_typedefs\").SavegameData} data\r\n     */\r\n    migrate(data) {\r\n        if (data.version < 1000) {\r\n            return ExplainedResult.bad(\"Can not migrate savegame, too old\");\r\n        }\r\n\r\n        if (data.version === 1000) {\r\n            SavegameInterface_V1001.migrate1000to1001(data);\r\n            data.version = 1001;\r\n        }\r\n\r\n        if (data.version === 1001) {\r\n            SavegameInterface_V1002.migrate1001to1002(data);\r\n            data.version = 1002;\r\n        }\r\n\r\n        if (data.version === 1002) {\r\n            SavegameInterface_V1003.migrate1002to1003(data);\r\n            data.version = 1003;\r\n        }\r\n\r\n        if (data.version === 1003) {\r\n            SavegameInterface_V1004.migrate1003to1004(data);\r\n            data.version = 1004;\r\n        }\r\n\r\n        if (data.version === 1004) {\r\n            SavegameInterface_V1005.migrate1004to1005(data);\r\n            data.version = 1005;\r\n        }\r\n\r\n        if (data.version === 1005) {\r\n            SavegameInterface_V1006.migrate1005to1006(data);\r\n            data.version = 1006;\r\n        }\r\n\r\n        if (data.version === 1006) {\r\n            SavegameInterface_V1007.migrate1006to1007(data);\r\n            data.version = 1007;\r\n        }\r\n\r\n        if (data.version === 1007) {\r\n            SavegameInterface_ML01.migrate1007toML01(data);\r\n            data.version = \"ML01\";\r\n        }\r\n\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    /**\r\n     * Verifies the savegames data\r\n     * @param {import(\"./savegame_typedefs\").SavegameData} data\r\n     */\r\n    verify(data) {\r\n        if (!data.dump) {\r\n            // Well, guess that works\r\n            return ExplainedResult.good();\r\n        }\r\n\r\n        if (!this.getDumpReaderForExternalData(data).validate()) {\r\n            return ExplainedResult.bad(\"dump-reader-failed-validation\");\r\n        }\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    //////// Subclasses interface  ////////\r\n\r\n    /**\r\n     * Returns if this game can be saved on disc\r\n     * @returns {boolean}\r\n     */\r\n    isSaveable() {\r\n            return true;\r\n        }\r\n        /**\r\n         * Returns the statistics of the savegame\r\n         * @returns {import(\"./savegame_typedefs\").SavegameStats}\r\n         */\r\n    getStatistics() {\r\n        return this.currentData.stats;\r\n    }\r\n\r\n    /**\r\n     * Returns the *real* last update of the savegame, not the one of the metadata\r\n     * which could also be the servers one\r\n     */\r\n    getRealLastUpdate() {\r\n        return this.currentData.lastUpdate;\r\n    }\r\n\r\n    /**\r\n     * Returns if this game has a serialized game dump\r\n     */\r\n    hasGameDump() {\r\n        return !!this.currentData.dump && this.currentData.dump.entities.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the current game dump\r\n     * @returns {import(\"./savegame_typedefs\").SerializedGame}\r\n     */\r\n    getCurrentDump() {\r\n        return this.currentData.dump;\r\n    }\r\n\r\n    /**\r\n     * Returns a reader to access the data\r\n     * @returns {BaseSavegameInterface}\r\n     */\r\n    getDumpReader() {\r\n        if (!this.currentData.dump) {\r\n            logger.warn(\"Getting reader on null-savegame dump\");\r\n        }\r\n\r\n        const cls = /** @type {typeof Savegame} */ (this.constructor).getReaderClass();\r\n        return new cls(this.currentData);\r\n    }\r\n\r\n    /**\r\n     * Returns a reader to access external data\r\n     * @returns {BaseSavegameInterface}\r\n     */\r\n    getDumpReaderForExternalData(data) {\r\n        assert(data.version, \"External data contains no version\");\r\n        return getSavegameInterface(data);\r\n    }\r\n\r\n    ///////// Public Interface ///////////\r\n\r\n    /**\r\n     * Updates the last update field so we can send the savegame to the server,\r\n     * WITHOUT Saving!\r\n     */\r\n    setLastUpdate(time) {\r\n        this.currentData.lastUpdate = time;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {import(\"../game/root\").GameRoot} root\r\n     */\r\n    updateData(root) {\r\n        // Construct a new serializer\r\n        const serializer = new SavegameSerializer();\r\n\r\n        // let timer = performance.now();\r\n        const dump = serializer.generateDumpFromGameRoot(root);\r\n        if (!dump) {\r\n            return false;\r\n        }\r\n\r\n        const shadowData = Object.assign({}, this.currentData);\r\n        shadowData.dump = dump;\r\n        shadowData.lastUpdate = new Date().getTime();\r\n        shadowData.version = this.getCurrentVersion();\r\n\r\n        const reader = this.getDumpReaderForExternalData(shadowData);\r\n\r\n        // Validate (not in prod though)\r\n        if (!G_IS_RELEASE) {\r\n            const validationResult = reader.validate();\r\n            if (!validationResult) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Save data\r\n        this.currentData = shadowData;\r\n    }\r\n\r\n    /**\r\n     * Writes the savegame as well as its metadata\r\n     */\r\n    writeSavegameAndMetadata() {\r\n        return this.writeAsync().then(() => this.saveMetadata());\r\n    }\r\n\r\n    /**\r\n     * Updates the savegames metadata\r\n     */\r\n    saveMetadata() {\r\n        this.metaDataRef.lastUpdate = new Date().getTime();\r\n        this.metaDataRef.version = this.getCurrentVersion();\r\n        if (!this.hasGameDump()) {\r\n            this.metaDataRef.level = 0;\r\n        } else {\r\n            this.metaDataRef.level = this.currentData.dump.hubGoals.level;\r\n        }\r\n\r\n        return this.app.savegameMgr.writeAsync();\r\n    }\r\n\r\n    /**\r\n     * @see ReadWriteProxy.writeAsync\r\n     * @returns {Promise<any>}\r\n     */\r\n    writeAsync() {\r\n        if (G_IS_DEV && globalConfig.debug.disableSavegameWrite) {\r\n            return Promise.resolve();\r\n        }\r\n        return super.writeAsync();\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/savegame.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3795,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/savegame.js",
    "static": true,
    "longname": "js/savegame/savegame.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3796,
    "kind": "class",
    "name": "Savegame",
    "memberof": "js/savegame/savegame.js",
    "static": true,
    "longname": "js/savegame/savegame.js~Savegame",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/savegame.js",
    "importStyle": "{Savegame}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/core/read_write_proxy.js~ReadWriteProxy"
    ]
  },
  {
    "__docId__": 3797,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../application\").Application"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.internalId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "import(\"./savegame_typedefs\").SavegameMetadata"
        ],
        "spread": false,
        "optional": false,
        "name": "param0.metaDataRef",
        "description": "Handle to the meta data"
      }
    ]
  },
  {
    "__docId__": 3798,
    "kind": "member",
    "name": "internalId",
    "memberof": "js/savegame/savegame.js~Savegame",
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#internalId",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3799,
    "kind": "member",
    "name": "metaDataRef",
    "memberof": "js/savegame/savegame.js~Savegame",
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#metaDataRef",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3800,
    "kind": "member",
    "name": "currentData",
    "memberof": "js/savegame/savegame.js~Savegame",
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#currentData",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "import(\"./savegame_typedefs\").SavegameData"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3801,
    "kind": "method",
    "name": "getCurrentVersion",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/savegame.js~Savegame.getCurrentVersion",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3802,
    "kind": "method",
    "name": "getReaderClass",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/savegame.js~Savegame.getReaderClass",
    "access": "public",
    "description": "",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{typeof BaseSavegameInterface}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "typeof BaseSavegameInterface"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3803,
    "kind": "method",
    "name": "getCurrentVersion",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#getCurrentVersion",
    "access": "public",
    "description": "",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3804,
    "kind": "method",
    "name": "getDefaultData",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#getDefaultData",
    "access": "public",
    "description": "Returns the savegames default data",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{import(\"./savegame_typedefs\").SavegameData}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "import(\"./savegame_typedefs\").SavegameData"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3805,
    "kind": "method",
    "name": "migrate",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#migrate",
    "access": "public",
    "description": "Migrates the savegames data",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"./savegame_typedefs\").SavegameData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3806,
    "kind": "method",
    "name": "verify",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#verify",
    "access": "public",
    "description": "Verifies the savegames data",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"./savegame_typedefs\").SavegameData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3807,
    "kind": "method",
    "name": "isSaveable",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#isSaveable",
    "access": "public",
    "description": "Returns if this game can be saved on disc",
    "lineNumber": 151,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3808,
    "kind": "method",
    "name": "getStatistics",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#getStatistics",
    "access": "public",
    "description": "Returns the statistics of the savegame",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{import(\"./savegame_typedefs\").SavegameStats}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "import(\"./savegame_typedefs\").SavegameStats"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3809,
    "kind": "method",
    "name": "getRealLastUpdate",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#getRealLastUpdate",
    "access": "public",
    "description": "Returns the *real* last update of the savegame, not the one of the metadata\nwhich could also be the servers one",
    "lineNumber": 166,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3810,
    "kind": "method",
    "name": "hasGameDump",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#hasGameDump",
    "access": "public",
    "description": "Returns if this game has a serialized game dump",
    "lineNumber": 173,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3811,
    "kind": "method",
    "name": "getCurrentDump",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#getCurrentDump",
    "access": "public",
    "description": "Returns the current game dump",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{import(\"./savegame_typedefs\").SerializedGame}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "import(\"./savegame_typedefs\").SerializedGame"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3812,
    "kind": "method",
    "name": "getDumpReader",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#getDumpReader",
    "access": "public",
    "description": "Returns a reader to access the data",
    "lineNumber": 189,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseSavegameInterface}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseSavegameInterface"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3813,
    "kind": "method",
    "name": "getDumpReaderForExternalData",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#getDumpReaderForExternalData",
    "access": "public",
    "description": "Returns a reader to access external data",
    "lineNumber": 202,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseSavegameInterface}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseSavegameInterface"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 3814,
    "kind": "method",
    "name": "setLastUpdate",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#setLastUpdate",
    "access": "public",
    "description": "Updates the last update field so we can send the savegame to the server,\nWITHOUT Saving!",
    "lineNumber": 213,
    "params": [
      {
        "name": "time",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 3815,
    "kind": "method",
    "name": "updateData",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#updateData",
    "access": "public",
    "description": "",
    "lineNumber": 221,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../game/root\").GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3817,
    "kind": "method",
    "name": "writeSavegameAndMetadata",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#writeSavegameAndMetadata",
    "access": "public",
    "description": "Writes the savegame as well as its metadata",
    "lineNumber": 253,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3818,
    "kind": "method",
    "name": "saveMetadata",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#saveMetadata",
    "access": "public",
    "description": "Updates the savegames metadata",
    "lineNumber": 260,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3819,
    "kind": "method",
    "name": "writeAsync",
    "memberof": "js/savegame/savegame.js~Savegame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame.js~Savegame#writeAsync",
    "access": "public",
    "description": "",
    "see": [
      "ReadWriteProxy.writeAsync"
    ],
    "lineNumber": 276,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<any>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<any>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3820,
    "kind": "file",
    "name": "js/savegame/savegame_compressor.js",
    "content": "const charmap =\r\n    \"!#%&'()*+,-./:;<=>?@[]^_`{|}~¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\nlet compressionCache = {};\r\nlet decompressionCache = {};\r\n\r\n/**\r\n * Compresses an integer into a tight string representation\r\n * @param {number} i\r\n * @returns {string}\r\n */\r\nfunction compressInt(i) {\r\n    // Zero value breaks\r\n    i += 1;\r\n\r\n    if (compressionCache[i]) {\r\n        return compressionCache[i];\r\n    }\r\n    let result = \"\";\r\n    do {\r\n        result += charmap[i % charmap.length];\r\n        i = Math.floor(i / charmap.length);\r\n    } while (i > 0);\r\n    return (compressionCache[i] = result);\r\n}\r\n\r\n/**\r\n * Decompresses an integer from its tight string representation\r\n * @param {string} s\r\n * @returns {number}\r\n */\r\nfunction decompressInt(s) {\r\n    if (decompressionCache[s]) {\r\n        return decompressionCache[s];\r\n    }\r\n    s = \"\" + s;\r\n    let result = 0;\r\n    for (let i = s.length - 1; i >= 0; --i) {\r\n        result = result * charmap.length + charmap.indexOf(s.charAt(i));\r\n    }\r\n    // Fixes zero value break fix from above\r\n    result -= 1;\r\n    return (decompressionCache[s] = result);\r\n}\r\n\r\n// Sanity\r\nif (G_IS_DEV) {\r\n    for (let i = 0; i < 10000; ++i) {\r\n        if (decompressInt(compressInt(i)) !== i) {\r\n            throw new Error(\r\n                \"Bad compression for: \" +\r\n                    i +\r\n                    \" compressed: \" +\r\n                    compressInt(i) +\r\n                    \" decompressed: \" +\r\n                    decompressInt(compressInt(i))\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @param {any} obj\r\n * @param {Map} keys\r\n * @param {Map} values\r\n * @returns {any[]|object|number|string}\r\n */\r\nfunction compressObjectInternal(obj, keys, values) {\r\n    if (Array.isArray(obj)) {\r\n        let result = [];\r\n        for (let i = 0; i < obj.length; ++i) {\r\n            result.push(compressObjectInternal(obj[i], keys, values));\r\n        }\r\n        return result;\r\n    } else if (typeof obj === \"object\" && obj !== null) {\r\n        let result = {};\r\n        for (const key in obj) {\r\n            let index = keys.get(key);\r\n            if (index === undefined) {\r\n                index = keys.size;\r\n                keys.set(key, index);\r\n            }\r\n            const value = obj[key];\r\n            result[compressInt(index)] = compressObjectInternal(value, keys, values);\r\n        }\r\n        return result;\r\n    } else if (typeof obj === \"string\") {\r\n        let index = values.get(obj);\r\n        if (index === undefined) {\r\n            index = values.size;\r\n            values.set(obj, index);\r\n        }\r\n        return compressInt(index);\r\n    }\r\n    return obj;\r\n}\r\n\r\n/**\r\n * @param {Map} hashMap\r\n * @returns {Array}\r\n */\r\nfunction indexMapToArray(hashMap) {\r\n    const result = new Array(hashMap.size);\r\n    hashMap.forEach((index, key) => {\r\n        result[index] = key;\r\n    });\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param {object} obj\r\n */\r\nexport function compressObject(obj) {\r\n    const keys = new Map();\r\n    const values = new Map();\r\n    const data = compressObjectInternal(obj, keys, values);\r\n    return {\r\n        keys: indexMapToArray(keys),\r\n        values: indexMapToArray(values),\r\n        data,\r\n    };\r\n}\r\n\r\n/**\r\n * @param {object} obj\r\n * @param {string[]} keys\r\n * @param {any[]} values\r\n * @returns {object}\r\n */\r\nfunction decompressObjectInternal(obj, keys = [], values = []) {\r\n    if (Array.isArray(obj)) {\r\n        let result = [];\r\n        for (let i = 0; i < obj.length; ++i) {\r\n            result.push(decompressObjectInternal(obj[i], keys, values));\r\n        }\r\n        return result;\r\n    } else if (typeof obj === \"object\" && obj !== null) {\r\n        let result = {};\r\n        for (const key in obj) {\r\n            const realIndex = decompressInt(key);\r\n            const value = obj[key];\r\n            result[keys[realIndex]] = decompressObjectInternal(value, keys, values);\r\n        }\r\n        return result;\r\n    } else if (typeof obj === \"string\") {\r\n        const realIndex = decompressInt(obj);\r\n        return values[realIndex];\r\n    }\r\n    return obj;\r\n}\r\n\r\n/**\r\n * @param {object} obj\r\n */\r\nexport function decompressObject(obj) {\r\n    if (obj.keys && obj.values && obj.data) {\r\n        const keys = obj.keys;\r\n        const values = obj.values;\r\n        const result = decompressObjectInternal(obj.data, keys, values);\r\n        return result;\r\n    }\r\n    return obj;\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/savegame_compressor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3821,
    "kind": "variable",
    "name": "charmap",
    "memberof": "js/savegame/savegame_compressor.js",
    "static": true,
    "longname": "js/savegame/savegame_compressor.js~charmap",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_compressor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3822,
    "kind": "variable",
    "name": "compressionCache",
    "memberof": "js/savegame/savegame_compressor.js",
    "static": true,
    "longname": "js/savegame/savegame_compressor.js~compressionCache",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_compressor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3823,
    "kind": "variable",
    "name": "decompressionCache",
    "memberof": "js/savegame/savegame_compressor.js",
    "static": true,
    "longname": "js/savegame/savegame_compressor.js~decompressionCache",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_compressor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3824,
    "kind": "function",
    "name": "compressInt",
    "memberof": "js/savegame/savegame_compressor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/savegame_compressor.js~compressInt",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_compressor.js",
    "importStyle": null,
    "description": "Compresses an integer into a tight string representation",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "i",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 3825,
    "kind": "function",
    "name": "decompressInt",
    "memberof": "js/savegame/savegame_compressor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/savegame_compressor.js~decompressInt",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_compressor.js",
    "importStyle": null,
    "description": "Decompresses an integer from its tight string representation",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 3826,
    "kind": "function",
    "name": "compressObjectInternal",
    "memberof": "js/savegame/savegame_compressor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/savegame_compressor.js~compressObjectInternal",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_compressor.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any[]|object|number|string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "keys",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any[]",
        "object",
        "number",
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 3827,
    "kind": "function",
    "name": "indexMapToArray",
    "memberof": "js/savegame/savegame_compressor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/savegame_compressor.js~indexMapToArray",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_compressor.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "hashMap",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 3828,
    "kind": "function",
    "name": "compressObject",
    "memberof": "js/savegame/savegame_compressor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/savegame_compressor.js~compressObject",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/savegame_compressor.js",
    "importStyle": "{compressObject}",
    "description": "",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"keys\": *, \"values\": *, \"data\": *}"
      ]
    }
  },
  {
    "__docId__": 3829,
    "kind": "function",
    "name": "decompressObjectInternal",
    "memberof": "js/savegame/savegame_compressor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/savegame_compressor.js~decompressObjectInternal",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_compressor.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "keys",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 3830,
    "kind": "function",
    "name": "decompressObject",
    "memberof": "js/savegame/savegame_compressor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/savegame_compressor.js~decompressObject",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/savegame_compressor.js",
    "importStyle": "{decompressObject}",
    "description": "",
    "lineNumber": 155,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3831,
    "kind": "file",
    "name": "js/savegame/savegame_interface.js",
    "content": "import { createLogger } from \"../core/logging\";\r\n\r\nconst Ajv = require(\"ajv\");\r\nconst ajv = new Ajv({\r\n    allErrors: false,\r\n    uniqueItems: false,\r\n    unicode: false,\r\n    nullable: false,\r\n});\r\n\r\nconst validators = {};\r\n\r\nconst logger = createLogger(\"savegame_interface\");\r\n\r\nexport class BaseSavegameInterface {\r\n    /**\r\n     * Returns the interfaces version\r\n     */\r\n    getVersion() {\r\n        throw new Error(\"Implement get version\");\r\n    }\r\n\r\n    /**\r\n     * Returns the uncached json schema\r\n     * @returns {object}\r\n     */\r\n    getSchemaUncached() {\r\n        throw new Error(\"Implement get schema\");\r\n    }\r\n\r\n    getValidator() {\r\n        const version = this.getVersion();\r\n        if (validators[version]) {\r\n            return validators[version];\r\n        }\r\n        logger.log(\"Compiling schema for savegame version\", version);\r\n        const schema = this.getSchemaUncached();\r\n        try {\r\n            validators[version] = ajv.compile(schema);\r\n        } catch (ex) {\r\n            logger.error(\"SCHEMA FOR\", this.getVersion(), \"IS INVALID!\");\r\n            logger.error(ex);\r\n            throw new Error(\"Invalid schema for version \" + version);\r\n        }\r\n        return validators[version];\r\n    }\r\n\r\n    /**\r\n     * Constructs an new interface for the given savegame\r\n     * @param {any} data\r\n     */\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    /**\r\n     * Validates the data\r\n     * @returns {boolean}\r\n     */\r\n    validate() {\r\n        const validator = this.getValidator();\r\n\r\n        if (!validator(this.data)) {\r\n            logger.error(\r\n                \"Savegame failed validation! ErrorText:\",\r\n                ajv.errorsText(validator.errors),\r\n                \"RawErrors:\",\r\n                validator.errors\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    ///// INTERFACE (Override when the schema changes) /////\r\n\r\n    /**\r\n     * Returns the time of last update\r\n     * @returns {number}\r\n     */\r\n    readLastUpdate() {\r\n        return this.data.lastUpdate;\r\n    }\r\n\r\n    /**\r\n     * Returns the ingame time in seconds\r\n     * @returns {number}\r\n     */\r\n    readIngameTimeSeconds() {\r\n        return this.data.dump.time.timeSeconds;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/savegame_interface.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3832,
    "kind": "variable",
    "name": "Ajv",
    "memberof": "js/savegame/savegame_interface.js",
    "static": true,
    "longname": "js/savegame/savegame_interface.js~Ajv",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_interface.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3833,
    "kind": "variable",
    "name": "ajv",
    "memberof": "js/savegame/savegame_interface.js",
    "static": true,
    "longname": "js/savegame/savegame_interface.js~ajv",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_interface.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3834,
    "kind": "variable",
    "name": "validators",
    "memberof": "js/savegame/savegame_interface.js",
    "static": true,
    "longname": "js/savegame/savegame_interface.js~validators",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_interface.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3835,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/savegame_interface.js",
    "static": true,
    "longname": "js/savegame/savegame_interface.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_interface.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3836,
    "kind": "class",
    "name": "BaseSavegameInterface",
    "memberof": "js/savegame/savegame_interface.js",
    "static": true,
    "longname": "js/savegame/savegame_interface.js~BaseSavegameInterface",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/savegame_interface.js",
    "importStyle": "{BaseSavegameInterface}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3837,
    "kind": "method",
    "name": "getVersion",
    "memberof": "js/savegame/savegame_interface.js~BaseSavegameInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_interface.js~BaseSavegameInterface#getVersion",
    "access": "public",
    "description": "Returns the interfaces version",
    "lineNumber": 19,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3838,
    "kind": "method",
    "name": "getSchemaUncached",
    "memberof": "js/savegame/savegame_interface.js~BaseSavegameInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_interface.js~BaseSavegameInterface#getSchemaUncached",
    "access": "public",
    "description": "Returns the uncached json schema",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3839,
    "kind": "method",
    "name": "getValidator",
    "memberof": "js/savegame/savegame_interface.js~BaseSavegameInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_interface.js~BaseSavegameInterface#getValidator",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3840,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/savegame_interface.js~BaseSavegameInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_interface.js~BaseSavegameInterface#constructor",
    "access": "public",
    "description": "Constructs an new interface for the given savegame",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 3841,
    "kind": "member",
    "name": "data",
    "memberof": "js/savegame/savegame_interface.js~BaseSavegameInterface",
    "static": false,
    "longname": "js/savegame/savegame_interface.js~BaseSavegameInterface#data",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3842,
    "kind": "method",
    "name": "validate",
    "memberof": "js/savegame/savegame_interface.js~BaseSavegameInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_interface.js~BaseSavegameInterface#validate",
    "access": "public",
    "description": "Validates the data",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3843,
    "kind": "method",
    "name": "readLastUpdate",
    "memberof": "js/savegame/savegame_interface.js~BaseSavegameInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_interface.js~BaseSavegameInterface#readLastUpdate",
    "access": "public",
    "description": "Returns the time of last update",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3844,
    "kind": "method",
    "name": "readIngameTimeSeconds",
    "memberof": "js/savegame/savegame_interface.js~BaseSavegameInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_interface.js~BaseSavegameInterface#readIngameTimeSeconds",
    "access": "public",
    "description": "Returns the ingame time in seconds",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3845,
    "kind": "file",
    "name": "js/savegame/savegame_interface_registry.js",
    "content": "import { BaseSavegameInterface } from \"./savegame_interface\";\r\nimport { SavegameInterface_V1000 } from \"./schemas/1000\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { SavegameInterface_V1001 } from \"./schemas/1001\";\r\nimport { SavegameInterface_V1002 } from \"./schemas/1002\";\r\nimport { SavegameInterface_V1003 } from \"./schemas/1003\";\r\nimport { SavegameInterface_V1004 } from \"./schemas/1004\";\r\nimport { SavegameInterface_V1005 } from \"./schemas/1005\";\r\nimport { SavegameInterface_V1006 } from \"./schemas/1006\";\r\nimport { SavegameInterface_V1007 } from \"./schemas/1007\";\r\nimport { SavegameInterface_ML01 } from \"./schemas/ML01\";\r\n\r\n/** @type {Object.<any, typeof BaseSavegameInterface>} */\r\nexport const savegameInterfaces = {\r\n    1000: SavegameInterface_V1000,\r\n    1001: SavegameInterface_V1001,\r\n    1002: SavegameInterface_V1002,\r\n    1003: SavegameInterface_V1003,\r\n    1004: SavegameInterface_V1004,\r\n    1005: SavegameInterface_V1005,\r\n    1006: SavegameInterface_V1006,\r\n    1007: SavegameInterface_V1007,\r\n    ML01: SavegameInterface_ML01,\r\n};\r\n\r\nconst logger = createLogger(\"savegame_interface_registry\");\r\n\r\n/**\r\n * Returns if the given savegame has any supported interface\r\n * @param {any} savegame\r\n * @returns {BaseSavegameInterface|null}\r\n */\r\nexport function getSavegameInterface(savegame) {\r\n    if (!savegame || !savegame.version) {\r\n        logger.warn(\"Savegame does not contain a valid version (undefined)\");\r\n        return null;\r\n    }\r\n    const version = savegame.version;\r\n    if (!savegameInterfaces[version]) {\r\n        logger.warn(\"Savegame does not contain a valid version:\", version);\r\n        return null;\r\n    }\r\n\r\n    const interfaceClass = savegameInterfaces[version];\r\n    if (!interfaceClass) {\r\n        logger.warn(\"Version\", version, \"has no implemented interface!\");\r\n        return null;\r\n    }\r\n\r\n    return new interfaceClass(savegame);\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/savegame_interface_registry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3846,
    "kind": "variable",
    "name": "savegameInterfaces",
    "memberof": "js/savegame/savegame_interface_registry.js",
    "static": true,
    "longname": "js/savegame/savegame_interface_registry.js~savegameInterfaces",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/savegame_interface_registry.js",
    "importStyle": "{savegameInterfaces}",
    "description": null,
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "Object.<any, typeof BaseSavegameInterface>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3847,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/savegame_interface_registry.js",
    "static": true,
    "longname": "js/savegame/savegame_interface_registry.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_interface_registry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3848,
    "kind": "function",
    "name": "getSavegameInterface",
    "memberof": "js/savegame/savegame_interface_registry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/savegame_interface_registry.js~getSavegameInterface",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/savegame_interface_registry.js",
    "importStyle": "{getSavegameInterface}",
    "description": "Returns if the given savegame has any supported interface",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BaseSavegameInterface|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "savegame",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseSavegameInterface",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3849,
    "kind": "file",
    "name": "js/savegame/savegame_manager.js",
    "content": "import { ExplainedResult } from \"../core/explained_result\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { ReadWriteProxy } from \"../core/read_write_proxy\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { Savegame } from \"./savegame\";\r\nconst logger = createLogger(\"savegame_manager\");\r\n\r\nconst Rusha = require(\"rusha\");\r\n\r\n/** @enum {string} */\r\nexport const enumLocalSavegameStatus = {\r\n    offline: \"offline\",\r\n    synced: \"synced\",\r\n};\r\n\r\nexport class SavegameManager extends ReadWriteProxy {\r\n    constructor(app) {\r\n        super(app, \"savegames.bin\");\r\n\r\n        this.currentData = this.getDefaultData();\r\n    }\r\n\r\n    // RW Proxy Impl\r\n    /**\r\n     * @returns {import(\"./savegame_typedefs\").SavegamesData}\r\n     */\r\n    getDefaultData() {\r\n        return {\r\n            version: this.getCurrentVersion(),\r\n            savegames: [],\r\n        };\r\n    }\r\n\r\n    getCurrentVersion() {\r\n        return 1002;\r\n    }\r\n\r\n    verify(data) {\r\n        // @TODO\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {import(\"./savegame_typedefs\").SavegamesData} data\r\n     */\r\n    migrate(data) {\r\n        if (data.version < 1001) {\r\n            data.savegames.forEach(savegame => {\r\n                savegame.level = 0;\r\n            });\r\n            data.version = 1001;\r\n        }\r\n\r\n        if (data.version < 1002) {\r\n            data.savegames.forEach(savegame => {\r\n                savegame.name = null;\r\n            });\r\n            data.version = 1002;\r\n        }\r\n\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    // End rw proxy\r\n\r\n    /**\r\n     * @returns {Array<import(\"./savegame_typedefs\").SavegameMetadata>}\r\n     */\r\n    getSavegamesMetaData() {\r\n        return this.currentData.savegames;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} internalId\r\n     * @returns {Savegame}\r\n     */\r\n    getSavegameById(internalId) {\r\n        const metadata = this.getGameMetaDataByInternalId(internalId);\r\n        if (!metadata) {\r\n            return null;\r\n        }\r\n        return new Savegame(this.app, { internalId, metaDataRef: metadata });\r\n    }\r\n\r\n    /**\r\n     * Returns if this manager has any savegame of a 1.1.19 version, which\r\n     * enables all levels\r\n     */\r\n    getHasAnyLegacySavegames() {\r\n        return this.currentData.savegames.some(savegame => savegame.version === 1005 || savegame.level > 14);\r\n    }\r\n\r\n    /**\r\n     * Deletes a savegame\r\n     * @param {import(\"./savegame_typedefs\").SavegameMetadata} game\r\n     */\r\n    deleteSavegame(game) {\r\n        const handle = new Savegame(this.app, {\r\n            internalId: game.internalId,\r\n            metaDataRef: game,\r\n        });\r\n\r\n        return handle.deleteAsync().then(() => {\r\n            for (let i = 0; i < this.currentData.savegames.length; ++i) {\r\n                const potentialGame = this.currentData.savegames[i];\r\n                if (potentialGame.internalId === handle.internalId) {\r\n                    this.currentData.savegames.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return this.writeAsync();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns a given games metadata by id\r\n     * @param {string} id\r\n     * @returns {import(\"./savegame_typedefs\").SavegameMetadata}\r\n     */\r\n    getGameMetaDataByInternalId(id) {\r\n        for (let i = 0; i < this.currentData.savegames.length; ++i) {\r\n            const data = this.currentData.savegames[i];\r\n            if (data.internalId === id) {\r\n                return data;\r\n            }\r\n        }\r\n        logger.error(\"Savegame internal id not found:\", id);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Creates a new savegame\r\n     * @returns {Savegame}\r\n     */\r\n    createNewSavegame() {\r\n        const id = this.generateInternalId();\r\n\r\n        const metaData = /** @type {import(\"./savegame_typedefs\").SavegameMetadata} */ ({\r\n            lastUpdate: Date.now(),\r\n            version: Savegame.getCurrentVersion(),\r\n            internalId: id,\r\n        });\r\n\r\n        this.currentData.savegames.push(metaData);\r\n\r\n        // Notice: This is async and happening in the background\r\n        this.updateAfterSavegamesChanged();\r\n\r\n        return new Savegame(this.app, {\r\n            internalId: id,\r\n            metaDataRef: metaData,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Attempts to import a savegame\r\n     * @param {object} data\r\n     */\r\n    importSavegame(data) {\r\n        const savegame = this.createNewSavegame();\r\n\r\n        // Track legacy savegames\r\n        const isOldSavegame = data.version < 1006;\r\n\r\n        const migrationResult = savegame.migrate(data);\r\n        if (migrationResult.isBad()) {\r\n            return Promise.reject(\"Failed to migrate: \" + migrationResult.reason);\r\n        }\r\n\r\n        savegame.currentData = data;\r\n        const verification = savegame.verify(data);\r\n        if (verification.isBad()) {\r\n            return Promise.reject(\"Verification failed: \" + verification.result);\r\n        }\r\n\r\n        return savegame\r\n            .writeSavegameAndMetadata()\r\n            .then(() => this.updateAfterSavegamesChanged())\r\n            .then(() => this.app.restrictionMgr.onHasLegacySavegamesChanged(isOldSavegame));\r\n    }\r\n\r\n    /**\r\n     * Hook after the savegames got changed\r\n     */\r\n    updateAfterSavegamesChanged() {\r\n        return this.sortSavegames()\r\n            .then(() => this.writeAsync())\r\n            .then(() => this.app.restrictionMgr.onHasLegacySavegamesChanged(this.getHasAnyLegacySavegames()));\r\n    }\r\n\r\n    /**\r\n     * Sorts all savegames by their creation time descending\r\n     * @returns {Promise<any>}\r\n     */\r\n    sortSavegames() {\r\n        this.currentData.savegames.sort((a, b) => b.lastUpdate - a.lastUpdate);\r\n        let promiseChain = Promise.resolve();\r\n        while (this.currentData.savegames.length > 30) {\r\n            const toRemove = this.currentData.savegames.pop();\r\n\r\n            // Try to remove the savegame since its no longer available\r\n            const game = new Savegame(this.app, {\r\n                internalId: toRemove.internalId,\r\n                metaDataRef: toRemove,\r\n            });\r\n            promiseChain = promiseChain\r\n                .then(() => game.deleteAsync())\r\n                .then(\r\n                    () => {},\r\n                    err => {\r\n                        logger.error(this, \"Failed to remove old savegame:\", toRemove, \":\", err);\r\n                    }\r\n                );\r\n        }\r\n\r\n        return promiseChain;\r\n    }\r\n\r\n    /**\r\n     * Helper method to generate a new internal savegame id\r\n     */\r\n    generateInternalId() {\r\n        return Rusha.createHash()\r\n            .update(Date.now() + \"/\" + Math.random())\r\n            .digest(\"hex\");\r\n    }\r\n\r\n    // End\r\n\r\n    initialize() {\r\n        // First read, then directly write to ensure we have the latest data\r\n        // @ts-ignore\r\n        return this.readAsync().then(() => {\r\n            if (G_IS_DEV && globalConfig.debug.disableSavegameWrite) {\r\n                return Promise.resolve();\r\n            }\r\n            return this.updateAfterSavegamesChanged();\r\n        });\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/savegame_manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3850,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/savegame_manager.js",
    "static": true,
    "longname": "js/savegame/savegame_manager.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3851,
    "kind": "variable",
    "name": "Rusha",
    "memberof": "js/savegame/savegame_manager.js",
    "static": true,
    "longname": "js/savegame/savegame_manager.js~Rusha",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3852,
    "kind": "variable",
    "name": "enumLocalSavegameStatus",
    "memberof": "js/savegame/savegame_manager.js",
    "static": true,
    "longname": "js/savegame/savegame_manager.js~enumLocalSavegameStatus",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/savegame_manager.js",
    "importStyle": "{enumLocalSavegameStatus}",
    "description": null,
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{string}"
      }
    ],
    "type": {
      "types": [
        "{\"offline\": string, \"synced\": string}"
      ]
    }
  },
  {
    "__docId__": 3853,
    "kind": "class",
    "name": "SavegameManager",
    "memberof": "js/savegame/savegame_manager.js",
    "static": true,
    "longname": "js/savegame/savegame_manager.js~SavegameManager",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/savegame_manager.js",
    "importStyle": "{SavegameManager}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/core/read_write_proxy.js~ReadWriteProxy"
    ]
  },
  {
    "__docId__": 3854,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 3855,
    "kind": "member",
    "name": "currentData",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#currentData",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3856,
    "kind": "method",
    "name": "getDefaultData",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#getDefaultData",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{import(\"./savegame_typedefs\").SavegamesData}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "import(\"./savegame_typedefs\").SavegamesData"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3857,
    "kind": "method",
    "name": "getCurrentVersion",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#getCurrentVersion",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3858,
    "kind": "method",
    "name": "verify",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#verify",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3859,
    "kind": "method",
    "name": "migrate",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#migrate",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"./savegame_typedefs\").SavegamesData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3860,
    "kind": "method",
    "name": "getSavegamesMetaData",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#getSavegamesMetaData",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<import(\"./savegame_typedefs\").SavegameMetadata>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<import(\"./savegame_typedefs\").SavegameMetadata>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3861,
    "kind": "method",
    "name": "getSavegameById",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#getSavegameById",
    "access": "public",
    "description": "",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Savegame}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "internalId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Savegame"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3862,
    "kind": "method",
    "name": "getHasAnyLegacySavegames",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#getHasAnyLegacySavegames",
    "access": "public",
    "description": "Returns if this manager has any savegame of a 1.1.19 version, which\nenables all levels",
    "lineNumber": 91,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3863,
    "kind": "method",
    "name": "deleteSavegame",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#deleteSavegame",
    "access": "public",
    "description": "Deletes a savegame",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"./savegame_typedefs\").SavegameMetadata"
        ],
        "spread": false,
        "optional": false,
        "name": "game",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3864,
    "kind": "method",
    "name": "getGameMetaDataByInternalId",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#getGameMetaDataByInternalId",
    "access": "public",
    "description": "Returns a given games metadata by id",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{import(\"./savegame_typedefs\").SavegameMetadata}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "import(\"./savegame_typedefs\").SavegameMetadata"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3865,
    "kind": "method",
    "name": "createNewSavegame",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#createNewSavegame",
    "access": "public",
    "description": "Creates a new savegame",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Savegame}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Savegame"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3866,
    "kind": "method",
    "name": "importSavegame",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#importSavegame",
    "access": "public",
    "description": "Attempts to import a savegame",
    "lineNumber": 162,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3867,
    "kind": "method",
    "name": "updateAfterSavegamesChanged",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#updateAfterSavegamesChanged",
    "access": "public",
    "description": "Hook after the savegames got changed",
    "lineNumber": 188,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3868,
    "kind": "method",
    "name": "sortSavegames",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#sortSavegames",
    "access": "public",
    "description": "Sorts all savegames by their creation time descending",
    "lineNumber": 198,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<any>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<any>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3869,
    "kind": "method",
    "name": "generateInternalId",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#generateInternalId",
    "access": "public",
    "description": "Helper method to generate a new internal savegame id",
    "lineNumber": 225,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3870,
    "kind": "method",
    "name": "initialize",
    "memberof": "js/savegame/savegame_manager.js~SavegameManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_manager.js~SavegameManager#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 233,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3871,
    "kind": "file",
    "name": "js/savegame/savegame_serializer.js",
    "content": "import { ExplainedResult } from \"../core/explained_result\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { gComponentRegistry } from \"../core/global_registries\";\r\nimport { SerializerInternal } from \"./serializer_internal\";\r\n\r\nconst logger = createLogger(\"savegame_serializer\");\r\n\r\n/**\r\n * Serializes a savegame\r\n */\r\nexport class SavegameSerializer {\r\n    constructor() {\r\n        this.internal = new SerializerInternal();\r\n    }\r\n\r\n    /**\r\n     * Serializes the game root into a dump\r\n     * @param {import(\"../game/root\").GameRoot} root\r\n     * @param {boolean=} sanityChecks Whether to check for validity\r\n     * @returns {object}\r\n     */\r\n    generateDumpFromGameRoot(root, sanityChecks = true) {\r\n        /** @type {import(\"../savegame/savegame_typedefs\").SerializedGame} */\r\n        const data = {\r\n            camera: root.camera.serialize(),\r\n            time: root.time.serialize(),\r\n            map: root.map.serialize(),\r\n            entityMgr: root.entityMgr.serialize(),\r\n            hubGoals: root.hubGoals.serialize(),\r\n            pinnedShapes: root.hud.parts.pinnedShapes.serialize(),\r\n            waypoints: root.hud.parts.waypoints.serialize(),\r\n            entities: this.internal.serializeEntityArray(root.entityMgr.entities),\r\n            beltPaths: root.systemMgr.systems.belt.serializePaths(),\r\n        };\r\n\r\n        if (G_IS_DEV) {\r\n            if (sanityChecks) {\r\n                // Sanity check\r\n                const sanity = this.verifyLogicalErrors(data);\r\n                if (!sanity.result) {\r\n                    logger.error(\"Created invalid savegame:\", sanity.reason, \"savegame:\", data);\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Verifies if there are logical errors in the savegame\r\n     * @param {import(\"../savegame/savegame_typedefs\").SerializedGame} savegame\r\n     * @returns {ExplainedResult}\r\n     */\r\n    verifyLogicalErrors(savegame) {\r\n        if (!savegame.entities) {\r\n            return ExplainedResult.bad(\"Savegame has no entities\");\r\n        }\r\n\r\n        const seenUids = new Set();\r\n\r\n        // Check for duplicate UIDS\r\n        for (let i = 0; i < savegame.entities.length; ++i) {\r\n            /** @type {import(\"../game/entity\").Entity} */\r\n            const entity = savegame.entities[i];\r\n\r\n            const uid = entity.uid;\r\n            if (!Number.isInteger(uid)) {\r\n                return ExplainedResult.bad(\"Entity has invalid uid: \" + uid);\r\n            }\r\n            if (seenUids.has(uid)) {\r\n                return ExplainedResult.bad(\"Duplicate uid \" + uid);\r\n            }\r\n            seenUids.add(uid);\r\n\r\n            // Verify components\r\n            if (!entity.components) {\r\n                return ExplainedResult.bad(\"Entity is missing key 'components': \" + JSON.stringify(entity));\r\n            }\r\n\r\n            const components = entity.components;\r\n            for (const componentId in components) {\r\n                var componentClass;\r\n                // Check component id is known\r\n                try {\r\n                    componentClass = gComponentRegistry.findById(componentId);\r\n                } catch (error) {\r\n                    return ExplainedResult.bad(\r\n                        JSON.stringify({\r\n                            type: \"component\",\r\n                            status: \"missing\",\r\n                            id: componentId,\r\n                        })\r\n                    );\r\n                }\r\n\r\n                // Verify component data\r\n                const componentData = components[componentId];\r\n                const componentVerifyError = /** @type {import(\"../game/component\").StaticComponent} */ (componentClass).verify(\r\n                    componentData\r\n                );\r\n\r\n                // Check component data is ok\r\n                if (componentVerifyError) {\r\n                    return ExplainedResult.bad(\r\n                        \"Component \" + componentId + \" has invalid data: \" + componentVerifyError\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    /**\r\n     * Tries to load the savegame from a given dump\r\n     * @param {import(\"../savegame/savegame_typedefs\").SerializedGame} savegame\r\n     * @param {import(\"../game/root\").GameRoot} root\r\n     * @returns {ExplainedResult}\r\n     */\r\n    deserialize(savegame, root) {\r\n        // Sanity\r\n        const verifyResult = this.verifyLogicalErrors(savegame);\r\n        if (!verifyResult.result) {\r\n            return ExplainedResult.bad(verifyResult.reason);\r\n        }\r\n        let errorReason = null;\r\n\r\n        errorReason = errorReason || root.entityMgr.deserialize(savegame.entityMgr);\r\n        errorReason = errorReason || root.time.deserialize(savegame.time);\r\n        errorReason = errorReason || root.camera.deserialize(savegame.camera);\r\n        errorReason = errorReason || root.map.deserialize(savegame.map);\r\n        errorReason = errorReason || root.hubGoals.deserialize(savegame.hubGoals, root);\r\n        errorReason = errorReason || root.hud.parts.pinnedShapes.deserialize(savegame.pinnedShapes);\r\n        errorReason = errorReason || root.hud.parts.waypoints.deserialize(savegame.waypoints);\r\n        errorReason = errorReason || this.internal.deserializeEntityArray(root, savegame.entities);\r\n        errorReason = errorReason || root.systemMgr.systems.belt.deserializePaths(savegame.beltPaths);\r\n\r\n        // Check for errors\r\n        if (errorReason) {\r\n            return ExplainedResult.bad(errorReason);\r\n        }\r\n\r\n        return ExplainedResult.good();\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/savegame_serializer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3872,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/savegame_serializer.js",
    "static": true,
    "longname": "js/savegame/savegame_serializer.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/savegame_serializer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3873,
    "kind": "class",
    "name": "SavegameSerializer",
    "memberof": "js/savegame/savegame_serializer.js",
    "static": true,
    "longname": "js/savegame/savegame_serializer.js~SavegameSerializer",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/savegame_serializer.js",
    "importStyle": "{SavegameSerializer}",
    "description": "Serializes a savegame",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 3874,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/savegame_serializer.js~SavegameSerializer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_serializer.js~SavegameSerializer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 3875,
    "kind": "member",
    "name": "internal",
    "memberof": "js/savegame/savegame_serializer.js~SavegameSerializer",
    "static": false,
    "longname": "js/savegame/savegame_serializer.js~SavegameSerializer#internal",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3876,
    "kind": "method",
    "name": "generateDumpFromGameRoot",
    "memberof": "js/savegame/savegame_serializer.js~SavegameSerializer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_serializer.js~SavegameSerializer#generateDumpFromGameRoot",
    "access": "public",
    "description": "Serializes the game root into a dump",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../game/root\").GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "sanityChecks",
        "description": "Whether to check for validity"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3877,
    "kind": "method",
    "name": "verifyLogicalErrors",
    "memberof": "js/savegame/savegame_serializer.js~SavegameSerializer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_serializer.js~SavegameSerializer#verifyLogicalErrors",
    "access": "public",
    "description": "Verifies if there are logical errors in the savegame",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ExplainedResult}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../savegame/savegame_typedefs\").SerializedGame"
        ],
        "spread": false,
        "optional": false,
        "name": "savegame",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ExplainedResult"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3878,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/savegame_serializer.js~SavegameSerializer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/savegame_serializer.js~SavegameSerializer#deserialize",
    "access": "public",
    "description": "Tries to load the savegame from a given dump",
    "lineNumber": 120,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ExplainedResult}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../savegame/savegame_typedefs\").SerializedGame"
        ],
        "spread": false,
        "optional": false,
        "name": "savegame",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "import(\"../game/root\").GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ExplainedResult"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3879,
    "kind": "file",
    "name": "js/savegame/savegame_typedefs.js",
    "content": "/**\r\n * @typedef {{}} SavegameStats\r\n *\r\n * @typedef {{\r\n *   camera: any,\r\n *   time: any,\r\n *   entityMgr: any,\r\n *   map: any,\r\n *   hubGoals: any,\r\n *   pinnedShapes: any,\r\n *   waypoints: any,\r\n *   entities: Array<import(\"../game/entity\").Entity>,\r\n *   beltPaths: Array<any>\r\n * }} SerializedGame\r\n *\r\n * @typedef {{\r\n *   version: any,\r\n *   dump: SerializedGame,\r\n *   stats: SavegameStats,\r\n *   lastUpdate: number,\r\n * }} SavegameData\r\n *\r\n * @typedef {{\r\n *   lastUpdate: number,\r\n *   version: number,\r\n *   internalId: string,\r\n *   level: number\r\n *   name: string|null\r\n * }} SavegameMetadata\r\n *\r\n * @typedef {{\r\n *   version: number,\r\n *   savegames: Array<SavegameMetadata>\r\n * }} SavegamesData\r\n */\r\n\r\nexport default {};",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/savegame_typedefs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3880,
    "kind": "typedef",
    "name": "SavegamesData",
    "memberof": "js/savegame/savegame_typedefs.js",
    "static": true,
    "longname": "js/savegame/savegame_typedefs.js~SavegamesData",
    "access": "public",
    "description": "",
    "lineNumber": 37,
    "type": {
      "types": [
        "{\n  version: number,\n  savegames: Array<SavegameMetadata>\n}"
      ],
      "optional": false,
      "name": "SavegamesData"
    }
  },
  {
    "__docId__": 3881,
    "kind": "file",
    "name": "js/savegame/schemas/1000.js",
    "content": "import { BaseSavegameInterface } from \"../savegame_interface.js\";\r\n\r\nconst schema = require(\"./1000.json\");\r\n\r\nexport class SavegameInterface_V1000 extends BaseSavegameInterface {\r\n    getVersion() {\r\n        return 1000;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/schemas/1000.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3882,
    "kind": "variable",
    "name": "schema",
    "memberof": "js/savegame/schemas/1000.js",
    "static": true,
    "longname": "js/savegame/schemas/1000.js~schema",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1000.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3883,
    "kind": "class",
    "name": "SavegameInterface_V1000",
    "memberof": "js/savegame/schemas/1000.js",
    "static": true,
    "longname": "js/savegame/schemas/1000.js~SavegameInterface_V1000",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/schemas/1000.js",
    "importStyle": "{SavegameInterface_V1000}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/savegame_interface.js~BaseSavegameInterface"
    ]
  },
  {
    "__docId__": 3884,
    "kind": "method",
    "name": "getVersion",
    "memberof": "js/savegame/schemas/1000.js~SavegameInterface_V1000",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1000.js~SavegameInterface_V1000#getVersion",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3885,
    "kind": "method",
    "name": "getSchemaUncached",
    "memberof": "js/savegame/schemas/1000.js~SavegameInterface_V1000",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1000.js~SavegameInterface_V1000#getSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3886,
    "kind": "file",
    "name": "js/savegame/schemas/1001.js",
    "content": "import { SavegameInterface_V1000 } from \"./1000.js\";\r\nimport { createLogger } from \"../../core/logging.js\";\r\nimport { T } from \"../../translations.js\";\r\nimport { TypeVector, TypeNumber, TypeString, TypeNullable } from \"../serialization_data_types.js\";\r\n\r\nconst schema = require(\"./1001.json\");\r\n\r\nconst logger = createLogger(\"savegame_interface/1001\");\r\n\r\nexport class SavegameInterface_V1001 extends SavegameInterface_V1000 {\r\n    getVersion() {\r\n        return 1001;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../savegame_typedefs.js\").SavegameData} data\r\n     */\r\n    static migrate1000to1001(data) {\r\n        logger.log(\"Migrating 1000 to 1001\");\r\n        const dump = data.dump;\r\n        if (!dump) {\r\n            return true;\r\n        }\r\n\r\n        dump.pinnedShapes = {\r\n            shapes: [],\r\n        };\r\n        dump.waypoints = {\r\n            waypoints: [\r\n                {\r\n                    label: T.ingame.waypoints.hub,\r\n                    center: { x: 0, y: 0 },\r\n                    zoomLevel: 3,\r\n                    deletable: false,\r\n                },\r\n            ],\r\n        };\r\n\r\n        const entities = dump.entities;\r\n        for (let i = 0; i < entities.length; ++i) {\r\n            const entity = entities[i];\r\n\r\n            /**\r\n             * @typedef {{\r\n             *   origin: TypeVector,\r\n             *   tileSize: TypeVector,\r\n             *   rotation: TypeNumber,\r\n             *   originalRotation: TypeNumber,\r\n             *   spriteKey?: string,\r\n             *   blueprintSpriteKey: string,\r\n             *   silhouetteColor: string\r\n             * }} OldStaticMapEntity\r\n             */\r\n\r\n            // Here we mock the old type of the StaticMapEntity before the change to using\r\n            // a building ID based system (see building_codes.js) to stop the linter from\r\n            // complaining that the type doesn't have the properties.\r\n            // The ignored error is the error that the types do not overlap.  In the case\r\n            // of a v1000 save though, the data will match the mocked type above.\r\n            /** @type OldStaticMapEntity **/\r\n            // @ts-ignore\r\n            const staticComp = entity.components.StaticMapEntity;\r\n            const beltComp = entity.components.Belt;\r\n            if (staticComp) {\r\n                if (staticComp.spriteKey) {\r\n                    staticComp.blueprintSpriteKey = staticComp.spriteKey.replace(\r\n                        \"sprites/buildings\",\r\n                        \"sprites/blueprints\"\r\n                    );\r\n                } else {\r\n                    if (entity.components.Hub) {\r\n                        staticComp.blueprintSpriteKey = \"\";\r\n                    } else if (beltComp) {\r\n                        const direction = beltComp.direction;\r\n                        staticComp.blueprintSpriteKey = \"sprites/blueprints/belt_\" + direction + \".png\";\r\n                    } else {\r\n                        assertAlways(false, \"Could not deduct entity type for migrating 1000 -> 1001\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/schemas/1001.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3887,
    "kind": "variable",
    "name": "schema",
    "memberof": "js/savegame/schemas/1001.js",
    "static": true,
    "longname": "js/savegame/schemas/1001.js~schema",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1001.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3888,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/schemas/1001.js",
    "static": true,
    "longname": "js/savegame/schemas/1001.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1001.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3889,
    "kind": "class",
    "name": "SavegameInterface_V1001",
    "memberof": "js/savegame/schemas/1001.js",
    "static": true,
    "longname": "js/savegame/schemas/1001.js~SavegameInterface_V1001",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/schemas/1001.js",
    "importStyle": "{SavegameInterface_V1001}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/schemas/1000.js~SavegameInterface_V1000"
    ]
  },
  {
    "__docId__": 3890,
    "kind": "method",
    "name": "getVersion",
    "memberof": "js/savegame/schemas/1001.js~SavegameInterface_V1001",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1001.js~SavegameInterface_V1001#getVersion",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3891,
    "kind": "method",
    "name": "getSchemaUncached",
    "memberof": "js/savegame/schemas/1001.js~SavegameInterface_V1001",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1001.js~SavegameInterface_V1001#getSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3892,
    "kind": "method",
    "name": "migrate1000to1001",
    "memberof": "js/savegame/schemas/1001.js~SavegameInterface_V1001",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/schemas/1001.js~SavegameInterface_V1001.migrate1000to1001",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../savegame_typedefs.js\").SavegameData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3893,
    "kind": "typedef",
    "name": "OldStaticMapEntity",
    "memberof": "js/savegame/schemas/1001.js~SavegameInterface_V1001",
    "static": true,
    "longname": "js/savegame/schemas/1001.js~SavegameInterface_V1001.OldStaticMapEntity",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "{\n  origin: TypeVector,\n  tileSize: TypeVector,\n  rotation: TypeNumber,\n  originalRotation: TypeNumber,\n  spriteKey?: string,\n  blueprintSpriteKey: string,\n  silhouetteColor: string\n}"
      ],
      "optional": false,
      "name": "OldStaticMapEntity"
    }
  },
  {
    "__docId__": 3894,
    "kind": "file",
    "name": "js/savegame/schemas/1002.js",
    "content": "import { createLogger } from \"../../core/logging.js\";\r\nimport { T } from \"../../translations.js\";\r\nimport { SavegameInterface_V1001 } from \"./1001.js\";\r\n\r\nconst schema = require(\"./1002.json\");\r\nconst logger = createLogger(\"savegame_interface/1002\");\r\n\r\nexport class SavegameInterface_V1002 extends SavegameInterface_V1001 {\r\n    getVersion() {\r\n        return 1002;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../savegame_typedefs.js\").SavegameData} data\r\n     */\r\n    static migrate1001to1002(data) {\r\n        logger.log(\"Migrating 1001 to 1002\");\r\n        const dump = data.dump;\r\n        if (!dump) {\r\n            return true;\r\n        }\r\n\r\n        const entities = dump.entities;\r\n        for (let i = 0; i < entities.length; ++i) {\r\n            const entity = entities[i];\r\n            const beltComp = entity.components.Belt;\r\n            const ejectorComp = entity.components.ItemEjector;\r\n\r\n            if (beltComp && ejectorComp) {\r\n                // @ts-ignore\r\n                ejectorComp.instantEject = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/schemas/1002.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3895,
    "kind": "variable",
    "name": "schema",
    "memberof": "js/savegame/schemas/1002.js",
    "static": true,
    "longname": "js/savegame/schemas/1002.js~schema",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1002.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3896,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/schemas/1002.js",
    "static": true,
    "longname": "js/savegame/schemas/1002.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1002.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3897,
    "kind": "class",
    "name": "SavegameInterface_V1002",
    "memberof": "js/savegame/schemas/1002.js",
    "static": true,
    "longname": "js/savegame/schemas/1002.js~SavegameInterface_V1002",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/schemas/1002.js",
    "importStyle": "{SavegameInterface_V1002}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/schemas/1001.js~SavegameInterface_V1001"
    ]
  },
  {
    "__docId__": 3898,
    "kind": "method",
    "name": "getVersion",
    "memberof": "js/savegame/schemas/1002.js~SavegameInterface_V1002",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1002.js~SavegameInterface_V1002#getVersion",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3899,
    "kind": "method",
    "name": "getSchemaUncached",
    "memberof": "js/savegame/schemas/1002.js~SavegameInterface_V1002",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1002.js~SavegameInterface_V1002#getSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3900,
    "kind": "method",
    "name": "migrate1001to1002",
    "memberof": "js/savegame/schemas/1002.js~SavegameInterface_V1002",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/schemas/1002.js~SavegameInterface_V1002.migrate1001to1002",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../savegame_typedefs.js\").SavegameData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3901,
    "kind": "file",
    "name": "js/savegame/schemas/1003.js",
    "content": "import { createLogger } from \"../../core/logging.js\";\r\nimport { SavegameInterface_V1002 } from \"./1002.js\";\r\n\r\nconst schema = require(\"./1003.json\");\r\nconst logger = createLogger(\"savegame_interface/1003\");\r\n\r\nexport class SavegameInterface_V1003 extends SavegameInterface_V1002 {\r\n    getVersion() {\r\n        return 1003;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../savegame_typedefs.js\").SavegameData} data\r\n     */\r\n    static migrate1002to1003(data) {\r\n        logger.log(\"Migrating 1002 to 1003\");\r\n        const dump = data.dump;\r\n        if (!dump) {\r\n            return true;\r\n        }\r\n\r\n        dump.pinnedShapes = { shapes: [] };\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/schemas/1003.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3902,
    "kind": "variable",
    "name": "schema",
    "memberof": "js/savegame/schemas/1003.js",
    "static": true,
    "longname": "js/savegame/schemas/1003.js~schema",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1003.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3903,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/schemas/1003.js",
    "static": true,
    "longname": "js/savegame/schemas/1003.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1003.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3904,
    "kind": "class",
    "name": "SavegameInterface_V1003",
    "memberof": "js/savegame/schemas/1003.js",
    "static": true,
    "longname": "js/savegame/schemas/1003.js~SavegameInterface_V1003",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/schemas/1003.js",
    "importStyle": "{SavegameInterface_V1003}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/schemas/1002.js~SavegameInterface_V1002"
    ]
  },
  {
    "__docId__": 3905,
    "kind": "method",
    "name": "getVersion",
    "memberof": "js/savegame/schemas/1003.js~SavegameInterface_V1003",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1003.js~SavegameInterface_V1003#getVersion",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3906,
    "kind": "method",
    "name": "getSchemaUncached",
    "memberof": "js/savegame/schemas/1003.js~SavegameInterface_V1003",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1003.js~SavegameInterface_V1003#getSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3907,
    "kind": "method",
    "name": "migrate1002to1003",
    "memberof": "js/savegame/schemas/1003.js~SavegameInterface_V1003",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/schemas/1003.js~SavegameInterface_V1003.migrate1002to1003",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../savegame_typedefs.js\").SavegameData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3908,
    "kind": "file",
    "name": "js/savegame/schemas/1004.js",
    "content": "import { createLogger } from \"../../core/logging.js\";\r\nimport { SavegameInterface_V1003 } from \"./1003.js\";\r\n\r\nconst schema = require(\"./1004.json\");\r\nconst logger = createLogger(\"savegame_interface/1004\");\r\n\r\nexport class SavegameInterface_V1004 extends SavegameInterface_V1003 {\r\n    getVersion() {\r\n        return 1004;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../savegame_typedefs.js\").SavegameData} data\r\n     */\r\n    static migrate1003to1004(data) {\r\n        logger.log(\"Migrating 1003 to 1004\");\r\n        const dump = data.dump;\r\n        if (!dump) {\r\n            return true;\r\n        }\r\n\r\n        // The hub simply has an empty label\r\n        const waypointData = dump.waypoints.waypoints;\r\n        for (let i = 0; i < waypointData.length; ++i) {\r\n            const waypoint = waypointData[i];\r\n            if (!waypoint.deletable) {\r\n                waypoint.label = null;\r\n            }\r\n            delete waypoint.deletable;\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/schemas/1004.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3909,
    "kind": "variable",
    "name": "schema",
    "memberof": "js/savegame/schemas/1004.js",
    "static": true,
    "longname": "js/savegame/schemas/1004.js~schema",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1004.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3910,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/schemas/1004.js",
    "static": true,
    "longname": "js/savegame/schemas/1004.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1004.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3911,
    "kind": "class",
    "name": "SavegameInterface_V1004",
    "memberof": "js/savegame/schemas/1004.js",
    "static": true,
    "longname": "js/savegame/schemas/1004.js~SavegameInterface_V1004",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/schemas/1004.js",
    "importStyle": "{SavegameInterface_V1004}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/schemas/1003.js~SavegameInterface_V1003"
    ]
  },
  {
    "__docId__": 3912,
    "kind": "method",
    "name": "getVersion",
    "memberof": "js/savegame/schemas/1004.js~SavegameInterface_V1004",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1004.js~SavegameInterface_V1004#getVersion",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3913,
    "kind": "method",
    "name": "getSchemaUncached",
    "memberof": "js/savegame/schemas/1004.js~SavegameInterface_V1004",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1004.js~SavegameInterface_V1004#getSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3914,
    "kind": "method",
    "name": "migrate1003to1004",
    "memberof": "js/savegame/schemas/1004.js~SavegameInterface_V1004",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/schemas/1004.js~SavegameInterface_V1004.migrate1003to1004",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../savegame_typedefs.js\").SavegameData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3915,
    "kind": "file",
    "name": "js/savegame/schemas/1005.js",
    "content": "import { createLogger } from \"../../core/logging.js\";\r\nimport { SavegameInterface_V1004 } from \"./1004.js\";\r\n\r\nconst schema = require(\"./1005.json\");\r\nconst logger = createLogger(\"savegame_interface/1005\");\r\n\r\nexport class SavegameInterface_V1005 extends SavegameInterface_V1004 {\r\n    getVersion() {\r\n        return 1005;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../savegame_typedefs.js\").SavegameData} data\r\n     */\r\n    static migrate1004to1005(data) {\r\n        logger.log(\"Migrating 1004 to 1005\");\r\n        const dump = data.dump;\r\n        if (!dump) {\r\n            return true;\r\n        }\r\n\r\n        // just reset belt paths for now\r\n        dump.beltPaths = [];\r\n\r\n        const entities = dump.entities;\r\n\r\n        // clear ejector slots\r\n        for (let i = 0; i < entities.length; ++i) {\r\n            const entity = entities[i];\r\n            const itemEjector = entity.components.ItemEjector;\r\n            if (itemEjector) {\r\n                const slots = itemEjector.slots;\r\n                for (let k = 0; k < slots.length; ++k) {\r\n                    const slot = slots[k];\r\n                    slot.item = null;\r\n                    slot.progress = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/schemas/1005.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3916,
    "kind": "variable",
    "name": "schema",
    "memberof": "js/savegame/schemas/1005.js",
    "static": true,
    "longname": "js/savegame/schemas/1005.js~schema",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1005.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3917,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/schemas/1005.js",
    "static": true,
    "longname": "js/savegame/schemas/1005.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1005.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3918,
    "kind": "class",
    "name": "SavegameInterface_V1005",
    "memberof": "js/savegame/schemas/1005.js",
    "static": true,
    "longname": "js/savegame/schemas/1005.js~SavegameInterface_V1005",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/schemas/1005.js",
    "importStyle": "{SavegameInterface_V1005}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/schemas/1004.js~SavegameInterface_V1004"
    ]
  },
  {
    "__docId__": 3919,
    "kind": "method",
    "name": "getVersion",
    "memberof": "js/savegame/schemas/1005.js~SavegameInterface_V1005",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1005.js~SavegameInterface_V1005#getVersion",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3920,
    "kind": "method",
    "name": "getSchemaUncached",
    "memberof": "js/savegame/schemas/1005.js~SavegameInterface_V1005",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1005.js~SavegameInterface_V1005#getSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3921,
    "kind": "method",
    "name": "migrate1004to1005",
    "memberof": "js/savegame/schemas/1005.js~SavegameInterface_V1005",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/schemas/1005.js~SavegameInterface_V1005.migrate1004to1005",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../savegame_typedefs.js\").SavegameData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3922,
    "kind": "file",
    "name": "js/savegame/schemas/1006.js",
    "content": "import { gMetaBuildingRegistry } from \"../../core/global_registries.js\";\r\nimport { createLogger } from \"../../core/logging.js\";\r\nimport { MetaBalancerBuilding } from \"../../game/buildings/balancer.js\";\r\nimport { MetaBeltBuilding } from \"../../game/buildings/belt.js\";\r\nimport { MetaCutterBuilding } from \"../../game/buildings/cutter.js\";\r\nimport { MetaHubBuilding } from \"../../game/buildings/hub.js\";\r\nimport { MetaMinerBuilding } from \"../../game/buildings/miner.js\";\r\nimport { MetaMixerBuilding } from \"../../game/buildings/mixer.js\";\r\nimport { MetaPainterBuilding } from \"../../game/buildings/painter.js\";\r\nimport { MetaRotaterBuilding } from \"../../game/buildings/rotater.js\";\r\nimport { MetaStackerBuilding } from \"../../game/buildings/stacker.js\";\r\nimport { MetaStorageBuilding } from \"../../game/buildings/storage.js\";\r\nimport { MetaTrashBuilding } from \"../../game/buildings/trash.js\";\r\nimport { MetaUndergroundBeltBuilding } from \"../../game/buildings/underground_belt.js\";\r\nimport { getCodeFromBuildingData } from \"../../game/building_codes.js\";\r\nimport { StaticMapEntityComponent } from \"../../game/components/static_map_entity.js\";\r\nimport { Entity } from \"../../game/entity.js\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../../game/meta_building.js\";\r\nimport { SavegameInterface_V1005 } from \"./1005.js\";\r\n\r\nconst schema = require(\"./1006.json\");\r\nconst logger = createLogger(\"savegame_interface/1006\");\r\n\r\n/**\r\n *\r\n * @param {typeof MetaBuilding} metaBuilding\r\n * @param {string=} variant\r\n * @param {number=} rotationVariant\r\n */\r\nfunction findCode(metaBuilding, variant = defaultBuildingVariant, rotationVariant = 0) {\r\n    return getCodeFromBuildingData(gMetaBuildingRegistry.findByClass(metaBuilding), variant, rotationVariant);\r\n}\r\n\r\n/**\r\n * Rebalances a value from the old balancing to the new one\r\n * @param {number} value\r\n * @returns {number}\r\n */\r\nfunction rebalance(value) {\r\n    return Math.round(Math.pow(value, 0.75));\r\n}\r\n\r\nexport class SavegameInterface_V1006 extends SavegameInterface_V1005 {\r\n    getVersion() {\r\n        return 1006;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n\r\n    static computeSpriteMapping() {\r\n        return {\r\n            // Belt\r\n            \"sprites/blueprints/belt_top.png\": findCode(MetaBeltBuilding, defaultBuildingVariant, 0),\r\n            \"sprites/blueprints/belt_left.png\": findCode(MetaBeltBuilding, defaultBuildingVariant, 1),\r\n            \"sprites/blueprints/belt_right.png\": findCode(MetaBeltBuilding, defaultBuildingVariant, 2),\r\n\r\n            // Splitter (=Balancer)\r\n            \"sprites/blueprints/splitter.png\": findCode(MetaBalancerBuilding),\r\n            \"sprites/blueprints/splitter-compact.png\": findCode(\r\n                MetaBalancerBuilding,\r\n                MetaBalancerBuilding.variants.merger\r\n            ),\r\n            \"sprites/blueprints/splitter-compact-inverse.png\": findCode(\r\n                MetaBalancerBuilding,\r\n                MetaBalancerBuilding.variants.mergerInverse\r\n            ),\r\n\r\n            // Underground belt\r\n            \"sprites/blueprints/underground_belt_entry.png\": findCode(\r\n                MetaUndergroundBeltBuilding,\r\n                defaultBuildingVariant,\r\n                0\r\n            ),\r\n            \"sprites/blueprints/underground_belt_exit.png\": findCode(\r\n                MetaUndergroundBeltBuilding,\r\n                defaultBuildingVariant,\r\n                1\r\n            ),\r\n\r\n            \"sprites/blueprints/underground_belt_entry-tier2.png\": findCode(\r\n                MetaUndergroundBeltBuilding,\r\n                MetaUndergroundBeltBuilding.variants.tier2,\r\n                0\r\n            ),\r\n            \"sprites/blueprints/underground_belt_exit-tier2.png\": findCode(\r\n                MetaUndergroundBeltBuilding,\r\n                MetaUndergroundBeltBuilding.variants.tier2,\r\n                1\r\n            ),\r\n\r\n            // Miner\r\n            \"sprites/blueprints/miner.png\": findCode(MetaMinerBuilding),\r\n            \"sprites/blueprints/miner-chainable.png\": findCode(\r\n                MetaMinerBuilding,\r\n                MetaMinerBuilding.variants.chainable,\r\n                0\r\n            ),\r\n\r\n            // Cutter\r\n            \"sprites/blueprints/cutter.png\": findCode(MetaCutterBuilding),\r\n            \"sprites/blueprints/cutter-quad.png\": findCode(\r\n                MetaCutterBuilding,\r\n                MetaCutterBuilding.variants.quad\r\n            ),\r\n\r\n            // Rotater\r\n            \"sprites/blueprints/rotater.png\": findCode(MetaRotaterBuilding),\r\n            \"sprites/blueprints/rotater-ccw.png\": findCode(\r\n                MetaRotaterBuilding,\r\n                MetaRotaterBuilding.variants.ccw\r\n            ),\r\n\r\n            // Stacker\r\n            \"sprites/blueprints/stacker.png\": findCode(MetaStackerBuilding),\r\n\r\n            // Mixer\r\n            \"sprites/blueprints/mixer.png\": findCode(MetaMixerBuilding),\r\n\r\n            // Painter\r\n            \"sprites/blueprints/painter.png\": findCode(MetaPainterBuilding),\r\n            \"sprites/blueprints/painter-mirrored.png\": findCode(\r\n                MetaPainterBuilding,\r\n                MetaPainterBuilding.variants.mirrored\r\n            ),\r\n            \"sprites/blueprints/painter-double.png\": findCode(\r\n                MetaPainterBuilding,\r\n                MetaPainterBuilding.variants.double\r\n            ),\r\n            \"sprites/blueprints/painter-quad.png\": findCode(\r\n                MetaPainterBuilding,\r\n                MetaPainterBuilding.variants.quad\r\n            ),\r\n\r\n            // Trash\r\n            \"sprites/blueprints/trash.png\": findCode(MetaTrashBuilding),\r\n\r\n            // Storage\r\n            \"sprites/blueprints/trash-storage.png\": findCode(MetaStorageBuilding),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../savegame_typedefs.js\").SavegameData} data\r\n     */\r\n    static migrate1005to1006(data) {\r\n        logger.log(\"Migrating 1005 to 1006\");\r\n        const dump = data.dump;\r\n        if (!dump) {\r\n            return true;\r\n        }\r\n\r\n        // Reduce stored shapes\r\n        const stored = dump.hubGoals.storedShapes;\r\n        for (const shapeKey in stored) {\r\n            stored[shapeKey] = rebalance(stored[shapeKey]);\r\n        }\r\n\r\n        // Reset final game shape\r\n        stored[\"RuCw--Cw:----Ru--\"] = 0;\r\n\r\n        // Reduce goals\r\n        if (dump.hubGoals.currentGoal) {\r\n            dump.hubGoals.currentGoal.required = rebalance(dump.hubGoals.currentGoal.required);\r\n        }\r\n\r\n        let level = Math.min(19, dump.hubGoals.level);\r\n\r\n        const levelMapping = {\r\n            14: 15,\r\n            15: 16,\r\n            16: 17,\r\n            17: 18,\r\n            18: 19,\r\n            19: 20,\r\n        };\r\n\r\n        dump.hubGoals.level = levelMapping[level] || level;\r\n\r\n        // Update entities\r\n        const entities = dump.entities;\r\n        for (let i = 0; i < entities.length; ++i) {\r\n            const entity = entities[i];\r\n            const components = entity.components;\r\n            this.migrateStaticComp1005to1006(entity);\r\n\r\n            // HUB\r\n            if (components.Hub) {\r\n                // @ts-ignore\r\n                components.Hub = {};\r\n            }\r\n\r\n            // Item Processor\r\n            if (components.ItemProcessor) {\r\n                // @ts-ignore\r\n                components.ItemProcessor = {\r\n                    nextOutputSlot: 0,\r\n                };\r\n            }\r\n\r\n            // OLD: Unremovable component\r\n            // @ts-ignore\r\n            if (components.Unremovable) {\r\n                // @ts-ignore\r\n                delete components.Unremovable;\r\n            }\r\n\r\n            // OLD: ReplaceableMapEntity\r\n            // @ts-ignore\r\n            if (components.ReplaceableMapEntity) {\r\n                // @ts-ignore\r\n                delete components.ReplaceableMapEntity;\r\n            }\r\n\r\n            // ItemAcceptor\r\n            if (components.ItemAcceptor) {\r\n                // @ts-ignore\r\n                components.ItemAcceptor = {};\r\n            }\r\n\r\n            // Belt\r\n            if (components.Belt) {\r\n                // @ts-ignore\r\n                components.Belt = {};\r\n            }\r\n\r\n            // Item Ejector\r\n            if (components.ItemEjector) {\r\n                // @ts-ignore\r\n                components.ItemEjector = {\r\n                    slots: [],\r\n                };\r\n            }\r\n\r\n            // UndergroundBelt\r\n            if (components.UndergroundBelt) {\r\n                // @ts-ignore\r\n                components.UndergroundBelt = {\r\n                    pendingItems: [],\r\n                };\r\n            }\r\n\r\n            // Miner\r\n            if (components.Miner) {\r\n                // @ts-ignore\r\n                delete components.Miner.chainable;\r\n\r\n                components.Miner.lastMiningTime = 0;\r\n                components.Miner.itemChainBuffer = [];\r\n            }\r\n\r\n            // Storage\r\n            if (components.Storage) {\r\n                // @ts-ignore\r\n                components.Storage = {\r\n                    storedCount: rebalance(components.Storage.storedCount),\r\n                    storedItem: null,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    static migrateStaticComp1005to1006(entity) {\r\n        const spriteMapping = this.computeSpriteMapping();\r\n        const staticComp = entity.components.StaticMapEntity;\r\n\r\n        /** @type {StaticMapEntityComponent} */\r\n        const newStaticComp = {};\r\n        newStaticComp.origin = staticComp.origin;\r\n        newStaticComp.originalRotation = staticComp.originalRotation;\r\n        newStaticComp.rotation = staticComp.rotation;\r\n\r\n        // @ts-ignore\r\n        newStaticComp.code = spriteMapping[staticComp.blueprintSpriteKey];\r\n\r\n        // Hub special case\r\n        if (entity.components.Hub) {\r\n            newStaticComp.code = findCode(MetaHubBuilding);\r\n        }\r\n\r\n        // Belt special case\r\n        if (entity.components.Belt) {\r\n            const actualCode = {\r\n                top: findCode(MetaBeltBuilding, defaultBuildingVariant, 0),\r\n                left: findCode(MetaBeltBuilding, defaultBuildingVariant, 1),\r\n                right: findCode(MetaBeltBuilding, defaultBuildingVariant, 2),\r\n            }[entity.components.Belt.direction];\r\n            if (actualCode !== newStaticComp.code) {\r\n                if (G_IS_DEV) {\r\n                    console.warn(\"Belt mismatch\");\r\n                }\r\n                newStaticComp.code = actualCode;\r\n            }\r\n        }\r\n\r\n        if (!newStaticComp.code) {\r\n            throw new Error(\r\n                // @ts-ignore\r\n                \"1006 Migration: Could not reconstruct code for \" + staticComp.blueprintSpriteKey\r\n            );\r\n        }\r\n\r\n        entity.components.StaticMapEntity = newStaticComp;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/schemas/1006.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3923,
    "kind": "variable",
    "name": "schema",
    "memberof": "js/savegame/schemas/1006.js",
    "static": true,
    "longname": "js/savegame/schemas/1006.js~schema",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1006.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3924,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/schemas/1006.js",
    "static": true,
    "longname": "js/savegame/schemas/1006.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1006.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3925,
    "kind": "function",
    "name": "findCode",
    "memberof": "js/savegame/schemas/1006.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/schemas/1006.js~findCode",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1006.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "typeof MetaBuilding"
        ],
        "spread": false,
        "optional": false,
        "name": "metaBuilding",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string="
        ],
        "spread": false,
        "optional": false,
        "name": "variant",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number="
        ],
        "spread": false,
        "optional": false,
        "name": "rotationVariant",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3926,
    "kind": "function",
    "name": "rebalance",
    "memberof": "js/savegame/schemas/1006.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/schemas/1006.js~rebalance",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1006.js",
    "importStyle": null,
    "description": "Rebalances a value from the old balancing to the new one",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 3927,
    "kind": "class",
    "name": "SavegameInterface_V1006",
    "memberof": "js/savegame/schemas/1006.js",
    "static": true,
    "longname": "js/savegame/schemas/1006.js~SavegameInterface_V1006",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/schemas/1006.js",
    "importStyle": "{SavegameInterface_V1006}",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/schemas/1005.js~SavegameInterface_V1005"
    ]
  },
  {
    "__docId__": 3928,
    "kind": "method",
    "name": "getVersion",
    "memberof": "js/savegame/schemas/1006.js~SavegameInterface_V1006",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1006.js~SavegameInterface_V1006#getVersion",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3929,
    "kind": "method",
    "name": "getSchemaUncached",
    "memberof": "js/savegame/schemas/1006.js~SavegameInterface_V1006",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1006.js~SavegameInterface_V1006#getSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3930,
    "kind": "method",
    "name": "computeSpriteMapping",
    "memberof": "js/savegame/schemas/1006.js~SavegameInterface_V1006",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/schemas/1006.js~SavegameInterface_V1006.computeSpriteMapping",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"sprites/blueprints/belt_top.png\": *, \"sprites/blueprints/belt_left.png\": *, \"sprites/blueprints/belt_right.png\": *, \"sprites/blueprints/splitter.png\": *, \"sprites/blueprints/splitter-compact.png\": *, \"sprites/blueprints/splitter-compact-inverse.png\": *, \"sprites/blueprints/underground_belt_entry.png\": *, \"sprites/blueprints/underground_belt_exit.png\": *, \"sprites/blueprints/underground_belt_entry-tier2.png\": *, \"sprites/blueprints/underground_belt_exit-tier2.png\": *, \"sprites/blueprints/miner.png\": *, \"sprites/blueprints/miner-chainable.png\": *, \"sprites/blueprints/cutter.png\": *, \"sprites/blueprints/cutter-quad.png\": *, \"sprites/blueprints/rotater.png\": *, \"sprites/blueprints/rotater-ccw.png\": *, \"sprites/blueprints/stacker.png\": *, \"sprites/blueprints/mixer.png\": *, \"sprites/blueprints/painter.png\": *, \"sprites/blueprints/painter-mirrored.png\": *, \"sprites/blueprints/painter-double.png\": *, \"sprites/blueprints/painter-quad.png\": *, \"sprites/blueprints/trash.png\": *, \"sprites/blueprints/trash-storage.png\": *}"
      ]
    }
  },
  {
    "__docId__": 3931,
    "kind": "method",
    "name": "migrate1005to1006",
    "memberof": "js/savegame/schemas/1006.js~SavegameInterface_V1006",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/schemas/1006.js~SavegameInterface_V1006.migrate1005to1006",
    "access": "public",
    "description": "",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../savegame_typedefs.js\").SavegameData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3932,
    "kind": "method",
    "name": "migrateStaticComp1005to1006",
    "memberof": "js/savegame/schemas/1006.js~SavegameInterface_V1006",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/schemas/1006.js~SavegameInterface_V1006.migrateStaticComp1005to1006",
    "access": "public",
    "description": "",
    "lineNumber": 268,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 3933,
    "kind": "file",
    "name": "js/savegame/schemas/1007.js",
    "content": "import { createLogger } from \"../../core/logging.js\";\r\nimport { SavegameInterface_V1006 } from \"./1006.js\";\r\n\r\nconst schema = require(\"./1007.json\");\r\nconst logger = createLogger(\"savegame_interface/1007\");\r\n\r\nexport class SavegameInterface_V1007 extends SavegameInterface_V1006 {\r\n    getVersion() {\r\n        return 1007;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../savegame_typedefs.js\").SavegameData} data\r\n     */\r\n    static migrate1006to1007(data) {\r\n        logger.log(\"Migrating 1006 to 1007\");\r\n        const dump = data.dump;\r\n        if (!dump) {\r\n            return true;\r\n        }\r\n\r\n        const waypoints = dump.waypoints.waypoints;\r\n\r\n        // set waypoint layer to \"regular\"\r\n        for (let i = 0; i < waypoints.length; ++i) {\r\n            const waypoint = waypoints[i];\r\n            waypoint.layer = \"regular\";\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/schemas/1007.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3934,
    "kind": "variable",
    "name": "schema",
    "memberof": "js/savegame/schemas/1007.js",
    "static": true,
    "longname": "js/savegame/schemas/1007.js~schema",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1007.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3935,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/schemas/1007.js",
    "static": true,
    "longname": "js/savegame/schemas/1007.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/1007.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3936,
    "kind": "class",
    "name": "SavegameInterface_V1007",
    "memberof": "js/savegame/schemas/1007.js",
    "static": true,
    "longname": "js/savegame/schemas/1007.js~SavegameInterface_V1007",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/schemas/1007.js",
    "importStyle": "{SavegameInterface_V1007}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/schemas/1006.js~SavegameInterface_V1006"
    ]
  },
  {
    "__docId__": 3937,
    "kind": "method",
    "name": "getVersion",
    "memberof": "js/savegame/schemas/1007.js~SavegameInterface_V1007",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1007.js~SavegameInterface_V1007#getVersion",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 3938,
    "kind": "method",
    "name": "getSchemaUncached",
    "memberof": "js/savegame/schemas/1007.js~SavegameInterface_V1007",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/1007.js~SavegameInterface_V1007#getSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3939,
    "kind": "method",
    "name": "migrate1006to1007",
    "memberof": "js/savegame/schemas/1007.js~SavegameInterface_V1007",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/schemas/1007.js~SavegameInterface_V1007.migrate1006to1007",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../savegame_typedefs.js\").SavegameData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3940,
    "kind": "file",
    "name": "js/savegame/schemas/ML01.js",
    "content": "import { createLogger } from \"../../core/logging.js\";\r\nimport { MetaAnalyzerBuilding } from \"../../game/buildings/analyzer.js\";\r\nimport { MetaBalancerBuilding } from \"../../game/buildings/balancer.js\";\r\nimport { MetaBeltBuilding } from \"../../game/buildings/belt.js\";\r\nimport { MetaComparatorBuilding } from \"../../game/buildings/comparator.js\";\r\nimport { MetaConstantSignalBuilding } from \"../../game/buildings/constant_signal.js\";\r\nimport { MetaCutterBuilding } from \"../../game/buildings/cutter.js\";\r\nimport { MetaDisplayBuilding } from \"../../game/buildings/display.js\";\r\nimport { MetaFilterBuilding } from \"../../game/buildings/filter.js\";\r\nimport { MetaHubBuilding } from \"../../game/buildings/hub.js\";\r\nimport { MetaItemProducerBuilding } from \"../../game/buildings/item_producer.js\";\r\nimport { MetaLeverBuilding } from \"../../game/buildings/lever.js\";\r\nimport { MetaLogicGateBuilding } from \"../../game/buildings/logic_gate.js\";\r\nimport { MetaMinerBuilding } from \"../../game/buildings/miner.js\";\r\nimport { MetaMixerBuilding } from \"../../game/buildings/mixer.js\";\r\nimport { MetaPainterBuilding } from \"../../game/buildings/painter.js\";\r\nimport { MetaReaderBuilding } from \"../../game/buildings/reader.js\";\r\nimport { MetaRotaterBuilding } from \"../../game/buildings/rotater.js\";\r\nimport { MetaStackerBuilding } from \"../../game/buildings/stacker.js\";\r\nimport { MetaStorageBuilding } from \"../../game/buildings/storage.js\";\r\nimport { MetaTransistorBuilding } from \"../../game/buildings/transistor.js\";\r\nimport { MetaTrashBuilding } from \"../../game/buildings/trash.js\";\r\nimport { MetaUndergroundBeltBuilding } from \"../../game/buildings/underground_belt.js\";\r\nimport { MetaVirtualProcessorBuilding } from \"../../game/buildings/virtual_processor.js\";\r\nimport { MetaWireBuilding } from \"../../game/buildings/wire.js\";\r\nimport { MetaWireTunnelBuilding } from \"../../game/buildings/wire_tunnel.js\";\r\nimport { getCodeFromBuildingData } from \"../../game/building_codes.js\";\r\nimport { defaultBuildingVariant } from \"../../game/meta_building.js\";\r\nimport { SavegameInterface_V1007 } from \"./1007.js\";\r\n\r\nconst schema = require(\"./ML01.json\");\r\nconst logger = createLogger(\"savegame_interface/modloader\");\r\n\r\nexport const codes = {\r\n    // Belt\r\n    1: getCodeFromBuildingData(new MetaBeltBuilding(), defaultBuildingVariant),\r\n    2: getCodeFromBuildingData(new MetaBeltBuilding(), defaultBuildingVariant, 1),\r\n    3: getCodeFromBuildingData(new MetaBeltBuilding(), defaultBuildingVariant, 2),\r\n\r\n    // Balancer\r\n    4: getCodeFromBuildingData(new MetaBalancerBuilding(), defaultBuildingVariant),\r\n    5: getCodeFromBuildingData(new MetaBalancerBuilding(), MetaBalancerBuilding.variants.merger),\r\n    6: getCodeFromBuildingData(new MetaBalancerBuilding(), MetaBalancerBuilding.variants.mergerInverse),\r\n    47: getCodeFromBuildingData(new MetaBalancerBuilding(), MetaBalancerBuilding.variants.splitter),\r\n    48: getCodeFromBuildingData(new MetaBalancerBuilding(), MetaBalancerBuilding.variants.splitterInverse),\r\n\r\n    // Miner\r\n    7: getCodeFromBuildingData(new MetaMinerBuilding(), defaultBuildingVariant),\r\n    8: getCodeFromBuildingData(new MetaMinerBuilding(), MetaMinerBuilding.variants.chainable),\r\n\r\n    // Cutter\r\n    9: getCodeFromBuildingData(new MetaCutterBuilding(), defaultBuildingVariant),\r\n    10: getCodeFromBuildingData(new MetaCutterBuilding(), MetaCutterBuilding.variants.quad),\r\n\r\n    // Rotater\r\n    11: getCodeFromBuildingData(new MetaRotaterBuilding(), defaultBuildingVariant),\r\n    12: getCodeFromBuildingData(new MetaRotaterBuilding(), MetaRotaterBuilding.variants.ccw),\r\n    13: getCodeFromBuildingData(new MetaRotaterBuilding(), MetaRotaterBuilding.variants.rotate180),\r\n\r\n    // Stacker\r\n    14: getCodeFromBuildingData(new MetaStackerBuilding(), defaultBuildingVariant),\r\n\r\n    // Mixer\r\n    15: getCodeFromBuildingData(new MetaMixerBuilding(), defaultBuildingVariant),\r\n\r\n    // Painter\r\n    16: getCodeFromBuildingData(new MetaPainterBuilding(), defaultBuildingVariant),\r\n    17: getCodeFromBuildingData(new MetaPainterBuilding(), MetaPainterBuilding.variants.mirrored),\r\n    18: getCodeFromBuildingData(new MetaPainterBuilding(), MetaPainterBuilding.variants.double),\r\n    19: getCodeFromBuildingData(new MetaPainterBuilding(), MetaPainterBuilding.variants.quad),\r\n\r\n    // Trash\r\n    20: getCodeFromBuildingData(new MetaTrashBuilding(), defaultBuildingVariant),\r\n\r\n    // Storage\r\n    21: getCodeFromBuildingData(new MetaStorageBuilding(), defaultBuildingVariant),\r\n\r\n    // Underground belt\r\n    22: getCodeFromBuildingData(new MetaUndergroundBeltBuilding(), defaultBuildingVariant),\r\n    23: getCodeFromBuildingData(new MetaUndergroundBeltBuilding(), defaultBuildingVariant, 1),\r\n    24: getCodeFromBuildingData(\r\n        new MetaUndergroundBeltBuilding(),\r\n        MetaUndergroundBeltBuilding.variants.tier2\r\n    ),\r\n    25: getCodeFromBuildingData(\r\n        new MetaUndergroundBeltBuilding(),\r\n        MetaUndergroundBeltBuilding.variants.tier2,\r\n        1\r\n    ),\r\n\r\n    // Hub\r\n    26: getCodeFromBuildingData(new MetaHubBuilding(), defaultBuildingVariant),\r\n\r\n    // Wire\r\n    27: getCodeFromBuildingData(new MetaWireBuilding(), defaultBuildingVariant),\r\n    28: getCodeFromBuildingData(new MetaWireBuilding(), defaultBuildingVariant, 1),\r\n    29: getCodeFromBuildingData(new MetaWireBuilding(), defaultBuildingVariant, 2),\r\n    30: getCodeFromBuildingData(new MetaWireBuilding(), defaultBuildingVariant, 3),\r\n\r\n    52: getCodeFromBuildingData(new MetaWireBuilding(), MetaWireBuilding.variants.second),\r\n    53: getCodeFromBuildingData(new MetaWireBuilding(), MetaWireBuilding.variants.second, 1),\r\n    54: getCodeFromBuildingData(new MetaWireBuilding(), MetaWireBuilding.variants.second, 2),\r\n    55: getCodeFromBuildingData(new MetaWireBuilding(), MetaWireBuilding.variants.second, 3),\r\n\r\n    // Constant signal\r\n    31: getCodeFromBuildingData(new MetaConstantSignalBuilding(), defaultBuildingVariant),\r\n\r\n    // Logic gate\r\n    32: getCodeFromBuildingData(new MetaLogicGateBuilding(), defaultBuildingVariant),\r\n    34: getCodeFromBuildingData(new MetaLogicGateBuilding(), MetaLogicGateBuilding.variants.not),\r\n    35: getCodeFromBuildingData(new MetaLogicGateBuilding(), MetaLogicGateBuilding.variants.xor),\r\n    36: getCodeFromBuildingData(new MetaLogicGateBuilding(), MetaLogicGateBuilding.variants.or),\r\n\r\n    // Transistor\r\n    38: getCodeFromBuildingData(new MetaTransistorBuilding(), defaultBuildingVariant),\r\n    60: getCodeFromBuildingData(new MetaTransistorBuilding(), MetaTransistorBuilding.variants.mirrored),\r\n\r\n    // Lever\r\n    33: getCodeFromBuildingData(new MetaLeverBuilding(), defaultBuildingVariant),\r\n\r\n    // Filter\r\n    37: getCodeFromBuildingData(new MetaFilterBuilding(), defaultBuildingVariant),\r\n\r\n    // Wire tunnel\r\n    39: getCodeFromBuildingData(new MetaWireTunnelBuilding(), defaultBuildingVariant),\r\n\r\n    // Display\r\n    40: getCodeFromBuildingData(new MetaDisplayBuilding(), defaultBuildingVariant),\r\n\r\n    // Virtual Processor\r\n    42: getCodeFromBuildingData(new MetaVirtualProcessorBuilding(), defaultBuildingVariant),\r\n    44: getCodeFromBuildingData(\r\n        new MetaVirtualProcessorBuilding(),\r\n        MetaVirtualProcessorBuilding.variants.rotater\r\n    ),\r\n    45: getCodeFromBuildingData(\r\n        new MetaVirtualProcessorBuilding(),\r\n        MetaVirtualProcessorBuilding.variants.unstacker\r\n    ),\r\n    50: getCodeFromBuildingData(\r\n        new MetaVirtualProcessorBuilding(),\r\n        MetaVirtualProcessorBuilding.variants.stacker\r\n    ),\r\n    51: getCodeFromBuildingData(\r\n        new MetaVirtualProcessorBuilding(),\r\n        MetaVirtualProcessorBuilding.variants.painter\r\n    ),\r\n\r\n    // Analyzer\r\n    46: getCodeFromBuildingData(new MetaComparatorBuilding(), defaultBuildingVariant),\r\n    43: getCodeFromBuildingData(new MetaAnalyzerBuilding(), defaultBuildingVariant),\r\n\r\n    // Reader\r\n    49: getCodeFromBuildingData(new MetaReaderBuilding(), defaultBuildingVariant),\r\n\r\n    // Item producer\r\n    61: getCodeFromBuildingData(new MetaItemProducerBuilding(), defaultBuildingVariant),\r\n};\r\n\r\nexport class SavegameInterface_ML01 extends SavegameInterface_V1007 {\r\n    // @ts-ignore\r\n    getVersion() {\r\n        return \"ML01\";\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../savegame_typedefs.js\").SavegameData} data\r\n     */\r\n    static migrate1007toML01(data) {\r\n        logger.log(\"Migrating 1007 to ML01\");\r\n        const dump = data.dump;\r\n        if (!dump) {\r\n            return true;\r\n        }\r\n\r\n        for (let i = 0; i < dump.entities.length; i++) {\r\n            dump.entities[i].components.StaticMapEntity.code =\r\n                codes[dump.entities[i].components.StaticMapEntity.code];\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/schemas/ML01.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3941,
    "kind": "variable",
    "name": "schema",
    "memberof": "js/savegame/schemas/ML01.js",
    "static": true,
    "longname": "js/savegame/schemas/ML01.js~schema",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/ML01.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3942,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/schemas/ML01.js",
    "static": true,
    "longname": "js/savegame/schemas/ML01.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/schemas/ML01.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3943,
    "kind": "variable",
    "name": "codes",
    "memberof": "js/savegame/schemas/ML01.js",
    "static": true,
    "longname": "js/savegame/schemas/ML01.js~codes",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/schemas/ML01.js",
    "importStyle": "{codes}",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "{\"1\": *, \"2\": *, \"3\": *, \"4\": *, \"5\": *, \"6\": *, \"47\": *, \"48\": *, \"7\": *, \"8\": *, \"9\": *, \"10\": *, \"11\": *, \"12\": *, \"13\": *, \"14\": *, \"15\": *, \"16\": *, \"17\": *, \"18\": *, \"19\": *, \"20\": *, \"21\": *, \"22\": *, \"23\": *, \"24\": *, \"25\": *, \"26\": *, \"27\": *, \"28\": *, \"29\": *, \"30\": *, \"52\": *, \"53\": *, \"54\": *, \"55\": *, \"31\": *, \"32\": *, \"34\": *, \"35\": *, \"36\": *, \"38\": *, \"60\": *, \"33\": *, \"37\": *, \"39\": *, \"40\": *, \"42\": *, \"44\": *, \"45\": *, \"50\": *, \"51\": *, \"46\": *, \"43\": *, \"49\": *, \"61\": *}"
      ]
    }
  },
  {
    "__docId__": 3944,
    "kind": "class",
    "name": "SavegameInterface_ML01",
    "memberof": "js/savegame/schemas/ML01.js",
    "static": true,
    "longname": "js/savegame/schemas/ML01.js~SavegameInterface_ML01",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/schemas/ML01.js",
    "importStyle": "{SavegameInterface_ML01}",
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/savegame/schemas/1007.js~SavegameInterface_V1007"
    ]
  },
  {
    "__docId__": 3945,
    "kind": "method",
    "name": "getVersion",
    "memberof": "js/savegame/schemas/ML01.js~SavegameInterface_ML01",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/ML01.js~SavegameInterface_ML01#getVersion",
    "access": "public",
    "description": null,
    "lineNumber": 162,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3946,
    "kind": "method",
    "name": "getSchemaUncached",
    "memberof": "js/savegame/schemas/ML01.js~SavegameInterface_ML01",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/schemas/ML01.js~SavegameInterface_ML01#getSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 166,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3947,
    "kind": "method",
    "name": "migrate1007toML01",
    "memberof": "js/savegame/schemas/ML01.js~SavegameInterface_ML01",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/schemas/ML01.js~SavegameInterface_ML01.migrate1007toML01",
    "access": "public",
    "description": "",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"../savegame_typedefs.js\").SavegameData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 3948,
    "kind": "file",
    "name": "js/savegame/serialization.js",
    "content": "import { createLogger } from \"../core/logging\";\r\nimport {\r\n    BaseDataType,\r\n    TypeArray,\r\n    TypeBoolean,\r\n    TypeClass,\r\n    TypeClassData,\r\n    TypeClassFromMetaclass,\r\n    TypeClassId,\r\n    TypeEntity,\r\n    TypeEntityWeakref,\r\n    TypeEnum,\r\n    TypeFixedClass,\r\n    TypeInteger,\r\n    TypeKeyValueMap,\r\n    TypeMetaClass,\r\n    TypeNullable,\r\n    TypeNumber,\r\n    TypePair,\r\n    TypePositiveInteger,\r\n    TypePositiveNumber,\r\n    TypeString,\r\n    TypeStructuredObject,\r\n    TypeVector,\r\n} from \"./serialization_data_types\";\r\n\r\nconst logger = createLogger(\"serialization\");\r\n\r\n// Schema declarations\r\nexport const types = {\r\n    int: new TypeInteger(),\r\n    uint: new TypePositiveInteger(),\r\n    float: new TypeNumber(),\r\n    ufloat: new TypePositiveNumber(),\r\n    string: new TypeString(),\r\n    entity: new TypeEntity(),\r\n    weakEntityRef: new TypeEntityWeakref(),\r\n    vector: new TypeVector(),\r\n    tileVector: new TypeVector(),\r\n    bool: new TypeBoolean(),\r\n\r\n    /**\r\n     * @param {BaseDataType} wrapped\r\n     */\r\n    nullable(wrapped) {\r\n        return new TypeNullable(wrapped);\r\n    },\r\n\r\n    /**\r\n     * @param {FactoryTemplate<*>|SingletonFactoryTemplate<*>} registry\r\n     */\r\n    classId(registry) {\r\n        return new TypeClassId(registry);\r\n    },\r\n    /**\r\n     * @param {BaseDataType} valueType\r\n     * @param {boolean=} includeEmptyValues\r\n     */\r\n    keyValueMap(valueType, includeEmptyValues = true) {\r\n        return new TypeKeyValueMap(valueType, includeEmptyValues);\r\n    },\r\n\r\n    /**\r\n     * @param {Object<string, any>} values\r\n     */\r\n    enum(values) {\r\n        return new TypeEnum(values);\r\n    },\r\n\r\n    /**\r\n     * @param {FactoryTemplate<*>} registry\r\n     * @param {(GameRoot, any) => object=} resolver\r\n     */\r\n    obj(registry, resolver = null) {\r\n        return new TypeClass(registry, resolver);\r\n    },\r\n\r\n    /**\r\n     * @param {FactoryTemplate<*>} registry\r\n     */\r\n    objData(registry) {\r\n        return new TypeClassData(registry);\r\n    },\r\n\r\n    /**\r\n     * @param {typeof BasicSerializableObject} cls\r\n     */\r\n    knownType(cls) {\r\n        return new TypeFixedClass(cls);\r\n    },\r\n\r\n    /**\r\n     * @param {BaseDataType} innerType\r\n     */\r\n    array(innerType) {\r\n        return new TypeArray(innerType);\r\n    },\r\n\r\n    /**\r\n     * @param {BaseDataType} innerType\r\n     */\r\n    fixedSizeArray(innerType) {\r\n        return new TypeArray(innerType, true);\r\n    },\r\n\r\n    /**\r\n     * @param {SingletonFactoryTemplate<*>} innerType\r\n     */\r\n    classRef(registry) {\r\n        return new TypeMetaClass(registry);\r\n    },\r\n\r\n    /**\r\n     * @param {Object.<string, BaseDataType>} descriptor\r\n     */\r\n    structured(descriptor) {\r\n        return new TypeStructuredObject(descriptor);\r\n    },\r\n\r\n    /**\r\n     * @param {BaseDataType} a\r\n     * @param {BaseDataType} b\r\n     */\r\n    pair(a, b) {\r\n        return new TypePair(a, b);\r\n    },\r\n\r\n    /**\r\n     * @param {typeof BasicSerializableObject} classHandle\r\n     * @param {SingletonFactoryTemplate<*>} registry\r\n     */\r\n    classWithMetaclass(classHandle, registry) {\r\n        return new TypeClassFromMetaclass(classHandle, registry);\r\n    },\r\n};\r\n\r\n/**\r\n * A full schema declaration\r\n * @typedef {Object.<string, BaseDataType>} Schema\r\n */\r\n\r\nconst globalSchemaCache = {};\r\n\r\n/* dev:start */\r\nconst classnamesCache = {};\r\n/* dev:end*/\r\n\r\nexport class BasicSerializableObject {\r\n    /* dev:start */\r\n    /**\r\n     * Fixes typeof DerivedComponent is not assignable to typeof Component, compiled out\r\n     * in non-dev builds\r\n     */\r\n    constructor(...args) {}\r\n\r\n    /* dev:end */\r\n\r\n    static getId() {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Should return the serialization schema\r\n     * @returns {Schema}\r\n     */\r\n    static getSchema() {\r\n        return {};\r\n    }\r\n\r\n    // Implementation\r\n    /** @returns {Schema} */\r\n    static getCachedSchema() {\r\n        const id = this.getId();\r\n\r\n        /* dev:start */\r\n        assert(\r\n            classnamesCache[id] === this || classnamesCache[id] === undefined,\r\n            \"Class name taken twice: \" + id + \" (from \" + this.name + \")\"\r\n        );\r\n        classnamesCache[id] = this;\r\n        /* dev:end */\r\n\r\n        const entry = globalSchemaCache[id];\r\n        if (entry) {\r\n            return entry;\r\n        }\r\n\r\n        const schema = this.getSchema();\r\n        globalSchemaCache[id] = schema;\r\n        return schema;\r\n    }\r\n\r\n    /** @returns {object} */\r\n    serialize() {\r\n        return serializeSchema(\r\n            this,\r\n            /** @type {typeof BasicSerializableObject} */ (this.constructor).getCachedSchema()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @param {any} data\r\n     * @param {import(\"./savegame_serializer\").GameRoot} root\r\n     * @returns {string|void}\r\n     */\r\n    deserialize(data, root = null) {\r\n        return deserializeSchema(\r\n            this,\r\n            /** @type {typeof BasicSerializableObject} */ (this.constructor).getCachedSchema(),\r\n            data,\r\n            null,\r\n            root\r\n        );\r\n    }\r\n\r\n    /** @returns {string|void} */\r\n    static verify(data) {\r\n        return verifySchema(this.getCachedSchema(), data);\r\n    }\r\n}\r\n\r\n/**\r\n * Serializes an object using the given schema, mergin with the given properties\r\n * @param {object} obj The object to serialize\r\n * @param {Schema} schema The schema to use\r\n * @param {object=} mergeWith Any additional properties to merge with the schema, useful for super calls\r\n * @returns {object} Serialized data object\r\n */\r\nexport function serializeSchema(obj, schema, mergeWith = {}) {\r\n    for (const key in schema) {\r\n        if (!obj.hasOwnProperty(key)) {\r\n            logger.error(\"Invalid schema, property\", key, \"does not exist on\", obj, \"(schema=\", schema, \")\");\r\n            assert(\r\n                obj.hasOwnProperty(key),\r\n                \"serialization: invalid schema, property does not exist on object: \" + key\r\n            );\r\n        }\r\n        if (!schema[key]) {\r\n            assert(false, \"Invalid schema (bad key '\" + key + \"'): \" + JSON.stringify(schema));\r\n        }\r\n\r\n        if (G_IS_DEV) {\r\n            try {\r\n                mergeWith[key] = schema[key].serialize(obj[key]);\r\n            } catch (ex) {\r\n                logger.error(\r\n                    \"Serialization of\",\r\n                    obj,\r\n                    \"failed on key '\" + key + \"' ->\",\r\n                    ex,\r\n                    \"(schema was\",\r\n                    schema,\r\n                    \")\"\r\n                );\r\n                throw ex;\r\n            }\r\n        } else {\r\n            mergeWith[key] = schema[key].serialize(obj[key]);\r\n        }\r\n    }\r\n    return mergeWith;\r\n}\r\n\r\n/**\r\n * Deserializes data into an object\r\n * @param {object} obj The object to store the deserialized data into\r\n * @param {Schema} schema The schema to use\r\n * @param {object} data The serialized data\r\n * @param {string|void|null=} baseclassErrorResult Convenience, if this is a string error code, do nothing and return it\r\n * @param {import(\"../game/root\").GameRoot=} root Optional game root reference\r\n * @returns {string|void} String error code or nothing on success\r\n */\r\nexport function deserializeSchema(obj, schema, data, baseclassErrorResult = null, root) {\r\n    if (baseclassErrorResult) {\r\n        return baseclassErrorResult;\r\n    }\r\n\r\n    if (!data) {\r\n        logger.error(\"Got 'NULL' data for\", obj, \"and schema\", schema, \"!\");\r\n        return \"Got null data\";\r\n    }\r\n\r\n    for (const key in schema) {\r\n        if (!data.hasOwnProperty(key)) {\r\n            logger.error(\"Data\", data, \"does not contain\", key, \"(schema:\", schema, \")\");\r\n            return \"Missing key in schema: \" + key + \" of class \" + obj.constructor.name;\r\n        }\r\n        if (!schema[key].allowNull() && (data[key] === null || data[key] === undefined)) {\r\n            logger.error(\"Data\", data, \"has null value for\", key, \"(schema:\", schema, \")\");\r\n            return \"Non-nullable entry is null: \" + key + \" of class \" + obj.constructor.name;\r\n        }\r\n\r\n        const errorStatus = schema[key].deserializeWithVerify(data[key], obj, key, obj.root || root);\r\n        if (errorStatus) {\r\n            logger.error(\r\n                \"Deserialization failed with error '\" + errorStatus + \"' on object\",\r\n                obj,\r\n                \"and key\",\r\n                key,\r\n                \"(root? =\",\r\n                obj.root ? \"y\" : \"n\",\r\n                \")\"\r\n            );\r\n            return errorStatus;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Verifies stored data using the given schema\r\n * @param {Schema} schema The schema to use\r\n * @param {object} data The data to verify\r\n * @returns {string|void} String error code or nothing on success\r\n */\r\nexport function verifySchema(schema, data) {\r\n    for (const key in schema) {\r\n        if (!data.hasOwnProperty(key)) {\r\n            logger.error(\"Data\", data, \"does not contain\", key, \"(schema:\", schema, \")\");\r\n            return \"verify: missing key required by schema in stored data: \" + key;\r\n        }\r\n        if (!schema[key].allowNull() && (data[key] === null || data[key] === undefined)) {\r\n            logger.error(\"Data\", data, \"has null value for\", key, \"(schema:\", schema, \")\");\r\n            return \"verify: non-nullable entry is null: \" + key;\r\n        }\r\n\r\n        const errorStatus = schema[key].verifySerializedValue(data[key]);\r\n        if (errorStatus) {\r\n            logger.error(errorStatus);\r\n            return \"verify: \" + errorStatus;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Extends a schema by adding the properties from the new schema to the existing base schema\r\n * @param {Schema} base\r\n * @param {Schema} newOne\r\n * @returns {Schema}\r\n */\r\nexport function extendSchema(base, newOne) {\r\n    /** @type {Schema} */\r\n    const result = Object.assign({}, base);\r\n    for (const key in newOne) {\r\n        if (result.hasOwnProperty(key)) {\r\n            logger.error(\"Extend schema got duplicate key:\", key);\r\n            continue;\r\n        }\r\n        result[key] = newOne[key];\r\n    }\r\n    return result;\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/serialization.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3949,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/serialization.js",
    "static": true,
    "longname": "js/savegame/serialization.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/serialization.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3950,
    "kind": "variable",
    "name": "types",
    "memberof": "js/savegame/serialization.js",
    "static": true,
    "longname": "js/savegame/serialization.js~types",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization.js",
    "importStyle": "{types}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "{\"int\": *, \"uint\": *, \"float\": *, \"ufloat\": *, \"string\": *, \"entity\": *, \"weakEntityRef\": *, \"vector\": *, \"tileVector\": *, \"bool\": *, \"nullable\": function, \"classId\": function, \"keyValueMap\": function, \"enum\": function, \"obj\": function, \"objData\": function, \"knownType\": function, \"array\": function, \"fixedSizeArray\": function, \"classRef\": function, \"structured\": function, \"pair\": function, \"classWithMetaclass\": function}"
      ]
    }
  },
  {
    "__docId__": 3951,
    "kind": "typedef",
    "name": "Schema",
    "memberof": "js/savegame/serialization.js",
    "static": true,
    "longname": "js/savegame/serialization.js~Schema",
    "access": "public",
    "description": "A full schema declaration",
    "lineNumber": 142,
    "type": {
      "types": [
        "Object.<string, BaseDataType>"
      ],
      "optional": false,
      "name": "Schema"
    }
  },
  {
    "__docId__": 3952,
    "kind": "variable",
    "name": "classnamesCache",
    "memberof": "js/savegame/serialization.js",
    "static": true,
    "longname": "js/savegame/serialization.js~classnamesCache",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/serialization.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3953,
    "kind": "class",
    "name": "BasicSerializableObject",
    "memberof": "js/savegame/serialization.js",
    "static": true,
    "longname": "js/savegame/serialization.js~BasicSerializableObject",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization.js",
    "importStyle": "{BasicSerializableObject}",
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3954,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/serialization.js~BasicSerializableObject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization.js~BasicSerializableObject#constructor",
    "access": "public",
    "description": "Fixes typeof DerivedComponent is not assignable to typeof Component, compiled out\nin non-dev builds",
    "lineNumber": 154
  },
  {
    "__docId__": 3955,
    "kind": "method",
    "name": "getId",
    "memberof": "js/savegame/serialization.js~BasicSerializableObject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/serialization.js~BasicSerializableObject.getId",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3956,
    "kind": "method",
    "name": "getSchema",
    "memberof": "js/savegame/serialization.js~BasicSerializableObject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/serialization.js~BasicSerializableObject.getSchema",
    "access": "public",
    "description": "Should return the serialization schema",
    "lineNumber": 166,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Schema}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Schema"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3957,
    "kind": "method",
    "name": "getCachedSchema",
    "memberof": "js/savegame/serialization.js~BasicSerializableObject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/serialization.js~BasicSerializableObject.getCachedSchema",
    "access": "public",
    "description": null,
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Schema}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Schema"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3958,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization.js~BasicSerializableObject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization.js~BasicSerializableObject#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3959,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization.js~BasicSerializableObject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization.js~BasicSerializableObject#deserialize",
    "access": "public",
    "description": "",
    "lineNumber": 206,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "import(\"./savegame_serializer\").GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3960,
    "kind": "method",
    "name": "verify",
    "memberof": "js/savegame/serialization.js~BasicSerializableObject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/serialization.js~BasicSerializableObject.verify",
    "access": "public",
    "description": null,
    "lineNumber": 217,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 3961,
    "kind": "function",
    "name": "serializeSchema",
    "memberof": "js/savegame/serialization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/serialization.js~serializeSchema",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization.js",
    "importStyle": "{serializeSchema}",
    "description": "Serializes an object using the given schema, mergin with the given properties",
    "lineNumber": 229,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} Serialized data object"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "The object to serialize"
      },
      {
        "nullable": null,
        "types": [
          "Schema"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": "The schema to use"
      },
      {
        "nullable": null,
        "types": [
          "object="
        ],
        "spread": false,
        "optional": false,
        "name": "mergeWith",
        "description": "Any additional properties to merge with the schema, useful for super calls"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "Serialized data object"
    }
  },
  {
    "__docId__": 3962,
    "kind": "function",
    "name": "deserializeSchema",
    "memberof": "js/savegame/serialization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/serialization.js~deserializeSchema",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization.js",
    "importStyle": "{deserializeSchema}",
    "description": "Deserializes data into an object",
    "lineNumber": 273,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or nothing on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "The object to store the deserialized data into"
      },
      {
        "nullable": null,
        "types": [
          "Schema"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": "The schema to use"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The serialized data"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "void",
          "null="
        ],
        "spread": false,
        "optional": false,
        "name": "baseclassErrorResult",
        "description": "Convenience, if this is a string error code, do nothing and return it"
      },
      {
        "nullable": null,
        "types": [
          "import(\"../game/root\").GameRoot="
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": "Optional game root reference"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or nothing on success"
    }
  },
  {
    "__docId__": 3963,
    "kind": "function",
    "name": "verifySchema",
    "memberof": "js/savegame/serialization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/serialization.js~verifySchema",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization.js",
    "importStyle": "{verifySchema}",
    "description": "Verifies stored data using the given schema",
    "lineNumber": 315,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or nothing on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Schema"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": "The schema to use"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to verify"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or nothing on success"
    }
  },
  {
    "__docId__": 3964,
    "kind": "function",
    "name": "extendSchema",
    "memberof": "js/savegame/serialization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/serialization.js~extendSchema",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization.js",
    "importStyle": "{extendSchema}",
    "description": "Extends a schema by adding the properties from the new schema to the existing base schema",
    "lineNumber": 340,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Schema}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Schema"
        ],
        "spread": false,
        "optional": false,
        "name": "base",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Schema"
        ],
        "spread": false,
        "optional": false,
        "name": "newOne",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Schema"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3965,
    "kind": "file",
    "name": "js/savegame/serialization_data_types.js",
    "content": "/* typehints:start */\r\nimport { GameRoot } from \"../game/root\";\r\nimport { BasicSerializableObject } from \"./serialization\";\r\n/* typehints:end */\r\n\r\nimport { Vector } from \"../core/vector\";\r\nimport { round4Digits } from \"../core/utils\";\r\nexport const globalJsonSchemaDefs = {};\r\n\r\n/**\r\n *\r\n * @param {import(\"./serialization\").Schema} schema\r\n */\r\nexport function schemaToJsonSchema(schema) {\r\n    const jsonSchema = {\r\n        type: \"object\",\r\n        additionalProperties: false,\r\n        required: [],\r\n        properties: {},\r\n    };\r\n\r\n    for (const key in schema) {\r\n        const subSchema = schema[key].getAsJsonSchema();\r\n        jsonSchema.required.push(key);\r\n        jsonSchema.properties[key] = subSchema;\r\n    }\r\n\r\n    return jsonSchema;\r\n}\r\n\r\n/**\r\n * Helper function to create a json schema object\r\n * @param {any} properties\r\n */\r\nfunction schemaObject(properties) {\r\n    return {\r\n        type: \"object\",\r\n        required: Object.keys(properties).slice(),\r\n        additionalProperties: false,\r\n        properties,\r\n    };\r\n}\r\n\r\n/**\r\n * Base serialization data type\r\n */\r\nexport class BaseDataType {\r\n    /**\r\n     * Serializes a given raw value\r\n     * @param {any} value\r\n     */\r\n    serialize(value) {\r\n        abstract;\r\n        return {};\r\n    }\r\n\r\n    /**\r\n     * Verifies a given serialized value\r\n     * @param {any} value\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    verifySerializedValue(value) {}\r\n\r\n    /**\r\n     * Deserializes a serialized value into the target object under the given key\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Returns the json schema\r\n     */\r\n    getAsJsonSchema() {\r\n        const key = this.getCacheKey();\r\n        const schema = this.getAsJsonSchemaUncached();\r\n\r\n        if (!globalJsonSchemaDefs[key]) {\r\n            // schema.$id = key;\r\n            globalJsonSchemaDefs[key] = schema;\r\n        }\r\n\r\n        return {\r\n            $ref: \"#/definitions/\" + key,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * INTERNAL Should return the json schema representation\r\n     */\r\n    getAsJsonSchemaUncached() {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Returns whether null values are okay\r\n     * @returns {boolean}\r\n     */\r\n    allowNull() {\r\n        return false;\r\n    }\r\n\r\n    // Helper methods\r\n\r\n    /**\r\n     * Deserializes a serialized value, but performs integrity checks before\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserializeWithVerify(value, targetObject, targetKey, root) {\r\n        const errorCode = this.verifySerializedValue(value);\r\n        if (errorCode) {\r\n            return (\r\n                \"serialization verify failed: \" +\r\n                errorCode +\r\n                \" [value \" +\r\n                (JSON.stringify(value) || \"\").substr(0, 100) +\r\n                \"]\"\r\n            );\r\n        }\r\n        return this.deserialize(value, targetObject, targetKey, root);\r\n    }\r\n\r\n    /**\r\n     * Should return a cacheable key\r\n     */\r\n    getCacheKey() {\r\n        abstract;\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport class TypeInteger extends BaseDataType {\r\n    serialize(value) {\r\n        assert(Number.isInteger(value), \"Type integer got non integer for serialize: \" + value);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"integer\",\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isInteger(value)) {\r\n            return \"Not a valid number\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"int\";\r\n    }\r\n}\r\n\r\nexport class TypePositiveInteger extends BaseDataType {\r\n    serialize(value) {\r\n        assert(Number.isInteger(value), \"Type integer got non integer for serialize: \" + value);\r\n        assert(value >= 0, \"value < 0: \" + value);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"integer\",\r\n            minimum: 0,\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isInteger(value)) {\r\n            return \"Not a valid number\";\r\n        }\r\n        if (value < 0) {\r\n            return \"Negative value for positive integer\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"uint\";\r\n    }\r\n}\r\n\r\nexport class TypeBoolean extends BaseDataType {\r\n    serialize(value) {\r\n        assert(value === true || value === false, \"Type bool got non bool for serialize: \" + value);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"boolean\",\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (value !== true && value !== false) {\r\n            return \"Not a boolean\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"bool\";\r\n    }\r\n}\r\n\r\nexport class TypeString extends BaseDataType {\r\n    serialize(value) {\r\n        assert(typeof value === \"string\", \"Type string got non string for serialize: \" + value);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"string\",\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (typeof value !== \"string\") {\r\n            return \"Not a valid string\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"string\";\r\n    }\r\n}\r\n\r\nexport class TypeVector extends BaseDataType {\r\n    serialize(value) {\r\n        assert(value instanceof Vector, \"Type vector got non vector for serialize: \" + value);\r\n        return {\r\n            x: round4Digits(value.x),\r\n            y: round4Digits(value.y),\r\n        };\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return schemaObject({\r\n            x: {\r\n                type: \"number\",\r\n            },\r\n            y: {\r\n                type: \"number\",\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = new Vector(value.x, value.y);\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isFinite(value.x) || !Number.isFinite(value.y)) {\r\n            return \"Not a valid vector, missing x/y or bad data type\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"vector\";\r\n    }\r\n}\r\n\r\nexport class TypeTileVector extends BaseDataType {\r\n    serialize(value) {\r\n        assert(value instanceof Vector, \"Type vector got non vector for serialize: \" + value);\r\n        assert(Number.isInteger(value.x) && value.x > 0, \"Invalid tile x:\" + value.x);\r\n        assert(Number.isInteger(value.y) && value.y > 0, \"Invalid tile x:\" + value.y);\r\n        return { x: value.x, y: value.y };\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return schemaObject({\r\n            x: {\r\n                type: \"integer\",\r\n                minimum: 0,\r\n                maximum: 256,\r\n            },\r\n            y: {\r\n                type: \"integer\",\r\n                minimum: 0,\r\n                maximum: 256,\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = new Vector(value.x, value.y);\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isInteger(value.x) || !Number.isInteger(value.y)) {\r\n            return \"Not a valid tile vector, missing x/y or bad data type\";\r\n        }\r\n        if (value.x < 0 || value.y < 0) {\r\n            return \"Invalid tile vector, x or y < 0\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"tilevector\";\r\n    }\r\n}\r\n\r\nexport class TypeNumber extends BaseDataType {\r\n    serialize(value) {\r\n        assert(Number.isFinite(value), \"Type number got non number for serialize: \" + value);\r\n        assert(!Number.isNaN(value), \"Value is nan: \" + value);\r\n        return round4Digits(value);\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"number\",\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isFinite(value)) {\r\n            return \"Not a valid number: \" + value;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"float\";\r\n    }\r\n}\r\n\r\nexport class TypePositiveNumber extends BaseDataType {\r\n    serialize(value) {\r\n        assert(Number.isFinite(value), \"Type number got non number for serialize: \" + value);\r\n        assert(value >= 0, \"Postitive number got negative value: \" + value);\r\n        return round4Digits(value);\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"number\",\r\n            minimum: 0,\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isFinite(value)) {\r\n            return \"Not a valid number: \" + value;\r\n        }\r\n        if (value < 0) {\r\n            return \"Positive number got negative value: \" + value;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"ufloat\";\r\n    }\r\n}\r\n\r\nexport class TypeEnum extends BaseDataType {\r\n    /**\r\n     * @param {Object.<string, any>} enumeration\r\n     */\r\n    constructor(enumeration = {}) {\r\n        super();\r\n        this.availableValues = Object.values(enumeration);\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(this.availableValues.indexOf(value) >= 0, \"Unknown value: \" + value);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"string\",\r\n            enum: this.availableValues,\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (this.availableValues.indexOf(value) < 0) {\r\n            return \"Unknown enum value: \" + value;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"enum.\" + this.availableValues.join(\",\");\r\n    }\r\n}\r\n\r\nexport class TypeEntity extends BaseDataType {\r\n    serialize(value) {\r\n        // assert(value instanceof Entity, \"Not a valid entity ref: \" + value);\r\n        assert(value.uid, \"Entity has no uid yet\");\r\n        assert(!value.destroyed, \"Entity already destroyed\");\r\n        assert(!value.queuedForDestroy, \"Entity queued for destroy\");\r\n\r\n        return value.uid;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"integer\",\r\n            minimum: 0,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        const entity = root.entityMgr.findByUid(value);\r\n        if (!entity) {\r\n            return \"Entity not found by uid: \" + value;\r\n        }\r\n        targetObject[targetKey] = entity;\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isFinite(value)) {\r\n            return \"Not a valid uuid: \" + value;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"entity\";\r\n    }\r\n}\r\n\r\nexport class TypeEntityWeakref extends BaseDataType {\r\n    serialize(value) {\r\n        if (value === null) {\r\n            return null;\r\n        }\r\n\r\n        // assert(value instanceof Entity, \"Not a valid entity ref (weak): \" + value);\r\n        assert(value.uid, \"Entity has no uid yet\");\r\n        if (value.destroyed || value.queuedForDestroy) {\r\n            return null;\r\n        }\r\n        return value.uid;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        if (value === null) {\r\n            targetObject[targetKey] = null;\r\n            return;\r\n        }\r\n        const entity = root.entityMgr.findByUid(value, false);\r\n        targetObject[targetKey] = entity;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: [\"null\", \"integer\"],\r\n            minimum: 0,\r\n        };\r\n    }\r\n\r\n    allowNull() {\r\n        return true;\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (value !== null && !Number.isFinite(value)) {\r\n            return \"Not a valid uuid: \" + value;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"entity-weakref\";\r\n    }\r\n}\r\n\r\nexport class TypeClass extends BaseDataType {\r\n    /**\r\n     *\r\n     * @param {FactoryTemplate<*>} registry\r\n     * @param {(GameRoot, object) => object} customResolver\r\n     */\r\n    constructor(registry, customResolver = null) {\r\n        super();\r\n        this.registry = registry;\r\n        this.customResolver = customResolver;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(typeof value === \"object\", \"Not a class instance: \" + value);\r\n        return {\r\n            $: value.constructor.getId(),\r\n            data: value.serialize(),\r\n        };\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        const options = [];\r\n        const entries = this.registry.getEntries();\r\n        for (let i = 0; i < entries.length; ++i) {\r\n            const entry = entries[i];\r\n\r\n            options.push(\r\n                schemaObject({\r\n                    $: {\r\n                        type: \"string\",\r\n                        // @ts-ignore\r\n                        enum: [entry.getId()],\r\n                    },\r\n                    // @ts-ignore\r\n                    data: schemaToJsonSchema(entry.getCachedSchema()),\r\n                })\r\n            );\r\n        }\r\n\r\n        return { oneOf: options };\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        let instance;\r\n\r\n        if (this.customResolver) {\r\n            instance = this.customResolver(root, value);\r\n            if (!instance) {\r\n                return \"Failed to call custom resolver\";\r\n            }\r\n        } else {\r\n            const instanceClass = this.registry.findById(value.$);\r\n            if (!instanceClass || !instanceClass.prototype) {\r\n                return \"Invalid class id (runtime-err): \" + value.$ + \"->\" + instanceClass;\r\n            }\r\n            instance = Object.create(instanceClass.prototype);\r\n            const errorState = instance.deserialize(value.data);\r\n            if (errorState) {\r\n                return errorState;\r\n            }\r\n        }\r\n        targetObject[targetKey] = instance;\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!value) {\r\n            return \"Got null data\";\r\n        }\r\n\r\n        if (!this.registry.hasId(value.$)) {\r\n            return \"Invalid class id: \" + value.$ + \" (factory is \" + this.registry.getId() + \")\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"class.\" + this.registry.getId();\r\n    }\r\n}\r\n\r\nexport class TypeClassData extends BaseDataType {\r\n    /**\r\n     *\r\n     * @param {FactoryTemplate<*>} registry\r\n     */\r\n    constructor(registry) {\r\n        super();\r\n        this.registry = registry;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(typeof value === \"object\", \"Not a class instance: \" + value);\r\n        return value.serialize();\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        const options = [];\r\n        const entries = this.registry.getEntries();\r\n        for (let i = 0; i < entries.length; ++i) {\r\n            const entry = entries[i];\r\n            options.push(\r\n                schemaToJsonSchema( /** @type {typeof BasicSerializableObject} */ (entry).getCachedSchema())\r\n            );\r\n        }\r\n        return { oneOf: options };\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        assert(false, \"can not deserialize class data of type \" + this.registry.getId());\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!value) {\r\n            return \"Got null data\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"class.\" + this.registry.getId();\r\n    }\r\n}\r\n\r\nexport class TypeClassFromMetaclass extends BaseDataType {\r\n    /**\r\n     *\r\n     * @param {typeof BasicSerializableObject} classHandle\r\n     * @param {SingletonFactoryTemplate<*>} registry\r\n     */\r\n    constructor(classHandle, registry) {\r\n        super();\r\n        this.registry = registry;\r\n        this.classHandle = classHandle;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(typeof value === \"object\", \"Not a class instance: \" + value);\r\n        return {\r\n            $: value.getMetaclass().getId(),\r\n            data: value.serialize(),\r\n        };\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        // const options = [];\r\n        const ids = this.registry.getAllIds();\r\n\r\n        return {\r\n            $: {\r\n                type: \"string\",\r\n                enum: ids,\r\n            },\r\n            data: schemaToJsonSchema(this.classHandle.getCachedSchema()),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        const metaClassInstance = this.registry.findById(value.$);\r\n        if (!metaClassInstance || !metaClassInstance.prototype) {\r\n            return \"Invalid meta class id (runtime-err): \" + value.$ + \"->\" + metaClassInstance;\r\n        }\r\n\r\n        const instanceClass = metaClassInstance.getInstanceClass();\r\n        const instance = Object.create(instanceClass.prototype);\r\n        const errorState = instance.deserialize(value.data);\r\n        if (errorState) {\r\n            return errorState;\r\n        }\r\n        targetObject[targetKey] = instance;\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!value) {\r\n            return \"Got null data\";\r\n        }\r\n\r\n        if (!this.registry.hasId(value.$)) {\r\n            return \"Invalid class id: \" + value.$ + \" (factory is \" + this.registry.getId() + \")\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"classofmetaclass.\" + this.registry.getId();\r\n    }\r\n}\r\n\r\nexport class TypeMetaClass extends BaseDataType {\r\n    /**\r\n     *\r\n     * @param {SingletonFactoryTemplate<*>} registry\r\n     */\r\n    constructor(registry) {\r\n        super();\r\n        this.registry = registry;\r\n    }\r\n\r\n    serialize(value) {\r\n        return value.getId();\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        const instanceClass = this.registry.findById(value);\r\n        if (!instanceClass) {\r\n            return \"Invalid class id (runtime-err): \" + value;\r\n        }\r\n        targetObject[targetKey] = instanceClass;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"string\",\r\n            enum: this.registry.getAllIds(),\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!value) {\r\n            return \"Got null data\";\r\n        }\r\n\r\n        if (typeof value !== \"string\") {\r\n            return \"Got non string data\";\r\n        }\r\n\r\n        if (!this.registry.hasId(value)) {\r\n            return \"Invalid class id: \" + value + \" (factory is \" + this.registry.getId() + \")\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"metaclass.\" + this.registry.getId();\r\n    }\r\n}\r\n\r\nexport class TypeArray extends BaseDataType {\r\n    /**\r\n     * @param {BaseDataType} innerType\r\n     */\r\n    constructor(innerType, fixedSize = false) {\r\n        super();\r\n        this.fixedSize = fixedSize;\r\n        this.innerType = innerType;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(Array.isArray(value), \"Not an array\");\r\n        const result = new Array(value.length);\r\n        for (let i = 0; i < value.length; ++i) {\r\n            result[i] = this.innerType.serialize(value[i]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        let destination = targetObject[targetKey];\r\n        if (!destination) {\r\n            targetObject[targetKey] = destination = new Array(value.length);\r\n        }\r\n\r\n        const size = this.fixedSize ? Math.min(value.length, destination.length) : value.length;\r\n\r\n        for (let i = 0; i < size; ++i) {\r\n            const errorStatus = this.innerType.deserializeWithVerify(value[i], destination, i, root);\r\n            if (errorStatus) {\r\n                return errorStatus;\r\n            }\r\n        }\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"array\",\r\n            items: this.innerType.getAsJsonSchema(),\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Array.isArray(value)) {\r\n            return \"Not an array: \" + value;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"array.\" + this.innerType.getCacheKey();\r\n    }\r\n}\r\n\r\nexport class TypeFixedClass extends BaseDataType {\r\n    /**\r\n     *\r\n     * @param {typeof BasicSerializableObject} baseclass\r\n     */\r\n    constructor(baseclass) {\r\n        super();\r\n        this.baseclass = baseclass;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(value instanceof this.baseclass, \"Not a valid class instance\");\r\n        return value.serialize();\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        const instance = Object.create(this.baseclass.prototype);\r\n        const errorState = instance.deserialize(value);\r\n        if (errorState) {\r\n            return \"Failed to deserialize class: \" + errorState;\r\n        }\r\n        targetObject[targetKey] = instance;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        this.baseclass.getSchema();\r\n        this.baseclass.getCachedSchema();\r\n        return schemaToJsonSchema(this.baseclass.getCachedSchema());\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!value) {\r\n            return \"Got null data\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"fixedclass.\" + this.baseclass.getId();\r\n    }\r\n}\r\n\r\nexport class TypeKeyValueMap extends BaseDataType {\r\n    /**\r\n     * @param {BaseDataType} valueType\r\n     * @param {boolean=} includeEmptyValues\r\n     */\r\n    constructor(valueType, includeEmptyValues = true) {\r\n        super();\r\n        this.valueType = valueType;\r\n        this.includeEmptyValues = includeEmptyValues;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(typeof value === \"object\", \"not an object\");\r\n        let result = {};\r\n        for (const key in value) {\r\n            const serialized = this.valueType.serialize(value[key]);\r\n            if (!this.includeEmptyValues && typeof serialized === \"object\") {\r\n                if (\r\n                    serialized.$ &&\r\n                    typeof serialized.data === \"object\" &&\r\n                    Object.keys(serialized.data).length === 0\r\n                ) {\r\n                    continue;\r\n                } else if (Object.keys(serialized).length === 0) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            result[key] = serialized;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        let result = {};\r\n        for (const key in value) {\r\n            const errorCode = this.valueType.deserializeWithVerify(value[key], result, key, root);\r\n            if (errorCode) {\r\n                return errorCode;\r\n            }\r\n        }\r\n        targetObject[targetKey] = result;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"object\",\r\n            additionalProperties: this.valueType.getAsJsonSchema(),\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (typeof value !== \"object\") {\r\n            return \"KV map is not an object\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"kvmap.\" + this.valueType.getCacheKey();\r\n    }\r\n}\r\n\r\nexport class TypeClassId extends BaseDataType {\r\n    /**\r\n     * @param {FactoryTemplate<*>|SingletonFactoryTemplate<*>} registry\r\n     */\r\n    constructor(registry) {\r\n        super();\r\n        this.registry = registry;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(typeof value === \"string\", \"Not a valid string\");\r\n        assert(this.registry.hasId(value), \"Id \" + value + \" not found in registry\");\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"string\",\r\n            enum: this.registry.getAllIds(),\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (typeof value !== \"string\") {\r\n            return \"Not a valid registry id key: \" + value;\r\n        }\r\n        if (!this.registry.hasId(value)) {\r\n            return \"Id \" + value + \" not known to registry\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"classid.\" + this.registry.getId();\r\n    }\r\n}\r\n\r\nexport class TypePair extends BaseDataType {\r\n    /**\r\n     * @param {BaseDataType} type1\r\n     * @param {BaseDataType} type2\r\n     */\r\n    constructor(type1, type2) {\r\n        super();\r\n        assert(type1 && type1 instanceof BaseDataType, \"bad first type given for pair\");\r\n        assert(type2 && type2 instanceof BaseDataType, \"bad second type given for pair\");\r\n        this.type1 = type1;\r\n        this.type2 = type2;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(Array.isArray(value), \"pair: not an array\");\r\n        assert(value.length === 2, \"pair: length != 2\");\r\n        return [this.type1.serialize(value[0]), this.type2.serialize(value[1])];\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        const result = [undefined, undefined];\r\n\r\n        let errorCode = this.type1.deserialize(value[0], result, 0, root);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n        errorCode = this.type2.deserialize(value[1], result, 1, root);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n\r\n        targetObject[targetKey] = result;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"array\",\r\n            minLength: 2,\r\n            maxLength: 2,\r\n            items: [this.type1.getAsJsonSchema(), this.type2.getAsJsonSchema()],\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Array.isArray(value)) {\r\n            return \"Pair is not an array\";\r\n        }\r\n        if (value.length !== 2) {\r\n            return \"Pair length != 2\";\r\n        }\r\n        let errorCode = this.type1.verifySerializedValue(value[0]);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n        errorCode = this.type2.verifySerializedValue(value[1]);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"pair.(\" + this.type1.getCacheKey() + \",\" + this.type2.getCacheKey + \")\";\r\n    }\r\n}\r\n\r\nexport class TypeNullable extends BaseDataType {\r\n    /**\r\n     * @param {BaseDataType} wrapped\r\n     */\r\n    constructor(wrapped) {\r\n        super();\r\n        this.wrapped = wrapped;\r\n    }\r\n\r\n    serialize(value) {\r\n        if (value === null || value === undefined) {\r\n            return null;\r\n        }\r\n        return this.wrapped.serialize(value);\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        if (value === null || value === undefined) {\r\n            targetObject[targetKey] = null;\r\n            return;\r\n        }\r\n        return this.wrapped.deserialize(value, targetObject, targetKey, root);\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (value === null) {\r\n            return;\r\n        }\r\n        return this.wrapped.verifySerializedValue(value);\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            oneOf: [{\r\n                    type: \"null\",\r\n                },\r\n                this.wrapped.getAsJsonSchema(),\r\n            ],\r\n        };\r\n    }\r\n\r\n    allowNull() {\r\n        return true;\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"nullable.\" + this.wrapped.getCacheKey();\r\n    }\r\n}\r\n\r\nexport class TypeStructuredObject extends BaseDataType {\r\n    /**\r\n     * @param {Object.<string, BaseDataType>} descriptor\r\n     */\r\n    constructor(descriptor) {\r\n        super();\r\n        this.descriptor = descriptor;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(typeof value === \"object\", \"not an object\");\r\n        let result = {};\r\n        for (const key in this.descriptor) {\r\n            // assert(value.hasOwnProperty(key), \"Serialization: Object does not have\", key, \"property!\");\r\n            result[key] = this.descriptor[key].serialize(value[key]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        let target = targetObject[targetKey];\r\n        if (!target) {\r\n            targetObject[targetKey] = target = {};\r\n        }\r\n\r\n        for (const key in value) {\r\n            const valueType = this.descriptor[key];\r\n            const errorCode = valueType.deserializeWithVerify(value[key], target, key, root);\r\n            if (errorCode) {\r\n                return errorCode;\r\n            }\r\n        }\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        let properties = {};\r\n        for (const key in this.descriptor) {\r\n            properties[key] = this.descriptor[key].getAsJsonSchema();\r\n        }\r\n\r\n        return {\r\n            type: \"object\",\r\n            required: Object.keys(this.descriptor),\r\n            properties,\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (typeof value !== \"object\") {\r\n            return \"structured object is not an object\";\r\n        }\r\n        for (const key in this.descriptor) {\r\n            if (!value.hasOwnProperty(key)) {\r\n                return \"structured object is missing key \" + key;\r\n            }\r\n            const subError = this.descriptor[key].verifySerializedValue(value[key]);\r\n            if (subError) {\r\n                return \"structured object::\" + subError;\r\n            }\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        let props = [];\r\n        for (const key in this.descriptor) {\r\n            props.push(key + \"=\" + this.descriptor[key].getCacheKey());\r\n        }\r\n        return \"structured[\" + props.join(\",\") + \"]\";\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/serialization_data_types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3966,
    "kind": "variable",
    "name": "globalJsonSchemaDefs",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~globalJsonSchemaDefs",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{globalJsonSchemaDefs}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 3967,
    "kind": "function",
    "name": "schemaToJsonSchema",
    "memberof": "js/savegame/serialization_data_types.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~schemaToJsonSchema",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{schemaToJsonSchema}",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "import(\"./serialization\").Schema"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3968,
    "kind": "function",
    "name": "schemaObject",
    "memberof": "js/savegame/serialization_data_types.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~schemaObject",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": null,
    "description": "Helper function to create a json schema object",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "properties",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"required\": *, \"additionalProperties\": *, \"properties\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 3969,
    "kind": "class",
    "name": "BaseDataType",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~BaseDataType",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{BaseDataType}",
    "description": "Base serialization data type",
    "lineNumber": 47,
    "interface": false
  },
  {
    "__docId__": 3970,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~BaseDataType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~BaseDataType#serialize",
    "access": "public",
    "description": "Serializes a given raw value",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 3971,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~BaseDataType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~BaseDataType#verifySerializedValue",
    "access": "public",
    "description": "Verifies a given serialized value",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 3972,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~BaseDataType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~BaseDataType#deserialize",
    "access": "public",
    "description": "Deserializes a serialized value into the target object under the given key",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 3973,
    "kind": "method",
    "name": "getAsJsonSchema",
    "memberof": "js/savegame/serialization_data_types.js~BaseDataType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~BaseDataType#getAsJsonSchema",
    "access": "public",
    "description": "Returns the json schema",
    "lineNumber": 79,
    "params": [],
    "return": {
      "types": [
        "{\"$ref\": *}"
      ]
    }
  },
  {
    "__docId__": 3974,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~BaseDataType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~BaseDataType#getAsJsonSchemaUncached",
    "access": "public",
    "description": "INTERNAL Should return the json schema representation",
    "lineNumber": 96,
    "params": [],
    "return": null
  },
  {
    "__docId__": 3975,
    "kind": "method",
    "name": "allowNull",
    "memberof": "js/savegame/serialization_data_types.js~BaseDataType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~BaseDataType#allowNull",
    "access": "public",
    "description": "Returns whether null values are okay",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 3976,
    "kind": "method",
    "name": "deserializeWithVerify",
    "memberof": "js/savegame/serialization_data_types.js~BaseDataType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~BaseDataType#deserializeWithVerify",
    "access": "public",
    "description": "Deserializes a serialized value, but performs integrity checks before",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 3977,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~BaseDataType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~BaseDataType#getCacheKey",
    "access": "public",
    "description": "Should return a cacheable key",
    "lineNumber": 135,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3978,
    "kind": "class",
    "name": "TypeInteger",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeInteger",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeInteger}",
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 3979,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeInteger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeInteger#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3980,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeInteger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeInteger#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 155,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 3981,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeInteger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeInteger#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string}"
      ]
    }
  },
  {
    "__docId__": 3982,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeInteger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeInteger#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 165,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3983,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeInteger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeInteger#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3984,
    "kind": "class",
    "name": "TypePositiveInteger",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypePositiveInteger",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypePositiveInteger}",
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 3985,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypePositiveInteger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePositiveInteger#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 177,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3986,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypePositiveInteger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePositiveInteger#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 191,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 3987,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypePositiveInteger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePositiveInteger#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 195,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string, \"minimum\": *}"
      ]
    }
  },
  {
    "__docId__": 3988,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypePositiveInteger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePositiveInteger#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 202,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3989,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypePositiveInteger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePositiveInteger#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 211,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3990,
    "kind": "class",
    "name": "TypeBoolean",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeBoolean",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeBoolean}",
    "description": null,
    "lineNumber": 216,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 3991,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeBoolean",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeBoolean#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 217,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3992,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeBoolean",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeBoolean#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 230,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 3993,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeBoolean",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeBoolean#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 234,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string}"
      ]
    }
  },
  {
    "__docId__": 3994,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeBoolean",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeBoolean#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 240,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3995,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeBoolean",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeBoolean#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 246,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3996,
    "kind": "class",
    "name": "TypeString",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeString",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeString}",
    "description": null,
    "lineNumber": 251,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 3997,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeString",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeString#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 252,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3998,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeString",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeString#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 265,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 3999,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeString",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeString#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 268,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string}"
      ]
    }
  },
  {
    "__docId__": 4000,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeString",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeString#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 274,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4001,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeString",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeString#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 280,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4002,
    "kind": "class",
    "name": "TypeVector",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeVector",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeVector}",
    "description": null,
    "lineNumber": 285,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4003,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeVector#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 286,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"x\": *, \"y\": *}"
      ]
    }
  },
  {
    "__docId__": 4004,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeVector#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 294,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4005,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeVector#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 313,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4006,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeVector#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 317,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4007,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeVector#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 323,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4008,
    "kind": "class",
    "name": "TypeTileVector",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeTileVector",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeTileVector}",
    "description": null,
    "lineNumber": 328,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4009,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeTileVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeTileVector#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 329,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"x\": *, \"y\": *}"
      ]
    }
  },
  {
    "__docId__": 4010,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeTileVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeTileVector#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 336,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4011,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeTileVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeTileVector#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 359,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4012,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeTileVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeTileVector#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 363,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4013,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeTileVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeTileVector#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 372,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4014,
    "kind": "class",
    "name": "TypeNumber",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeNumber",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeNumber}",
    "description": null,
    "lineNumber": 377,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4015,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeNumber#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 378,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4016,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeNumber#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 384,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string}"
      ]
    }
  },
  {
    "__docId__": 4017,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeNumber#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 398,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4018,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeNumber#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 402,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4019,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeNumber#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 408,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4020,
    "kind": "class",
    "name": "TypePositiveNumber",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypePositiveNumber",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypePositiveNumber}",
    "description": null,
    "lineNumber": 413,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4021,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypePositiveNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePositiveNumber#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 414,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4022,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypePositiveNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePositiveNumber#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 428,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4023,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypePositiveNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePositiveNumber#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 432,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string, \"minimum\": *}"
      ]
    }
  },
  {
    "__docId__": 4024,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypePositiveNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePositiveNumber#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 439,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4025,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypePositiveNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePositiveNumber#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 448,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4026,
    "kind": "class",
    "name": "TypeEnum",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeEnum",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeEnum}",
    "description": null,
    "lineNumber": 453,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4027,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/serialization_data_types.js~TypeEnum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEnum#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 457,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object.<string, any>"
        ],
        "spread": false,
        "optional": false,
        "name": "enumeration",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 4028,
    "kind": "member",
    "name": "availableValues",
    "memberof": "js/savegame/serialization_data_types.js~TypeEnum",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEnum#availableValues",
    "access": "public",
    "description": null,
    "lineNumber": 459,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4029,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeEnum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEnum#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 462,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4030,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeEnum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEnum#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 475,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4031,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeEnum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEnum#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 479,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string, \"enum\": *}"
      ]
    }
  },
  {
    "__docId__": 4032,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeEnum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEnum#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 486,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4033,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeEnum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEnum#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 492,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4034,
    "kind": "class",
    "name": "TypeEntity",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeEntity",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeEntity}",
    "description": null,
    "lineNumber": 497,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4035,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeEntity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEntity#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 498,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4036,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeEntity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEntity#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 507,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string, \"minimum\": *}"
      ]
    }
  },
  {
    "__docId__": 4037,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeEntity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEntity#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 522,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4038,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeEntity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEntity#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 530,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4039,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeEntity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEntity#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 536,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4040,
    "kind": "class",
    "name": "TypeEntityWeakref",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeEntityWeakref",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeEntityWeakref}",
    "description": null,
    "lineNumber": 541,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4041,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeEntityWeakref",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEntityWeakref#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 542,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4042,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeEntityWeakref",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEntityWeakref#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 563,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4043,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeEntityWeakref",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEntityWeakref#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 572,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *, \"minimum\": *}"
      ]
    }
  },
  {
    "__docId__": 4044,
    "kind": "method",
    "name": "allowNull",
    "memberof": "js/savegame/serialization_data_types.js~TypeEntityWeakref",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEntityWeakref#allowNull",
    "access": "public",
    "description": null,
    "lineNumber": 579,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 4045,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeEntityWeakref",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEntityWeakref#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 583,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4046,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeEntityWeakref",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeEntityWeakref#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 589,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4047,
    "kind": "class",
    "name": "TypeClass",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeClass",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeClass}",
    "description": null,
    "lineNumber": 594,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4048,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/serialization_data_types.js~TypeClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClass#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 600,
    "params": [
      {
        "nullable": null,
        "types": [
          "FactoryTemplate<*>"
        ],
        "spread": false,
        "optional": false,
        "name": "registry",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot, object) => object"
        ],
        "spread": false,
        "optional": false,
        "name": "customResolver",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 4049,
    "kind": "member",
    "name": "registry",
    "memberof": "js/savegame/serialization_data_types.js~TypeClass",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClass#registry",
    "access": "public",
    "description": null,
    "lineNumber": 602,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4050,
    "kind": "member",
    "name": "customResolver",
    "memberof": "js/savegame/serialization_data_types.js~TypeClass",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClass#customResolver",
    "access": "public",
    "description": null,
    "lineNumber": 603,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4051,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClass#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 606,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"$\": *, \"data\": *}"
      ]
    }
  },
  {
    "__docId__": 4052,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClass#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 614,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"oneOf\": *}"
      ]
    }
  },
  {
    "__docId__": 4053,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClass#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 644,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4054,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClass#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 666,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4055,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClass#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 676,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4056,
    "kind": "class",
    "name": "TypeClassData",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeClassData",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeClassData}",
    "description": null,
    "lineNumber": 681,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4057,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassData#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 686,
    "params": [
      {
        "nullable": null,
        "types": [
          "FactoryTemplate<*>"
        ],
        "spread": false,
        "optional": false,
        "name": "registry",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 4058,
    "kind": "member",
    "name": "registry",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassData",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassData#registry",
    "access": "public",
    "description": null,
    "lineNumber": 688,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4059,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassData#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 691,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4060,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassData#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 696,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"oneOf\": *}"
      ]
    }
  },
  {
    "__docId__": 4061,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassData#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 716,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4062,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassData#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 720,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4063,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassData#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 726,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4064,
    "kind": "class",
    "name": "TypeClassFromMetaclass",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeClassFromMetaclass}",
    "description": null,
    "lineNumber": 731,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4065,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 737,
    "params": [
      {
        "nullable": null,
        "types": [
          "typeof BasicSerializableObject"
        ],
        "spread": false,
        "optional": false,
        "name": "classHandle",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SingletonFactoryTemplate<*>"
        ],
        "spread": false,
        "optional": false,
        "name": "registry",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 4066,
    "kind": "member",
    "name": "registry",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass#registry",
    "access": "public",
    "description": null,
    "lineNumber": 739,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4067,
    "kind": "member",
    "name": "classHandle",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass#classHandle",
    "access": "public",
    "description": null,
    "lineNumber": 740,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4068,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 743,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"$\": *, \"data\": *}"
      ]
    }
  },
  {
    "__docId__": 4069,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 751,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"$\": *, \"data\": *}"
      ]
    }
  },
  {
    "__docId__": 4070,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 772,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4071,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 787,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4072,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassFromMetaclass#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 797,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4073,
    "kind": "class",
    "name": "TypeMetaClass",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeMetaClass",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeMetaClass}",
    "description": null,
    "lineNumber": 802,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4074,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/serialization_data_types.js~TypeMetaClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeMetaClass#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 807,
    "params": [
      {
        "nullable": null,
        "types": [
          "SingletonFactoryTemplate<*>"
        ],
        "spread": false,
        "optional": false,
        "name": "registry",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 4075,
    "kind": "member",
    "name": "registry",
    "memberof": "js/savegame/serialization_data_types.js~TypeMetaClass",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeMetaClass#registry",
    "access": "public",
    "description": null,
    "lineNumber": 809,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4076,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeMetaClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeMetaClass#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 812,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4077,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeMetaClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeMetaClass#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 824,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4078,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeMetaClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeMetaClass#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 832,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string, \"enum\": *}"
      ]
    }
  },
  {
    "__docId__": 4079,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeMetaClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeMetaClass#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 839,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4080,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeMetaClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeMetaClass#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 853,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4081,
    "kind": "class",
    "name": "TypeArray",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeArray",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeArray}",
    "description": null,
    "lineNumber": 858,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4082,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/serialization_data_types.js~TypeArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeArray#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 862,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseDataType"
        ],
        "spread": false,
        "optional": false,
        "name": "innerType",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 4083,
    "kind": "member",
    "name": "fixedSize",
    "memberof": "js/savegame/serialization_data_types.js~TypeArray",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeArray#fixedSize",
    "access": "public",
    "description": null,
    "lineNumber": 864,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4084,
    "kind": "member",
    "name": "innerType",
    "memberof": "js/savegame/serialization_data_types.js~TypeArray",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeArray#innerType",
    "access": "public",
    "description": null,
    "lineNumber": 865,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4085,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeArray#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 868,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4086,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeArray#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 885,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4087,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeArray#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 901,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string, \"items\": *}"
      ]
    }
  },
  {
    "__docId__": 4088,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeArray#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 908,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4089,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeArray#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 914,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4090,
    "kind": "class",
    "name": "TypeFixedClass",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeFixedClass",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeFixedClass}",
    "description": null,
    "lineNumber": 919,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4091,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/serialization_data_types.js~TypeFixedClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeFixedClass#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 924,
    "params": [
      {
        "nullable": null,
        "types": [
          "typeof BasicSerializableObject"
        ],
        "spread": false,
        "optional": false,
        "name": "baseclass",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 4092,
    "kind": "member",
    "name": "baseclass",
    "memberof": "js/savegame/serialization_data_types.js~TypeFixedClass",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeFixedClass#baseclass",
    "access": "public",
    "description": null,
    "lineNumber": 926,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4093,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeFixedClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeFixedClass#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 929,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4094,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeFixedClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeFixedClass#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 942,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4095,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeFixedClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeFixedClass#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 951,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4096,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeFixedClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeFixedClass#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 957,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4097,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeFixedClass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeFixedClass#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 963,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4098,
    "kind": "class",
    "name": "TypeKeyValueMap",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeKeyValueMap",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeKeyValueMap}",
    "description": null,
    "lineNumber": 968,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4099,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/serialization_data_types.js~TypeKeyValueMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeKeyValueMap#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 973,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseDataType"
        ],
        "spread": false,
        "optional": false,
        "name": "valueType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean="
        ],
        "spread": false,
        "optional": false,
        "name": "includeEmptyValues",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 4100,
    "kind": "member",
    "name": "valueType",
    "memberof": "js/savegame/serialization_data_types.js~TypeKeyValueMap",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeKeyValueMap#valueType",
    "access": "public",
    "description": null,
    "lineNumber": 975,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4101,
    "kind": "member",
    "name": "includeEmptyValues",
    "memberof": "js/savegame/serialization_data_types.js~TypeKeyValueMap",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeKeyValueMap#includeEmptyValues",
    "access": "public",
    "description": null,
    "lineNumber": 976,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4102,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeKeyValueMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeKeyValueMap#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 979,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4103,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeKeyValueMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeKeyValueMap#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 1009,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4104,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeKeyValueMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeKeyValueMap#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 1020,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string, \"additionalProperties\": *}"
      ]
    }
  },
  {
    "__docId__": 4105,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeKeyValueMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeKeyValueMap#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 1027,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4106,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeKeyValueMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeKeyValueMap#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 1033,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4107,
    "kind": "class",
    "name": "TypeClassId",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeClassId",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeClassId}",
    "description": null,
    "lineNumber": 1038,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4108,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassId",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassId#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 1042,
    "params": [
      {
        "nullable": null,
        "types": [
          "FactoryTemplate<*>|SingletonFactoryTemplate<*>"
        ],
        "spread": false,
        "optional": false,
        "name": "registry",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 4109,
    "kind": "member",
    "name": "registry",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassId",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassId#registry",
    "access": "public",
    "description": null,
    "lineNumber": 1044,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4110,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassId",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassId#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 1047,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4111,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassId",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassId#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 1061,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4112,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassId",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassId#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 1065,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string, \"enum\": *}"
      ]
    }
  },
  {
    "__docId__": 4113,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassId",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassId#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 1072,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4114,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeClassId",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeClassId#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 1081,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4115,
    "kind": "class",
    "name": "TypePair",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypePair",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypePair}",
    "description": null,
    "lineNumber": 1086,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4116,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/serialization_data_types.js~TypePair",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePair#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 1091,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseDataType"
        ],
        "spread": false,
        "optional": false,
        "name": "type1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BaseDataType"
        ],
        "spread": false,
        "optional": false,
        "name": "type2",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 4117,
    "kind": "member",
    "name": "type1",
    "memberof": "js/savegame/serialization_data_types.js~TypePair",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePair#type1",
    "access": "public",
    "description": null,
    "lineNumber": 1095,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4118,
    "kind": "member",
    "name": "type2",
    "memberof": "js/savegame/serialization_data_types.js~TypePair",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePair#type2",
    "access": "public",
    "description": null,
    "lineNumber": 1096,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4119,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypePair",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePair#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 1099,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 4120,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypePair",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePair#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 1113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4121,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypePair",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePair#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 1128,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string, \"minLength\": number, \"maxLength\": number, \"items\": *}"
      ]
    }
  },
  {
    "__docId__": 4122,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypePair",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePair#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 1137,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4123,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypePair",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypePair#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 1154,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4124,
    "kind": "class",
    "name": "TypeNullable",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeNullable",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeNullable}",
    "description": null,
    "lineNumber": 1159,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4125,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/serialization_data_types.js~TypeNullable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeNullable#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 1163,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseDataType"
        ],
        "spread": false,
        "optional": false,
        "name": "wrapped",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 4126,
    "kind": "member",
    "name": "wrapped",
    "memberof": "js/savegame/serialization_data_types.js~TypeNullable",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeNullable#wrapped",
    "access": "public",
    "description": null,
    "lineNumber": 1165,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4127,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeNullable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeNullable#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 1168,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4128,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeNullable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeNullable#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 1183,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4129,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeNullable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeNullable#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 1191,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4130,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeNullable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeNullable#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 1198,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"oneOf\": *}"
      ]
    }
  },
  {
    "__docId__": 4131,
    "kind": "method",
    "name": "allowNull",
    "memberof": "js/savegame/serialization_data_types.js~TypeNullable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeNullable#allowNull",
    "access": "public",
    "description": null,
    "lineNumber": 1208,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 4132,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeNullable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeNullable#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 1212,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4133,
    "kind": "class",
    "name": "TypeStructuredObject",
    "memberof": "js/savegame/serialization_data_types.js",
    "static": true,
    "longname": "js/savegame/serialization_data_types.js~TypeStructuredObject",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serialization_data_types.js",
    "importStyle": "{TypeStructuredObject}",
    "description": null,
    "lineNumber": 1217,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseDataType"
    ]
  },
  {
    "__docId__": 4134,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/savegame/serialization_data_types.js~TypeStructuredObject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeStructuredObject#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 1221,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object.<string, BaseDataType>"
        ],
        "spread": false,
        "optional": false,
        "name": "descriptor",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 4135,
    "kind": "member",
    "name": "descriptor",
    "memberof": "js/savegame/serialization_data_types.js~TypeStructuredObject",
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeStructuredObject#descriptor",
    "access": "public",
    "description": null,
    "lineNumber": 1223,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4136,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeStructuredObject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeStructuredObject#serialize",
    "access": "public",
    "description": null,
    "lineNumber": 1226,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4137,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/savegame/serialization_data_types.js~TypeStructuredObject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeStructuredObject#deserialize",
    "access": "public",
    "description": "",
    "see": [
      "BaseDataType.deserialize"
    ],
    "lineNumber": 1244,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void} String error code or null on success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": "String error code or null on success"
    }
  },
  {
    "__docId__": 4138,
    "kind": "method",
    "name": "getAsJsonSchemaUncached",
    "memberof": "js/savegame/serialization_data_types.js~TypeStructuredObject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeStructuredObject#getAsJsonSchemaUncached",
    "access": "public",
    "description": null,
    "lineNumber": 1259,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 4139,
    "kind": "method",
    "name": "verifySerializedValue",
    "memberof": "js/savegame/serialization_data_types.js~TypeStructuredObject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeStructuredObject#verifySerializedValue",
    "access": "public",
    "description": null,
    "lineNumber": 1272,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4140,
    "kind": "method",
    "name": "getCacheKey",
    "memberof": "js/savegame/serialization_data_types.js~TypeStructuredObject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serialization_data_types.js~TypeStructuredObject#getCacheKey",
    "access": "public",
    "description": null,
    "lineNumber": 1287,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4141,
    "kind": "file",
    "name": "js/savegame/serializer_internal.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { getBuildingDataFromCode } from \"../game/building_codes\";\r\nimport { Entity } from \"../game/entity\";\r\nimport { GameRoot } from \"../game/root\";\r\n\r\nconst logger = createLogger(\"serializer_internal\");\r\n\r\n// Internal serializer methods\r\nexport class SerializerInternal {\r\n    /**\r\n     * Serializes an array of entities\r\n     * @param {Array<Entity>} array\r\n     */\r\n    serializeEntityArray(array) {\r\n        const serialized = [];\r\n        for (let i = 0; i < array.length; ++i) {\r\n            const entity = array[i];\r\n            if (!entity.queuedForDestroy && !entity.destroyed) {\r\n                serialized.push(entity.serialize());\r\n            }\r\n        }\r\n        return serialized;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     * @param {Array<Entity>} array\r\n     * @returns {string|void}\r\n     */\r\n    deserializeEntityArray(root, array) {\r\n        for (let i = 0; i < array.length; ++i) {\r\n            this.deserializeEntity(root, array[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     * @param {Entity} payload\r\n     */\r\n    deserializeEntity(root, payload) {\r\n        const staticData = payload.components.StaticMapEntity;\r\n        assert(staticData, \"entity has no static data\");\r\n\r\n        const code = staticData.code;\r\n        const data = getBuildingDataFromCode(code);\r\n\r\n        const metaBuilding = data.metaInstance;\r\n\r\n        const entity = metaBuilding.createEntity({\r\n            root,\r\n            origin: Vector.fromSerializedObject(staticData.origin),\r\n            rotation: staticData.rotation,\r\n            originalRotation: staticData.originalRotation,\r\n            rotationVariant: data.rotationVariant,\r\n            variant: data.variant,\r\n        });\r\n\r\n        entity.uid = payload.uid;\r\n\r\n        this.deserializeComponents(root, entity, payload.components);\r\n\r\n        root.entityMgr.registerEntity(entity, payload.uid);\r\n        root.map.placeStaticEntity(entity);\r\n    }\r\n\r\n    /////// COMPONENTS ////\r\n\r\n    /**\r\n     * Deserializes components of an entity\r\n     * @param {GameRoot} root\r\n     * @param {Entity} entity\r\n     * @param {Object.<string, any>} data\r\n     * @returns {string|void}\r\n     */\r\n    deserializeComponents(root, entity, data) {\r\n        for (const componentId in data) {\r\n            if (!entity.components[componentId]) {\r\n                if (G_IS_DEV && !globalConfig.debug.disableSlowAsserts) {\r\n                    // @ts-ignore\r\n                    if (++window.componentWarningsShown < 100) {\r\n                        logger.warn(\"Entity no longer has component:\", componentId);\r\n                    }\r\n                }\r\n                continue;\r\n            }\r\n\r\n            const errorStatus = entity.components[componentId].deserialize(data[componentId], root);\r\n            if (errorStatus) {\r\n                return errorStatus;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/savegame/serializer_internal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4142,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/savegame/serializer_internal.js",
    "static": true,
    "longname": "js/savegame/serializer_internal.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/savegame/serializer_internal.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 4143,
    "kind": "class",
    "name": "SerializerInternal",
    "memberof": "js/savegame/serializer_internal.js",
    "static": true,
    "longname": "js/savegame/serializer_internal.js~SerializerInternal",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/savegame/serializer_internal.js",
    "importStyle": "{SerializerInternal}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 4144,
    "kind": "method",
    "name": "serializeEntityArray",
    "memberof": "js/savegame/serializer_internal.js~SerializerInternal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serializer_internal.js~SerializerInternal#serializeEntityArray",
    "access": "public",
    "description": "Serializes an array of entities",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Entity>"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4145,
    "kind": "method",
    "name": "deserializeEntityArray",
    "memberof": "js/savegame/serializer_internal.js~SerializerInternal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serializer_internal.js~SerializerInternal#deserializeEntityArray",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<Entity>"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4146,
    "kind": "method",
    "name": "deserializeEntity",
    "memberof": "js/savegame/serializer_internal.js~SerializerInternal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serializer_internal.js~SerializerInternal#deserializeEntity",
    "access": "public",
    "description": "",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 4147,
    "kind": "method",
    "name": "deserializeComponents",
    "memberof": "js/savegame/serializer_internal.js~SerializerInternal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/savegame/serializer_internal.js~SerializerInternal#deserializeComponents",
    "access": "public",
    "description": "Deserializes components of an entity",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "GameRoot"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object.<string, any>"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4148,
    "kind": "file",
    "name": "js/states/about.js",
    "content": "import { TextualGameState } from \"../core/textual_game_state\";\r\nimport { T } from \"../translations\";\r\nimport { THIRDPARTY_URLS } from \"../core/config\";\r\nimport { cachebust } from \"../core/cachebust\";\r\n\r\nexport class AboutState extends TextualGameState {\r\n    constructor() {\r\n        super(\"AboutState\");\r\n    }\r\n\r\n    getStateHeaderTitle() {\r\n        return T.about.title;\r\n    }\r\n\r\n    getMainContentHTML() {\r\n        return `\r\n            <div class=\"head\">\r\n                <img src=\"${cachebust(\"res/logo.png\")}\" alt=\"shapez.io Logo\">\r\n            </div>\r\n            <div class=\"text\">\r\n            ${T.about.body\r\n                .replace(\"<githublink>\", THIRDPARTY_URLS.github)\r\n                .replace(\"<discordlink>\", THIRDPARTY_URLS.discord)}\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    onEnter() {\r\n        const links = this.htmlElement.querySelectorAll(\"a[href]\");\r\n        links.forEach(link => {\r\n            this.trackClicks(\r\n                link,\r\n                () => this.app.platformWrapper.openExternalLink(link.getAttribute(\"href\")),\r\n                { preventClick: true }\r\n            );\r\n        });\r\n    }\r\n\r\n    getDefaultPreviousState() {\r\n        return \"SettingsState\";\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/states/about.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4149,
    "kind": "class",
    "name": "AboutState",
    "memberof": "js/states/about.js",
    "static": true,
    "longname": "js/states/about.js~AboutState",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/states/about.js",
    "importStyle": "{AboutState}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/core/textual_game_state.js~TextualGameState"
    ]
  },
  {
    "__docId__": 4150,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/states/about.js~AboutState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/about.js~AboutState#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 4151,
    "kind": "method",
    "name": "getStateHeaderTitle",
    "memberof": "js/states/about.js~AboutState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/about.js~AboutState#getStateHeaderTitle",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4152,
    "kind": "method",
    "name": "getMainContentHTML",
    "memberof": "js/states/about.js~AboutState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/about.js~AboutState#getMainContentHTML",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4153,
    "kind": "method",
    "name": "onEnter",
    "memberof": "js/states/about.js~AboutState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/about.js~AboutState#onEnter",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4154,
    "kind": "method",
    "name": "getDefaultPreviousState",
    "memberof": "js/states/about.js~AboutState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/about.js~AboutState#getDefaultPreviousState",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4155,
    "kind": "file",
    "name": "js/states/changelog.js",
    "content": "import { TextualGameState } from \"../core/textual_game_state\";\r\nimport { T } from \"../translations\";\r\nimport { CHANGELOG } from \"../changelog\";\r\n\r\nexport class ChangelogState extends TextualGameState {\r\n    constructor() {\r\n        super(\"ChangelogState\");\r\n    }\r\n\r\n    getStateHeaderTitle() {\r\n        return T.changelog.title;\r\n    }\r\n\r\n    getMainContentHTML() {\r\n        const entries = CHANGELOG;\r\n\r\n        let html = \"\";\r\n\r\n        for (let i = 0; i < entries.length; ++i) {\r\n            const entry = entries[i];\r\n            html += `\r\n                <div class=\"entry\">\r\n                    <span class=\"version\">${entry.version}</span>\r\n                    <span class=\"date\">${entry.date}</span>\r\n                    <ul class=\"changes\">\r\n                        ${entry.entries.map(text => `<li>${text}</li>`).join(\"\")}\r\n                    </ul>\r\n                </div>\r\n            `;\r\n        }\r\n\r\n        return html;\r\n    }\r\n\r\n    onEnter() {\r\n        const links = this.htmlElement.querySelectorAll(\"a[href]\");\r\n        links.forEach(link => {\r\n            this.trackClicks(\r\n                link,\r\n                () => this.app.platformWrapper.openExternalLink(link.getAttribute(\"href\")),\r\n                { preventClick: true }\r\n            );\r\n        });\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/states/changelog.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4156,
    "kind": "class",
    "name": "ChangelogState",
    "memberof": "js/states/changelog.js",
    "static": true,
    "longname": "js/states/changelog.js~ChangelogState",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/states/changelog.js",
    "importStyle": "{ChangelogState}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/core/textual_game_state.js~TextualGameState"
    ]
  },
  {
    "__docId__": 4157,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/states/changelog.js~ChangelogState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/changelog.js~ChangelogState#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 4158,
    "kind": "method",
    "name": "getStateHeaderTitle",
    "memberof": "js/states/changelog.js~ChangelogState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/changelog.js~ChangelogState#getStateHeaderTitle",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4159,
    "kind": "method",
    "name": "getMainContentHTML",
    "memberof": "js/states/changelog.js~ChangelogState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/changelog.js~ChangelogState#getMainContentHTML",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4160,
    "kind": "method",
    "name": "onEnter",
    "memberof": "js/states/changelog.js~ChangelogState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/changelog.js~ChangelogState#onEnter",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4161,
    "kind": "file",
    "name": "js/states/ingame.js",
    "content": "import { APPLICATION_ERROR_OCCURED } from \"../core/error_handler\";\r\nimport { GameState } from \"../core/game_state\";\r\nimport { logSection, createLogger } from \"../core/logging\";\r\nimport { waitNextFrame } from \"../core/utils\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { GameLoadingOverlay } from \"../game/game_loading_overlay\";\r\nimport { KeyActionMapper } from \"../game/key_action_mapper\";\r\nimport { Savegame } from \"../savegame/savegame\";\r\nimport { GameCore } from \"../game/core\";\r\nimport { MUSIC } from \"../platform/sound\";\r\n\r\nconst logger = createLogger(\"state/ingame\");\r\n\r\n// Different sub-states\r\nconst stages = {\r\n    s3_createCore: \"🌈 3: Create core\",\r\n    s4_A_initEmptyGame: \"🌈 4/A: Init empty game\",\r\n    s4_B_resumeGame: \"🌈 4/B: Resume game\",\r\n\r\n    s5_firstUpdate: \"🌈 5: First game update\",\r\n    s6_postLoadHook: \"🌈 6: Post load hook\",\r\n    s7_warmup: \"🌈 7: Warmup\",\r\n\r\n    s10_gameRunning: \"🌈 10: Game finally running\",\r\n\r\n    leaving: \"🌈 Saving, then leaving the game\",\r\n    destroyed: \"🌈 DESTROYED: Core is empty and waits for state leave\",\r\n    initFailed: \"🌈 ERROR: Initialization failed!\",\r\n};\r\n\r\nexport const gameCreationAction = {\r\n    new: \"new-game\",\r\n    resume: \"resume-game\",\r\n};\r\n\r\n// Typehints\r\nexport class GameCreationPayload {\r\n    constructor() {\r\n        /** @type {boolean|undefined} */\r\n        this.fastEnter;\r\n\r\n        /** @type {Savegame} */\r\n        this.savegame;\r\n    }\r\n}\r\n\r\nexport class InGameState extends GameState {\r\n    constructor() {\r\n        super(\"InGameState\");\r\n\r\n        /** @type {GameCreationPayload} */\r\n        this.creationPayload = null;\r\n\r\n        // Stores current stage\r\n        this.stage = \"\";\r\n\r\n        /** @type {GameCore} */\r\n        this.core = null;\r\n\r\n        /** @type {KeyActionMapper} */\r\n        this.keyActionMapper = null;\r\n\r\n        /** @type {GameLoadingOverlay} */\r\n        this.loadingOverlay = null;\r\n\r\n        /** @type {Savegame} */\r\n        this.savegame = null;\r\n\r\n        this.boundInputFilter = this.filterInput.bind(this);\r\n\r\n        /**\r\n         * Whether we are currently saving the game\r\n         * @TODO: This doesn't realy fit here\r\n         */\r\n        this.currentSavePromise = null;\r\n    }\r\n\r\n    /**\r\n     * Switches the game into another sub-state\r\n     * @param {string} stage\r\n     */\r\n    switchStage(stage) {\r\n        assert(stage, \"Got empty stage\");\r\n        if (stage !== this.stage) {\r\n            this.stage = stage;\r\n            logger.log(this.stage);\r\n            return true;\r\n        } else {\r\n            // log(this, \"Re entering\", stage);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // GameState implementation\r\n    getInnerHTML() {\r\n        return \"\";\r\n    }\r\n\r\n    getThemeMusic() {\r\n        return MUSIC.theme;\r\n    }\r\n\r\n    onBeforeExit() {\r\n        // logger.log(\"Saving before quitting\");\r\n        // return this.doSave().then(() => {\r\n        //     logger.log(this, \"Successfully saved\");\r\n        //     // this.stageDestroyed();\r\n        // });\r\n    }\r\n\r\n    onAppPause() {\r\n        // if (this.stage === stages.s10_gameRunning) {\r\n        //     logger.log(\"Saving because app got paused\");\r\n        //     this.doSave();\r\n        // }\r\n    }\r\n\r\n    getHasFadeIn() {\r\n        return false;\r\n    }\r\n\r\n    getPauseOnFocusLost() {\r\n        return false;\r\n    }\r\n\r\n    getHasUnloadConfirmation() {\r\n        return true;\r\n    }\r\n\r\n    onLeave() {\r\n        if (this.core) {\r\n            this.stageDestroyed();\r\n        }\r\n        this.app.inputMgr.dismountFilter(this.boundInputFilter);\r\n    }\r\n\r\n    onResized(w, h) {\r\n        super.onResized(w, h);\r\n        if (this.stage === stages.s10_gameRunning) {\r\n            this.core.resize(w, h);\r\n        }\r\n    }\r\n\r\n    // ---- End of GameState implementation\r\n\r\n    /**\r\n     * Goes back to the menu state\r\n     */\r\n    goBackToMenu() {\r\n        this.saveThenGoToState(\"MainMenuState\");\r\n    }\r\n\r\n    /**\r\n     * Goes back to the settings state\r\n     */\r\n    goToSettings() {\r\n        this.saveThenGoToState(\"SettingsState\", {\r\n            backToStateId: this.key,\r\n            backToStatePayload: this.creationPayload,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Goes back to the settings state\r\n     */\r\n    goToKeybindings() {\r\n        this.saveThenGoToState(\"KeybindingsState\", {\r\n            backToStateId: this.key,\r\n            backToStatePayload: this.creationPayload,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Moves to a state outside of the game\r\n     * @param {string} stateId\r\n     * @param {any=} payload\r\n     */\r\n    saveThenGoToState(stateId, payload) {\r\n        if (this.stage === stages.leaving || this.stage === stages.destroyed) {\r\n            logger.warn(\r\n                \"Tried to leave game twice or during destroy:\",\r\n                this.stage,\r\n                \"(attempted to move to\",\r\n                stateId,\r\n                \")\"\r\n            );\r\n            return;\r\n        }\r\n        this.stageLeavingGame();\r\n        this.doSave().then(() => {\r\n            this.stageDestroyed();\r\n            this.moveToState(stateId, payload);\r\n        });\r\n    }\r\n\r\n    onBackButton() {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * Called when the game somehow failed to initialize. Resets everything to basic state and\r\n     * then goes to the main menu, showing the error\r\n     * @param {string} err\r\n     */\r\n    onInitializationFailure(err) {\r\n        if (this.switchStage(stages.initFailed)) {\r\n            logger.error(\"Init failure:\", err);\r\n            this.stageDestroyed();\r\n            this.moveToState(\"MainMenuState\", { loadError: err });\r\n        }\r\n    }\r\n\r\n    // STAGES\r\n\r\n    /**\r\n     * Creates the game core instance, and thus the root\r\n     */\r\n    stage3CreateCore() {\r\n        if (this.switchStage(stages.s3_createCore)) {\r\n            logger.log(\"Creating new game core\");\r\n            this.core = new GameCore(this.app);\r\n\r\n            this.core.initializeRoot(this, this.savegame);\r\n\r\n            if (this.savegame.hasGameDump()) {\r\n                this.stage4bResumeGame();\r\n            } else {\r\n                this.app.gameAnalytics.handleGameStarted();\r\n                this.stage4aInitEmptyGame();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes a new empty game\r\n     */\r\n    stage4aInitEmptyGame() {\r\n        if (this.switchStage(stages.s4_A_initEmptyGame)) {\r\n            this.core.initNewGame();\r\n            this.stage5FirstUpdate();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resumes an existing game\r\n     */\r\n    stage4bResumeGame() {\r\n        if (this.switchStage(stages.s4_B_resumeGame)) {\r\n            if (this.core.initExistingGame().isBad()) {\r\n                var errorJSON = this.core.initExistingGame().reason;\r\n                // if (errorJSON.status) {\r\n                //     this.onInitializationFailure(\"Savegame is corrupt and can not be restored.\");\r\n                //     //TODO: load game without mod\r\n                //     // if (errorJSON.status === \"missing\")\r\n                //     //     this.core.root.hud.parts.dialogs.showOptionChooser(\r\n                //     //     \"Missing \" + errorJSON.type + \" with id \" + errorJSON.id, {\r\n                //     //         options: [{ value: \"Test\", text: \"TEst\" }],\r\n                //     //     }\r\n                //     // );\r\n                // } else {\r\n                this.onInitializationFailure(\"Savegame is corrupt and can not be restored.\");\r\n                // }\r\n                return;\r\n            }\r\n            this.app.gameAnalytics.handleGameResumed();\r\n            this.stage5FirstUpdate();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs the first game update on the game which initializes most caches\r\n     */\r\n    stage5FirstUpdate() {\r\n        if (this.switchStage(stages.s5_firstUpdate)) {\r\n            //Call mod for gameload\r\n            for (let i = 0; i < shapezAPI.modOrder.length; i++) {\r\n                const modId = shapezAPI.modOrder[i];\r\n                shapezAPI.mods.get(modId).gameBeforeFirstUpdate(this.core.root);\r\n            }\r\n            this.core.root.logicInitialized = true;\r\n            this.core.updateLogic();\r\n            this.stage6PostLoadHook();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Call the post load hook, this means that we have loaded the game, and all systems\r\n     * can operate and start to work now.\r\n     */\r\n    stage6PostLoadHook() {\r\n        if (this.switchStage(stages.s6_postLoadHook)) {\r\n            logger.log(\"Post load hook\");\r\n            this.core.postLoadHook();\r\n            this.stage7Warmup();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This makes the game idle and draw for a while, because we run most code this way\r\n     * the V8 engine can already start to optimize it. Also this makes sure the resources\r\n     * are in the VRAM and we have a smooth experience once we start.\r\n     */\r\n    stage7Warmup() {\r\n        if (this.switchStage(stages.s7_warmup)) {\r\n            if (this.creationPayload.fastEnter) {\r\n                this.warmupTimeSeconds = globalConfig.warmupTimeSecondsFast;\r\n            } else {\r\n                this.warmupTimeSeconds = globalConfig.warmupTimeSecondsRegular;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The final stage where this game is running and updating regulary.\r\n     */\r\n    stage10GameRunning() {\r\n        if (this.switchStage(stages.s10_gameRunning)) {\r\n            this.core.root.signals.readyToRender.dispatch();\r\n\r\n            logSection(\"GAME STARTED\", \"#26a69a\");\r\n\r\n            // Initial resize, might have changed during loading (this is possible)\r\n            this.core.resize(this.app.screenWidth, this.app.screenHeight);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This stage destroys the whole game, used to cleanup\r\n     */\r\n    stageDestroyed() {\r\n        if (this.switchStage(stages.destroyed)) {\r\n            // Cleanup all api calls\r\n            this.cancelAllAsyncOperations();\r\n\r\n            if (this.syncer) {\r\n                this.syncer.cancelSync();\r\n                this.syncer = null;\r\n            }\r\n\r\n            // Cleanup core\r\n            if (this.core) {\r\n                this.core.destruct();\r\n                this.core = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * When leaving the game\r\n     */\r\n    stageLeavingGame() {\r\n        if (this.switchStage(stages.leaving)) {\r\n            // ...\r\n        }\r\n    }\r\n\r\n    // END STAGES\r\n\r\n    /**\r\n     * Filters the input (keybindings)\r\n     */\r\n    filterInput() {\r\n        return this.stage === stages.s10_gameRunning;\r\n    }\r\n\r\n    /**\r\n     * @param {GameCreationPayload} payload\r\n     */\r\n    onEnter(payload) {\r\n        this.app.inputMgr.installFilter(this.boundInputFilter);\r\n\r\n        this.creationPayload = payload;\r\n        this.savegame = payload.savegame;\r\n\r\n        this.loadingOverlay = new GameLoadingOverlay(this.app, this.getDivElement());\r\n        this.loadingOverlay.showBasic();\r\n\r\n        // Remove unneded default element\r\n        document.body.querySelector(\".modalDialogParent\").remove();\r\n\r\n        this.asyncChannel.watch(waitNextFrame()).then(() => this.stage3CreateCore());\r\n    }\r\n\r\n    /**\r\n     * Render callback\r\n     * @param {number} dt\r\n     */\r\n    onRender(dt) {\r\n        if (APPLICATION_ERROR_OCCURED) {\r\n            // Application somehow crashed, do not do anything\r\n            return;\r\n        }\r\n\r\n        if (this.stage === stages.s7_warmup) {\r\n            this.core.draw();\r\n            this.warmupTimeSeconds -= dt / 1000.0;\r\n            if (this.warmupTimeSeconds < 0) {\r\n                logger.log(\"Warmup completed\");\r\n                this.stage10GameRunning();\r\n            }\r\n        }\r\n\r\n        if (this.stage === stages.s10_gameRunning) {\r\n            this.core.tick(dt);\r\n        }\r\n\r\n        // If the stage is still active (This might not be the case if tick() moved us to game over)\r\n        if (this.stage === stages.s10_gameRunning) {\r\n            // Only draw if page visible\r\n            if (this.app.pageVisible) {\r\n                this.core.draw();\r\n            }\r\n\r\n            this.loadingOverlay.removeIfAttached();\r\n        } else {\r\n            if (!this.loadingOverlay.isAttached()) {\r\n                this.loadingOverlay.showBasic();\r\n            }\r\n        }\r\n    }\r\n\r\n    onBackgroundTick(dt) {\r\n        this.onRender(dt);\r\n    }\r\n\r\n    /**\r\n     * Saves the game\r\n     */\r\n\r\n    doSave() {\r\n        if (!this.savegame || !this.savegame.isSaveable()) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (APPLICATION_ERROR_OCCURED) {\r\n            logger.warn(\"skipping save because application crashed\");\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (\r\n            this.stage !== stages.s10_gameRunning &&\r\n            this.stage !== stages.s7_warmup &&\r\n            this.stage !== stages.leaving\r\n        ) {\r\n            logger.warn(\"Skipping save because game is not ready\");\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.currentSavePromise) {\r\n            logger.warn(\"Skipping double save and returning same promise\");\r\n            return this.currentSavePromise;\r\n        }\r\n        logger.log(\"Starting to save game ...\");\r\n        this.savegame.updateData(this.core.root);\r\n\r\n        this.currentSavePromise = this.savegame\r\n            .writeSavegameAndMetadata()\r\n            .catch(err => {\r\n                // Catch errors\r\n                logger.warn(\"Failed to save:\", err);\r\n            })\r\n            .then(() => {\r\n                // Clear promise\r\n                logger.log(\"Saved!\");\r\n                this.core.root.signals.gameSaved.dispatch();\r\n                this.currentSavePromise = null;\r\n            });\r\n\r\n        return this.currentSavePromise;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/states/ingame.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4162,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/states/ingame.js",
    "static": true,
    "longname": "js/states/ingame.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/states/ingame.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 4163,
    "kind": "variable",
    "name": "stages",
    "memberof": "js/states/ingame.js",
    "static": true,
    "longname": "js/states/ingame.js~stages",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/states/ingame.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "{\"s3_createCore\": string, \"s4_A_initEmptyGame\": string, \"s4_B_resumeGame\": string, \"s5_firstUpdate\": string, \"s6_postLoadHook\": string, \"s7_warmup\": string, \"s10_gameRunning\": string, \"leaving\": string, \"destroyed\": string, \"initFailed\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 4164,
    "kind": "variable",
    "name": "gameCreationAction",
    "memberof": "js/states/ingame.js",
    "static": true,
    "longname": "js/states/ingame.js~gameCreationAction",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/states/ingame.js",
    "importStyle": "{gameCreationAction}",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "{\"new\": string, \"resume\": string}"
      ]
    }
  },
  {
    "__docId__": 4165,
    "kind": "class",
    "name": "GameCreationPayload",
    "memberof": "js/states/ingame.js",
    "static": true,
    "longname": "js/states/ingame.js~GameCreationPayload",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/states/ingame.js",
    "importStyle": "{GameCreationPayload}",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 4166,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/states/ingame.js~GameCreationPayload",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~GameCreationPayload#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 4167,
    "kind": "class",
    "name": "InGameState",
    "memberof": "js/states/ingame.js",
    "static": true,
    "longname": "js/states/ingame.js~InGameState",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/states/ingame.js",
    "importStyle": "{InGameState}",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/core/game_state.js~GameState"
    ]
  },
  {
    "__docId__": 4168,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 4169,
    "kind": "member",
    "name": "creationPayload",
    "memberof": "js/states/ingame.js~InGameState",
    "static": false,
    "longname": "js/states/ingame.js~InGameState#creationPayload",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "GameCreationPayload"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4170,
    "kind": "member",
    "name": "stage",
    "memberof": "js/states/ingame.js~InGameState",
    "static": false,
    "longname": "js/states/ingame.js~InGameState#stage",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4171,
    "kind": "member",
    "name": "core",
    "memberof": "js/states/ingame.js~InGameState",
    "static": false,
    "longname": "js/states/ingame.js~InGameState#core",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "GameCore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4172,
    "kind": "member",
    "name": "keyActionMapper",
    "memberof": "js/states/ingame.js~InGameState",
    "static": false,
    "longname": "js/states/ingame.js~InGameState#keyActionMapper",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "KeyActionMapper"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4173,
    "kind": "member",
    "name": "loadingOverlay",
    "memberof": "js/states/ingame.js~InGameState",
    "static": false,
    "longname": "js/states/ingame.js~InGameState#loadingOverlay",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "GameLoadingOverlay"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4174,
    "kind": "member",
    "name": "savegame",
    "memberof": "js/states/ingame.js~InGameState",
    "static": false,
    "longname": "js/states/ingame.js~InGameState#savegame",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "Savegame"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4175,
    "kind": "member",
    "name": "boundInputFilter",
    "memberof": "js/states/ingame.js~InGameState",
    "static": false,
    "longname": "js/states/ingame.js~InGameState#boundInputFilter",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4176,
    "kind": "member",
    "name": "currentSavePromise",
    "memberof": "js/states/ingame.js~InGameState",
    "static": false,
    "longname": "js/states/ingame.js~InGameState#currentSavePromise",
    "access": "public",
    "description": "Whether we are currently saving the game\n@TODO: This doesn't realy fit here",
    "lineNumber": 75,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4177,
    "kind": "method",
    "name": "switchStage",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#switchStage",
    "access": "public",
    "description": "Switches the game into another sub-state",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 4179,
    "kind": "method",
    "name": "getInnerHTML",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#getInnerHTML",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4180,
    "kind": "method",
    "name": "getThemeMusic",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#getThemeMusic",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4181,
    "kind": "method",
    "name": "onBeforeExit",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#onBeforeExit",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4182,
    "kind": "method",
    "name": "onAppPause",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#onAppPause",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4183,
    "kind": "method",
    "name": "getHasFadeIn",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#getHasFadeIn",
    "access": "public",
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 4184,
    "kind": "method",
    "name": "getPauseOnFocusLost",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#getPauseOnFocusLost",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 4185,
    "kind": "method",
    "name": "getHasUnloadConfirmation",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#getHasUnloadConfirmation",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 4186,
    "kind": "method",
    "name": "onLeave",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#onLeave",
    "access": "public",
    "description": null,
    "lineNumber": 130,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4187,
    "kind": "method",
    "name": "onResized",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#onResized",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "params": [
      {
        "name": "w",
        "types": [
          "*"
        ]
      },
      {
        "name": "h",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 4188,
    "kind": "method",
    "name": "goBackToMenu",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#goBackToMenu",
    "access": "public",
    "description": "Goes back to the menu state",
    "lineNumber": 149,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4189,
    "kind": "method",
    "name": "goToSettings",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#goToSettings",
    "access": "public",
    "description": "Goes back to the settings state",
    "lineNumber": 156,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4190,
    "kind": "method",
    "name": "goToKeybindings",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#goToKeybindings",
    "access": "public",
    "description": "Goes back to the settings state",
    "lineNumber": 166,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4191,
    "kind": "method",
    "name": "saveThenGoToState",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#saveThenGoToState",
    "access": "public",
    "description": "Moves to a state outside of the game",
    "lineNumber": 178,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "stateId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any="
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 4192,
    "kind": "method",
    "name": "onBackButton",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#onBackButton",
    "access": "public",
    "description": null,
    "lineNumber": 196,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4193,
    "kind": "method",
    "name": "onInitializationFailure",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#onInitializationFailure",
    "access": "public",
    "description": "Called when the game somehow failed to initialize. Resets everything to basic state and\nthen goes to the main menu, showing the error",
    "lineNumber": 205,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "err",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 4194,
    "kind": "method",
    "name": "stage3CreateCore",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#stage3CreateCore",
    "access": "public",
    "description": "Creates the game core instance, and thus the root",
    "lineNumber": 218,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4196,
    "kind": "method",
    "name": "stage4aInitEmptyGame",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#stage4aInitEmptyGame",
    "access": "public",
    "description": "Initializes a new empty game",
    "lineNumber": 237,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4197,
    "kind": "method",
    "name": "stage4bResumeGame",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#stage4bResumeGame",
    "access": "public",
    "description": "Resumes an existing game",
    "lineNumber": 247,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4198,
    "kind": "method",
    "name": "stage5FirstUpdate",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#stage5FirstUpdate",
    "access": "public",
    "description": "Performs the first game update on the game which initializes most caches",
    "lineNumber": 273,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4199,
    "kind": "method",
    "name": "stage6PostLoadHook",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#stage6PostLoadHook",
    "access": "public",
    "description": "Call the post load hook, this means that we have loaded the game, and all systems\ncan operate and start to work now.",
    "lineNumber": 290,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4200,
    "kind": "method",
    "name": "stage7Warmup",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#stage7Warmup",
    "access": "public",
    "description": "This makes the game idle and draw for a while, because we run most code this way\nthe V8 engine can already start to optimize it. Also this makes sure the resources\nare in the VRAM and we have a smooth experience once we start.",
    "lineNumber": 303,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4201,
    "kind": "member",
    "name": "warmupTimeSeconds",
    "memberof": "js/states/ingame.js~InGameState",
    "static": false,
    "longname": "js/states/ingame.js~InGameState#warmupTimeSeconds",
    "access": "public",
    "description": null,
    "lineNumber": 306,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4203,
    "kind": "method",
    "name": "stage10GameRunning",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#stage10GameRunning",
    "access": "public",
    "description": "The final stage where this game is running and updating regulary.",
    "lineNumber": 316,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4204,
    "kind": "method",
    "name": "stageDestroyed",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#stageDestroyed",
    "access": "public",
    "description": "This stage destroys the whole game, used to cleanup",
    "lineNumber": 330,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4205,
    "kind": "member",
    "name": "syncer",
    "memberof": "js/states/ingame.js~InGameState",
    "static": false,
    "longname": "js/states/ingame.js~InGameState#syncer",
    "access": "public",
    "description": null,
    "lineNumber": 337,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4207,
    "kind": "method",
    "name": "stageLeavingGame",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#stageLeavingGame",
    "access": "public",
    "description": "When leaving the game",
    "lineNumber": 351,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4208,
    "kind": "method",
    "name": "filterInput",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#filterInput",
    "access": "public",
    "description": "Filters the input (keybindings)",
    "lineNumber": 362,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4209,
    "kind": "method",
    "name": "onEnter",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#onEnter",
    "access": "public",
    "description": "",
    "lineNumber": 369,
    "params": [
      {
        "nullable": null,
        "types": [
          "GameCreationPayload"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 4213,
    "kind": "method",
    "name": "onRender",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#onRender",
    "access": "public",
    "description": "Render callback",
    "lineNumber": 388,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 4215,
    "kind": "method",
    "name": "onBackgroundTick",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#onBackgroundTick",
    "access": "public",
    "description": null,
    "lineNumber": 422,
    "undocument": true,
    "params": [
      {
        "name": "dt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 4216,
    "kind": "method",
    "name": "doSave",
    "memberof": "js/states/ingame.js~InGameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/ingame.js~InGameState#doSave",
    "access": "public",
    "description": "Saves the game",
    "lineNumber": 430,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4219,
    "kind": "file",
    "name": "js/states/keybindings.js",
    "content": "import { Dialog } from \"../core/modal_dialog_elements\";\r\nimport { TextualGameState } from \"../core/textual_game_state\";\r\nimport { getStringForKeyCode, KEYMAPPINGS } from \"../game/key_action_mapper\";\r\nimport { SOUNDS } from \"../platform/sound\";\r\nimport { T } from \"../translations\";\r\n\r\nexport class KeybindingsState extends TextualGameState {\r\n    constructor() {\r\n        super(\"KeybindingsState\");\r\n    }\r\n\r\n    getStateHeaderTitle() {\r\n        return T.keybindings.title;\r\n    }\r\n\r\n    getMainContentHTML() {\r\n        return `\r\n\r\n            <div class=\"topEntries\">\r\n                <span class=\"hint\">${T.keybindings.hint}</span>\r\n                <button class=\"styledButton resetBindings\">${T.keybindings.resetKeybindings}</button>\r\n\r\n            </div>\r\n\r\n            <div class=\"keybindings\">\r\n\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    onEnter() {\r\n        const keybindingsElem = this.htmlElement.querySelector(\".keybindings\");\r\n\r\n        this.trackClicks(this.htmlElement.querySelector(\".resetBindings\"), this.resetBindings);\r\n\r\n        for (const category in KEYMAPPINGS) {\r\n            const categoryDiv = document.createElement(\"div\");\r\n            categoryDiv.classList.add(\"category\");\r\n            keybindingsElem.appendChild(categoryDiv);\r\n\r\n            const labelDiv = document.createElement(\"strong\");\r\n            labelDiv.innerText = T.keybindings.categoryLabels[category];\r\n            labelDiv.classList.add(\"categoryLabel\");\r\n            categoryDiv.appendChild(labelDiv);\r\n\r\n            for (const keybindingId in KEYMAPPINGS[category]) {\r\n                const mapped = KEYMAPPINGS[category][keybindingId];\r\n\r\n                const elem = document.createElement(\"div\");\r\n                elem.classList.add(\"entry\");\r\n                elem.setAttribute(\"data-keybinding\", keybindingId);\r\n                categoryDiv.appendChild(elem);\r\n\r\n                const title = document.createElement(\"span\");\r\n                title.classList.add(\"title\");\r\n                title.innerText = T.keybindings.mappings[keybindingId];\r\n                elem.appendChild(title);\r\n\r\n                const mappingDiv = document.createElement(\"span\");\r\n                mappingDiv.classList.add(\"mapping\");\r\n                elem.appendChild(mappingDiv);\r\n\r\n                const editBtn = document.createElement(\"button\");\r\n                editBtn.classList.add(\"styledButton\", \"editKeybinding\");\r\n\r\n                const resetBtn = document.createElement(\"button\");\r\n                resetBtn.classList.add(\"styledButton\", \"resetKeybinding\");\r\n\r\n                if (mapped.builtin) {\r\n                    editBtn.classList.add(\"disabled\");\r\n                    resetBtn.classList.add(\"disabled\");\r\n                } else {\r\n                    this.trackClicks(editBtn, () => this.editKeybinding(keybindingId));\r\n                    this.trackClicks(resetBtn, () => this.resetKeybinding(keybindingId));\r\n                }\r\n                elem.appendChild(editBtn);\r\n                elem.appendChild(resetBtn);\r\n            }\r\n        }\r\n        this.updateKeybindings();\r\n    }\r\n\r\n    editKeybinding(id) {\r\n        const dialog = new Dialog({\r\n            app: this.app,\r\n            title: T.dialogs.editKeybinding.title,\r\n            contentHTML: T.dialogs.editKeybinding.desc,\r\n            buttons: [\"cancel:good\"],\r\n            type: \"info\",\r\n        });\r\n\r\n        dialog.inputReciever.keydown.add(({ keyCode, shift, alt, event }) => {\r\n            if (keyCode === 27) {\r\n                this.dialogs.closeDialog(dialog);\r\n                return;\r\n            }\r\n\r\n            if (event) {\r\n                event.preventDefault();\r\n            }\r\n\r\n            if (event.target && event.target.tagName === \"BUTTON\" && keyCode === 1) {\r\n                return;\r\n            }\r\n\r\n            if (\r\n                // Enter\r\n                keyCode === 13\r\n            ) {\r\n                // Ignore builtins\r\n                return;\r\n            }\r\n\r\n            this.app.settings.updateKeybindingOverride(id, keyCode);\r\n\r\n            this.dialogs.closeDialog(dialog);\r\n            this.updateKeybindings();\r\n        });\r\n\r\n        dialog.inputReciever.backButton.add(() => {});\r\n        this.dialogs.internalShowDialog(dialog);\r\n\r\n        this.app.sound.playUiSound(SOUNDS.dialogOk);\r\n    }\r\n\r\n    updateKeybindings() {\r\n        const overrides = this.app.settings.getKeybindingOverrides();\r\n        for (const category in KEYMAPPINGS) {\r\n            for (const keybindingId in KEYMAPPINGS[category]) {\r\n                const mapped = KEYMAPPINGS[category][keybindingId];\r\n\r\n                const container = this.htmlElement.querySelector(\"[data-keybinding='\" + keybindingId + \"']\");\r\n                assert(container, \"Container for keybinding not found: \" + keybindingId);\r\n\r\n                let keyCode = mapped.keyCode;\r\n                if (overrides[keybindingId]) {\r\n                    keyCode = overrides[keybindingId];\r\n                }\r\n\r\n                const mappingDiv = container.querySelector(\".mapping\");\r\n                mappingDiv.innerHTML = getStringForKeyCode(keyCode);\r\n                mappingDiv.classList.toggle(\"changed\", !!overrides[keybindingId]);\r\n\r\n                const resetBtn = container.querySelector(\"button.resetKeybinding\");\r\n                resetBtn.classList.toggle(\"disabled\", mapped.builtin || !overrides[keybindingId]);\r\n            }\r\n        }\r\n    }\r\n\r\n    resetKeybinding(id) {\r\n        this.app.settings.resetKeybindingOverride(id);\r\n        this.updateKeybindings();\r\n    }\r\n\r\n    resetBindings() {\r\n        const { reset } = this.dialogs.showWarning(\r\n            T.dialogs.resetKeybindingsConfirmation.title,\r\n            T.dialogs.resetKeybindingsConfirmation.desc, [\"cancel:good\", \"reset:bad\"]\r\n        );\r\n\r\n        reset.add(() => {\r\n            this.app.settings.resetKeybindingOverrides();\r\n            this.updateKeybindings();\r\n\r\n            this.dialogs.showInfo(T.dialogs.keybindingsResetOk.title, T.dialogs.keybindingsResetOk.desc);\r\n        });\r\n    }\r\n\r\n    getDefaultPreviousState() {\r\n        return \"SettingsState\";\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/states/keybindings.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4220,
    "kind": "class",
    "name": "KeybindingsState",
    "memberof": "js/states/keybindings.js",
    "static": true,
    "longname": "js/states/keybindings.js~KeybindingsState",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/states/keybindings.js",
    "importStyle": "{KeybindingsState}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/core/textual_game_state.js~TextualGameState"
    ]
  },
  {
    "__docId__": 4221,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/states/keybindings.js~KeybindingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/keybindings.js~KeybindingsState#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 4222,
    "kind": "method",
    "name": "getStateHeaderTitle",
    "memberof": "js/states/keybindings.js~KeybindingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/keybindings.js~KeybindingsState#getStateHeaderTitle",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4223,
    "kind": "method",
    "name": "getMainContentHTML",
    "memberof": "js/states/keybindings.js~KeybindingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/keybindings.js~KeybindingsState#getMainContentHTML",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4224,
    "kind": "method",
    "name": "onEnter",
    "memberof": "js/states/keybindings.js~KeybindingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/keybindings.js~KeybindingsState#onEnter",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4225,
    "kind": "method",
    "name": "editKeybinding",
    "memberof": "js/states/keybindings.js~KeybindingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/keybindings.js~KeybindingsState#editKeybinding",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 4226,
    "kind": "method",
    "name": "updateKeybindings",
    "memberof": "js/states/keybindings.js~KeybindingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/keybindings.js~KeybindingsState#updateKeybindings",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4227,
    "kind": "method",
    "name": "resetKeybinding",
    "memberof": "js/states/keybindings.js~KeybindingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/keybindings.js~KeybindingsState#resetKeybinding",
    "access": "public",
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 4228,
    "kind": "method",
    "name": "resetBindings",
    "memberof": "js/states/keybindings.js~KeybindingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/keybindings.js~KeybindingsState#resetBindings",
    "access": "public",
    "description": null,
    "lineNumber": 155,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4229,
    "kind": "method",
    "name": "getDefaultPreviousState",
    "memberof": "js/states/keybindings.js~KeybindingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/keybindings.js~KeybindingsState#getDefaultPreviousState",
    "access": "public",
    "description": null,
    "lineNumber": 169,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4230,
    "kind": "file",
    "name": "js/states/main_menu.js",
    "content": "// @ts-nocheck\r\nimport { cachebust } from \"../core/cachebust\";\r\nimport { A_B_TESTING_LINK_TYPE, globalConfig, THIRDPARTY_URLS } from \"../core/config\";\r\nimport { GameState } from \"../core/game_state\";\r\nimport { DialogWithForm } from \"../core/modal_dialog_elements\";\r\nimport { FormElementInput } from \"../core/modal_dialog_forms\";\r\nimport { ReadWriteProxy } from \"../core/read_write_proxy\";\r\nimport {\r\n    formatSecondsToTimeAgo,\r\n    generateFileDownload,\r\n    isSupportedBrowser,\r\n    makeButton,\r\n    makeButtonElement,\r\n    makeDiv,\r\n    removeAllChildren,\r\n    startFileChoose,\r\n    waitNextFrame,\r\n} from \"../core/utils\";\r\nimport { HUDModalDialogs } from \"../game/hud/parts/modal_dialogs\";\r\nimport { getApplicationSettingById } from \"../profile/application_settings\";\r\nimport { T } from \"../translations\";\r\n\r\nconst trim = require(\"trim\");\r\n\r\nexport class MainMenuState extends GameState {\r\n    constructor() {\r\n        super(\"MainMenuState\");\r\n    }\r\n\r\n    getInnerHTML() {\r\n            const bannerHtml = `\r\n            <h3>${T.demoBanners.title}</h3>\r\n            <p>${T.demoBanners.intro}</p>\r\n            <a href=\"#\" class=\"steamLink ${A_B_TESTING_LINK_TYPE}\" target=\"_blank\">Get the shapez.io standalone!</a>\r\n        `;\r\n\r\n            const showDemoBadges = this.app.restrictionMgr.getIsStandaloneMarketingActive();\r\n\r\n            return `\r\n            <div class=\"topButtons\">\r\n                <button class=\"languageChoose\" data-languageicon=\"${this.app.settings.getLanguage()}\"></button>\r\n                <button class=\"settingsButton\"></button>\r\n                ${this.getExtraTopButtons()}\r\n            ${\r\n                G_IS_STANDALONE || G_IS_DEV\r\n                    ? `\r\n                <button class=\"exitAppButton\"></button>\r\n            `\r\n                    : \"\"\r\n            }\r\n            </div>\r\n\r\n            <video autoplay muted loop class=\"fullscreenBackgroundVideo\">\r\n                <source src=\"${cachebust(\"res/bg_render.webm\")}\" type=\"video/webm\">\r\n            </video>\r\n\r\n            <div class=\"logo\">\r\n                <img src=\"${cachebust(\"res/logo.png\")}\" alt=\"shapez.io Logo\">\r\n                <span class=\"updateLabel\">v${G_BUILD_VERSION}</span>\r\n            </div>\r\n\r\n            <div class=\"mainWrapper ${showDemoBadges ? \"demo\" : \"noDemo\"}\">\r\n                <div class=\"sideContainer\">\r\n                    ${showDemoBadges ? `<div class=\"standaloneBanner\">${bannerHtml}</div>` : \"\"}\r\n                </div>\r\n\r\n                <div class=\"mainContainer\">\r\n                    ${\r\n                        isSupportedBrowser()\r\n                            ? \"\"\r\n                            : `<div class=\"browserWarning\">${T.mainMenu.browserWarning}</div>`\r\n                    }\r\n                    <div class=\"buttons\"></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"footer\">\r\n                <a class=\"githubLink boxLink\" target=\"_blank\">\r\n                    ${T.mainMenu.openSourceHint}\r\n                    <span class=\"thirdpartyLogo githubLogo\"></span>\r\n                </a>\r\n\r\n                <a class=\"discordLink boxLink\" target=\"_blank\">\r\n                    ${T.mainMenu.discordLink}\r\n                    <span class=\"thirdpartyLogo  discordLogo\"></span>\r\n                </a>\r\n\r\n                <div class=\"sidelinks\">\r\n                    <a class=\"redditLink\">${T.mainMenu.subreddit}</a>\r\n\r\n                    <a class=\"changelog\">${T.changelog.title}</a>\r\n\r\n                    <a class=\"helpTranslate\">${T.mainMenu.helpTranslate}</a>\r\n                </div>\r\n\r\n                <div class=\"author\">${T.mainMenu.madeBy.replace(\r\n                    \"<author-link>\",\r\n                    '<a class=\"producerLink\" target=\"_blank\">Tobias Springer</a>'\r\n                )}</div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    getExtraTopButtons() {\r\n        let html = \"\";\r\n        for (let i = 0; i < MainMenuState.extraTopButtons.length; i++) {\r\n            const extraButton = MainMenuState.extraTopButtons[i];\r\n            html += `<button class=\"${extraButton.htmlClass}\" ${extraButton.htmlData}></button>`;\r\n        }\r\n        return html;\r\n    }\r\n\r\n    /**\r\n     * Asks the user to import a savegame\r\n     */\r\n    requestImportSavegame() {\r\n        if (\r\n            this.app.savegameMgr.getSavegamesMetaData().length > 0 &&\r\n            !this.app.restrictionMgr.getHasUnlimitedSavegames()\r\n        ) {\r\n            this.app.analytics.trackUiClick(\"importgame_slot_limit_show\");\r\n            this.showSavegameSlotLimit();\r\n            return;\r\n        }\r\n\r\n        // Create a 'fake' file-input to accept savegames\r\n        startFileChoose(\".bin\").then(file => {\r\n            if (file) {\r\n                const closeLoader = this.dialogs.showLoadingDialog();\r\n                waitNextFrame().then(() => {\r\n                    this.app.analytics.trackUiClick(\"import_savegame\");\r\n                    const reader = new FileReader();\r\n                    reader.addEventListener(\"load\", event => {\r\n                        const contents = event.target.result;\r\n                        let realContent;\r\n\r\n                        try {\r\n                            realContent = ReadWriteProxy.deserializeObject(contents);\r\n                        } catch (err) {\r\n                            closeLoader();\r\n                            this.dialogs.showWarning(\r\n                                T.dialogs.importSavegameError.title,\r\n                                T.dialogs.importSavegameError.text + \"<br><br>\" + err\r\n                            );\r\n                            return;\r\n                        }\r\n\r\n                        this.app.savegameMgr.importSavegame(realContent).then(\r\n                            () => {\r\n                                closeLoader();\r\n                                this.dialogs.showWarning(\r\n                                    T.dialogs.importSavegameSuccess.title,\r\n                                    T.dialogs.importSavegameSuccess.text\r\n                                );\r\n\r\n                                this.renderMainMenu();\r\n                                this.renderSavegames();\r\n                            },\r\n                            err => {\r\n                                closeLoader();\r\n                                this.dialogs.showWarning(\r\n                                    T.dialogs.importSavegameError.title,\r\n                                    T.dialogs.importSavegameError.text + \":<br><br>\" + err\r\n                                );\r\n                            }\r\n                        );\r\n                    });\r\n                    reader.addEventListener(\"error\", error => {\r\n                        this.dialogs.showWarning(\r\n                            T.dialogs.importSavegameError.title,\r\n                            T.dialogs.importSavegameError.text + \":<br><br>\" + error\r\n                        );\r\n                    });\r\n                    reader.readAsText(file, \"utf-8\");\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onBackButton() {\r\n        this.app.platformWrapper.exitApp();\r\n    }\r\n\r\n    onEnter(payload) {\r\n        this.dialogs = new HUDModalDialogs(null, this.app);\r\n        const dialogsElement = document.body.querySelector(\".modalDialogParent\");\r\n        this.dialogs.initializeToElement(dialogsElement);\r\n\r\n        if (payload.loadError) {\r\n            this.dialogs.showWarning(\r\n                T.dialogs.gameLoadFailure.title,\r\n                T.dialogs.gameLoadFailure.text + \"<br><br>\" + payload.loadError\r\n            );\r\n        }\r\n\r\n        const qs = this.htmlElement.querySelector.bind(this.htmlElement);\r\n\r\n        if (G_IS_DEV && globalConfig.debug.fastGameEnter) {\r\n            const games = this.app.savegameMgr.getSavegamesMetaData();\r\n            if (games.length > 0 && globalConfig.debug.resumeGameOnFastEnter) {\r\n                this.resumeGame(games[0]);\r\n            } else {\r\n                this.onPlayButtonClicked();\r\n            }\r\n        }\r\n\r\n        // Initialize video\r\n        this.videoElement = this.htmlElement.querySelector(\"video\");\r\n        this.videoElement.playbackRate = 0.9;\r\n        this.videoElement.addEventListener(\"canplay\", () => {\r\n            if (this.videoElement) {\r\n                this.videoElement.classList.add(\"loaded\");\r\n            }\r\n        });\r\n\r\n        for (let i = 0; i < MainMenuState.extraTrackClicks.length; i++) {\r\n            const trackClick = MainMenuState.extraTrackClicks[i];\r\n            this.trackClicks(\r\n                this.htmlElement.querySelector(trackClick.htmlElement),\r\n                trackClick.action(this),\r\n                trackClick.options\r\n            );\r\n        }\r\n        this.trackClicks(qs(\".settingsButton\"), this.onSettingsButtonClicked);\r\n        this.trackClicks(qs(\".changelog\"), this.onChangelogClicked);\r\n        this.trackClicks(qs(\".redditLink\"), this.onRedditClicked);\r\n        this.trackClicks(qs(\".languageChoose\"), this.onLanguageChooseClicked);\r\n        this.trackClicks(qs(\".helpTranslate\"), this.onTranslationHelpLinkClicked);\r\n\r\n        if (G_IS_STANDALONE) {\r\n            this.trackClicks(qs(\".exitAppButton\"), this.onExitAppButtonClicked);\r\n        }\r\n\r\n        this.renderMainMenu();\r\n        this.renderSavegames();\r\n\r\n        const steamLink = this.htmlElement.querySelector(\".steamLink\");\r\n        if (steamLink) {\r\n            this.trackClicks(steamLink, () => this.onSteamLinkClicked(), { preventClick: true });\r\n        }\r\n\r\n        const discordLink = this.htmlElement.querySelector(\".discordLink\");\r\n        this.trackClicks(\r\n            discordLink,\r\n            () => this.app.platformWrapper.openExternalLink(THIRDPARTY_URLS.discord),\r\n            { preventClick: true }\r\n        );\r\n\r\n        const githubLink = this.htmlElement.querySelector(\".githubLink\");\r\n        this.trackClicks(\r\n            githubLink,\r\n            () => this.app.platformWrapper.openExternalLink(THIRDPARTY_URLS.github),\r\n            { preventClick: true }\r\n        );\r\n\r\n        const producerLink = this.htmlElement.querySelector(\".producerLink\");\r\n        this.trackClicks(\r\n            producerLink,\r\n            () => this.app.platformWrapper.openExternalLink(\"https://tobspr.com\"),\r\n            { preventClick: true }\r\n        );\r\n    }\r\n\r\n    renderMainMenu() {\r\n        const buttonContainer = this.htmlElement.querySelector(\".mainContainer .buttons\");\r\n        removeAllChildren(buttonContainer);\r\n\r\n        // Import button\r\n        const importButtonElement = makeButtonElement(\r\n            [\"importButton\", \"styledButton\"],\r\n            T.mainMenu.importSavegame\r\n        );\r\n        this.trackClicks(importButtonElement, this.requestImportSavegame);\r\n\r\n        if (this.savedGames.length > 0) {\r\n            // Continue game\r\n            const continueButton = makeButton(\r\n                buttonContainer,\r\n                [\"continueButton\", \"styledButton\"],\r\n                T.mainMenu.continue\r\n            );\r\n            this.trackClicks(continueButton, this.onContinueButtonClicked);\r\n        } else {\r\n            // New game\r\n            const playBtn = makeButton(buttonContainer, [\"playButton\", \"styledButton\"], T.mainMenu.play);\r\n            this.trackClicks(playBtn, this.onPlayButtonClicked);\r\n        }\r\n\r\n        const outerDiv = makeDiv(buttonContainer, null, [\"outer\"], null);\r\n        outerDiv.appendChild(importButtonElement);\r\n\r\n        if (this.savedGames.length > 0) {\r\n            const newGameButton = makeButton(\r\n                this.htmlElement.querySelector(\".mainContainer .outer\"),\r\n                [\"newGameButton\", \"styledButton\"],\r\n                T.mainMenu.newGame\r\n            );\r\n            this.trackClicks(newGameButton, this.onPlayButtonClicked);\r\n        }\r\n\r\n        for (let i = 0; i < MainMenuState.extraSmallButtons.length; i++) {\r\n            const extraButton = MainMenuState.extraSmallButtons[i];\r\n            const button = makeButton(\r\n                this.htmlElement.querySelector(\".mainContainer .outer\"),\r\n                [extraButton.htmlClass, \"styledButton\"],\r\n                extraButton.text\r\n            );\r\n            this.trackClicks(button, extraButton.action(this));\r\n        }\r\n    }\r\n\r\n    onSteamLinkClicked() {\r\n        this.app.analytics.trackUiClick(\"main_menu_steam_link_\" + A_B_TESTING_LINK_TYPE);\r\n        this.app.platformWrapper.openExternalLink(\r\n            THIRDPARTY_URLS.standaloneStorePage + \"?ref=mmsl2&prc=\" + A_B_TESTING_LINK_TYPE\r\n        );\r\n\r\n        return false;\r\n    }\r\n\r\n    onExitAppButtonClicked() {\r\n        this.app.platformWrapper.exitApp();\r\n    }\r\n\r\n    onChangelogClicked() {\r\n        this.moveToState(\"ChangelogState\");\r\n    }\r\n\r\n    onRedditClicked() {\r\n        this.app.analytics.trackUiClick(\"main_menu_reddit_link\");\r\n        this.app.platformWrapper.openExternalLink(THIRDPARTY_URLS.reddit);\r\n    }\r\n\r\n    onLanguageChooseClicked() {\r\n        this.app.analytics.trackUiClick(\"choose_language\");\r\n        const setting = /** @type {EnumSetting} */ (getApplicationSettingById(\"language\"));\r\n\r\n        const { optionSelected } = this.dialogs.showOptionChooser(T.settings.labels.language.title, {\r\n            active: this.app.settings.getLanguage(),\r\n            options: setting.options.map(option => ({\r\n                value: setting.valueGetter(option),\r\n                text: setting.textGetter(option),\r\n                desc: setting.descGetter(option),\r\n                iconPrefix: setting.iconPrefix,\r\n            })),\r\n        });\r\n\r\n        optionSelected.add(value => {\r\n            this.app.settings.updateLanguage(value).then(() => {\r\n                if (setting.restartRequired) {\r\n                    if (this.app.platformWrapper.getSupportsRestart()) {\r\n                        this.app.platformWrapper.performRestart();\r\n                    } else {\r\n                        this.dialogs.showInfo(\r\n                            T.dialogs.restartRequired.title,\r\n                            T.dialogs.restartRequired.text,\r\n                            [\"ok:good\"]\r\n                        );\r\n                    }\r\n                }\r\n\r\n                if (setting.changeCb) {\r\n                    setting.changeCb(this.app, value);\r\n                }\r\n            });\r\n\r\n            // Update current icon\r\n            this.htmlElement.querySelector(\"button.languageChoose\").setAttribute(\"data-languageIcon\", value);\r\n        }, this);\r\n    }\r\n\r\n    get savedGames() {\r\n        return this.app.savegameMgr.getSavegamesMetaData();\r\n    }\r\n\r\n    renderSavegames() {\r\n        const oldContainer = this.htmlElement.querySelector(\".mainContainer .savegames\");\r\n        if (oldContainer) {\r\n            oldContainer.remove();\r\n        }\r\n        const games = this.savedGames;\r\n        if (games.length > 0) {\r\n            const parent = makeDiv(this.htmlElement.querySelector(\".mainContainer\"), null, [\"savegames\"]);\r\n\r\n            for (let i = 0; i < games.length; ++i) {\r\n                const elem = makeDiv(parent, null, [\"savegame\"]);\r\n\r\n                makeDiv(\r\n                    elem,\r\n                    null,\r\n                    [\"playtime\"],\r\n                    formatSecondsToTimeAgo((new Date().getTime() - games[i].lastUpdate) / 1000.0)\r\n                );\r\n\r\n                makeDiv(\r\n                    elem,\r\n                    null,\r\n                    [\"level\"],\r\n                    games[i].level\r\n                        ? T.mainMenu.savegameLevel.replace(\"<x>\", \"\" + games[i].level)\r\n                        : T.mainMenu.savegameLevelUnknown\r\n                );\r\n\r\n                const name = makeDiv(\r\n                    elem,\r\n                    null,\r\n                    [\"name\"],\r\n                    \"<span>\" + (games[i].name ? games[i].name : T.mainMenu.savegameUnnamed) + \"</span>\"\r\n                );\r\n\r\n                const deleteButton = document.createElement(\"button\");\r\n                deleteButton.classList.add(\"styledButton\", \"deleteGame\");\r\n                elem.appendChild(deleteButton);\r\n\r\n                const downloadButton = document.createElement(\"button\");\r\n                downloadButton.classList.add(\"styledButton\", \"downloadGame\");\r\n                elem.appendChild(downloadButton);\r\n\r\n                const renameButton = document.createElement(\"button\");\r\n                renameButton.classList.add(\"styledButton\", \"renameGame\");\r\n                name.appendChild(renameButton);\r\n\r\n                const resumeButton = document.createElement(\"button\");\r\n                resumeButton.classList.add(\"styledButton\", \"resumeGame\");\r\n                elem.appendChild(resumeButton);\r\n\r\n                this.trackClicks(deleteButton, () => this.deleteGame(games[i]));\r\n                this.trackClicks(downloadButton, () => this.downloadGame(games[i]));\r\n                this.trackClicks(resumeButton, () => this.resumeGame(games[i]));\r\n                this.trackClicks(renameButton, () => this.requestRenameSavegame(games[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {SavegameMetadata} game\r\n     */\r\n    requestRenameSavegame(game) {\r\n        const regex = /^[a-zA-Z0-9_\\- ]{1,20}$/;\r\n\r\n        const nameInput = new FormElementInput({\r\n            id: \"nameInput\",\r\n            label: null,\r\n            placeholder: \"\",\r\n            defaultValue: game.name || \"\",\r\n            validator: val => val.match(regex) && trim(val).length > 0,\r\n        });\r\n        const dialog = new DialogWithForm({\r\n            app: this.app,\r\n            title: T.dialogs.renameSavegame.title,\r\n            desc: T.dialogs.renameSavegame.desc,\r\n            formElements: [nameInput],\r\n            buttons: [\"cancel:bad:escape\", \"ok:good:enter\"],\r\n        });\r\n        this.dialogs.internalShowDialog(dialog);\r\n\r\n        // When confirmed, save the name\r\n        dialog.buttonSignals.ok.add(() => {\r\n            game.name = trim(nameInput.getValue());\r\n            this.app.savegameMgr.writeAsync();\r\n            this.renderSavegames();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {SavegameMetadata} game\r\n     */\r\n    resumeGame(game) {\r\n        this.app.analytics.trackUiClick(\"resume_game\");\r\n\r\n        this.app.adProvider.showVideoAd().then(() => {\r\n            this.app.analytics.trackUiClick(\"resume_game_adcomplete\");\r\n            const savegame = this.app.savegameMgr.getSavegameById(game.internalId);\r\n            savegame\r\n                .readAsync()\r\n                .then(() => {\r\n                    this.moveToState(\"InGameState\", {\r\n                        savegame,\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    this.dialogs.showWarning(\r\n                        T.dialogs.gameLoadFailure.title,\r\n                        T.dialogs.gameLoadFailure.text + \"<br><br>\" + err\r\n                    );\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {SavegameMetadata} game\r\n     */\r\n    deleteGame(game) {\r\n        this.app.analytics.trackUiClick(\"delete_game\");\r\n\r\n        const signals = this.dialogs.showWarning(\r\n            T.dialogs.confirmSavegameDelete.title,\r\n            T.dialogs.confirmSavegameDelete.text\r\n                .replace(\"<savegameName>\", game.name || T.mainMenu.savegameUnnamed)\r\n                .replace(\"<savegameLevel>\", String(game.level)),\r\n            [\"cancel:good\", \"delete:bad:timeout\"]\r\n        );\r\n\r\n        signals.delete.add(() => {\r\n            this.app.savegameMgr.deleteSavegame(game).then(\r\n                () => {\r\n                    this.renderSavegames();\r\n                    if (this.savedGames.length <= 0) this.renderMainMenu();\r\n                },\r\n                err => {\r\n                    this.dialogs.showWarning(\r\n                        T.dialogs.savegameDeletionError.title,\r\n                        T.dialogs.savegameDeletionError.text + \"<br><br>\" + err\r\n                    );\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {SavegameMetadata} game\r\n     */\r\n    downloadGame(game) {\r\n        this.app.analytics.trackUiClick(\"download_game\");\r\n\r\n        const savegame = this.app.savegameMgr.getSavegameById(game.internalId);\r\n        savegame.readAsync().then(() => {\r\n            const data = ReadWriteProxy.serializeObject(savegame.currentData);\r\n            const filename = (game.name || \"unnamed\") + \".bin\";\r\n            generateFileDownload(filename, data);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Shows a hint that the slot limit has been reached\r\n     */\r\n    showSavegameSlotLimit() {\r\n        const { getStandalone } = this.dialogs.showWarning(\r\n            T.dialogs.oneSavegameLimit.title,\r\n            T.dialogs.oneSavegameLimit.desc,\r\n            [\"cancel:bad\", \"getStandalone:good\"]\r\n        );\r\n        getStandalone.add(() => {\r\n            this.app.analytics.trackUiClick(\"visit_steampage_from_slot_limit\");\r\n            this.app.platformWrapper.openExternalLink(THIRDPARTY_URLS.standaloneStorePage + \"?reF=ssll\");\r\n        });\r\n    }\r\n\r\n    onSettingsButtonClicked() {\r\n        this.moveToState(\"SettingsState\");\r\n    }\r\n\r\n    onTranslationHelpLinkClicked() {\r\n        this.app.analytics.trackUiClick(\"translation_help_link\");\r\n        this.app.platformWrapper.openExternalLink(\r\n            \"https://github.com/tobspr/shapez.io/blob/master/translations\"\r\n        );\r\n    }\r\n\r\n    onPlayButtonClicked() {\r\n        if (\r\n            this.app.savegameMgr.getSavegamesMetaData().length > 0 &&\r\n            !this.app.restrictionMgr.getHasUnlimitedSavegames()\r\n        ) {\r\n            this.app.analytics.trackUiClick(\"startgame_slot_limit_show\");\r\n            this.showSavegameSlotLimit();\r\n            return;\r\n        }\r\n\r\n        this.app.analytics.trackUiClick(\"startgame\");\r\n        this.app.adProvider.showVideoAd().then(() => {\r\n            const savegame = this.app.savegameMgr.createNewSavegame();\r\n\r\n            this.moveToState(\"InGameState\", {\r\n                savegame,\r\n            });\r\n            this.app.analytics.trackUiClick(\"startgame_adcomplete\");\r\n        });\r\n    }\r\n\r\n    onContinueButtonClicked() {\r\n        let latestLastUpdate = 0;\r\n        let latestInternalId;\r\n        this.app.savegameMgr.currentData.savegames.forEach(saveGame => {\r\n            if (saveGame.lastUpdate > latestLastUpdate) {\r\n                latestLastUpdate = saveGame.lastUpdate;\r\n                latestInternalId = saveGame.internalId;\r\n            }\r\n        });\r\n\r\n        const savegame = this.app.savegameMgr.getSavegameById(latestInternalId);\r\n        savegame.readAsync().then(() => {\r\n            this.moveToState(\"InGameState\", {\r\n                savegame,\r\n            });\r\n        });\r\n    }\r\n\r\n    onLeave() {\r\n        this.dialogs.cleanup();\r\n    }\r\n}\r\n\r\nMainMenuState.extraTopButtons = [];\r\nMainMenuState.extraSmallButtons = [];\r\n\r\nMainMenuState.extraTrackClicks = [];",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/states/main_menu.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4231,
    "kind": "variable",
    "name": "trim",
    "memberof": "js/states/main_menu.js",
    "static": true,
    "longname": "js/states/main_menu.js~trim",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/states/main_menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 4232,
    "kind": "class",
    "name": "MainMenuState",
    "memberof": "js/states/main_menu.js",
    "static": true,
    "longname": "js/states/main_menu.js~MainMenuState",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/states/main_menu.js",
    "importStyle": "{MainMenuState}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/core/game_state.js~GameState"
    ]
  },
  {
    "__docId__": 4233,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 4234,
    "kind": "method",
    "name": "getInnerHTML",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#getInnerHTML",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4235,
    "kind": "method",
    "name": "getExtraTopButtons",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#getExtraTopButtons",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4236,
    "kind": "method",
    "name": "requestImportSavegame",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#requestImportSavegame",
    "access": "public",
    "description": "Asks the user to import a savegame",
    "lineNumber": 116,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4237,
    "kind": "method",
    "name": "onBackButton",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#onBackButton",
    "access": "public",
    "description": null,
    "lineNumber": 180,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4238,
    "kind": "method",
    "name": "onEnter",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#onEnter",
    "access": "public",
    "description": null,
    "lineNumber": 184,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 4239,
    "kind": "member",
    "name": "dialogs",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#dialogs",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4240,
    "kind": "member",
    "name": "videoElement",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#videoElement",
    "access": "public",
    "description": null,
    "lineNumber": 208,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4241,
    "kind": "method",
    "name": "renderMainMenu",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#renderMainMenu",
    "access": "public",
    "description": null,
    "lineNumber": 264,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4242,
    "kind": "method",
    "name": "onSteamLinkClicked",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#onSteamLinkClicked",
    "access": "public",
    "description": null,
    "lineNumber": 312,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 4243,
    "kind": "method",
    "name": "onExitAppButtonClicked",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#onExitAppButtonClicked",
    "access": "public",
    "description": null,
    "lineNumber": 321,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4244,
    "kind": "method",
    "name": "onChangelogClicked",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#onChangelogClicked",
    "access": "public",
    "description": null,
    "lineNumber": 325,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4245,
    "kind": "method",
    "name": "onRedditClicked",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#onRedditClicked",
    "access": "public",
    "description": null,
    "lineNumber": 329,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4246,
    "kind": "method",
    "name": "onLanguageChooseClicked",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#onLanguageChooseClicked",
    "access": "public",
    "description": null,
    "lineNumber": 334,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4247,
    "kind": "get",
    "name": "savedGames",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#savedGames",
    "access": "public",
    "description": null,
    "lineNumber": 372,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4248,
    "kind": "method",
    "name": "renderSavegames",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#renderSavegames",
    "access": "public",
    "description": null,
    "lineNumber": 376,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4249,
    "kind": "method",
    "name": "requestRenameSavegame",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#requestRenameSavegame",
    "access": "public",
    "description": "",
    "lineNumber": 438,
    "params": [
      {
        "nullable": null,
        "types": [
          "SavegameMetadata"
        ],
        "spread": false,
        "optional": false,
        "name": "game",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 4250,
    "kind": "method",
    "name": "resumeGame",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#resumeGame",
    "access": "public",
    "description": "",
    "lineNumber": 468,
    "params": [
      {
        "nullable": null,
        "types": [
          "SavegameMetadata"
        ],
        "spread": false,
        "optional": false,
        "name": "game",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 4251,
    "kind": "method",
    "name": "deleteGame",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#deleteGame",
    "access": "public",
    "description": "",
    "lineNumber": 493,
    "params": [
      {
        "nullable": null,
        "types": [
          "SavegameMetadata"
        ],
        "spread": false,
        "optional": false,
        "name": "game",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 4252,
    "kind": "method",
    "name": "downloadGame",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#downloadGame",
    "access": "public",
    "description": "",
    "lineNumber": 523,
    "params": [
      {
        "nullable": null,
        "types": [
          "SavegameMetadata"
        ],
        "spread": false,
        "optional": false,
        "name": "game",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 4253,
    "kind": "method",
    "name": "showSavegameSlotLimit",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#showSavegameSlotLimit",
    "access": "public",
    "description": "Shows a hint that the slot limit has been reached",
    "lineNumber": 537,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4254,
    "kind": "method",
    "name": "onSettingsButtonClicked",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#onSettingsButtonClicked",
    "access": "public",
    "description": null,
    "lineNumber": 549,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4255,
    "kind": "method",
    "name": "onTranslationHelpLinkClicked",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#onTranslationHelpLinkClicked",
    "access": "public",
    "description": null,
    "lineNumber": 553,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4256,
    "kind": "method",
    "name": "onPlayButtonClicked",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#onPlayButtonClicked",
    "access": "public",
    "description": null,
    "lineNumber": 560,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4257,
    "kind": "method",
    "name": "onContinueButtonClicked",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#onContinueButtonClicked",
    "access": "public",
    "description": null,
    "lineNumber": 581,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4258,
    "kind": "method",
    "name": "onLeave",
    "memberof": "js/states/main_menu.js~MainMenuState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/main_menu.js~MainMenuState#onLeave",
    "access": "public",
    "description": null,
    "lineNumber": 599,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4259,
    "kind": "file",
    "name": "js/states/mobile_warning.js",
    "content": "import { GameState } from \"../core/game_state\";\r\nimport { cachebust } from \"../core/cachebust\";\r\nimport { THIRDPARTY_URLS } from \"../core/config\";\r\n\r\nexport class MobileWarningState extends GameState {\r\n    constructor() {\r\n        super(\"MobileWarningState\");\r\n    }\r\n\r\n    getInnerHTML() {\r\n        return `\r\n    \r\n            <img class=\"logo\" src=\"${cachebust(\"res/logo.png\")}\" alt=\"shapez.io Logo\">\r\n\r\n            <p>\r\n                I'm sorry, but shapez.io is not available on mobile devices yet!\r\n                There is also no estimate when this will change, but feel to make a contribution! It's\r\n                &nbsp;<a href=\"https://github.com/tobspr/shapez.io\" target=\"_blank\">open source</a>!</p>\r\n            \r\n            <p>If you want to play on your computer, you can also get the standalone on Steam:</p>\r\n\r\n            \r\n            <a href=\"${\r\n                THIRDPARTY_URLS.standaloneStorePage + \"?ref=mobile\"\r\n            }\" class=\"standaloneLink\" target=\"_blank\">Get the shapez.io standalone!</a>\r\n        `;\r\n    }\r\n\r\n    getThemeMusic() {\r\n        return null;\r\n    }\r\n\r\n    getHasFadeIn() {\r\n        return false;\r\n    }\r\n\r\n    onEnter() {\r\n        try {\r\n            if (window.gtag) {\r\n                window.gtag(\"event\", \"click\", {\r\n                    event_category: \"ui\",\r\n                    event_label: \"mobile_warning\",\r\n                });\r\n            }\r\n        } catch (ex) {\r\n            console.warn(\"Failed to track mobile click:\", ex);\r\n        }\r\n    }\r\n    onLeave() {\r\n        // this.dialogs.cleanup();\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/states/mobile_warning.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4260,
    "kind": "class",
    "name": "MobileWarningState",
    "memberof": "js/states/mobile_warning.js",
    "static": true,
    "longname": "js/states/mobile_warning.js~MobileWarningState",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/states/mobile_warning.js",
    "importStyle": "{MobileWarningState}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/core/game_state.js~GameState"
    ]
  },
  {
    "__docId__": 4261,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/states/mobile_warning.js~MobileWarningState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/mobile_warning.js~MobileWarningState#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 4262,
    "kind": "method",
    "name": "getInnerHTML",
    "memberof": "js/states/mobile_warning.js~MobileWarningState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/mobile_warning.js~MobileWarningState#getInnerHTML",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4263,
    "kind": "method",
    "name": "getThemeMusic",
    "memberof": "js/states/mobile_warning.js~MobileWarningState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/mobile_warning.js~MobileWarningState#getThemeMusic",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4264,
    "kind": "method",
    "name": "getHasFadeIn",
    "memberof": "js/states/mobile_warning.js~MobileWarningState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/mobile_warning.js~MobileWarningState#getHasFadeIn",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 4265,
    "kind": "method",
    "name": "onEnter",
    "memberof": "js/states/mobile_warning.js~MobileWarningState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/mobile_warning.js~MobileWarningState#onEnter",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4266,
    "kind": "method",
    "name": "onLeave",
    "memberof": "js/states/mobile_warning.js~MobileWarningState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/mobile_warning.js~MobileWarningState#onLeave",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4267,
    "kind": "file",
    "name": "js/states/preload.js",
    "content": "import { CHANGELOG } from \"../changelog\";\r\nimport { cachebust } from \"../core/cachebust\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { GameState } from \"../core/game_state\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { findNiceValue } from \"../core/utils\";\r\nimport { getRandomHint } from \"../game/hints\";\r\nimport { HUDModalDialogs } from \"../game/hud/parts/modal_dialogs\";\r\nimport { PlatformWrapperImplBrowser } from \"../platform/browser/wrapper\";\r\nimport { autoDetectLanguageId, T, updateApplicationLanguage } from \"../translations\";\r\n\r\nconst logger = createLogger(\"state/preload\");\r\n\r\nexport class PreloadState extends GameState {\r\n    constructor() {\r\n        super(\"PreloadState\");\r\n    }\r\n\r\n    getInnerHTML() {\r\n        return `\r\n            <div class=\"loadingImage\"></div>\r\n            <div class=\"loadingStatus\">\r\n                <span class=\"desc\">Booting</span>\r\n                </div>\r\n            </div>\r\n            <span class=\"prefab_GameHint\"></span>\r\n        `;\r\n    }\r\n\r\n    getThemeMusic() {\r\n        return null;\r\n    }\r\n\r\n    getHasFadeIn() {\r\n        return false;\r\n    }\r\n\r\n    onEnter() {\r\n        this.htmlElement.classList.add(\"prefab_LoadingState\");\r\n\r\n        const elementsToRemove = [\"#loadingPreload\", \"#fontPreload\"];\r\n        for (let i = 0; i < elementsToRemove.length; ++i) {\r\n            const elem = document.querySelector(elementsToRemove[i]);\r\n            if (elem) {\r\n                elem.remove();\r\n            }\r\n        }\r\n\r\n        this.dialogs = new HUDModalDialogs(null, this.app);\r\n        const dialogsElement = document.body.querySelector(\".modalDialogParent\");\r\n        this.dialogs.initializeToElement(dialogsElement);\r\n\r\n        /** @type {HTMLElement} */\r\n        this.statusText = this.htmlElement.querySelector(\".loadingStatus > .desc\");\r\n\r\n        /** @type {HTMLElement} */\r\n        this.hintsText = this.htmlElement.querySelector(\".prefab_GameHint\");\r\n        this.lastHintShown = -1000;\r\n        this.nextHintDuration = 0;\r\n\r\n        this.currentStatus = \"booting\";\r\n\r\n        this.startLoading();\r\n    }\r\n\r\n    onLeave() {\r\n        // this.dialogs.cleanup();\r\n    }\r\n\r\n    startLoading() {\r\n            this.setStatus(\"Booting\")\r\n\r\n            .then(() => this.setStatus(\"Creating platform wrapper\"))\r\n                .then(() => this.app.platformWrapper.initialize())\r\n\r\n            .then(() => this.setStatus(\"Initializing local storage\"))\r\n                .then(() => {\r\n                    const wrapper = this.app.platformWrapper;\r\n                    if (wrapper instanceof PlatformWrapperImplBrowser) {\r\n                        try {\r\n                            window.localStorage.setItem(\"local_storage_test\", \"1\");\r\n                            window.localStorage.removeItem(\"local_storage_test\");\r\n                        } catch (ex) {\r\n                            logger.error(\"Failed to read/write local storage:\", ex);\r\n                            return new Promise(() => {\r\n                                alert(`Your brower does not support thirdparty cookies or you have disabled it in your security settings.\\n\\n\r\n                                In Chrome this setting is called \"Block third-party cookies and site data\".\\n\\n\r\n                                Please allow third party cookies and then reload the page.`);\r\n                                // Never return\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n\r\n            .then(() => this.setStatus(\"Creating storage\"))\r\n                .then(() => {\r\n                    return this.app.storage.initialize();\r\n                })\r\n\r\n            .then(() => this.setStatus(\"Initializing libraries\"))\r\n                .then(() => this.app.analytics.initialize())\r\n                .then(() => this.app.gameAnalytics.initialize())\r\n\r\n            .then(() => this.setStatus(\"Initializing settings\"))\r\n                .then(() => {\r\n                    return this.app.settings.initialize();\r\n                })\r\n\r\n            .then(() => {\r\n                // Initialize fullscreen\r\n                if (this.app.platformWrapper.getSupportsFullscreen()) {\r\n                    this.app.platformWrapper.setFullscreen(this.app.settings.getIsFullScreen());\r\n                }\r\n            })\r\n\r\n            .then(() => this.setStatus(\"Initializing language\"))\r\n                .then(() => {\r\n                    if (this.app.settings.getLanguage() === \"auto-detect\") {\r\n                        const language = autoDetectLanguageId();\r\n                        logger.log(\"Setting language to\", language);\r\n                        return this.app.settings.updateLanguage(language);\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    const language = this.app.settings.getLanguage();\r\n                    updateApplicationLanguage(language);\r\n                })\r\n\r\n            .then(() => this.setStatus(\"Initializing sounds\"))\r\n                .then(() => {\r\n                    // Notice: We don't await the sounds loading itself\r\n                    return this.app.sound.initialize();\r\n                })\r\n\r\n            .then(() => {\r\n                this.app.backgroundResourceLoader.startLoading();\r\n            })\r\n\r\n            .then(() => this.setStatus(\"Initializing restrictions\"))\r\n                .then(() => {\r\n                    return this.app.restrictionMgr.initialize();\r\n                })\r\n\r\n            .then(() => this.setStatus(\"Initializing savegame\"))\r\n                .then(() => {\r\n                    return this.app.savegameMgr.initialize().catch(err => {\r\n                        logger.error(\"Failed to initialize savegames:\", err);\r\n                        alert(\r\n                            \"Your savegames failed to load, it seems your data files got corrupted. I'm so sorry!\\n\\n(This can happen if your pc crashed while a game was saved).\\n\\nYou can try re-importing your savegames.\"\r\n                        );\r\n                        return this.app.savegameMgr.writeAsync();\r\n                    });\r\n                })\r\n\r\n            .then(() => this.setStatus(\"Downloading resources\"))\r\n                .then(() => {\r\n                    return this.app.backgroundResourceLoader.getPromiseForBareGame();\r\n                })\r\n\r\n            .then(() => this.setStatus(\"Checking changelog\"))\r\n                .then(() => {\r\n                        if (G_IS_DEV && globalConfig.debug.disableUpgradeNotification) {\r\n                            return;\r\n                        }\r\n\r\n                        return this.app.storage\r\n                            .readFileAsync(\"lastversion.bin\")\r\n                            .catch(err => {\r\n                                logger.warn(\"Failed to read lastversion:\", err);\r\n                                return G_BUILD_VERSION;\r\n                            })\r\n                            .then(version => {\r\n                                logger.log(\"Last version:\", version, \"App version:\", G_BUILD_VERSION);\r\n                                this.app.storage.writeFileAsync(\"lastversion.bin\", G_BUILD_VERSION);\r\n                                return version;\r\n                            })\r\n                            .then(version => {\r\n                                    let changelogEntries = [];\r\n                                    logger.log(\"Last seen version:\", version);\r\n\r\n                                    for (let i = 0; i < CHANGELOG.length; ++i) {\r\n                                        if (CHANGELOG[i].version === version) {\r\n                                            break;\r\n                                        }\r\n                                        changelogEntries.push(CHANGELOG[i]);\r\n                                    }\r\n                                    if (changelogEntries.length === 0) {\r\n                                        return;\r\n                                    }\r\n\r\n                                    let dialogHtml = T.dialogs.updateSummary.desc;\r\n                                    for (let i = 0; i < changelogEntries.length; ++i) {\r\n                                        const entry = changelogEntries[i];\r\n                                        dialogHtml += `\r\n                            <div class=\"changelogDialogEntry\">\r\n                                <span class=\"version\">${entry.version}</span>\r\n                                <span class=\"date\">${entry.date}</span>\r\n                                <ul class=\"changes\">\r\n                                    ${entry.entries.map(text => `<li>${text}</li>`).join(\"\")}\r\n                                </ul>\r\n                            </div>\r\n                        `;\r\n                        }\r\n\r\n                        return new Promise(resolve => {\r\n                            this.dialogs.showInfo(T.dialogs.updateSummary.title, dialogHtml).ok.add(resolve);\r\n                        });\r\n                    });\r\n            })\r\n\r\n            .then(() => this.setStatus(\"Launching\"))\r\n            .then(\r\n                () => {\r\n                    this.moveToState(shapezAPI.firstState);\r\n                },\r\n                err => {\r\n                    this.showFailMessage(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    update() {\r\n        const now = performance.now();\r\n        if (now - this.lastHintShown > this.nextHintDuration) {\r\n            this.lastHintShown = now;\r\n            const hintText = getRandomHint();\r\n\r\n            this.hintsText.innerHTML = hintText;\r\n\r\n            /**\r\n             * Compute how long the user will need to read the hint.\r\n             * We calculate with 130 words per minute, with an average of 5 chars\r\n             * that is 650 characters / minute\r\n             */\r\n            this.nextHintDuration = Math.max(2500, (hintText.length / 650) * 60 * 1000);\r\n        }\r\n    }\r\n\r\n    onRender() {\r\n        this.update();\r\n    }\r\n\r\n    onBackgroundTick() {\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} text\r\n     */\r\n    setStatus(text) {\r\n        logger.log(\"✅ \" + text);\r\n        this.currentStatus = text;\r\n        this.statusText.innerText = text;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    showFailMessage(text) {\r\n        logger.error(\"App init failed:\", text);\r\n\r\n        const email = \"bugs@shapez.io\";\r\n\r\n        const subElement = document.createElement(\"div\");\r\n        subElement.classList.add(\"failureBox\");\r\n\r\n        subElement.innerHTML = `\r\n                <div class=\"logo\">\r\n                    <img src=\"${cachebust(\"res/logo.png\")}\" alt=\"Shapez.io Logo\">\r\n                </div>\r\n                <div class=\"failureInner\">\r\n                    <div class=\"errorHeader\">\r\n                    Failed to initialize application!\r\n                    </div>\r\n                    <div class=\"errorMessage\">\r\n                        ${this.currentStatus} failed:<br/>\r\n                        ${text}\r\n                    </div>\r\n\r\n                    <div class=\"supportHelp\">\r\n                    Please send me an email with steps to reproduce and what you did before this happened:\r\n                        <br /><a class=\"email\" href=\"mailto:${email}?subject=App%20does%20not%20launch\">${email}</a>\r\n                    </div>\r\n\r\n                    <div class=\"lower\">\r\n                        <button class=\"resetApp styledButton\">Reset App</button>\r\n                        <i>Build ${G_BUILD_VERSION} @ ${G_BUILD_COMMIT_HASH}</i>\r\n                    </div>\r\n                </div>\r\n        `;\r\n\r\n        this.htmlElement.classList.add(\"failure\");\r\n        this.htmlElement.appendChild(subElement);\r\n\r\n        const resetBtn = subElement.querySelector(\"button.resetApp\");\r\n        this.trackClicks(resetBtn, this.showResetConfirm);\r\n\r\n        this.hintsText.remove();\r\n    }\r\n\r\n    showResetConfirm() {\r\n        if (confirm(\"Are you sure you want to reset the app? This will delete all your savegames!\")) {\r\n            this.resetApp();\r\n        }\r\n    }\r\n\r\n    resetApp() {\r\n        this.app.settings\r\n            .resetEverythingAsync()\r\n            .then(() => {\r\n                this.app.savegameMgr.resetEverythingAsync();\r\n            })\r\n            .then(() => {\r\n                this.app.settings.resetEverythingAsync();\r\n            })\r\n            .then(() => {\r\n                window.location.reload();\r\n            });\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/states/preload.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4268,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/states/preload.js",
    "static": true,
    "longname": "js/states/preload.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/states/preload.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 4269,
    "kind": "class",
    "name": "PreloadState",
    "memberof": "js/states/preload.js",
    "static": true,
    "longname": "js/states/preload.js~PreloadState",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/states/preload.js",
    "importStyle": "{PreloadState}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/core/game_state.js~GameState"
    ]
  },
  {
    "__docId__": 4270,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 4271,
    "kind": "method",
    "name": "getInnerHTML",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#getInnerHTML",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4272,
    "kind": "method",
    "name": "getThemeMusic",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#getThemeMusic",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4273,
    "kind": "method",
    "name": "getHasFadeIn",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#getHasFadeIn",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 4274,
    "kind": "method",
    "name": "onEnter",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#onEnter",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4275,
    "kind": "member",
    "name": "dialogs",
    "memberof": "js/states/preload.js~PreloadState",
    "static": false,
    "longname": "js/states/preload.js~PreloadState#dialogs",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4276,
    "kind": "member",
    "name": "statusText",
    "memberof": "js/states/preload.js~PreloadState",
    "static": false,
    "longname": "js/states/preload.js~PreloadState#statusText",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4277,
    "kind": "member",
    "name": "hintsText",
    "memberof": "js/states/preload.js~PreloadState",
    "static": false,
    "longname": "js/states/preload.js~PreloadState#hintsText",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4278,
    "kind": "member",
    "name": "lastHintShown",
    "memberof": "js/states/preload.js~PreloadState",
    "static": false,
    "longname": "js/states/preload.js~PreloadState#lastHintShown",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4279,
    "kind": "member",
    "name": "nextHintDuration",
    "memberof": "js/states/preload.js~PreloadState",
    "static": false,
    "longname": "js/states/preload.js~PreloadState#nextHintDuration",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 4280,
    "kind": "member",
    "name": "currentStatus",
    "memberof": "js/states/preload.js~PreloadState",
    "static": false,
    "longname": "js/states/preload.js~PreloadState#currentStatus",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4281,
    "kind": "method",
    "name": "onLeave",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#onLeave",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4282,
    "kind": "method",
    "name": "startLoading",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#startLoading",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4283,
    "kind": "method",
    "name": "update",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#update",
    "access": "public",
    "description": null,
    "lineNumber": 222,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4286,
    "kind": "method",
    "name": "onRender",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#onRender",
    "access": "public",
    "description": null,
    "lineNumber": 239,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4287,
    "kind": "method",
    "name": "onBackgroundTick",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#onBackgroundTick",
    "access": "public",
    "description": null,
    "lineNumber": 243,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4288,
    "kind": "method",
    "name": "setStatus",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#setStatus",
    "access": "public",
    "description": "",
    "lineNumber": 251,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4290,
    "kind": "method",
    "name": "showFailMessage",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#showFailMessage",
    "access": "public",
    "description": null,
    "lineNumber": 258,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 4291,
    "kind": "method",
    "name": "showResetConfirm",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#showResetConfirm",
    "access": "public",
    "description": null,
    "lineNumber": 300,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4292,
    "kind": "method",
    "name": "resetApp",
    "memberof": "js/states/preload.js~PreloadState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/preload.js~PreloadState#resetApp",
    "access": "public",
    "description": null,
    "lineNumber": 306,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4293,
    "kind": "file",
    "name": "js/states/settings.js",
    "content": "import { TextualGameState } from \"../core/textual_game_state\";\r\nimport { formatSecondsToTimeAgo } from \"../core/utils\";\r\nimport { allApplicationSettings, enumCategories } from \"../profile/application_settings\";\r\nimport { T } from \"../translations\";\r\nexport class SettingsState extends TextualGameState {\r\n    constructor() {\r\n        super(\"SettingsState\");\r\n    }\r\n\r\n    getStateHeaderTitle() {\r\n        return T.settings.title;\r\n    }\r\n\r\n    getMainContentHTML() {\r\n            return `<div class=\"sidebar\">\r\n                        ${this.getCategoryButtonsHtml()}\r\n                        ${\r\n                            this.app.platformWrapper.getSupportsKeyboard()\r\n                                ? `<button class=\"styledButton categoryButton editKeybindings\">\r\n                                ${T.keybindings.title}\r\n                            </button>`\r\n                                : \"\"\r\n                        }${this.getExtraButtonsHtml()}<div class=\"other\">\r\n                            <button class=\"styledButton about\">${T.about.title}</button>\r\n\r\n                            <div class=\"versionbar\">\r\n                                <div class=\"buildVersion\">${T.global.loading} ...</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"categoryContainer\">\r\n                        ${this.getSettingsHtml()}\r\n                    </div>\r\n                `;\r\n    }\r\n    getExtraButtonsHtml() {\r\n        return SettingsState.extraSideBarButtons.join(\"\");\r\n    }\r\n\r\n    getCategoryButtonsHtml() {\r\n        return Object.keys(enumCategories)\r\n            .map(key => enumCategories[key])\r\n            .map(\r\n                category =>\r\n                    `\r\n                    <button class=\"styledButton categoryButton\" data-category-btn=\"${category}\">\r\n                        ${T.settings.categories[category]}\r\n                    </button>\r\n                    `\r\n            )\r\n            .join(\"\");\r\n    }\r\n\r\n    getSettingsHtml() {\r\n        const categoriesHTML = {};\r\n\r\n        Object.keys(enumCategories).forEach(key => {\r\n            const catName = enumCategories[key];\r\n            categoriesHTML[catName] = `<div class=\"category\" data-category=\"${catName}\">`;\r\n        });\r\n\r\n        for (let i = 0; i < allApplicationSettings().length; ++i) {\r\n            const setting = allApplicationSettings()[i];\r\n\r\n            categoriesHTML[setting.categoryId] += setting.getHtml(this.app);\r\n        }\r\n\r\n        return Object.keys(categoriesHTML)\r\n            .map(k => categoriesHTML[k] + \"</div>\")\r\n            .join(\"\");\r\n    }\r\n\r\n    renderBuildText() {\r\n        const labelVersion = this.htmlElement.querySelector(\".buildVersion\");\r\n        const lastBuildMs = new Date().getTime() - G_BUILD_TIME;\r\n        const lastBuildText = formatSecondsToTimeAgo(lastBuildMs / 1000.0);\r\n\r\n        const version = T.settings.versionBadges[G_APP_ENVIRONMENT];\r\n\r\n        labelVersion.innerHTML = `\r\n            <span class='version'>\r\n                ${G_BUILD_VERSION} @ ${version} @ ${G_BUILD_COMMIT_HASH}\r\n            </span>\r\n            <span class='buildTime'>\r\n                ${T.settings.buildDate.replace(\"<at-date>\", lastBuildText)}<br />\r\n            </span>`;\r\n    }\r\n\r\n    onEnter(payload) {\r\n        this.renderBuildText();\r\n\r\n        for (let i = 0; i < SettingsState.trackClicks.length; i++) {\r\n            const trackClick = SettingsState.trackClicks[i];\r\n            this.trackClicks(\r\n                this.htmlElement.querySelector(trackClick.htmlElement),\r\n                trackClick.action(this),\r\n                trackClick.options\r\n            );\r\n        }\r\n\r\n        const keybindingsButton = this.htmlElement.querySelector(\".editKeybindings\");\r\n\r\n        if (keybindingsButton) {\r\n            this.trackClicks(keybindingsButton, this.onKeybindingsClicked, { preventDefault: false });\r\n        }\r\n\r\n        this.initSettings();\r\n        this.initCategoryButtons();\r\n\r\n        this.htmlElement.querySelector(\".category\").classList.add(\"active\");\r\n        this.htmlElement.querySelector(\".categoryButton\").classList.add(\"active\");\r\n    }\r\n\r\n    setActiveCategory(category) {\r\n        const previousCategory = this.htmlElement.querySelector(\".category.active\");\r\n        const previousCategoryButton = this.htmlElement.querySelector(\".categoryButton.active\");\r\n\r\n        if (previousCategory.getAttribute(\"data-category\") == category) {\r\n            return;\r\n        }\r\n\r\n        previousCategory.classList.remove(\"active\");\r\n        previousCategoryButton.classList.remove(\"active\");\r\n\r\n        const newCategory = this.htmlElement.querySelector(\"[data-category='\" + category + \"']\");\r\n        const newCategoryButton = this.htmlElement.querySelector(\"[data-category-btn='\" + category + \"']\");\r\n\r\n        newCategory.classList.add(\"active\");\r\n        newCategoryButton.classList.add(\"active\");\r\n    }\r\n\r\n    initSettings() {\r\n        allApplicationSettings().forEach(setting => {\r\n            /** @type {HTMLElement} */\r\n            const element = this.htmlElement.querySelector(\"[data-setting='\" + setting.id + \"']\");\r\n            setting.bind(this.app, element, this.dialogs);\r\n            setting.syncValueToElement();\r\n            this.trackClicks(\r\n                element,\r\n                () => {\r\n                    setting.modify();\r\n                },\r\n                { preventDefault: false }\r\n            );\r\n        });\r\n    }\r\n\r\n    initCategoryButtons() {\r\n        Object.keys(enumCategories).forEach(key => {\r\n            const category = enumCategories[key];\r\n            const button = this.htmlElement.querySelector(\"[data-category-btn='\" + category + \"']\");\r\n            this.trackClicks(\r\n                button,\r\n                () => {\r\n                    this.setActiveCategory(category);\r\n                },\r\n                { preventDefault: false }\r\n            );\r\n        });\r\n    }\r\n\r\n    onClickedStateAddGoBack(state) {\r\n        this.moveToStateAddGoBack(state);\r\n    }\r\n\r\n    onKeybindingsClicked() {\r\n        this.moveToStateAddGoBack(\"KeybindingsState\");\r\n    }\r\n}\r\n\r\nSettingsState.extraSideBarButtons = [];\r\n\r\nSettingsState.trackClicks = [\r\n    {\r\n        htmlElement: \".about\",\r\n        action: settingsState => () => {\r\n            settingsState.onClickedStateAddGoBack(\"AboutState\");\r\n        },\r\n        options: {\r\n            preventDefault: false,\r\n        },\r\n    },\r\n];",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/states/settings.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4294,
    "kind": "class",
    "name": "SettingsState",
    "memberof": "js/states/settings.js",
    "static": true,
    "longname": "js/states/settings.js~SettingsState",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/states/settings.js",
    "importStyle": "{SettingsState}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/core/textual_game_state.js~TextualGameState"
    ]
  },
  {
    "__docId__": 4295,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/states/settings.js~SettingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/settings.js~SettingsState#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 4296,
    "kind": "method",
    "name": "getStateHeaderTitle",
    "memberof": "js/states/settings.js~SettingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/settings.js~SettingsState#getStateHeaderTitle",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4297,
    "kind": "method",
    "name": "getMainContentHTML",
    "memberof": "js/states/settings.js~SettingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/settings.js~SettingsState#getMainContentHTML",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4298,
    "kind": "method",
    "name": "getExtraButtonsHtml",
    "memberof": "js/states/settings.js~SettingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/settings.js~SettingsState#getExtraButtonsHtml",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4299,
    "kind": "method",
    "name": "getCategoryButtonsHtml",
    "memberof": "js/states/settings.js~SettingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/settings.js~SettingsState#getCategoryButtonsHtml",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4300,
    "kind": "method",
    "name": "getSettingsHtml",
    "memberof": "js/states/settings.js~SettingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/settings.js~SettingsState#getSettingsHtml",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4301,
    "kind": "method",
    "name": "renderBuildText",
    "memberof": "js/states/settings.js~SettingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/settings.js~SettingsState#renderBuildText",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4302,
    "kind": "method",
    "name": "onEnter",
    "memberof": "js/states/settings.js~SettingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/settings.js~SettingsState#onEnter",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 4303,
    "kind": "method",
    "name": "setActiveCategory",
    "memberof": "js/states/settings.js~SettingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/settings.js~SettingsState#setActiveCategory",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "params": [
      {
        "name": "category",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 4304,
    "kind": "method",
    "name": "initSettings",
    "memberof": "js/states/settings.js~SettingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/settings.js~SettingsState#initSettings",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4305,
    "kind": "method",
    "name": "initCategoryButtons",
    "memberof": "js/states/settings.js~SettingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/settings.js~SettingsState#initCategoryButtons",
    "access": "public",
    "description": null,
    "lineNumber": 149,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4306,
    "kind": "method",
    "name": "onClickedStateAddGoBack",
    "memberof": "js/states/settings.js~SettingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/settings.js~SettingsState#onClickedStateAddGoBack",
    "access": "public",
    "description": null,
    "lineNumber": 163,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 4307,
    "kind": "method",
    "name": "onKeybindingsClicked",
    "memberof": "js/states/settings.js~SettingsState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/states/settings.js~SettingsState#onKeybindingsClicked",
    "access": "public",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 4308,
    "kind": "file",
    "name": "js/translations.js",
    "content": "import { globalConfig } from \"./core/config\";\r\nimport { createLogger } from \"./core/logging\";\r\nimport { LANGUAGES } from \"./languages\";\r\n\r\nconst logger = createLogger(\"translations\");\r\n\r\n// @ts-ignore\r\nconst baseTranslations = require(\"./built-temp/base-en.json\");\r\nexport let T = baseTranslations;\r\n\r\nif (G_IS_DEV && globalConfig.debug.testTranslations) {\r\n    // Replaces all translations by fake translations to see whats translated and what not\r\n    const mapTranslations = obj => {\r\n        for (const key in obj) {\r\n            const value = obj[key];\r\n            if (typeof value === \"string\") {\r\n                obj[key] = value.replace(/[a-z]/gi, \"x\");\r\n            } else {\r\n                mapTranslations(value);\r\n            }\r\n        }\r\n    };\r\n    mapTranslations(T);\r\n}\r\n\r\nexport function applyLanguage(languageCode) {\r\n    logger.log(\"Applying language:\", languageCode);\r\n    const data = LANGUAGES[languageCode];\r\n    if (!data) {\r\n        logger.error(\"Language not found:\", languageCode);\r\n        return false;\r\n    }\r\n}\r\n\r\n// Language key is something like de-DE or en or en-US\r\nfunction mapLanguageCodeToId(languageKey) {\r\n    const key = languageKey.toLowerCase();\r\n    const shortKey = key.split(\"-\")[0];\r\n\r\n    // Try to match by key or short key\r\n    for (const id in LANGUAGES) {\r\n        const data = LANGUAGES[id];\r\n        const code = data.code.toLowerCase();\r\n        if (code === key) {\r\n            console.log(\"-> Match\", languageKey, \"->\", id);\r\n            return id;\r\n        }\r\n        if (code === shortKey) {\r\n            console.log(\"-> Match by short key\", languageKey, \"->\", id);\r\n            return id;\r\n        }\r\n    }\r\n\r\n    // If none found, try to find a better alternative by using the base language at least\r\n    for (const id in LANGUAGES) {\r\n        const data = LANGUAGES[id];\r\n        const code = data.code.toLowerCase();\r\n        const shortCode = code.split(\"-\")[0];\r\n\r\n        if (shortCode === key) {\r\n            console.log(\"-> Desperate Match\", languageKey, \"->\", id);\r\n            return id;\r\n        }\r\n        if (shortCode === shortKey) {\r\n            console.log(\"-> Desperate Match by short key\", languageKey, \"->\", id);\r\n            return id;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Tries to auto-detect a language\r\n * @returns {string}\r\n */\r\nexport function autoDetectLanguageId() {\r\n    let languages = [];\r\n    if (navigator.languages) {\r\n        languages = navigator.languages.slice();\r\n    } else if (navigator.language) {\r\n        languages = [navigator.language];\r\n    } else {\r\n        logger.warn(\"Navigator has no languages prop\");\r\n    }\r\n\r\n    for (let i = 0; i < languages.length; ++i) {\r\n        logger.log(\"Trying to find language target for\", languages[i]);\r\n        const trans = mapLanguageCodeToId(languages[i]);\r\n        if (trans) {\r\n            return trans;\r\n        }\r\n    }\r\n\r\n    // Fallback\r\n    return \"en\";\r\n}\r\n\r\nfunction matchDataRecursive(dest, src) {\r\n    if (typeof dest !== \"object\" || typeof src !== \"object\") {\r\n        return;\r\n    }\r\n\r\n    for (const key in dest) {\r\n        if (src[key]) {\r\n            // console.log(\"copy\", key);\r\n            const data = dest[key];\r\n            if (typeof data === \"object\") {\r\n                matchDataRecursive(dest[key], src[key]);\r\n            } else if (typeof data === \"string\" || typeof data === \"number\") {\r\n                // console.log(\"match string\", key);\r\n                dest[key] = src[key];\r\n            } else {\r\n                logger.log(\"Unknown type:\", typeof data, \"in key\", key);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function matchOverwriteRecursive(dest, src) {\r\n    if (typeof dest !== \"object\" || typeof src !== \"object\") {\r\n        return;\r\n    }\r\n\r\n    for (const key in src) {\r\n        //console.log(\"copy\", key);\r\n        const data = src[key];\r\n        if (typeof data === \"object\") {\r\n            if (!dest[key]) dest[key] = {};\r\n            matchOverwriteRecursive(dest[key], src[key]);\r\n        } else if (typeof data === \"string\" || typeof data === \"number\") {\r\n            // console.log(\"match string\", key);\r\n            dest[key] = src[key];\r\n        } else {\r\n            logger.log(\"Unknown type:\", typeof data, \"in key\", key);\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateApplicationLanguage(id) {\r\n    logger.log(\"Setting application language:\", id);\r\n\r\n    const data = LANGUAGES[id];\r\n\r\n    if (!data) {\r\n        logger.error(\"Unknown language:\", id);\r\n        return;\r\n    }\r\n\r\n    if (data.data) {\r\n        logger.log(\"Applying translations ...\");\r\n        matchDataRecursive(shapezAPI.translations, data.data);\r\n        for (let i = 0; i < shapezAPI.modOrder.length; i++) {\r\n            const mod = shapezAPI.mods.get(shapezAPI.modOrder[i]);\r\n            const language = mod.translations[id];\r\n            if (!language) continue;\r\n            matchOverwriteRecursive(shapezAPI.translations, language);\r\n        }\r\n        for (let i = 0; i < shapezAPI.modOrder.length; i++) {\r\n            const mod = shapezAPI.mods.get(shapezAPI.modOrder[i]);\r\n            mod.updateStaticTranslations(id);\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/translations.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4309,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/translations.js",
    "static": true,
    "longname": "js/translations.js~logger",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/translations.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 4310,
    "kind": "variable",
    "name": "baseTranslations",
    "memberof": "js/translations.js",
    "static": true,
    "longname": "js/translations.js~baseTranslations",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/translations.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 4311,
    "kind": "variable",
    "name": "T",
    "memberof": "js/translations.js",
    "static": true,
    "longname": "js/translations.js~T",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/translations.js",
    "importStyle": "{T}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4312,
    "kind": "function",
    "name": "applyLanguage",
    "memberof": "js/translations.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/translations.js~applyLanguage",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/translations.js",
    "importStyle": "{applyLanguage}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "languageCode",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 4313,
    "kind": "function",
    "name": "mapLanguageCodeToId",
    "memberof": "js/translations.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/translations.js~mapLanguageCodeToId",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/translations.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "languageKey",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 4314,
    "kind": "function",
    "name": "autoDetectLanguageId",
    "memberof": "js/translations.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/translations.js~autoDetectLanguageId",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/translations.js",
    "importStyle": "{autoDetectLanguageId}",
    "description": "Tries to auto-detect a language",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 4315,
    "kind": "function",
    "name": "matchDataRecursive",
    "memberof": "js/translations.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/translations.js~matchDataRecursive",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/translations.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [
      {
        "name": "dest",
        "types": [
          "*"
        ]
      },
      {
        "name": "src",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 4316,
    "kind": "function",
    "name": "matchOverwriteRecursive",
    "memberof": "js/translations.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/translations.js~matchOverwriteRecursive",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/translations.js",
    "importStyle": "{matchOverwriteRecursive}",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "params": [
      {
        "name": "dest",
        "types": [
          "*"
        ]
      },
      {
        "name": "src",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 4317,
    "kind": "function",
    "name": "updateApplicationLanguage",
    "memberof": "js/translations.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/translations.js~updateApplicationLanguage",
    "access": "public",
    "export": true,
    "importPath": "shapez.io/js/translations.js",
    "importStyle": "{updateApplicationLanguage}",
    "description": null,
    "lineNumber": 140,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 4318,
    "kind": "file",
    "name": "js/webworkers/background_animation_frame_emittter.worker.js",
    "content": "// We clamp high deltas so 30 fps is fairly ok\r\nconst bgFps = 30;\r\nconst desiredMsDelay = 1000 / bgFps;\r\n\r\nlet lastTick = performance.now();\r\n\r\nfunction tick() {\r\n    const now = performance.now();\r\n    const delta = now - lastTick;\r\n    lastTick = now;\r\n\r\n    // @ts-ignore\r\n    self.postMessage({ delta });\r\n}\r\n\r\nsetInterval(tick, desiredMsDelay);\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/webworkers/background_animation_frame_emittter.worker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4319,
    "kind": "variable",
    "name": "bgFps",
    "memberof": "js/webworkers/background_animation_frame_emittter.worker.js",
    "static": true,
    "longname": "js/webworkers/background_animation_frame_emittter.worker.js~bgFps",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/webworkers/background_animation_frame_emittter.worker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 4320,
    "kind": "variable",
    "name": "desiredMsDelay",
    "memberof": "js/webworkers/background_animation_frame_emittter.worker.js",
    "static": true,
    "longname": "js/webworkers/background_animation_frame_emittter.worker.js~desiredMsDelay",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/webworkers/background_animation_frame_emittter.worker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 4321,
    "kind": "variable",
    "name": "lastTick",
    "memberof": "js/webworkers/background_animation_frame_emittter.worker.js",
    "static": true,
    "longname": "js/webworkers/background_animation_frame_emittter.worker.js~lastTick",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/webworkers/background_animation_frame_emittter.worker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 4322,
    "kind": "function",
    "name": "tick",
    "memberof": "js/webworkers/background_animation_frame_emittter.worker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/webworkers/background_animation_frame_emittter.worker.js~tick",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/webworkers/background_animation_frame_emittter.worker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 4323,
    "kind": "file",
    "name": "js/webworkers/compression.worker.js",
    "content": "import { globalConfig } from \"../core/config\";\r\nimport { compressX64 } from \"../core/lzstring\";\r\nimport { computeCrc } from \"../core/sensitive_utils.encrypt\";\r\nimport { compressObject } from \"../savegame/savegame_compressor\";\r\n\r\nfunction accessNestedPropertyReverse(obj, keys) {\r\n    let result = obj;\r\n    for (let i = keys.length - 1; i >= 0; --i) {\r\n        result = result[keys[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nconst salt = accessNestedPropertyReverse(globalConfig, [\"file\", \"info\"]);\r\n\r\nself.addEventListener(\"message\", event => {\r\n    // @ts-ignore\r\n    const { jobId, job, data } = event.data;\r\n    const result = performJob(job, data);\r\n\r\n    // @ts-ignore\r\n    self.postMessage({ jobId, result });\r\n});\r\n\r\nfunction performJob(job, data) {\r\n    switch (job) {\r\n        case \"compressX64\": {\r\n            return compressX64(data);\r\n        }\r\n\r\n        case \"compressObject\": {\r\n            const optimized = compressObject(data.obj);\r\n            const stringified = JSON.stringify(optimized);\r\n\r\n            const checksum = computeCrc(stringified + salt);\r\n            return data.compressionPrefix + compressX64(checksum + stringified);\r\n        }\r\n        default:\r\n            throw new Error(\"Webworker: Unknown job: \" + job);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Documents/Games javascript/shapez.io-modloader/src/js/webworkers/compression.worker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4324,
    "kind": "function",
    "name": "accessNestedPropertyReverse",
    "memberof": "js/webworkers/compression.worker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/webworkers/compression.worker.js~accessNestedPropertyReverse",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/webworkers/compression.worker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "keys",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 4325,
    "kind": "variable",
    "name": "salt",
    "memberof": "js/webworkers/compression.worker.js",
    "static": true,
    "longname": "js/webworkers/compression.worker.js~salt",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/webworkers/compression.worker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 4326,
    "kind": "function",
    "name": "performJob",
    "memberof": "js/webworkers/compression.worker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/webworkers/compression.worker.js~performJob",
    "access": "public",
    "export": false,
    "importPath": "shapez.io/js/webworkers/compression.worker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "job",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# shapez.io\r\n\r\n<img src=\"https://i.imgur.com/Y5Z2iqQ.png\" alt=\"shapez.io Logo\">\r\n\r\nThis is the source code for shapez.io, an open source base building game inspired by Factorio.\r\nYour goal is to produce shapes by cutting, rotating, merging and painting parts of shapes.\r\n\r\n-   [Trello Board & Roadmap](https://trello.com/b/ISQncpJP/shapezio)\r\n-   [Free web version](https://shapez.io)\r\n-   [itch.io Page](https://tobspr.itch.io/shapezio)\r\n-   [Steam Page](https://steam.shapez.io)\r\n-   [Official Discord](https://discord.com/invite/HN7EVzV) <- _Highly recommended to join!_\r\n\r\n## Reporting issues, suggestions, feedback, bugs\r\n\r\n1. Ask in `#bugs` / `#feedback` / `#questions` on the [Official Discord](https://discord.com/invite/HN7EVzV) if you are not entirely sure if it's a bug etc.\r\n2. Check out the trello board: https://trello.com/b/ISQncpJP/shapezio\r\n3. See if it's already there - If so, vote for it, done. I will see it. (You have to be signed in on trello)\r\n4. If not, check if it's already reported here: https://github.com/tobspr/shapez.io/issues\r\n5. If not, file a new issue here: https://github.com/tobspr/shapez.io/issues/new\r\n6. I will then have a look (This can take days or weeks) and convert it to trello, and comment with the link. You can then vote there ;)\r\n\r\n## Building\r\n\r\n-   Make sure `ffmpeg` is on your path\r\n-   Install Node.js and Yarn\r\n-   Install Java (required for textures)\r\n-   Run `yarn` in the root folder\r\n-   Cd into `gulp` folder\r\n-   Run `yarn` and then `yarn gulp` - it should now open in your browser\r\n\r\n**Notice**: This will produce a debug build with several debugging flags enabled. If you want to disable them, modify [`src/js/core/config.js`](src/js/core/config.js).\r\n\r\n## Build Online with one-click setup\r\n\r\nYou can use [Gitpod](https://www.gitpod.io/) (an Online Open Source VS Code-like IDE which is free for Open Source) for working on issues and making PRs to this project. With a single click it will start a workspace and automatically:\r\n\r\n-   clone the `shapez.io` repo.\r\n-   install all of the dependencies.\r\n-   start `gulp` in `gulp/` directory.\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n\r\n## Helping translate\r\n\r\nPlease checkout the [Translations readme](translations/).\r\n\r\n## Contributing\r\n\r\nSince this game is in the more or less early development, I will only accept pull requests which add an immediate benefit. Please understand that low quality PR's might be closed by me with a short comment explaining why.\r\n\r\n**If you want to add a new building, please understand that I can not simply add every building to the game!** I recommend to talk to me before implementing anything, to make sure its actually useful. Otherwise there is a high chance of your PR not getting merged.\r\n\r\nIf you want to add a new feature or in generally contribute I recommend to get in touch with me on Discord:\r\n\r\n<a href=\"https://discord.com/invite/HN7EVzV\" target=\"_blank\">\r\n<img src=\"https://i.imgur.com/SoawBhW.png\" alt=\"discord logo\" width=\"100\">\r\n</a>\r\n\r\n### Code\r\n\r\nThe game is based on a custom engine which itself is based on the YORG.io 3 game engine (Actually it shares almost the same core).\r\nThe code within the engine is relatively clean with some code for the actual game on top being hacky.\r\n\r\nThis project is based on ES5. Some ES2015 features are used but most of them are too slow, especially when polyfilled. For example, `Array.prototype.forEach` is only used within non-critical loops since its slower than a plain for loop.\r\n\r\n#### Adding a new component\r\n\r\n1. Create the component file in `src/js/game/components/<name_lowercase>.js`\r\n2. Create a component class (e.g. `MyFancyComponent`) which `extends Component`\r\n3. Create a `static getId()` method which should return the `PascalCaseName` without component (e.g. `MyFancy`)\r\n4. If any data needs to be persisted, create a `static getSchema()` which should return the properties to be saved (See other components)\r\n5. Add a constructor. **The constructor must be called with optional parameters only!** `new MyFancyComponent({})` should always work.\r\n6. Add any props you need in the constructor.\r\n7. Add the component in `src/js/game/component_registry.js`\r\n8. Add the component in `src/js/game/entity_components.js`\r\n9. Done! You can use your component now\r\n\r\n#### Adding a new building\r\n\r\n(The easiest way is to copy an existing building)\r\n\r\n1. Create your building in `src/js/game/buildings/<my_building.js>`\r\n2. Create the building meta class, e.g. `MetaMyFancyBuilding extends MetaBuilding`\r\n3. Override the methods from MetaBuilding you want to override.\r\n4. Most important is `setupEntityComponents`\r\n5. Add the building to `src/js/game/meta_building_registry.js`: You need to register it on the registry, and also call `registerBuildingVariant`.\r\n6. Add the building to the right toolbar, e.g. `src/js/game/hud/parts/buildings_toolbar.js`:`supportedBuildings`\r\n7. Add a keybinding for the building in `src/js/game/key_action_mapper.js` in `KEYMAPPINGS.buildings`\r\n8. In `translations/base-en.yaml` add it to two sections: `buildings.[my_building].XXX` (See other buildings) and also `keybindings.mappings.[my_building]`. Be sure to do it the same way as other buildings do!\r\n9. Create a icon (128x128, [prefab](https://github.com/tobspr/shapez.io-artwork/blob/master/ui/toolbar-icons.psd)) for your building and save it in `res/ui/buildings_icons` with the id of your building\r\n10. Create a tutorial image (600x600) for your building and save it in `res/ui/building_tutorials`\r\n11. In `src/css/resources.scss` add your building to `$buildings` as well as `$buildingAndVariants`\r\n12. Done! Optional: Add a new reward for unlocking your building at some point.\r\n\r\n#### Adding a new game system\r\n\r\n1. Create the class in `src/js/game/systems/<system_name>.js`\r\n2. Derive it from `GameSystemWithFilter` if you want it to work on certain entities only which have the given components. Otherwise use `GameSystem` to do more generic stuff.\r\n3. Implement the `update()` method.\r\n4. Add the system in `src/js/game/game_system_manager.js` (To `this.systems` and also call `add` in the `internalInitSystems()` method)\r\n5. If your system should draw stuff, this is a bit more complicated. Have a look at existing systems on how they do it.\r\n\r\n#### Checklist for a new building / testing it\r\n\r\nThis is a quick checklist, if a new building is added this points should be fulfilled:\r\n\r\n2. The translation for all variants is done and finalized\r\n3. The artwork (regular sprite) is finalized\r\n4. The blueprint sprite has been generated and is up to date\r\n5. The building has been added to the appropriate toolbar\r\n6. The building has a keybinding which makes sense\r\n7. The building has a reward assigned and is unlocked at a meaningful point\r\n8. The reward for the building has a proper translation\r\n9. The reward for the building has a proper image\r\n10. The building has a proper tutorial image assigned\r\n11. The buliding has a proper toolbar icon\r\n12. The reward requires a proper shape\r\n13. The building has a proper silhouette color\r\n14. The building has a proper matrix for being rendered on the minimap\r\n15. The building has proper statistics in the dialog\r\n16. The building properly contributes to the shapes produced analytics\r\n17. The building is properly persisted in the savegame\r\n18. The building is explained properly, ideally via an interactive tutorial\r\n\r\n### Assets\r\n\r\nFor most assets I use Adobe Photoshop, you can find them <a href=\"//github.com/tobspr/shapez.io-artwork\" target=\"_blank\">here</a>.\r\n\r\nAll assets will be automatically rebuilt into the atlas once changed (Thanks to dengr1065!)\r\n\r\n<img src=\"https://i.imgur.com/W25Fkl0.png\" alt=\"shapez.io Screenshot\">\r\n\r\nFor generating docs:\r\nnpm run esdoc\r\nReplace name.replace('\\*', '\\\\\\\\\\*') with name.replace('\\*', '\\\\\\\\\\*').replace('[', '\\\\\\\\[').replace(']', '\\\\\\\\]').replace('(', '\\\\\\\\(').replace(')', '\\\\\\\\)') in node_modules\\esdoc-publish-html-plugin\\out\\src\\Builder\\DocBuilder.js:116:20)\r\nReplace autoPrivate && doc.name.charAt(0) === '\\_' with autoPrivate && doc.name && doc.name.charAt(0) === '\\_' in node_modules\\esdoc-accessor-plugin\\src\\Plugin.js:16\r\n",
    "longname": "D:\\Documents\\Games javascript\\shapez.io-modloader\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n    \"name\": \"shapez.io\",\r\n    \"version\": \"1.0.0\",\r\n    \"main\": \"index.js\",\r\n    \"repository\": \"https://github.com/tobspr/shapez.io\",\r\n    \"author\": \"Tobias Springer <tobias.springer1@gmail.com>\",\r\n    \"license\": \"MIT\",\r\n    \"private\": true,\r\n    \"scripts\": {\r\n        \"dev\": \"cd gulp && yarn gulp main.serveDev\",\r\n        \"tslint\": \"cd src/js && tsc\",\r\n        \"lint\": \"eslint src/js\",\r\n        \"prettier-all\": \"prettier --write src/**/*.* && prettier --write gulp/**/*.*\",\r\n        \"publishOnItchWindows\": \"butler push tmp_standalone_files/shapez.io-standalone-win32-x64 tobspr/shapezio:windows --userversion-file version\",\r\n        \"publishOnItchLinux\": \"butler push tmp_standalone_files/shapez.io-standalone-linux-x64 tobspr/shapezio:linux --userversion-file version\",\r\n        \"publishOnItch\": \"yarn publishOnItchWindows && yarn publishOnItchLinux\",\r\n        \"publishOnSteam\": \"cd gulp/steampipe && ./upload.bat\",\r\n        \"publishStandalone\": \"yarn publishOnItch && yarn publishOnSteam\",\r\n        \"publishWeb\": \"cd gulp && yarn main.deploy.prod\",\r\n        \"publish\": \"yarn publishStandalone && yarn publishWeb\",\r\n        \"syncTranslations\": \"node sync-translations.js\",\r\n        \"esdoc\": \"./node_modules/.bin/esdoc -c esdoc.json\"\r\n    },\r\n    \"dependencies\": {\r\n        \"@babel/core\": \"^7.5.4\",\r\n        \"@babel/plugin-transform-block-scoping\": \"^7.4.4\",\r\n        \"@babel/plugin-transform-classes\": \"^7.5.5\",\r\n        \"@babel/preset-env\": \"^7.5.4\",\r\n        \"@types/cordova\": \"^0.0.34\",\r\n        \"@types/filesystem\": \"^0.0.29\",\r\n        \"ajv\": \"^6.10.2\",\r\n        \"babel-core\": \"^6.26.3\",\r\n        \"babel-loader\": \"^8.0.4\",\r\n        \"circular-dependency-plugin\": \"^5.0.2\",\r\n        \"circular-json\": \"^0.5.9\",\r\n        \"clipboard-copy\": \"^3.1.0\",\r\n        \"colors\": \"^1.3.3\",\r\n        \"core-js\": \"3\",\r\n        \"crc\": \"^3.8.0\",\r\n        \"cssnano-preset-advanced\": \"^4.0.7\",\r\n        \"debounce-promise\": \"^3.1.2\",\r\n        \"email-validator\": \"^2.0.4\",\r\n        \"esdoc\": \"^1.1.0\",\r\n        \"esdoc-brand-plugin\": \"^1.0.1\",\r\n        \"esdoc-custom-theme\": \"^1.4.2\",\r\n        \"esdoc-inject-style-plugin\": \"^1.0.0\",\r\n        \"esdoc-standard-plugin\": \"^1.0.0\",\r\n        \"eslint\": \"7.1.0\",\r\n        \"fastdom\": \"^1.0.8\",\r\n        \"flatted\": \"^2.0.1\",\r\n        \"howler\": \"^2.1.2\",\r\n        \"html-loader\": \"^0.5.5\",\r\n        \"ignore-loader\": \"^0.1.2\",\r\n        \"jsdoc\": \"^3.6.6\",\r\n        \"logrocket\": \"^1.0.7\",\r\n        \"lz-string\": \"^1.4.4\",\r\n        \"markdown-loader\": \"^4.0.0\",\r\n        \"match-all\": \"^1.2.5\",\r\n        \"phonegap-plugin-mobile-accessibility\": \"^1.0.5\",\r\n        \"postcss\": \">=5.0.0\",\r\n        \"promise-polyfill\": \"^8.1.0\",\r\n        \"query-string\": \"^6.8.1\",\r\n        \"rusha\": \"^0.8.13\",\r\n        \"serialize-error\": \"^3.0.0\",\r\n        \"strictdom\": \"^1.0.1\",\r\n        \"string-replace-webpack-plugin\": \"^0.1.3\",\r\n        \"terser-webpack-plugin\": \"^1.1.0\",\r\n        \"toposort\": \"^2.0.2\",\r\n        \"toposort-class\": \"^1.0.1\",\r\n        \"typedoc\": \"^0.20.19\",\r\n        \"typescript\": \"3.9.3\",\r\n        \"uglify-template-string-loader\": \"^1.1.0\",\r\n        \"unused-files-webpack-plugin\": \"^3.4.0\",\r\n        \"webpack\": \"^4.43.0\",\r\n        \"webpack-bundle-analyzer\": \"^3.0.3\",\r\n        \"webpack-cli\": \"^3.1.0\",\r\n        \"webpack-deep-scope-plugin\": \"^1.6.0\",\r\n        \"webpack-plugin-replace\": \"^1.1.1\",\r\n        \"webpack-strip-block\": \"^0.2.0\",\r\n        \"whatwg-fetch\": \"^3.0.0\",\r\n        \"worker-loader\": \"^2.0.0\",\r\n        \"yaml\": \"^1.10.0\",\r\n        \"yawn-yaml\": \"^1.5.0\"\r\n    },\r\n    \"devDependencies\": {\r\n        \"@octokit/rest\": \"^18.0.6\",\r\n        \"@typescript-eslint/eslint-plugin\": \"3.0.1\",\r\n        \"@typescript-eslint/parser\": \"3.0.1\",\r\n        \"autoprefixer\": \"^9.4.3\",\r\n        \"babel-plugin-closure-elimination\": \"^1.3.0\",\r\n        \"babel-plugin-console-source\": \"^2.0.2\",\r\n        \"babel-plugin-danger-remove-unused-import\": \"^1.1.2\",\r\n        \"css-mqpacker\": \"^7.0.0\",\r\n        \"cssnano\": \"^4.1.10\",\r\n        \"eslint-config-prettier\": \"6.11.0\",\r\n        \"eslint-plugin-prettier\": \"3.1.3\",\r\n        \"faster.js\": \"^1.1.0\",\r\n        \"glob\": \"^7.1.3\",\r\n        \"imagemin-mozjpeg\": \"^8.0.0\",\r\n        \"imagemin-pngquant\": \"^8.0.0\",\r\n        \"jimp\": \"^0.6.1\",\r\n        \"js-yaml\": \"^3.13.1\",\r\n        \"postcss-assets\": \"^5.0.0\",\r\n        \"postcss-preset-env\": \"^6.5.0\",\r\n        \"postcss-round-subpixels\": \"^1.2.0\",\r\n        \"postcss-unprefix\": \"^2.1.3\",\r\n        \"prettier\": \"^2.0.4\",\r\n        \"sass-unused\": \"^0.3.0\",\r\n        \"strip-json-comments\": \"^3.0.1\",\r\n        \"trim\": \"^0.0.1\",\r\n        \"yarn\": \"^1.22.4\"\r\n    }\r\n}",
    "longname": "D:\\Documents\\Games javascript\\shapez.io-modloader\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]